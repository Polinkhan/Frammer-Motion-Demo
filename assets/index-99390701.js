function _mergeNamespaces(a, o) {
  for (var s = 0; s < o.length; s++) {
    const _ = o[s];
    if (typeof _ != "string" && !Array.isArray(_)) {
      for (const $ in _)
        if ($ !== "default" && !($ in a)) {
          const et = Object.getOwnPropertyDescriptor(_, $);
          et &&
            Object.defineProperty(
              a,
              $,
              et.get ? et : { enumerable: !0, get: () => _[$] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(a, Symbol.toStringTag, { value: "Module" })
  );
}
(function () {
  const o = document.createElement("link").relList;
  if (o && o.supports && o.supports("modulepreload")) return;
  for (const $ of document.querySelectorAll('link[rel="modulepreload"]')) _($);
  new MutationObserver(($) => {
    for (const et of $)
      if (et.type === "childList")
        for (const tt of et.addedNodes)
          tt.tagName === "LINK" && tt.rel === "modulepreload" && _(tt);
  }).observe(document, { childList: !0, subtree: !0 });
  function s($) {
    const et = {};
    return (
      $.integrity && (et.integrity = $.integrity),
      $.referrerPolicy && (et.referrerPolicy = $.referrerPolicy),
      $.crossOrigin === "use-credentials"
        ? (et.credentials = "include")
        : $.crossOrigin === "anonymous"
        ? (et.credentials = "omit")
        : (et.credentials = "same-origin"),
      et
    );
  }
  function _($) {
    if ($.ep) return;
    $.ep = !0;
    const et = s($);
    fetch($.href, et);
  }
})();
var commonjsGlobal =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function getDefaultExportFromCjs(a) {
  return a && a.__esModule && Object.prototype.hasOwnProperty.call(a, "default")
    ? a.default
    : a;
}
var jsxRuntime = { exports: {} },
  reactJsxRuntime_production_min = {},
  react = { exports: {} },
  react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var l$2 = Symbol.for("react.element"),
  n$2 = Symbol.for("react.portal"),
  p$3 = Symbol.for("react.fragment"),
  q$2 = Symbol.for("react.strict_mode"),
  r$2 = Symbol.for("react.profiler"),
  t$2 = Symbol.for("react.provider"),
  u = Symbol.for("react.context"),
  v$3 = Symbol.for("react.forward_ref"),
  w$2 = Symbol.for("react.suspense"),
  x$1 = Symbol.for("react.memo"),
  y$1 = Symbol.for("react.lazy"),
  z$2 = Symbol.iterator;
function A$2(a) {
  return a === null || typeof a != "object"
    ? null
    : ((a = (z$2 && a[z$2]) || a["@@iterator"]),
      typeof a == "function" ? a : null);
}
var B$1 = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  C$1 = Object.assign,
  D$1 = {};
function E$1(a, o, s) {
  (this.props = a),
    (this.context = o),
    (this.refs = D$1),
    (this.updater = s || B$1);
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function (a, o) {
  if (typeof a != "object" && typeof a != "function" && a != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, a, o, "setState");
};
E$1.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {}
F.prototype = E$1.prototype;
function G$1(a, o, s) {
  (this.props = a),
    (this.context = o),
    (this.refs = D$1),
    (this.updater = s || B$1);
}
var H$1 = (G$1.prototype = new F());
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = !0;
var I$1 = Array.isArray,
  J = Object.prototype.hasOwnProperty,
  K$1 = { current: null },
  L$1 = { key: !0, ref: !0, __self: !0, __source: !0 };
function M$1(a, o, s) {
  var _,
    $ = {},
    et = null,
    tt = null;
  if (o != null)
    for (_ in (o.ref !== void 0 && (tt = o.ref),
    o.key !== void 0 && (et = "" + o.key),
    o))
      J.call(o, _) && !L$1.hasOwnProperty(_) && ($[_] = o[_]);
  var rt = arguments.length - 2;
  if (rt === 1) $.children = s;
  else if (1 < rt) {
    for (var nt = Array(rt), it = 0; it < rt; it++) nt[it] = arguments[it + 2];
    $.children = nt;
  }
  if (a && a.defaultProps)
    for (_ in ((rt = a.defaultProps), rt)) $[_] === void 0 && ($[_] = rt[_]);
  return {
    $$typeof: l$2,
    type: a,
    key: et,
    ref: tt,
    props: $,
    _owner: K$1.current,
  };
}
function N$1(a, o) {
  return {
    $$typeof: l$2,
    type: a.type,
    key: o,
    ref: a.ref,
    props: a.props,
    _owner: a._owner,
  };
}
function O$1(a) {
  return typeof a == "object" && a !== null && a.$$typeof === l$2;
}
function escape$2(a) {
  var o = { "=": "=0", ":": "=2" };
  return (
    "$" +
    a.replace(/[=:]/g, function (s) {
      return o[s];
    })
  );
}
var P$1 = /\/+/g;
function Q$1(a, o) {
  return typeof a == "object" && a !== null && a.key != null
    ? escape$2("" + a.key)
    : o.toString(36);
}
function R$1(a, o, s, _, $) {
  var et = typeof a;
  (et === "undefined" || et === "boolean") && (a = null);
  var tt = !1;
  if (a === null) tt = !0;
  else
    switch (et) {
      case "string":
      case "number":
        tt = !0;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$2:
          case n$2:
            tt = !0;
        }
    }
  if (tt)
    return (
      (tt = a),
      ($ = $(tt)),
      (a = _ === "" ? "." + Q$1(tt, 0) : _),
      I$1($)
        ? ((s = ""),
          a != null && (s = a.replace(P$1, "$&/") + "/"),
          R$1($, o, s, "", function (it) {
            return it;
          }))
        : $ != null &&
          (O$1($) &&
            ($ = N$1(
              $,
              s +
                (!$.key || (tt && tt.key === $.key)
                  ? ""
                  : ("" + $.key).replace(P$1, "$&/") + "/") +
                a
            )),
          o.push($)),
      1
    );
  if (((tt = 0), (_ = _ === "" ? "." : _ + ":"), I$1(a)))
    for (var rt = 0; rt < a.length; rt++) {
      et = a[rt];
      var nt = _ + Q$1(et, rt);
      tt += R$1(et, o, s, nt, $);
    }
  else if (((nt = A$2(a)), typeof nt == "function"))
    for (a = nt.call(a), rt = 0; !(et = a.next()).done; )
      (et = et.value), (nt = _ + Q$1(et, rt++)), (tt += R$1(et, o, s, nt, $));
  else if (et === "object")
    throw (
      ((o = String(a)),
      Error(
        "Objects are not valid as a React child (found: " +
          (o === "[object Object]"
            ? "object with keys {" + Object.keys(a).join(", ") + "}"
            : o) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return tt;
}
function S$1(a, o, s) {
  if (a == null) return a;
  var _ = [],
    $ = 0;
  return (
    R$1(a, _, "", "", function (et) {
      return o.call(s, et, $++);
    }),
    _
  );
}
function T$1(a) {
  if (a._status === -1) {
    var o = a._result;
    (o = o()),
      o.then(
        function (s) {
          (a._status === 0 || a._status === -1) &&
            ((a._status = 1), (a._result = s));
        },
        function (s) {
          (a._status === 0 || a._status === -1) &&
            ((a._status = 2), (a._result = s));
        }
      ),
      a._status === -1 && ((a._status = 0), (a._result = o));
  }
  if (a._status === 1) return a._result.default;
  throw a._result;
}
var U$1 = { current: null },
  V$1 = { transition: null },
  W$1 = {
    ReactCurrentDispatcher: U$1,
    ReactCurrentBatchConfig: V$1,
    ReactCurrentOwner: K$1,
  };
react_production_min.Children = {
  map: S$1,
  forEach: function (a, o, s) {
    S$1(
      a,
      function () {
        o.apply(this, arguments);
      },
      s
    );
  },
  count: function (a) {
    var o = 0;
    return (
      S$1(a, function () {
        o++;
      }),
      o
    );
  },
  toArray: function (a) {
    return (
      S$1(a, function (o) {
        return o;
      }) || []
    );
  },
  only: function (a) {
    if (!O$1(a))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return a;
  },
};
react_production_min.Component = E$1;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r$2;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$2;
react_production_min.Suspense = w$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.cloneElement = function (a, o, s) {
  if (a == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        a +
        "."
    );
  var _ = C$1({}, a.props),
    $ = a.key,
    et = a.ref,
    tt = a._owner;
  if (o != null) {
    if (
      (o.ref !== void 0 && ((et = o.ref), (tt = K$1.current)),
      o.key !== void 0 && ($ = "" + o.key),
      a.type && a.type.defaultProps)
    )
      var rt = a.type.defaultProps;
    for (nt in o)
      J.call(o, nt) &&
        !L$1.hasOwnProperty(nt) &&
        (_[nt] = o[nt] === void 0 && rt !== void 0 ? rt[nt] : o[nt]);
  }
  var nt = arguments.length - 2;
  if (nt === 1) _.children = s;
  else if (1 < nt) {
    rt = Array(nt);
    for (var it = 0; it < nt; it++) rt[it] = arguments[it + 2];
    _.children = rt;
  }
  return { $$typeof: l$2, type: a.type, key: $, ref: et, props: _, _owner: tt };
};
react_production_min.createContext = function (a) {
  return (
    (a = {
      $$typeof: u,
      _currentValue: a,
      _currentValue2: a,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (a.Provider = { $$typeof: t$2, _context: a }),
    (a.Consumer = a)
  );
};
react_production_min.createElement = M$1;
react_production_min.createFactory = function (a) {
  var o = M$1.bind(null, a);
  return (o.type = a), o;
};
react_production_min.createRef = function () {
  return { current: null };
};
react_production_min.forwardRef = function (a) {
  return { $$typeof: v$3, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function (a) {
  return { $$typeof: y$1, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function (a, o) {
  return { $$typeof: x$1, type: a, compare: o === void 0 ? null : o };
};
react_production_min.startTransition = function (a) {
  var o = V$1.transition;
  V$1.transition = {};
  try {
    a();
  } finally {
    V$1.transition = o;
  }
};
react_production_min.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function (a, o) {
  return U$1.current.useCallback(a, o);
};
react_production_min.useContext = function (a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function () {};
react_production_min.useDeferredValue = function (a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function (a, o) {
  return U$1.current.useEffect(a, o);
};
react_production_min.useId = function () {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function (a, o, s) {
  return U$1.current.useImperativeHandle(a, o, s);
};
react_production_min.useInsertionEffect = function (a, o) {
  return U$1.current.useInsertionEffect(a, o);
};
react_production_min.useLayoutEffect = function (a, o) {
  return U$1.current.useLayoutEffect(a, o);
};
react_production_min.useMemo = function (a, o) {
  return U$1.current.useMemo(a, o);
};
react_production_min.useReducer = function (a, o, s) {
  return U$1.current.useReducer(a, o, s);
};
react_production_min.useRef = function (a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function (a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function (a, o, s) {
  return U$1.current.useSyncExternalStore(a, o, s);
};
react_production_min.useTransition = function () {
  return U$1.current.useTransition();
};
react_production_min.version = "18.2.0";
react.exports = react_production_min;
var reactExports = react.exports;
const React = getDefaultExportFromCjs(reactExports),
  React$1 = _mergeNamespaces({ __proto__: null, default: React }, [
    reactExports,
  ]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var f$1 = reactExports,
  k$2 = Symbol.for("react.element"),
  l$1 = Symbol.for("react.fragment"),
  m$2 = Object.prototype.hasOwnProperty,
  n$1 =
    f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p$2 = { key: !0, ref: !0, __self: !0, __source: !0 };
function q$1(a, o, s) {
  var _,
    $ = {},
    et = null,
    tt = null;
  s !== void 0 && (et = "" + s),
    o.key !== void 0 && (et = "" + o.key),
    o.ref !== void 0 && (tt = o.ref);
  for (_ in o) m$2.call(o, _) && !p$2.hasOwnProperty(_) && ($[_] = o[_]);
  if (a && a.defaultProps)
    for (_ in ((o = a.defaultProps), o)) $[_] === void 0 && ($[_] = o[_]);
  return {
    $$typeof: k$2,
    type: a,
    key: et,
    ref: tt,
    props: $,
    _owner: n$1.current,
  };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$1;
reactJsxRuntime_production_min.jsxs = q$1;
jsxRuntime.exports = reactJsxRuntime_production_min;
var jsxRuntimeExports = jsxRuntime.exports,
  client = {},
  reactDom = { exports: {} },
  reactDom_production_min = {},
  scheduler = { exports: {} },
  scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (a) {
  function o(gt, yt) {
    var wt = gt.length;
    gt.push(yt);
    e: for (; 0 < wt; ) {
      var _t = (wt - 1) >>> 1,
        Ft = gt[_t];
      if (0 < $(Ft, yt)) (gt[_t] = yt), (gt[wt] = Ft), (wt = _t);
      else break e;
    }
  }
  function s(gt) {
    return gt.length === 0 ? null : gt[0];
  }
  function _(gt) {
    if (gt.length === 0) return null;
    var yt = gt[0],
      wt = gt.pop();
    if (wt !== yt) {
      gt[0] = wt;
      e: for (var _t = 0, Ft = gt.length, Vt = Ft >>> 1; _t < Vt; ) {
        var Lt = 2 * (_t + 1) - 1,
          Wt = gt[Lt],
          zt = Lt + 1,
          Gt = gt[zt];
        if (0 > $(Wt, wt))
          zt < Ft && 0 > $(Gt, Wt)
            ? ((gt[_t] = Gt), (gt[zt] = wt), (_t = zt))
            : ((gt[_t] = Wt), (gt[Lt] = wt), (_t = Lt));
        else if (zt < Ft && 0 > $(Gt, wt))
          (gt[_t] = Gt), (gt[zt] = wt), (_t = zt);
        else break e;
      }
    }
    return yt;
  }
  function $(gt, yt) {
    var wt = gt.sortIndex - yt.sortIndex;
    return wt !== 0 ? wt : gt.id - yt.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var et = performance;
    a.unstable_now = function () {
      return et.now();
    };
  } else {
    var tt = Date,
      rt = tt.now();
    a.unstable_now = function () {
      return tt.now() - rt;
    };
  }
  var nt = [],
    it = [],
    at = 1,
    st = null,
    ot = 3,
    dt = !1,
    ht = !1,
    ft = !1,
    mt = typeof setTimeout == "function" ? setTimeout : null,
    ut = typeof clearTimeout == "function" ? clearTimeout : null,
    lt = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function ct(gt) {
    for (var yt = s(it); yt !== null; ) {
      if (yt.callback === null) _(it);
      else if (yt.startTime <= gt)
        _(it), (yt.sortIndex = yt.expirationTime), o(nt, yt);
      else break;
      yt = s(it);
    }
  }
  function pt(gt) {
    if (((ft = !1), ct(gt), !ht))
      if (s(nt) !== null) (ht = !0), Et(vt);
      else {
        var yt = s(it);
        yt !== null && kt(pt, yt.startTime - gt);
      }
  }
  function vt(gt, yt) {
    (ht = !1), ft && ((ft = !1), ut(St), (St = -1)), (dt = !0);
    var wt = ot;
    try {
      for (
        ct(yt), st = s(nt);
        st !== null && (!(st.expirationTime > yt) || (gt && !It()));

      ) {
        var _t = st.callback;
        if (typeof _t == "function") {
          (st.callback = null), (ot = st.priorityLevel);
          var Ft = _t(st.expirationTime <= yt);
          (yt = a.unstable_now()),
            typeof Ft == "function"
              ? (st.callback = Ft)
              : st === s(nt) && _(nt),
            ct(yt);
        } else _(nt);
        st = s(nt);
      }
      if (st !== null) var Vt = !0;
      else {
        var Lt = s(it);
        Lt !== null && kt(pt, Lt.startTime - yt), (Vt = !1);
      }
      return Vt;
    } finally {
      (st = null), (ot = wt), (dt = !1);
    }
  }
  var xt = !1,
    bt = null,
    St = -1,
    Pt = 5,
    Mt = -1;
  function It() {
    return !(a.unstable_now() - Mt < Pt);
  }
  function Rt() {
    if (bt !== null) {
      var gt = a.unstable_now();
      Mt = gt;
      var yt = !0;
      try {
        yt = bt(!0, gt);
      } finally {
        yt ? jt() : ((xt = !1), (bt = null));
      }
    } else xt = !1;
  }
  var jt;
  if (typeof lt == "function")
    jt = function () {
      lt(Rt);
    };
  else if (typeof MessageChannel < "u") {
    var Dt = new MessageChannel(),
      At = Dt.port2;
    (Dt.port1.onmessage = Rt),
      (jt = function () {
        At.postMessage(null);
      });
  } else
    jt = function () {
      mt(Rt, 0);
    };
  function Et(gt) {
    (bt = gt), xt || ((xt = !0), jt());
  }
  function kt(gt, yt) {
    St = mt(function () {
      gt(a.unstable_now());
    }, yt);
  }
  (a.unstable_IdlePriority = 5),
    (a.unstable_ImmediatePriority = 1),
    (a.unstable_LowPriority = 4),
    (a.unstable_NormalPriority = 3),
    (a.unstable_Profiling = null),
    (a.unstable_UserBlockingPriority = 2),
    (a.unstable_cancelCallback = function (gt) {
      gt.callback = null;
    }),
    (a.unstable_continueExecution = function () {
      ht || dt || ((ht = !0), Et(vt));
    }),
    (a.unstable_forceFrameRate = function (gt) {
      0 > gt || 125 < gt
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (Pt = 0 < gt ? Math.floor(1e3 / gt) : 5);
    }),
    (a.unstable_getCurrentPriorityLevel = function () {
      return ot;
    }),
    (a.unstable_getFirstCallbackNode = function () {
      return s(nt);
    }),
    (a.unstable_next = function (gt) {
      switch (ot) {
        case 1:
        case 2:
        case 3:
          var yt = 3;
          break;
        default:
          yt = ot;
      }
      var wt = ot;
      ot = yt;
      try {
        return gt();
      } finally {
        ot = wt;
      }
    }),
    (a.unstable_pauseExecution = function () {}),
    (a.unstable_requestPaint = function () {}),
    (a.unstable_runWithPriority = function (gt, yt) {
      switch (gt) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          gt = 3;
      }
      var wt = ot;
      ot = gt;
      try {
        return yt();
      } finally {
        ot = wt;
      }
    }),
    (a.unstable_scheduleCallback = function (gt, yt, wt) {
      var _t = a.unstable_now();
      switch (
        (typeof wt == "object" && wt !== null
          ? ((wt = wt.delay),
            (wt = typeof wt == "number" && 0 < wt ? _t + wt : _t))
          : (wt = _t),
        gt)
      ) {
        case 1:
          var Ft = -1;
          break;
        case 2:
          Ft = 250;
          break;
        case 5:
          Ft = 1073741823;
          break;
        case 4:
          Ft = 1e4;
          break;
        default:
          Ft = 5e3;
      }
      return (
        (Ft = wt + Ft),
        (gt = {
          id: at++,
          callback: yt,
          priorityLevel: gt,
          startTime: wt,
          expirationTime: Ft,
          sortIndex: -1,
        }),
        wt > _t
          ? ((gt.sortIndex = wt),
            o(it, gt),
            s(nt) === null &&
              gt === s(it) &&
              (ft ? (ut(St), (St = -1)) : (ft = !0), kt(pt, wt - _t)))
          : ((gt.sortIndex = Ft), o(nt, gt), ht || dt || ((ht = !0), Et(vt))),
        gt
      );
    }),
    (a.unstable_shouldYield = It),
    (a.unstable_wrapCallback = function (gt) {
      var yt = ot;
      return function () {
        var wt = ot;
        ot = yt;
        try {
          return gt.apply(this, arguments);
        } finally {
          ot = wt;
        }
      };
    });
})(scheduler_production_min);
scheduler.exports = scheduler_production_min;
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var aa = reactExports,
  ca = schedulerExports;
function p$1(a) {
  for (
    var o = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, s = 1;
    s < arguments.length;
    s++
  )
    o += "&args[]=" + encodeURIComponent(arguments[s]);
  return (
    "Minified React error #" +
    a +
    "; visit " +
    o +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var da = new Set(),
  ea = {};
function fa(a, o) {
  ha(a, o), ha(a + "Capture", o);
}
function ha(a, o) {
  for (ea[a] = o, a = 0; a < o.length; a++) da.add(o[a]);
}
var ia = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  ja = Object.prototype.hasOwnProperty,
  ka =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(a) {
  return ja.call(ma, a)
    ? !0
    : ja.call(la, a)
    ? !1
    : ka.test(a)
    ? (ma[a] = !0)
    : ((la[a] = !0), !1);
}
function pa(a, o, s, _) {
  if (s !== null && s.type === 0) return !1;
  switch (typeof o) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return _
        ? !1
        : s !== null
        ? !s.acceptsBooleans
        : ((a = a.toLowerCase().slice(0, 5)), a !== "data-" && a !== "aria-");
    default:
      return !1;
  }
}
function qa(a, o, s, _) {
  if (o === null || typeof o > "u" || pa(a, o, s, _)) return !0;
  if (_) return !1;
  if (s !== null)
    switch (s.type) {
      case 3:
        return !o;
      case 4:
        return o === !1;
      case 5:
        return isNaN(o);
      case 6:
        return isNaN(o) || 1 > o;
    }
  return !1;
}
function v$2(a, o, s, _, $, et, tt) {
  (this.acceptsBooleans = o === 2 || o === 3 || o === 4),
    (this.attributeName = _),
    (this.attributeNamespace = $),
    (this.mustUseProperty = s),
    (this.propertyName = a),
    (this.type = o),
    (this.sanitizeURL = et),
    (this.removeEmptyString = tt);
}
var z$1 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (a) {
    z$1[a] = new v$2(a, 0, !1, a, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (a) {
  var o = a[0];
  z$1[o] = new v$2(o, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  z$1[a] = new v$2(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (a) {
  z$1[a] = new v$2(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (a) {
    z$1[a] = new v$2(a, 3, !1, a.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  z$1[a] = new v$2(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  z$1[a] = new v$2(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  z$1[a] = new v$2(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  z$1[a] = new v$2(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (a) {
    var o = a.replace(ra, sa);
    z$1[o] = new v$2(o, 1, !1, a, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (a) {
    var o = a.replace(ra, sa);
    z$1[o] = new v$2(o, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var o = a.replace(ra, sa);
  z$1[o] = new v$2(o, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  z$1[a] = new v$2(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
z$1.xlinkHref = new v$2(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (a) {
  z$1[a] = new v$2(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function ta(a, o, s, _) {
  var $ = z$1.hasOwnProperty(o) ? z$1[o] : null;
  ($ !== null
    ? $.type !== 0
    : _ ||
      !(2 < o.length) ||
      (o[0] !== "o" && o[0] !== "O") ||
      (o[1] !== "n" && o[1] !== "N")) &&
    (qa(o, s, $, _) && (s = null),
    _ || $ === null
      ? oa(o) && (s === null ? a.removeAttribute(o) : a.setAttribute(o, "" + s))
      : $.mustUseProperty
      ? (a[$.propertyName] = s === null ? ($.type === 3 ? !1 : "") : s)
      : ((o = $.attributeName),
        (_ = $.attributeNamespace),
        s === null
          ? a.removeAttribute(o)
          : (($ = $.type),
            (s = $ === 3 || ($ === 4 && s === !0) ? "" : "" + s),
            _ ? a.setAttributeNS(_, o, s) : a.setAttribute(o, s))));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for("react.element"),
  wa = Symbol.for("react.portal"),
  ya = Symbol.for("react.fragment"),
  za = Symbol.for("react.strict_mode"),
  Aa = Symbol.for("react.profiler"),
  Ba = Symbol.for("react.provider"),
  Ca = Symbol.for("react.context"),
  Da = Symbol.for("react.forward_ref"),
  Ea = Symbol.for("react.suspense"),
  Fa = Symbol.for("react.suspense_list"),
  Ga = Symbol.for("react.memo"),
  Ha = Symbol.for("react.lazy"),
  Ia = Symbol.for("react.offscreen"),
  Ja = Symbol.iterator;
function Ka(a) {
  return a === null || typeof a != "object"
    ? null
    : ((a = (Ja && a[Ja]) || a["@@iterator"]),
      typeof a == "function" ? a : null);
}
var A$1 = Object.assign,
  La;
function Ma(a) {
  if (La === void 0)
    try {
      throw Error();
    } catch (s) {
      var o = s.stack.trim().match(/\n( *(at )?)/);
      La = (o && o[1]) || "";
    }
  return (
    `
` +
    La +
    a
  );
}
var Na = !1;
function Oa(a, o) {
  if (!a || Na) return "";
  Na = !0;
  var s = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (o)
      if (
        ((o = function () {
          throw Error();
        }),
        Object.defineProperty(o.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(o, []);
        } catch (it) {
          var _ = it;
        }
        Reflect.construct(a, [], o);
      } else {
        try {
          o.call();
        } catch (it) {
          _ = it;
        }
        a.call(o.prototype);
      }
    else {
      try {
        throw Error();
      } catch (it) {
        _ = it;
      }
      a();
    }
  } catch (it) {
    if (it && _ && typeof it.stack == "string") {
      for (
        var $ = it.stack.split(`
`),
          et = _.stack.split(`
`),
          tt = $.length - 1,
          rt = et.length - 1;
        1 <= tt && 0 <= rt && $[tt] !== et[rt];

      )
        rt--;
      for (; 1 <= tt && 0 <= rt; tt--, rt--)
        if ($[tt] !== et[rt]) {
          if (tt !== 1 || rt !== 1)
            do
              if ((tt--, rt--, 0 > rt || $[tt] !== et[rt])) {
                var nt =
                  `
` + $[tt].replace(" at new ", " at ");
                return (
                  a.displayName &&
                    nt.includes("<anonymous>") &&
                    (nt = nt.replace("<anonymous>", a.displayName)),
                  nt
                );
              }
            while (1 <= tt && 0 <= rt);
          break;
        }
    }
  } finally {
    (Na = !1), (Error.prepareStackTrace = s);
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (a = Oa(a.type, !1)), a;
    case 11:
      return (a = Oa(a.type.render, !1)), a;
    case 1:
      return (a = Oa(a.type, !0)), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (a == null) return null;
  if (typeof a == "function") return a.displayName || a.name || null;
  if (typeof a == "string") return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if (typeof a == "object")
    switch (a.$$typeof) {
      case Ca:
        return (a.displayName || "Context") + ".Consumer";
      case Ba:
        return (a._context.displayName || "Context") + ".Provider";
      case Da:
        var o = a.render;
        return (
          (a = a.displayName),
          a ||
            ((a = o.displayName || o.name || ""),
            (a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef")),
          a
        );
      case Ga:
        return (
          (o = a.displayName || null), o !== null ? o : Qa(a.type) || "Memo"
        );
      case Ha:
        (o = a._payload), (a = a._init);
        try {
          return Qa(a(o));
        } catch {}
    }
  return null;
}
function Ra(a) {
  var o = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (o.displayName || "Context") + ".Consumer";
    case 10:
      return (o._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (a = o.render),
        (a = a.displayName || a.name || ""),
        o.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return o;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(o);
    case 8:
      return o === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof o == "function") return o.displayName || o.name || null;
      if (typeof o == "string") return o;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var o = a.type;
  return (
    (a = a.nodeName) &&
    a.toLowerCase() === "input" &&
    (o === "checkbox" || o === "radio")
  );
}
function Ua(a) {
  var o = Ta(a) ? "checked" : "value",
    s = Object.getOwnPropertyDescriptor(a.constructor.prototype, o),
    _ = "" + a[o];
  if (
    !a.hasOwnProperty(o) &&
    typeof s < "u" &&
    typeof s.get == "function" &&
    typeof s.set == "function"
  ) {
    var $ = s.get,
      et = s.set;
    return (
      Object.defineProperty(a, o, {
        configurable: !0,
        get: function () {
          return $.call(this);
        },
        set: function (tt) {
          (_ = "" + tt), et.call(this, tt);
        },
      }),
      Object.defineProperty(a, o, { enumerable: s.enumerable }),
      {
        getValue: function () {
          return _;
        },
        setValue: function (tt) {
          _ = "" + tt;
        },
        stopTracking: function () {
          (a._valueTracker = null), delete a[o];
        },
      }
    );
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return !1;
  var o = a._valueTracker;
  if (!o) return !0;
  var s = o.getValue(),
    _ = "";
  return (
    a && (_ = Ta(a) ? (a.checked ? "true" : "false") : a.value),
    (a = _),
    a !== s ? (o.setValue(a), !0) : !1
  );
}
function Xa(a) {
  if (((a = a || (typeof document < "u" ? document : void 0)), typeof a > "u"))
    return null;
  try {
    return a.activeElement || a.body;
  } catch {
    return a.body;
  }
}
function Ya(a, o) {
  var s = o.checked;
  return A$1({}, o, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: s ?? a._wrapperState.initialChecked,
  });
}
function Za(a, o) {
  var s = o.defaultValue == null ? "" : o.defaultValue,
    _ = o.checked != null ? o.checked : o.defaultChecked;
  (s = Sa(o.value != null ? o.value : s)),
    (a._wrapperState = {
      initialChecked: _,
      initialValue: s,
      controlled:
        o.type === "checkbox" || o.type === "radio"
          ? o.checked != null
          : o.value != null,
    });
}
function ab(a, o) {
  (o = o.checked), o != null && ta(a, "checked", o, !1);
}
function bb(a, o) {
  ab(a, o);
  var s = Sa(o.value),
    _ = o.type;
  if (s != null)
    _ === "number"
      ? ((s === 0 && a.value === "") || a.value != s) && (a.value = "" + s)
      : a.value !== "" + s && (a.value = "" + s);
  else if (_ === "submit" || _ === "reset") {
    a.removeAttribute("value");
    return;
  }
  o.hasOwnProperty("value")
    ? cb(a, o.type, s)
    : o.hasOwnProperty("defaultValue") && cb(a, o.type, Sa(o.defaultValue)),
    o.checked == null &&
      o.defaultChecked != null &&
      (a.defaultChecked = !!o.defaultChecked);
}
function db(a, o, s) {
  if (o.hasOwnProperty("value") || o.hasOwnProperty("defaultValue")) {
    var _ = o.type;
    if (
      !(
        (_ !== "submit" && _ !== "reset") ||
        (o.value !== void 0 && o.value !== null)
      )
    )
      return;
    (o = "" + a._wrapperState.initialValue),
      s || o === a.value || (a.value = o),
      (a.defaultValue = o);
  }
  (s = a.name),
    s !== "" && (a.name = ""),
    (a.defaultChecked = !!a._wrapperState.initialChecked),
    s !== "" && (a.name = s);
}
function cb(a, o, s) {
  (o !== "number" || Xa(a.ownerDocument) !== a) &&
    (s == null
      ? (a.defaultValue = "" + a._wrapperState.initialValue)
      : a.defaultValue !== "" + s && (a.defaultValue = "" + s));
}
var eb = Array.isArray;
function fb(a, o, s, _) {
  if (((a = a.options), o)) {
    o = {};
    for (var $ = 0; $ < s.length; $++) o["$" + s[$]] = !0;
    for (s = 0; s < a.length; s++)
      ($ = o.hasOwnProperty("$" + a[s].value)),
        a[s].selected !== $ && (a[s].selected = $),
        $ && _ && (a[s].defaultSelected = !0);
  } else {
    for (s = "" + Sa(s), o = null, $ = 0; $ < a.length; $++) {
      if (a[$].value === s) {
        (a[$].selected = !0), _ && (a[$].defaultSelected = !0);
        return;
      }
      o !== null || a[$].disabled || (o = a[$]);
    }
    o !== null && (o.selected = !0);
  }
}
function gb(a, o) {
  if (o.dangerouslySetInnerHTML != null) throw Error(p$1(91));
  return A$1({}, o, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue,
  });
}
function hb(a, o) {
  var s = o.value;
  if (s == null) {
    if (((s = o.children), (o = o.defaultValue), s != null)) {
      if (o != null) throw Error(p$1(92));
      if (eb(s)) {
        if (1 < s.length) throw Error(p$1(93));
        s = s[0];
      }
      o = s;
    }
    o == null && (o = ""), (s = o);
  }
  a._wrapperState = { initialValue: Sa(s) };
}
function ib(a, o) {
  var s = Sa(o.value),
    _ = Sa(o.defaultValue);
  s != null &&
    ((s = "" + s),
    s !== a.value && (a.value = s),
    o.defaultValue == null && a.defaultValue !== s && (a.defaultValue = s)),
    _ != null && (a.defaultValue = "" + _);
}
function jb(a) {
  var o = a.textContent;
  o === a._wrapperState.initialValue && o !== "" && o !== null && (a.value = o);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, o) {
  return a == null || a === "http://www.w3.org/1999/xhtml"
    ? kb(o)
    : a === "http://www.w3.org/2000/svg" && o === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : a;
}
var mb,
  nb = (function (a) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (o, s, _, $) {
          MSApp.execUnsafeLocalFunction(function () {
            return a(o, s, _, $);
          });
        }
      : a;
  })(function (a, o) {
    if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
      a.innerHTML = o;
    else {
      for (
        mb = mb || document.createElement("div"),
          mb.innerHTML = "<svg>" + o.valueOf().toString() + "</svg>",
          o = mb.firstChild;
        a.firstChild;

      )
        a.removeChild(a.firstChild);
      for (; o.firstChild; ) a.appendChild(o.firstChild);
    }
  });
function ob(a, o) {
  if (o) {
    var s = a.firstChild;
    if (s && s === a.lastChild && s.nodeType === 3) {
      s.nodeValue = o;
      return;
    }
  }
  a.textContent = o;
}
var pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (o) {
    (o = o + a.charAt(0).toUpperCase() + a.substring(1)), (pb[o] = pb[a]);
  });
});
function rb(a, o, s) {
  return o == null || typeof o == "boolean" || o === ""
    ? ""
    : s || typeof o != "number" || o === 0 || (pb.hasOwnProperty(a) && pb[a])
    ? ("" + o).trim()
    : o + "px";
}
function sb(a, o) {
  a = a.style;
  for (var s in o)
    if (o.hasOwnProperty(s)) {
      var _ = s.indexOf("--") === 0,
        $ = rb(s, o[s], _);
      s === "float" && (s = "cssFloat"), _ ? a.setProperty(s, $) : (a[s] = $);
    }
}
var tb = A$1(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function ub(a, o) {
  if (o) {
    if (tb[a] && (o.children != null || o.dangerouslySetInnerHTML != null))
      throw Error(p$1(137, a));
    if (o.dangerouslySetInnerHTML != null) {
      if (o.children != null) throw Error(p$1(60));
      if (
        typeof o.dangerouslySetInnerHTML != "object" ||
        !("__html" in o.dangerouslySetInnerHTML)
      )
        throw Error(p$1(61));
    }
    if (o.style != null && typeof o.style != "object") throw Error(p$1(62));
  }
}
function vb(a, o) {
  if (a.indexOf("-") === -1) return typeof o.is == "string";
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var wb = null;
function xb(a) {
  return (
    (a = a.target || a.srcElement || window),
    a.correspondingUseElement && (a = a.correspondingUseElement),
    a.nodeType === 3 ? a.parentNode : a
  );
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(a) {
  if ((a = Cb(a))) {
    if (typeof yb != "function") throw Error(p$1(280));
    var o = a.stateNode;
    o && ((o = Db(o)), yb(a.stateNode, a.type, o));
  }
}
function Eb(a) {
  zb ? (Ab ? Ab.push(a) : (Ab = [a])) : (zb = a);
}
function Fb() {
  if (zb) {
    var a = zb,
      o = Ab;
    if (((Ab = zb = null), Bb(a), o)) for (a = 0; a < o.length; a++) Bb(o[a]);
  }
}
function Gb(a, o) {
  return a(o);
}
function Hb() {}
var Ib = !1;
function Jb(a, o, s) {
  if (Ib) return a(o, s);
  Ib = !0;
  try {
    return Gb(a, o, s);
  } finally {
    (Ib = !1), (zb !== null || Ab !== null) && (Hb(), Fb());
  }
}
function Kb(a, o) {
  var s = a.stateNode;
  if (s === null) return null;
  var _ = Db(s);
  if (_ === null) return null;
  s = _[o];
  e: switch (o) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (_ = !_.disabled) ||
        ((a = a.type),
        (_ = !(
          a === "button" ||
          a === "input" ||
          a === "select" ||
          a === "textarea"
        ))),
        (a = !_);
      break e;
    default:
      a = !1;
  }
  if (a) return null;
  if (s && typeof s != "function") throw Error(p$1(231, o, typeof s));
  return s;
}
var Lb = !1;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", {
      get: function () {
        Lb = !0;
      },
    }),
      window.addEventListener("test", Mb, Mb),
      window.removeEventListener("test", Mb, Mb);
  } catch {
    Lb = !1;
  }
function Nb(a, o, s, _, $, et, tt, rt, nt) {
  var it = Array.prototype.slice.call(arguments, 3);
  try {
    o.apply(s, it);
  } catch (at) {
    this.onError(at);
  }
}
var Ob = !1,
  Pb = null,
  Qb = !1,
  Rb = null,
  Sb = {
    onError: function (a) {
      (Ob = !0), (Pb = a);
    },
  };
function Tb(a, o, s, _, $, et, tt, rt, nt) {
  (Ob = !1), (Pb = null), Nb.apply(Sb, arguments);
}
function Ub(a, o, s, _, $, et, tt, rt, nt) {
  if ((Tb.apply(this, arguments), Ob)) {
    if (Ob) {
      var it = Pb;
      (Ob = !1), (Pb = null);
    } else throw Error(p$1(198));
    Qb || ((Qb = !0), (Rb = it));
  }
}
function Vb(a) {
  var o = a,
    s = a;
  if (a.alternate) for (; o.return; ) o = o.return;
  else {
    a = o;
    do (o = a), o.flags & 4098 && (s = o.return), (a = o.return);
    while (a);
  }
  return o.tag === 3 ? s : null;
}
function Wb(a) {
  if (a.tag === 13) {
    var o = a.memoizedState;
    if (
      (o === null && ((a = a.alternate), a !== null && (o = a.memoizedState)),
      o !== null)
    )
      return o.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p$1(188));
}
function Yb(a) {
  var o = a.alternate;
  if (!o) {
    if (((o = Vb(a)), o === null)) throw Error(p$1(188));
    return o !== a ? null : a;
  }
  for (var s = a, _ = o; ; ) {
    var $ = s.return;
    if ($ === null) break;
    var et = $.alternate;
    if (et === null) {
      if (((_ = $.return), _ !== null)) {
        s = _;
        continue;
      }
      break;
    }
    if ($.child === et.child) {
      for (et = $.child; et; ) {
        if (et === s) return Xb($), a;
        if (et === _) return Xb($), o;
        et = et.sibling;
      }
      throw Error(p$1(188));
    }
    if (s.return !== _.return) (s = $), (_ = et);
    else {
      for (var tt = !1, rt = $.child; rt; ) {
        if (rt === s) {
          (tt = !0), (s = $), (_ = et);
          break;
        }
        if (rt === _) {
          (tt = !0), (_ = $), (s = et);
          break;
        }
        rt = rt.sibling;
      }
      if (!tt) {
        for (rt = et.child; rt; ) {
          if (rt === s) {
            (tt = !0), (s = et), (_ = $);
            break;
          }
          if (rt === _) {
            (tt = !0), (_ = et), (s = $);
            break;
          }
          rt = rt.sibling;
        }
        if (!tt) throw Error(p$1(189));
      }
    }
    if (s.alternate !== _) throw Error(p$1(190));
  }
  if (s.tag !== 3) throw Error(p$1(188));
  return s.stateNode.current === s ? a : o;
}
function Zb(a) {
  return (a = Yb(a)), a !== null ? $b(a) : null;
}
function $b(a) {
  if (a.tag === 5 || a.tag === 6) return a;
  for (a = a.child; a !== null; ) {
    var o = $b(a);
    if (o !== null) return o;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(a) {
  if (lc && typeof lc.onCommitFiberRoot == "function")
    try {
      lc.onCommitFiberRoot(kc, a, void 0, (a.current.flags & 128) === 128);
    } catch {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(a) {
  return (a >>>= 0), a === 0 ? 32 : (31 - ((pc(a) / qc) | 0)) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, o) {
  var s = a.pendingLanes;
  if (s === 0) return 0;
  var _ = 0,
    $ = a.suspendedLanes,
    et = a.pingedLanes,
    tt = s & 268435455;
  if (tt !== 0) {
    var rt = tt & ~$;
    rt !== 0 ? (_ = tc(rt)) : ((et &= tt), et !== 0 && (_ = tc(et)));
  } else (tt = s & ~$), tt !== 0 ? (_ = tc(tt)) : et !== 0 && (_ = tc(et));
  if (_ === 0) return 0;
  if (
    o !== 0 &&
    o !== _ &&
    !(o & $) &&
    (($ = _ & -_), (et = o & -o), $ >= et || ($ === 16 && (et & 4194240) !== 0))
  )
    return o;
  if ((_ & 4 && (_ |= s & 16), (o = a.entangledLanes), o !== 0))
    for (a = a.entanglements, o &= _; 0 < o; )
      (s = 31 - oc(o)), ($ = 1 << s), (_ |= a[s]), (o &= ~$);
  return _;
}
function vc(a, o) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return o + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return o + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, o) {
  for (
    var s = a.suspendedLanes,
      _ = a.pingedLanes,
      $ = a.expirationTimes,
      et = a.pendingLanes;
    0 < et;

  ) {
    var tt = 31 - oc(et),
      rt = 1 << tt,
      nt = $[tt];
    nt === -1
      ? (!(rt & s) || rt & _) && ($[tt] = vc(rt, o))
      : nt <= o && (a.expiredLanes |= rt),
      (et &= ~rt);
  }
}
function xc(a) {
  return (
    (a = a.pendingLanes & -1073741825),
    a !== 0 ? a : a & 1073741824 ? 1073741824 : 0
  );
}
function yc() {
  var a = rc;
  return (rc <<= 1), !(rc & 4194240) && (rc = 64), a;
}
function zc(a) {
  for (var o = [], s = 0; 31 > s; s++) o.push(a);
  return o;
}
function Ac(a, o, s) {
  (a.pendingLanes |= o),
    o !== 536870912 && ((a.suspendedLanes = 0), (a.pingedLanes = 0)),
    (a = a.eventTimes),
    (o = 31 - oc(o)),
    (a[o] = s);
}
function Bc(a, o) {
  var s = a.pendingLanes & ~o;
  (a.pendingLanes = o),
    (a.suspendedLanes = 0),
    (a.pingedLanes = 0),
    (a.expiredLanes &= o),
    (a.mutableReadLanes &= o),
    (a.entangledLanes &= o),
    (o = a.entanglements);
  var _ = a.eventTimes;
  for (a = a.expirationTimes; 0 < s; ) {
    var $ = 31 - oc(s),
      et = 1 << $;
    (o[$] = 0), (_[$] = -1), (a[$] = -1), (s &= ~et);
  }
}
function Cc(a, o) {
  var s = (a.entangledLanes |= o);
  for (a = a.entanglements; s; ) {
    var _ = 31 - oc(s),
      $ = 1 << _;
    ($ & o) | (a[_] & o) && (a[_] |= o), (s &= ~$);
  }
}
var C = 0;
function Dc(a) {
  return (a &= -a), 1 < a ? (4 < a ? (a & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = !1,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = new Map(),
  Pc = new Map(),
  Qc = [],
  Rc =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function Sc(a, o) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(o.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(o.pointerId);
  }
}
function Tc(a, o, s, _, $, et) {
  return a === null || a.nativeEvent !== et
    ? ((a = {
        blockedOn: o,
        domEventName: s,
        eventSystemFlags: _,
        nativeEvent: et,
        targetContainers: [$],
      }),
      o !== null && ((o = Cb(o)), o !== null && Fc(o)),
      a)
    : ((a.eventSystemFlags |= _),
      (o = a.targetContainers),
      $ !== null && o.indexOf($) === -1 && o.push($),
      a);
}
function Uc(a, o, s, _, $) {
  switch (o) {
    case "focusin":
      return (Lc = Tc(Lc, a, o, s, _, $)), !0;
    case "dragenter":
      return (Mc = Tc(Mc, a, o, s, _, $)), !0;
    case "mouseover":
      return (Nc = Tc(Nc, a, o, s, _, $)), !0;
    case "pointerover":
      var et = $.pointerId;
      return Oc.set(et, Tc(Oc.get(et) || null, a, o, s, _, $)), !0;
    case "gotpointercapture":
      return (
        (et = $.pointerId),
        Pc.set(et, Tc(Pc.get(et) || null, a, o, s, _, $)),
        !0
      );
  }
  return !1;
}
function Vc(a) {
  var o = Wc(a.target);
  if (o !== null) {
    var s = Vb(o);
    if (s !== null) {
      if (((o = s.tag), o === 13)) {
        if (((o = Wb(s)), o !== null)) {
          (a.blockedOn = o),
            Ic(a.priority, function () {
              Gc(s);
            });
          return;
        }
      } else if (o === 3 && s.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = s.tag === 3 ? s.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (a.blockedOn !== null) return !1;
  for (var o = a.targetContainers; 0 < o.length; ) {
    var s = Yc(a.domEventName, a.eventSystemFlags, o[0], a.nativeEvent);
    if (s === null) {
      s = a.nativeEvent;
      var _ = new s.constructor(s.type, s);
      (wb = _), s.target.dispatchEvent(_), (wb = null);
    } else return (o = Cb(s)), o !== null && Fc(o), (a.blockedOn = s), !1;
    o.shift();
  }
  return !0;
}
function Zc(a, o, s) {
  Xc(a) && s.delete(o);
}
function $c() {
  (Jc = !1),
    Lc !== null && Xc(Lc) && (Lc = null),
    Mc !== null && Xc(Mc) && (Mc = null),
    Nc !== null && Xc(Nc) && (Nc = null),
    Oc.forEach(Zc),
    Pc.forEach(Zc);
}
function ad(a, o) {
  a.blockedOn === o &&
    ((a.blockedOn = null),
    Jc ||
      ((Jc = !0),
      ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function o($) {
    return ad($, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var s = 1; s < Kc.length; s++) {
      var _ = Kc[s];
      _.blockedOn === a && (_.blockedOn = null);
    }
  }
  for (
    Lc !== null && ad(Lc, a),
      Mc !== null && ad(Mc, a),
      Nc !== null && ad(Nc, a),
      Oc.forEach(o),
      Pc.forEach(o),
      s = 0;
    s < Qc.length;
    s++
  )
    (_ = Qc[s]), _.blockedOn === a && (_.blockedOn = null);
  for (; 0 < Qc.length && ((s = Qc[0]), s.blockedOn === null); )
    Vc(s), s.blockedOn === null && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig,
  dd = !0;
function ed(a, o, s, _) {
  var $ = C,
    et = cd.transition;
  cd.transition = null;
  try {
    (C = 1), fd(a, o, s, _);
  } finally {
    (C = $), (cd.transition = et);
  }
}
function gd(a, o, s, _) {
  var $ = C,
    et = cd.transition;
  cd.transition = null;
  try {
    (C = 4), fd(a, o, s, _);
  } finally {
    (C = $), (cd.transition = et);
  }
}
function fd(a, o, s, _) {
  if (dd) {
    var $ = Yc(a, o, s, _);
    if ($ === null) hd(a, o, _, id$4, s), Sc(a, _);
    else if (Uc($, a, o, s, _)) _.stopPropagation();
    else if ((Sc(a, _), o & 4 && -1 < Rc.indexOf(a))) {
      for (; $ !== null; ) {
        var et = Cb($);
        if (
          (et !== null && Ec(et),
          (et = Yc(a, o, s, _)),
          et === null && hd(a, o, _, id$4, s),
          et === $)
        )
          break;
        $ = et;
      }
      $ !== null && _.stopPropagation();
    } else hd(a, o, _, null, s);
  }
}
var id$4 = null;
function Yc(a, o, s, _) {
  if (((id$4 = null), (a = xb(_)), (a = Wc(a)), a !== null))
    if (((o = Vb(a)), o === null)) a = null;
    else if (((s = o.tag), s === 13)) {
      if (((a = Wb(o)), a !== null)) return a;
      a = null;
    } else if (s === 3) {
      if (o.stateNode.current.memoizedState.isDehydrated)
        return o.tag === 3 ? o.stateNode.containerInfo : null;
      a = null;
    } else o !== a && (a = null);
  return (id$4 = a), null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var a,
    o = ld,
    s = o.length,
    _,
    $ = "value" in kd ? kd.value : kd.textContent,
    et = $.length;
  for (a = 0; a < s && o[a] === $[a]; a++);
  var tt = s - a;
  for (_ = 1; _ <= tt && o[s - _] === $[et - _]; _++);
  return (md = $.slice(a, 1 < _ ? 1 - _ : void 0));
}
function od(a) {
  var o = a.keyCode;
  return (
    "charCode" in a
      ? ((a = a.charCode), a === 0 && o === 13 && (a = 13))
      : (a = o),
    a === 10 && (a = 13),
    32 <= a || a === 13 ? a : 0
  );
}
function pd() {
  return !0;
}
function qd() {
  return !1;
}
function rd(a) {
  function o(s, _, $, et, tt) {
    (this._reactName = s),
      (this._targetInst = $),
      (this.type = _),
      (this.nativeEvent = et),
      (this.target = tt),
      (this.currentTarget = null);
    for (var rt in a)
      a.hasOwnProperty(rt) && ((s = a[rt]), (this[rt] = s ? s(et) : et[rt]));
    return (
      (this.isDefaultPrevented = (
        et.defaultPrevented != null
          ? et.defaultPrevented
          : et.returnValue === !1
      )
        ? pd
        : qd),
      (this.isPropagationStopped = qd),
      this
    );
  }
  return (
    A$1(o.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var s = this.nativeEvent;
        s &&
          (s.preventDefault
            ? s.preventDefault()
            : typeof s.returnValue != "unknown" && (s.returnValue = !1),
          (this.isDefaultPrevented = pd));
      },
      stopPropagation: function () {
        var s = this.nativeEvent;
        s &&
          (s.stopPropagation
            ? s.stopPropagation()
            : typeof s.cancelBubble != "unknown" && (s.cancelBubble = !0),
          (this.isPropagationStopped = pd));
      },
      persist: function () {},
      isPersistent: pd,
    }),
    o
  );
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (a) {
      return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  td = rd(sd),
  ud = A$1({}, sd, { view: 0, detail: 0 }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A$1({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function (a) {
      return a.relatedTarget === void 0
        ? a.fromElement === a.srcElement
          ? a.toElement
          : a.fromElement
        : a.relatedTarget;
    },
    movementX: function (a) {
      return "movementX" in a
        ? a.movementX
        : (a !== yd &&
            (yd && a.type === "mousemove"
              ? ((wd = a.screenX - yd.screenX), (xd = a.screenY - yd.screenY))
              : (xd = wd = 0),
            (yd = a)),
          wd);
    },
    movementY: function (a) {
      return "movementY" in a ? a.movementY : xd;
    },
  }),
  Bd = rd(Ad),
  Cd = A$1({}, Ad, { dataTransfer: 0 }),
  Dd = rd(Cd),
  Ed = A$1({}, ud, { relatedTarget: 0 }),
  Fd = rd(Ed),
  Gd = A$1({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Hd = rd(Gd),
  Id = A$1({}, sd, {
    clipboardData: function (a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    },
  }),
  Jd = rd(Id),
  Kd = A$1({}, sd, { data: 0 }),
  Ld = rd(Kd),
  Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function Pd(a) {
  var o = this.nativeEvent;
  return o.getModifierState ? o.getModifierState(a) : (a = Od[a]) ? !!o[a] : !1;
}
function zd() {
  return Pd;
}
var Qd = A$1({}, ud, {
    key: function (a) {
      if (a.key) {
        var o = Md[a.key] || a.key;
        if (o !== "Unidentified") return o;
      }
      return a.type === "keypress"
        ? ((a = od(a)), a === 13 ? "Enter" : String.fromCharCode(a))
        : a.type === "keydown" || a.type === "keyup"
        ? Nd[a.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function (a) {
      return a.type === "keypress" ? od(a) : 0;
    },
    keyCode: function (a) {
      return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
    },
    which: function (a) {
      return a.type === "keypress"
        ? od(a)
        : a.type === "keydown" || a.type === "keyup"
        ? a.keyCode
        : 0;
    },
  }),
  Rd = rd(Qd),
  Sd = A$1({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Td = rd(Sd),
  Ud = A$1({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd,
  }),
  Vd = rd(Ud),
  Wd = A$1({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Xd = rd(Wd),
  Yd = A$1({}, Ad, {
    deltaX: function (a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function (a) {
      return "deltaY" in a
        ? a.deltaY
        : "wheelDeltaY" in a
        ? -a.wheelDeltaY
        : "wheelDelta" in a
        ? -a.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae = ia && "CompositionEvent" in window,
  be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be,
  de = ia && (!ae || (be && 8 < be && 11 >= be)),
  ee = String.fromCharCode(32),
  fe = !1;
function ge(a, o) {
  switch (a) {
    case "keyup":
      return $d.indexOf(o.keyCode) !== -1;
    case "keydown":
      return o.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function he(a) {
  return (a = a.detail), typeof a == "object" && "data" in a ? a.data : null;
}
var ie = !1;
function je(a, o) {
  switch (a) {
    case "compositionend":
      return he(o);
    case "keypress":
      return o.which !== 32 ? null : ((fe = !0), ee);
    case "textInput":
      return (a = o.data), a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, o) {
  if (ie)
    return a === "compositionend" || (!ae && ge(a, o))
      ? ((a = nd()), (md = ld = kd = null), (ie = !1), a)
      : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(o.ctrlKey || o.altKey || o.metaKey) || (o.ctrlKey && o.altKey)) {
        if (o.char && 1 < o.char.length) return o.char;
        if (o.which) return String.fromCharCode(o.which);
      }
      return null;
    case "compositionend":
      return de && o.locale !== "ko" ? null : o.data;
    default:
      return null;
  }
}
var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function me(a) {
  var o = a && a.nodeName && a.nodeName.toLowerCase();
  return o === "input" ? !!le[a.type] : o === "textarea";
}
function ne(a, o, s, _) {
  Eb(_),
    (o = oe(o, "onChange")),
    0 < o.length &&
      ((s = new td("onChange", "change", null, s, _)),
      a.push({ event: s, listeners: o }));
}
var pe = null,
  qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var o = ue(a);
  if (Wa(o)) return a;
}
function ve(a, o) {
  if (a === "change") return o;
}
var we = !1;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;"),
        (ye = typeof ze.oninput == "function");
    }
    xe = ye;
  } else xe = !1;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), (qe = pe = null));
}
function Be(a) {
  if (a.propertyName === "value" && te(qe)) {
    var o = [];
    ne(o, qe, a, xb(a)), Jb(re, o);
  }
}
function Ce(a, o, s) {
  a === "focusin"
    ? (Ae(), (pe = o), (qe = s), pe.attachEvent("onpropertychange", Be))
    : a === "focusout" && Ae();
}
function De(a) {
  if (a === "selectionchange" || a === "keyup" || a === "keydown")
    return te(qe);
}
function Ee(a, o) {
  if (a === "click") return te(o);
}
function Fe(a, o) {
  if (a === "input" || a === "change") return te(o);
}
function Ge(a, o) {
  return (a === o && (a !== 0 || 1 / a === 1 / o)) || (a !== a && o !== o);
}
var He = typeof Object.is == "function" ? Object.is : Ge;
function Ie(a, o) {
  if (He(a, o)) return !0;
  if (typeof a != "object" || a === null || typeof o != "object" || o === null)
    return !1;
  var s = Object.keys(a),
    _ = Object.keys(o);
  if (s.length !== _.length) return !1;
  for (_ = 0; _ < s.length; _++) {
    var $ = s[_];
    if (!ja.call(o, $) || !He(a[$], o[$])) return !1;
  }
  return !0;
}
function Je(a) {
  for (; a && a.firstChild; ) a = a.firstChild;
  return a;
}
function Ke(a, o) {
  var s = Je(a);
  a = 0;
  for (var _; s; ) {
    if (s.nodeType === 3) {
      if (((_ = a + s.textContent.length), a <= o && _ >= o))
        return { node: s, offset: o - a };
      a = _;
    }
    e: {
      for (; s; ) {
        if (s.nextSibling) {
          s = s.nextSibling;
          break e;
        }
        s = s.parentNode;
      }
      s = void 0;
    }
    s = Je(s);
  }
}
function Le(a, o) {
  return a && o
    ? a === o
      ? !0
      : a && a.nodeType === 3
      ? !1
      : o && o.nodeType === 3
      ? Le(a, o.parentNode)
      : "contains" in a
      ? a.contains(o)
      : a.compareDocumentPosition
      ? !!(a.compareDocumentPosition(o) & 16)
      : !1
    : !1;
}
function Me() {
  for (var a = window, o = Xa(); o instanceof a.HTMLIFrameElement; ) {
    try {
      var s = typeof o.contentWindow.location.href == "string";
    } catch {
      s = !1;
    }
    if (s) a = o.contentWindow;
    else break;
    o = Xa(a.document);
  }
  return o;
}
function Ne(a) {
  var o = a && a.nodeName && a.nodeName.toLowerCase();
  return (
    o &&
    ((o === "input" &&
      (a.type === "text" ||
        a.type === "search" ||
        a.type === "tel" ||
        a.type === "url" ||
        a.type === "password")) ||
      o === "textarea" ||
      a.contentEditable === "true")
  );
}
function Oe(a) {
  var o = Me(),
    s = a.focusedElem,
    _ = a.selectionRange;
  if (
    o !== s &&
    s &&
    s.ownerDocument &&
    Le(s.ownerDocument.documentElement, s)
  ) {
    if (_ !== null && Ne(s)) {
      if (
        ((o = _.start),
        (a = _.end),
        a === void 0 && (a = o),
        "selectionStart" in s)
      )
        (s.selectionStart = o), (s.selectionEnd = Math.min(a, s.value.length));
      else if (
        ((a = ((o = s.ownerDocument || document) && o.defaultView) || window),
        a.getSelection)
      ) {
        a = a.getSelection();
        var $ = s.textContent.length,
          et = Math.min(_.start, $);
        (_ = _.end === void 0 ? et : Math.min(_.end, $)),
          !a.extend && et > _ && (($ = _), (_ = et), (et = $)),
          ($ = Ke(s, et));
        var tt = Ke(s, _);
        $ &&
          tt &&
          (a.rangeCount !== 1 ||
            a.anchorNode !== $.node ||
            a.anchorOffset !== $.offset ||
            a.focusNode !== tt.node ||
            a.focusOffset !== tt.offset) &&
          ((o = o.createRange()),
          o.setStart($.node, $.offset),
          a.removeAllRanges(),
          et > _
            ? (a.addRange(o), a.extend(tt.node, tt.offset))
            : (o.setEnd(tt.node, tt.offset), a.addRange(o)));
      }
    }
    for (o = [], a = s; (a = a.parentNode); )
      a.nodeType === 1 &&
        o.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    for (typeof s.focus == "function" && s.focus(), s = 0; s < o.length; s++)
      (a = o[s]),
        (a.element.scrollLeft = a.left),
        (a.element.scrollTop = a.top);
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode,
  Qe = null,
  Re = null,
  Se = null,
  Te = !1;
function Ue(a, o, s) {
  var _ = s.window === s ? s.document : s.nodeType === 9 ? s : s.ownerDocument;
  Te ||
    Qe == null ||
    Qe !== Xa(_) ||
    ((_ = Qe),
    "selectionStart" in _ && Ne(_)
      ? (_ = { start: _.selectionStart, end: _.selectionEnd })
      : ((_ = (
          (_.ownerDocument && _.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (_ = {
          anchorNode: _.anchorNode,
          anchorOffset: _.anchorOffset,
          focusNode: _.focusNode,
          focusOffset: _.focusOffset,
        })),
    (Se && Ie(Se, _)) ||
      ((Se = _),
      (_ = oe(Re, "onSelect")),
      0 < _.length &&
        ((o = new td("onSelect", "select", null, o, s)),
        a.push({ event: o, listeners: _ }),
        (o.target = Qe))));
}
function Ve(a, o) {
  var s = {};
  return (
    (s[a.toLowerCase()] = o.toLowerCase()),
    (s["Webkit" + a] = "webkit" + o),
    (s["Moz" + a] = "moz" + o),
    s
  );
}
var We = {
    animationend: Ve("Animation", "AnimationEnd"),
    animationiteration: Ve("Animation", "AnimationIteration"),
    animationstart: Ve("Animation", "AnimationStart"),
    transitionend: Ve("Transition", "TransitionEnd"),
  },
  Xe = {},
  Ye = {};
ia &&
  ((Ye = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete We.animationend.animation,
    delete We.animationiteration.animation,
    delete We.animationstart.animation),
  "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var o = We[a],
    s;
  for (s in o) if (o.hasOwnProperty(s) && s in Ye) return (Xe[a] = o[s]);
  return a;
}
var $e = Ze("animationend"),
  af = Ze("animationiteration"),
  bf = Ze("animationstart"),
  cf = Ze("transitionend"),
  df = new Map(),
  ef =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function ff(a, o) {
  df.set(a, o), fa(o, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
fa(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
fa(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
fa(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var lf =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, o, s) {
  var _ = a.type || "unknown-event";
  (a.currentTarget = s), Ub(_, o, void 0, a), (a.currentTarget = null);
}
function se(a, o) {
  o = (o & 4) !== 0;
  for (var s = 0; s < a.length; s++) {
    var _ = a[s],
      $ = _.event;
    _ = _.listeners;
    e: {
      var et = void 0;
      if (o)
        for (var tt = _.length - 1; 0 <= tt; tt--) {
          var rt = _[tt],
            nt = rt.instance,
            it = rt.currentTarget;
          if (((rt = rt.listener), nt !== et && $.isPropagationStopped()))
            break e;
          nf($, rt, it), (et = nt);
        }
      else
        for (tt = 0; tt < _.length; tt++) {
          if (
            ((rt = _[tt]),
            (nt = rt.instance),
            (it = rt.currentTarget),
            (rt = rt.listener),
            nt !== et && $.isPropagationStopped())
          )
            break e;
          nf($, rt, it), (et = nt);
        }
    }
  }
  if (Qb) throw ((a = Rb), (Qb = !1), (Rb = null), a);
}
function D(a, o) {
  var s = o[of];
  s === void 0 && (s = o[of] = new Set());
  var _ = a + "__bubble";
  s.has(_) || (pf(o, a, 2, !1), s.add(_));
}
function qf(a, o, s) {
  var _ = 0;
  o && (_ |= 4), pf(s, a, _, o);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    (a[rf] = !0),
      da.forEach(function (s) {
        s !== "selectionchange" && (mf.has(s) || qf(s, !1, a), qf(s, !0, a));
      });
    var o = a.nodeType === 9 ? a : a.ownerDocument;
    o === null || o[rf] || ((o[rf] = !0), qf("selectionchange", !1, o));
  }
}
function pf(a, o, s, _) {
  switch (jd(o)) {
    case 1:
      var $ = ed;
      break;
    case 4:
      $ = gd;
      break;
    default:
      $ = fd;
  }
  (s = $.bind(null, o, s, a)),
    ($ = void 0),
    !Lb ||
      (o !== "touchstart" && o !== "touchmove" && o !== "wheel") ||
      ($ = !0),
    _
      ? $ !== void 0
        ? a.addEventListener(o, s, { capture: !0, passive: $ })
        : a.addEventListener(o, s, !0)
      : $ !== void 0
      ? a.addEventListener(o, s, { passive: $ })
      : a.addEventListener(o, s, !1);
}
function hd(a, o, s, _, $) {
  var et = _;
  if (!(o & 1) && !(o & 2) && _ !== null)
    e: for (;;) {
      if (_ === null) return;
      var tt = _.tag;
      if (tt === 3 || tt === 4) {
        var rt = _.stateNode.containerInfo;
        if (rt === $ || (rt.nodeType === 8 && rt.parentNode === $)) break;
        if (tt === 4)
          for (tt = _.return; tt !== null; ) {
            var nt = tt.tag;
            if (
              (nt === 3 || nt === 4) &&
              ((nt = tt.stateNode.containerInfo),
              nt === $ || (nt.nodeType === 8 && nt.parentNode === $))
            )
              return;
            tt = tt.return;
          }
        for (; rt !== null; ) {
          if (((tt = Wc(rt)), tt === null)) return;
          if (((nt = tt.tag), nt === 5 || nt === 6)) {
            _ = et = tt;
            continue e;
          }
          rt = rt.parentNode;
        }
      }
      _ = _.return;
    }
  Jb(function () {
    var it = et,
      at = xb(s),
      st = [];
    e: {
      var ot = df.get(a);
      if (ot !== void 0) {
        var dt = td,
          ht = a;
        switch (a) {
          case "keypress":
            if (od(s) === 0) break e;
          case "keydown":
          case "keyup":
            dt = Rd;
            break;
          case "focusin":
            (ht = "focus"), (dt = Fd);
            break;
          case "focusout":
            (ht = "blur"), (dt = Fd);
            break;
          case "beforeblur":
          case "afterblur":
            dt = Fd;
            break;
          case "click":
            if (s.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            dt = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            dt = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            dt = Vd;
            break;
          case $e:
          case af:
          case bf:
            dt = Hd;
            break;
          case cf:
            dt = Xd;
            break;
          case "scroll":
            dt = vd;
            break;
          case "wheel":
            dt = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            dt = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            dt = Td;
        }
        var ft = (o & 4) !== 0,
          mt = !ft && a === "scroll",
          ut = ft ? (ot !== null ? ot + "Capture" : null) : ot;
        ft = [];
        for (var lt = it, ct; lt !== null; ) {
          ct = lt;
          var pt = ct.stateNode;
          if (
            (ct.tag === 5 &&
              pt !== null &&
              ((ct = pt),
              ut !== null &&
                ((pt = Kb(lt, ut)), pt != null && ft.push(tf(lt, pt, ct)))),
            mt)
          )
            break;
          lt = lt.return;
        }
        0 < ft.length &&
          ((ot = new dt(ot, ht, null, s, at)),
          st.push({ event: ot, listeners: ft }));
      }
    }
    if (!(o & 7)) {
      e: {
        if (
          ((ot = a === "mouseover" || a === "pointerover"),
          (dt = a === "mouseout" || a === "pointerout"),
          ot &&
            s !== wb &&
            (ht = s.relatedTarget || s.fromElement) &&
            (Wc(ht) || ht[uf]))
        )
          break e;
        if (
          (dt || ot) &&
          ((ot =
            at.window === at
              ? at
              : (ot = at.ownerDocument)
              ? ot.defaultView || ot.parentWindow
              : window),
          dt
            ? ((ht = s.relatedTarget || s.toElement),
              (dt = it),
              (ht = ht ? Wc(ht) : null),
              ht !== null &&
                ((mt = Vb(ht)), ht !== mt || (ht.tag !== 5 && ht.tag !== 6)) &&
                (ht = null))
            : ((dt = null), (ht = it)),
          dt !== ht)
        ) {
          if (
            ((ft = Bd),
            (pt = "onMouseLeave"),
            (ut = "onMouseEnter"),
            (lt = "mouse"),
            (a === "pointerout" || a === "pointerover") &&
              ((ft = Td),
              (pt = "onPointerLeave"),
              (ut = "onPointerEnter"),
              (lt = "pointer")),
            (mt = dt == null ? ot : ue(dt)),
            (ct = ht == null ? ot : ue(ht)),
            (ot = new ft(pt, lt + "leave", dt, s, at)),
            (ot.target = mt),
            (ot.relatedTarget = ct),
            (pt = null),
            Wc(at) === it &&
              ((ft = new ft(ut, lt + "enter", ht, s, at)),
              (ft.target = ct),
              (ft.relatedTarget = mt),
              (pt = ft)),
            (mt = pt),
            dt && ht)
          )
            t: {
              for (ft = dt, ut = ht, lt = 0, ct = ft; ct; ct = vf(ct)) lt++;
              for (ct = 0, pt = ut; pt; pt = vf(pt)) ct++;
              for (; 0 < lt - ct; ) (ft = vf(ft)), lt--;
              for (; 0 < ct - lt; ) (ut = vf(ut)), ct--;
              for (; lt--; ) {
                if (ft === ut || (ut !== null && ft === ut.alternate)) break t;
                (ft = vf(ft)), (ut = vf(ut));
              }
              ft = null;
            }
          else ft = null;
          dt !== null && wf(st, ot, dt, ft, !1),
            ht !== null && mt !== null && wf(st, mt, ht, ft, !0);
        }
      }
      e: {
        if (
          ((ot = it ? ue(it) : window),
          (dt = ot.nodeName && ot.nodeName.toLowerCase()),
          dt === "select" || (dt === "input" && ot.type === "file"))
        )
          var vt = ve;
        else if (me(ot))
          if (we) vt = Fe;
          else {
            vt = De;
            var xt = Ce;
          }
        else
          (dt = ot.nodeName) &&
            dt.toLowerCase() === "input" &&
            (ot.type === "checkbox" || ot.type === "radio") &&
            (vt = Ee);
        if (vt && (vt = vt(a, it))) {
          ne(st, vt, s, at);
          break e;
        }
        xt && xt(a, ot, it),
          a === "focusout" &&
            (xt = ot._wrapperState) &&
            xt.controlled &&
            ot.type === "number" &&
            cb(ot, "number", ot.value);
      }
      switch (((xt = it ? ue(it) : window), a)) {
        case "focusin":
          (me(xt) || xt.contentEditable === "true") &&
            ((Qe = xt), (Re = it), (Se = null));
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (Te = !1), Ue(st, s, at);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(st, s, at);
      }
      var bt;
      if (ae)
        e: {
          switch (a) {
            case "compositionstart":
              var St = "onCompositionStart";
              break e;
            case "compositionend":
              St = "onCompositionEnd";
              break e;
            case "compositionupdate":
              St = "onCompositionUpdate";
              break e;
          }
          St = void 0;
        }
      else
        ie
          ? ge(a, s) && (St = "onCompositionEnd")
          : a === "keydown" && s.keyCode === 229 && (St = "onCompositionStart");
      St &&
        (de &&
          s.locale !== "ko" &&
          (ie || St !== "onCompositionStart"
            ? St === "onCompositionEnd" && ie && (bt = nd())
            : ((kd = at),
              (ld = "value" in kd ? kd.value : kd.textContent),
              (ie = !0))),
        (xt = oe(it, St)),
        0 < xt.length &&
          ((St = new Ld(St, a, null, s, at)),
          st.push({ event: St, listeners: xt }),
          bt ? (St.data = bt) : ((bt = he(s)), bt !== null && (St.data = bt)))),
        (bt = ce ? je(a, s) : ke(a, s)) &&
          ((it = oe(it, "onBeforeInput")),
          0 < it.length &&
            ((at = new Ld("onBeforeInput", "beforeinput", null, s, at)),
            st.push({ event: at, listeners: it }),
            (at.data = bt)));
    }
    se(st, o);
  });
}
function tf(a, o, s) {
  return { instance: a, listener: o, currentTarget: s };
}
function oe(a, o) {
  for (var s = o + "Capture", _ = []; a !== null; ) {
    var $ = a,
      et = $.stateNode;
    $.tag === 5 &&
      et !== null &&
      (($ = et),
      (et = Kb(a, s)),
      et != null && _.unshift(tf(a, et, $)),
      (et = Kb(a, o)),
      et != null && _.push(tf(a, et, $))),
      (a = a.return);
  }
  return _;
}
function vf(a) {
  if (a === null) return null;
  do a = a.return;
  while (a && a.tag !== 5);
  return a || null;
}
function wf(a, o, s, _, $) {
  for (var et = o._reactName, tt = []; s !== null && s !== _; ) {
    var rt = s,
      nt = rt.alternate,
      it = rt.stateNode;
    if (nt !== null && nt === _) break;
    rt.tag === 5 &&
      it !== null &&
      ((rt = it),
      $
        ? ((nt = Kb(s, et)), nt != null && tt.unshift(tf(s, nt, rt)))
        : $ || ((nt = Kb(s, et)), nt != null && tt.push(tf(s, nt, rt)))),
      (s = s.return);
  }
  tt.length !== 0 && a.push({ event: o, listeners: tt });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(a) {
  return (typeof a == "string" ? a : "" + a)
    .replace(
      xf,
      `
`
    )
    .replace(yf, "");
}
function Af(a, o, s) {
  if (((o = zf(o)), zf(a) !== o && s)) throw Error(p$1(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(a, o) {
  return (
    a === "textarea" ||
    a === "noscript" ||
    typeof o.children == "string" ||
    typeof o.children == "number" ||
    (typeof o.dangerouslySetInnerHTML == "object" &&
      o.dangerouslySetInnerHTML !== null &&
      o.dangerouslySetInnerHTML.__html != null)
  );
}
var Ff = typeof setTimeout == "function" ? setTimeout : void 0,
  Gf = typeof clearTimeout == "function" ? clearTimeout : void 0,
  Hf = typeof Promise == "function" ? Promise : void 0,
  Jf =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof Hf < "u"
      ? function (a) {
          return Hf.resolve(null).then(a).catch(If);
        }
      : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, o) {
  var s = o,
    _ = 0;
  do {
    var $ = s.nextSibling;
    if ((a.removeChild(s), $ && $.nodeType === 8))
      if (((s = $.data), s === "/$")) {
        if (_ === 0) {
          a.removeChild($), bd(o);
          return;
        }
        _--;
      } else (s !== "$" && s !== "$?" && s !== "$!") || _++;
    s = $;
  } while (s);
  bd(o);
}
function Lf(a) {
  for (; a != null; a = a.nextSibling) {
    var o = a.nodeType;
    if (o === 1 || o === 3) break;
    if (o === 8) {
      if (((o = a.data), o === "$" || o === "$!" || o === "$?")) break;
      if (o === "/$") return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var o = 0; a; ) {
    if (a.nodeType === 8) {
      var s = a.data;
      if (s === "$" || s === "$!" || s === "$?") {
        if (o === 0) return a;
        o--;
      } else s === "/$" && o++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = "__reactFiber$" + Nf,
  Pf = "__reactProps$" + Nf,
  uf = "__reactContainer$" + Nf,
  of = "__reactEvents$" + Nf,
  Qf = "__reactListeners$" + Nf,
  Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var o = a[Of];
  if (o) return o;
  for (var s = a.parentNode; s; ) {
    if ((o = s[uf] || s[Of])) {
      if (
        ((s = o.alternate),
        o.child !== null || (s !== null && s.child !== null))
      )
        for (a = Mf(a); a !== null; ) {
          if ((s = a[Of])) return s;
          a = Mf(a);
        }
      return o;
    }
    (a = s), (s = a.parentNode);
  }
  return null;
}
function Cb(a) {
  return (
    (a = a[Of] || a[uf]),
    !a || (a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3) ? null : a
  );
}
function ue(a) {
  if (a.tag === 5 || a.tag === 6) return a.stateNode;
  throw Error(p$1(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(a) {
  return { current: a };
}
function E(a) {
  0 > Tf || ((a.current = Sf[Tf]), (Sf[Tf] = null), Tf--);
}
function G(a, o) {
  Tf++, (Sf[Tf] = a.current), (a.current = o);
}
var Vf = {},
  H = Uf(Vf),
  Wf = Uf(!1),
  Xf = Vf;
function Yf(a, o) {
  var s = a.type.contextTypes;
  if (!s) return Vf;
  var _ = a.stateNode;
  if (_ && _.__reactInternalMemoizedUnmaskedChildContext === o)
    return _.__reactInternalMemoizedMaskedChildContext;
  var $ = {},
    et;
  for (et in s) $[et] = o[et];
  return (
    _ &&
      ((a = a.stateNode),
      (a.__reactInternalMemoizedUnmaskedChildContext = o),
      (a.__reactInternalMemoizedMaskedChildContext = $)),
    $
  );
}
function Zf(a) {
  return (a = a.childContextTypes), a != null;
}
function $f() {
  E(Wf), E(H);
}
function ag(a, o, s) {
  if (H.current !== Vf) throw Error(p$1(168));
  G(H, o), G(Wf, s);
}
function bg(a, o, s) {
  var _ = a.stateNode;
  if (((o = o.childContextTypes), typeof _.getChildContext != "function"))
    return s;
  _ = _.getChildContext();
  for (var $ in _) if (!($ in o)) throw Error(p$1(108, Ra(a) || "Unknown", $));
  return A$1({}, s, _);
}
function cg(a) {
  return (
    (a =
      ((a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext) || Vf),
    (Xf = H.current),
    G(H, a),
    G(Wf, Wf.current),
    !0
  );
}
function dg(a, o, s) {
  var _ = a.stateNode;
  if (!_) throw Error(p$1(169));
  s
    ? ((a = bg(a, o, Xf)),
      (_.__reactInternalMemoizedMergedChildContext = a),
      E(Wf),
      E(H),
      G(H, a))
    : E(Wf),
    G(Wf, s);
}
var eg = null,
  fg = !1,
  gg = !1;
function hg(a) {
  eg === null ? (eg = [a]) : eg.push(a);
}
function ig(a) {
  (fg = !0), hg(a);
}
function jg() {
  if (!gg && eg !== null) {
    gg = !0;
    var a = 0,
      o = C;
    try {
      var s = eg;
      for (C = 1; a < s.length; a++) {
        var _ = s[a];
        do _ = _(!0);
        while (_ !== null);
      }
      (eg = null), (fg = !1);
    } catch ($) {
      throw (eg !== null && (eg = eg.slice(a + 1)), ac(fc, jg), $);
    } finally {
      (C = o), (gg = !1);
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = "";
function tg(a, o) {
  (kg[lg++] = ng), (kg[lg++] = mg), (mg = a), (ng = o);
}
function ug(a, o, s) {
  (og[pg++] = rg), (og[pg++] = sg), (og[pg++] = qg), (qg = a);
  var _ = rg;
  a = sg;
  var $ = 32 - oc(_) - 1;
  (_ &= ~(1 << $)), (s += 1);
  var et = 32 - oc(o) + $;
  if (30 < et) {
    var tt = $ - ($ % 5);
    (et = (_ & ((1 << tt) - 1)).toString(32)),
      (_ >>= tt),
      ($ -= tt),
      (rg = (1 << (32 - oc(o) + $)) | (s << $) | _),
      (sg = et + a);
  } else (rg = (1 << et) | (s << $) | _), (sg = a);
}
function vg(a) {
  a.return !== null && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg; )
    (mg = kg[--lg]), (kg[lg] = null), (ng = kg[--lg]), (kg[lg] = null);
  for (; a === qg; )
    (qg = og[--pg]),
      (og[pg] = null),
      (sg = og[--pg]),
      (og[pg] = null),
      (rg = og[--pg]),
      (og[pg] = null);
}
var xg = null,
  yg = null,
  I = !1,
  zg = null;
function Ag(a, o) {
  var s = Bg(5, null, null, 0);
  (s.elementType = "DELETED"),
    (s.stateNode = o),
    (s.return = a),
    (o = a.deletions),
    o === null ? ((a.deletions = [s]), (a.flags |= 16)) : o.push(s);
}
function Cg(a, o) {
  switch (a.tag) {
    case 5:
      var s = a.type;
      return (
        (o =
          o.nodeType !== 1 || s.toLowerCase() !== o.nodeName.toLowerCase()
            ? null
            : o),
        o !== null
          ? ((a.stateNode = o), (xg = a), (yg = Lf(o.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (o = a.pendingProps === "" || o.nodeType !== 3 ? null : o),
        o !== null ? ((a.stateNode = o), (xg = a), (yg = null), !0) : !1
      );
    case 13:
      return (
        (o = o.nodeType !== 8 ? null : o),
        o !== null
          ? ((s = qg !== null ? { id: rg, overflow: sg } : null),
            (a.memoizedState = {
              dehydrated: o,
              treeContext: s,
              retryLane: 1073741824,
            }),
            (s = Bg(18, null, null, 0)),
            (s.stateNode = o),
            (s.return = a),
            (a.child = s),
            (xg = a),
            (yg = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Dg(a) {
  return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
}
function Eg(a) {
  if (I) {
    var o = yg;
    if (o) {
      var s = o;
      if (!Cg(a, o)) {
        if (Dg(a)) throw Error(p$1(418));
        o = Lf(s.nextSibling);
        var _ = xg;
        o && Cg(a, o)
          ? Ag(_, s)
          : ((a.flags = (a.flags & -4097) | 2), (I = !1), (xg = a));
      }
    } else {
      if (Dg(a)) throw Error(p$1(418));
      (a.flags = (a.flags & -4097) | 2), (I = !1), (xg = a);
    }
  }
}
function Fg(a) {
  for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg) return !1;
  if (!I) return Fg(a), (I = !0), !1;
  var o;
  if (
    ((o = a.tag !== 3) &&
      !(o = a.tag !== 5) &&
      ((o = a.type),
      (o = o !== "head" && o !== "body" && !Ef(a.type, a.memoizedProps))),
    o && (o = yg))
  ) {
    if (Dg(a)) throw (Hg(), Error(p$1(418)));
    for (; o; ) Ag(a, o), (o = Lf(o.nextSibling));
  }
  if ((Fg(a), a.tag === 13)) {
    if (((a = a.memoizedState), (a = a !== null ? a.dehydrated : null), !a))
      throw Error(p$1(317));
    e: {
      for (a = a.nextSibling, o = 0; a; ) {
        if (a.nodeType === 8) {
          var s = a.data;
          if (s === "/$") {
            if (o === 0) {
              yg = Lf(a.nextSibling);
              break e;
            }
            o--;
          } else (s !== "$" && s !== "$!" && s !== "$?") || o++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return !0;
}
function Hg() {
  for (var a = yg; a; ) a = Lf(a.nextSibling);
}
function Ig() {
  (yg = xg = null), (I = !1);
}
function Jg(a) {
  zg === null ? (zg = [a]) : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, o) {
  if (a && a.defaultProps) {
    (o = A$1({}, o)), (a = a.defaultProps);
    for (var s in a) o[s] === void 0 && (o[s] = a[s]);
    return o;
  }
  return o;
}
var Mg = Uf(null),
  Ng = null,
  Og = null,
  Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var o = Mg.current;
  E(Mg), (a._currentValue = o);
}
function Sg(a, o, s) {
  for (; a !== null; ) {
    var _ = a.alternate;
    if (
      ((a.childLanes & o) !== o
        ? ((a.childLanes |= o), _ !== null && (_.childLanes |= o))
        : _ !== null && (_.childLanes & o) !== o && (_.childLanes |= o),
      a === s)
    )
      break;
    a = a.return;
  }
}
function Tg(a, o) {
  (Ng = a),
    (Pg = Og = null),
    (a = a.dependencies),
    a !== null &&
      a.firstContext !== null &&
      (a.lanes & o && (Ug = !0), (a.firstContext = null));
}
function Vg(a) {
  var o = a._currentValue;
  if (Pg !== a)
    if (((a = { context: a, memoizedValue: o, next: null }), Og === null)) {
      if (Ng === null) throw Error(p$1(308));
      (Og = a), (Ng.dependencies = { lanes: 0, firstContext: a });
    } else Og = Og.next = a;
  return o;
}
var Wg = null;
function Xg(a) {
  Wg === null ? (Wg = [a]) : Wg.push(a);
}
function Yg(a, o, s, _) {
  var $ = o.interleaved;
  return (
    $ === null ? ((s.next = s), Xg(o)) : ((s.next = $.next), ($.next = s)),
    (o.interleaved = s),
    Zg(a, _)
  );
}
function Zg(a, o) {
  a.lanes |= o;
  var s = a.alternate;
  for (s !== null && (s.lanes |= o), s = a, a = a.return; a !== null; )
    (a.childLanes |= o),
      (s = a.alternate),
      s !== null && (s.childLanes |= o),
      (s = a),
      (a = a.return);
  return s.tag === 3 ? s.stateNode : null;
}
var $g = !1;
function ah(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function bh(a, o) {
  (a = a.updateQueue),
    o.updateQueue === a &&
      (o.updateQueue = {
        baseState: a.baseState,
        firstBaseUpdate: a.firstBaseUpdate,
        lastBaseUpdate: a.lastBaseUpdate,
        shared: a.shared,
        effects: a.effects,
      });
}
function ch(a, o) {
  return {
    eventTime: a,
    lane: o,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function dh(a, o, s) {
  var _ = a.updateQueue;
  if (_ === null) return null;
  if (((_ = _.shared), K & 2)) {
    var $ = _.pending;
    return (
      $ === null ? (o.next = o) : ((o.next = $.next), ($.next = o)),
      (_.pending = o),
      Zg(a, s)
    );
  }
  return (
    ($ = _.interleaved),
    $ === null ? ((o.next = o), Xg(_)) : ((o.next = $.next), ($.next = o)),
    (_.interleaved = o),
    Zg(a, s)
  );
}
function eh(a, o, s) {
  if (
    ((o = o.updateQueue), o !== null && ((o = o.shared), (s & 4194240) !== 0))
  ) {
    var _ = o.lanes;
    (_ &= a.pendingLanes), (s |= _), (o.lanes = s), Cc(a, s);
  }
}
function fh(a, o) {
  var s = a.updateQueue,
    _ = a.alternate;
  if (_ !== null && ((_ = _.updateQueue), s === _)) {
    var $ = null,
      et = null;
    if (((s = s.firstBaseUpdate), s !== null)) {
      do {
        var tt = {
          eventTime: s.eventTime,
          lane: s.lane,
          tag: s.tag,
          payload: s.payload,
          callback: s.callback,
          next: null,
        };
        et === null ? ($ = et = tt) : (et = et.next = tt), (s = s.next);
      } while (s !== null);
      et === null ? ($ = et = o) : (et = et.next = o);
    } else $ = et = o;
    (s = {
      baseState: _.baseState,
      firstBaseUpdate: $,
      lastBaseUpdate: et,
      shared: _.shared,
      effects: _.effects,
    }),
      (a.updateQueue = s);
    return;
  }
  (a = s.lastBaseUpdate),
    a === null ? (s.firstBaseUpdate = o) : (a.next = o),
    (s.lastBaseUpdate = o);
}
function gh(a, o, s, _) {
  var $ = a.updateQueue;
  $g = !1;
  var et = $.firstBaseUpdate,
    tt = $.lastBaseUpdate,
    rt = $.shared.pending;
  if (rt !== null) {
    $.shared.pending = null;
    var nt = rt,
      it = nt.next;
    (nt.next = null), tt === null ? (et = it) : (tt.next = it), (tt = nt);
    var at = a.alternate;
    at !== null &&
      ((at = at.updateQueue),
      (rt = at.lastBaseUpdate),
      rt !== tt &&
        (rt === null ? (at.firstBaseUpdate = it) : (rt.next = it),
        (at.lastBaseUpdate = nt)));
  }
  if (et !== null) {
    var st = $.baseState;
    (tt = 0), (at = it = nt = null), (rt = et);
    do {
      var ot = rt.lane,
        dt = rt.eventTime;
      if ((_ & ot) === ot) {
        at !== null &&
          (at = at.next =
            {
              eventTime: dt,
              lane: 0,
              tag: rt.tag,
              payload: rt.payload,
              callback: rt.callback,
              next: null,
            });
        e: {
          var ht = a,
            ft = rt;
          switch (((ot = o), (dt = s), ft.tag)) {
            case 1:
              if (((ht = ft.payload), typeof ht == "function")) {
                st = ht.call(dt, st, ot);
                break e;
              }
              st = ht;
              break e;
            case 3:
              ht.flags = (ht.flags & -65537) | 128;
            case 0:
              if (
                ((ht = ft.payload),
                (ot = typeof ht == "function" ? ht.call(dt, st, ot) : ht),
                ot == null)
              )
                break e;
              st = A$1({}, st, ot);
              break e;
            case 2:
              $g = !0;
          }
        }
        rt.callback !== null &&
          rt.lane !== 0 &&
          ((a.flags |= 64),
          (ot = $.effects),
          ot === null ? ($.effects = [rt]) : ot.push(rt));
      } else
        (dt = {
          eventTime: dt,
          lane: ot,
          tag: rt.tag,
          payload: rt.payload,
          callback: rt.callback,
          next: null,
        }),
          at === null ? ((it = at = dt), (nt = st)) : (at = at.next = dt),
          (tt |= ot);
      if (((rt = rt.next), rt === null)) {
        if (((rt = $.shared.pending), rt === null)) break;
        (ot = rt),
          (rt = ot.next),
          (ot.next = null),
          ($.lastBaseUpdate = ot),
          ($.shared.pending = null);
      }
    } while (1);
    if (
      (at === null && (nt = st),
      ($.baseState = nt),
      ($.firstBaseUpdate = it),
      ($.lastBaseUpdate = at),
      (o = $.shared.interleaved),
      o !== null)
    ) {
      $ = o;
      do (tt |= $.lane), ($ = $.next);
      while ($ !== o);
    } else et === null && ($.shared.lanes = 0);
    (hh |= tt), (a.lanes = tt), (a.memoizedState = st);
  }
}
function ih(a, o, s) {
  if (((a = o.effects), (o.effects = null), a !== null))
    for (o = 0; o < a.length; o++) {
      var _ = a[o],
        $ = _.callback;
      if ($ !== null) {
        if (((_.callback = null), (_ = s), typeof $ != "function"))
          throw Error(p$1(191, $));
        $.call(_);
      }
    }
}
var jh = new aa.Component().refs;
function kh(a, o, s, _) {
  (o = a.memoizedState),
    (s = s(_, o)),
    (s = s == null ? o : A$1({}, o, s)),
    (a.memoizedState = s),
    a.lanes === 0 && (a.updateQueue.baseState = s);
}
var nh = {
  isMounted: function (a) {
    return (a = a._reactInternals) ? Vb(a) === a : !1;
  },
  enqueueSetState: function (a, o, s) {
    a = a._reactInternals;
    var _ = L(),
      $ = lh(a),
      et = ch(_, $);
    (et.payload = o),
      s != null && (et.callback = s),
      (o = dh(a, et, $)),
      o !== null && (mh(o, a, $, _), eh(o, a, $));
  },
  enqueueReplaceState: function (a, o, s) {
    a = a._reactInternals;
    var _ = L(),
      $ = lh(a),
      et = ch(_, $);
    (et.tag = 1),
      (et.payload = o),
      s != null && (et.callback = s),
      (o = dh(a, et, $)),
      o !== null && (mh(o, a, $, _), eh(o, a, $));
  },
  enqueueForceUpdate: function (a, o) {
    a = a._reactInternals;
    var s = L(),
      _ = lh(a),
      $ = ch(s, _);
    ($.tag = 2),
      o != null && ($.callback = o),
      (o = dh(a, $, _)),
      o !== null && (mh(o, a, _, s), eh(o, a, _));
  },
};
function oh(a, o, s, _, $, et, tt) {
  return (
    (a = a.stateNode),
    typeof a.shouldComponentUpdate == "function"
      ? a.shouldComponentUpdate(_, et, tt)
      : o.prototype && o.prototype.isPureReactComponent
      ? !Ie(s, _) || !Ie($, et)
      : !0
  );
}
function ph(a, o, s) {
  var _ = !1,
    $ = Vf,
    et = o.contextType;
  return (
    typeof et == "object" && et !== null
      ? (et = Vg(et))
      : (($ = Zf(o) ? Xf : H.current),
        (_ = o.contextTypes),
        (et = (_ = _ != null) ? Yf(a, $) : Vf)),
    (o = new o(s, et)),
    (a.memoizedState = o.state !== null && o.state !== void 0 ? o.state : null),
    (o.updater = nh),
    (a.stateNode = o),
    (o._reactInternals = a),
    _ &&
      ((a = a.stateNode),
      (a.__reactInternalMemoizedUnmaskedChildContext = $),
      (a.__reactInternalMemoizedMaskedChildContext = et)),
    o
  );
}
function qh(a, o, s, _) {
  (a = o.state),
    typeof o.componentWillReceiveProps == "function" &&
      o.componentWillReceiveProps(s, _),
    typeof o.UNSAFE_componentWillReceiveProps == "function" &&
      o.UNSAFE_componentWillReceiveProps(s, _),
    o.state !== a && nh.enqueueReplaceState(o, o.state, null);
}
function rh(a, o, s, _) {
  var $ = a.stateNode;
  ($.props = s), ($.state = a.memoizedState), ($.refs = jh), ah(a);
  var et = o.contextType;
  typeof et == "object" && et !== null
    ? ($.context = Vg(et))
    : ((et = Zf(o) ? Xf : H.current), ($.context = Yf(a, et))),
    ($.state = a.memoizedState),
    (et = o.getDerivedStateFromProps),
    typeof et == "function" && (kh(a, o, et, s), ($.state = a.memoizedState)),
    typeof o.getDerivedStateFromProps == "function" ||
      typeof $.getSnapshotBeforeUpdate == "function" ||
      (typeof $.UNSAFE_componentWillMount != "function" &&
        typeof $.componentWillMount != "function") ||
      ((o = $.state),
      typeof $.componentWillMount == "function" && $.componentWillMount(),
      typeof $.UNSAFE_componentWillMount == "function" &&
        $.UNSAFE_componentWillMount(),
      o !== $.state && nh.enqueueReplaceState($, $.state, null),
      gh(a, s, $, _),
      ($.state = a.memoizedState)),
    typeof $.componentDidMount == "function" && (a.flags |= 4194308);
}
function sh(a, o, s) {
  if (
    ((a = s.ref), a !== null && typeof a != "function" && typeof a != "object")
  ) {
    if (s._owner) {
      if (((s = s._owner), s)) {
        if (s.tag !== 1) throw Error(p$1(309));
        var _ = s.stateNode;
      }
      if (!_) throw Error(p$1(147, a));
      var $ = _,
        et = "" + a;
      return o !== null &&
        o.ref !== null &&
        typeof o.ref == "function" &&
        o.ref._stringRef === et
        ? o.ref
        : ((o = function (tt) {
            var rt = $.refs;
            rt === jh && (rt = $.refs = {}),
              tt === null ? delete rt[et] : (rt[et] = tt);
          }),
          (o._stringRef = et),
          o);
    }
    if (typeof a != "string") throw Error(p$1(284));
    if (!s._owner) throw Error(p$1(290, a));
  }
  return a;
}
function th(a, o) {
  throw (
    ((a = Object.prototype.toString.call(o)),
    Error(
      p$1(
        31,
        a === "[object Object]"
          ? "object with keys {" + Object.keys(o).join(", ") + "}"
          : a
      )
    ))
  );
}
function uh(a) {
  var o = a._init;
  return o(a._payload);
}
function vh$1(a) {
  function o(ut, lt) {
    if (a) {
      var ct = ut.deletions;
      ct === null ? ((ut.deletions = [lt]), (ut.flags |= 16)) : ct.push(lt);
    }
  }
  function s(ut, lt) {
    if (!a) return null;
    for (; lt !== null; ) o(ut, lt), (lt = lt.sibling);
    return null;
  }
  function _(ut, lt) {
    for (ut = new Map(); lt !== null; )
      lt.key !== null ? ut.set(lt.key, lt) : ut.set(lt.index, lt),
        (lt = lt.sibling);
    return ut;
  }
  function $(ut, lt) {
    return (ut = wh(ut, lt)), (ut.index = 0), (ut.sibling = null), ut;
  }
  function et(ut, lt, ct) {
    return (
      (ut.index = ct),
      a
        ? ((ct = ut.alternate),
          ct !== null
            ? ((ct = ct.index), ct < lt ? ((ut.flags |= 2), lt) : ct)
            : ((ut.flags |= 2), lt))
        : ((ut.flags |= 1048576), lt)
    );
  }
  function tt(ut) {
    return a && ut.alternate === null && (ut.flags |= 2), ut;
  }
  function rt(ut, lt, ct, pt) {
    return lt === null || lt.tag !== 6
      ? ((lt = xh(ct, ut.mode, pt)), (lt.return = ut), lt)
      : ((lt = $(lt, ct)), (lt.return = ut), lt);
  }
  function nt(ut, lt, ct, pt) {
    var vt = ct.type;
    return vt === ya
      ? at(ut, lt, ct.props.children, pt, ct.key)
      : lt !== null &&
        (lt.elementType === vt ||
          (typeof vt == "object" &&
            vt !== null &&
            vt.$$typeof === Ha &&
            uh(vt) === lt.type))
      ? ((pt = $(lt, ct.props)),
        (pt.ref = sh(ut, lt, ct)),
        (pt.return = ut),
        pt)
      : ((pt = yh(ct.type, ct.key, ct.props, null, ut.mode, pt)),
        (pt.ref = sh(ut, lt, ct)),
        (pt.return = ut),
        pt);
  }
  function it(ut, lt, ct, pt) {
    return lt === null ||
      lt.tag !== 4 ||
      lt.stateNode.containerInfo !== ct.containerInfo ||
      lt.stateNode.implementation !== ct.implementation
      ? ((lt = zh(ct, ut.mode, pt)), (lt.return = ut), lt)
      : ((lt = $(lt, ct.children || [])), (lt.return = ut), lt);
  }
  function at(ut, lt, ct, pt, vt) {
    return lt === null || lt.tag !== 7
      ? ((lt = Ah(ct, ut.mode, pt, vt)), (lt.return = ut), lt)
      : ((lt = $(lt, ct)), (lt.return = ut), lt);
  }
  function st(ut, lt, ct) {
    if ((typeof lt == "string" && lt !== "") || typeof lt == "number")
      return (lt = xh("" + lt, ut.mode, ct)), (lt.return = ut), lt;
    if (typeof lt == "object" && lt !== null) {
      switch (lt.$$typeof) {
        case va:
          return (
            (ct = yh(lt.type, lt.key, lt.props, null, ut.mode, ct)),
            (ct.ref = sh(ut, null, lt)),
            (ct.return = ut),
            ct
          );
        case wa:
          return (lt = zh(lt, ut.mode, ct)), (lt.return = ut), lt;
        case Ha:
          var pt = lt._init;
          return st(ut, pt(lt._payload), ct);
      }
      if (eb(lt) || Ka(lt))
        return (lt = Ah(lt, ut.mode, ct, null)), (lt.return = ut), lt;
      th(ut, lt);
    }
    return null;
  }
  function ot(ut, lt, ct, pt) {
    var vt = lt !== null ? lt.key : null;
    if ((typeof ct == "string" && ct !== "") || typeof ct == "number")
      return vt !== null ? null : rt(ut, lt, "" + ct, pt);
    if (typeof ct == "object" && ct !== null) {
      switch (ct.$$typeof) {
        case va:
          return ct.key === vt ? nt(ut, lt, ct, pt) : null;
        case wa:
          return ct.key === vt ? it(ut, lt, ct, pt) : null;
        case Ha:
          return (vt = ct._init), ot(ut, lt, vt(ct._payload), pt);
      }
      if (eb(ct) || Ka(ct))
        return vt !== null ? null : at(ut, lt, ct, pt, null);
      th(ut, ct);
    }
    return null;
  }
  function dt(ut, lt, ct, pt, vt) {
    if ((typeof pt == "string" && pt !== "") || typeof pt == "number")
      return (ut = ut.get(ct) || null), rt(lt, ut, "" + pt, vt);
    if (typeof pt == "object" && pt !== null) {
      switch (pt.$$typeof) {
        case va:
          return (
            (ut = ut.get(pt.key === null ? ct : pt.key) || null),
            nt(lt, ut, pt, vt)
          );
        case wa:
          return (
            (ut = ut.get(pt.key === null ? ct : pt.key) || null),
            it(lt, ut, pt, vt)
          );
        case Ha:
          var xt = pt._init;
          return dt(ut, lt, ct, xt(pt._payload), vt);
      }
      if (eb(pt) || Ka(pt))
        return (ut = ut.get(ct) || null), at(lt, ut, pt, vt, null);
      th(lt, pt);
    }
    return null;
  }
  function ht(ut, lt, ct, pt) {
    for (
      var vt = null, xt = null, bt = lt, St = (lt = 0), Pt = null;
      bt !== null && St < ct.length;
      St++
    ) {
      bt.index > St ? ((Pt = bt), (bt = null)) : (Pt = bt.sibling);
      var Mt = ot(ut, bt, ct[St], pt);
      if (Mt === null) {
        bt === null && (bt = Pt);
        break;
      }
      a && bt && Mt.alternate === null && o(ut, bt),
        (lt = et(Mt, lt, St)),
        xt === null ? (vt = Mt) : (xt.sibling = Mt),
        (xt = Mt),
        (bt = Pt);
    }
    if (St === ct.length) return s(ut, bt), I && tg(ut, St), vt;
    if (bt === null) {
      for (; St < ct.length; St++)
        (bt = st(ut, ct[St], pt)),
          bt !== null &&
            ((lt = et(bt, lt, St)),
            xt === null ? (vt = bt) : (xt.sibling = bt),
            (xt = bt));
      return I && tg(ut, St), vt;
    }
    for (bt = _(ut, bt); St < ct.length; St++)
      (Pt = dt(bt, ut, St, ct[St], pt)),
        Pt !== null &&
          (a &&
            Pt.alternate !== null &&
            bt.delete(Pt.key === null ? St : Pt.key),
          (lt = et(Pt, lt, St)),
          xt === null ? (vt = Pt) : (xt.sibling = Pt),
          (xt = Pt));
    return (
      a &&
        bt.forEach(function (It) {
          return o(ut, It);
        }),
      I && tg(ut, St),
      vt
    );
  }
  function ft(ut, lt, ct, pt) {
    var vt = Ka(ct);
    if (typeof vt != "function") throw Error(p$1(150));
    if (((ct = vt.call(ct)), ct == null)) throw Error(p$1(151));
    for (
      var xt = (vt = null), bt = lt, St = (lt = 0), Pt = null, Mt = ct.next();
      bt !== null && !Mt.done;
      St++, Mt = ct.next()
    ) {
      bt.index > St ? ((Pt = bt), (bt = null)) : (Pt = bt.sibling);
      var It = ot(ut, bt, Mt.value, pt);
      if (It === null) {
        bt === null && (bt = Pt);
        break;
      }
      a && bt && It.alternate === null && o(ut, bt),
        (lt = et(It, lt, St)),
        xt === null ? (vt = It) : (xt.sibling = It),
        (xt = It),
        (bt = Pt);
    }
    if (Mt.done) return s(ut, bt), I && tg(ut, St), vt;
    if (bt === null) {
      for (; !Mt.done; St++, Mt = ct.next())
        (Mt = st(ut, Mt.value, pt)),
          Mt !== null &&
            ((lt = et(Mt, lt, St)),
            xt === null ? (vt = Mt) : (xt.sibling = Mt),
            (xt = Mt));
      return I && tg(ut, St), vt;
    }
    for (bt = _(ut, bt); !Mt.done; St++, Mt = ct.next())
      (Mt = dt(bt, ut, St, Mt.value, pt)),
        Mt !== null &&
          (a &&
            Mt.alternate !== null &&
            bt.delete(Mt.key === null ? St : Mt.key),
          (lt = et(Mt, lt, St)),
          xt === null ? (vt = Mt) : (xt.sibling = Mt),
          (xt = Mt));
    return (
      a &&
        bt.forEach(function (Rt) {
          return o(ut, Rt);
        }),
      I && tg(ut, St),
      vt
    );
  }
  function mt(ut, lt, ct, pt) {
    if (
      (typeof ct == "object" &&
        ct !== null &&
        ct.type === ya &&
        ct.key === null &&
        (ct = ct.props.children),
      typeof ct == "object" && ct !== null)
    ) {
      switch (ct.$$typeof) {
        case va:
          e: {
            for (var vt = ct.key, xt = lt; xt !== null; ) {
              if (xt.key === vt) {
                if (((vt = ct.type), vt === ya)) {
                  if (xt.tag === 7) {
                    s(ut, xt.sibling),
                      (lt = $(xt, ct.props.children)),
                      (lt.return = ut),
                      (ut = lt);
                    break e;
                  }
                } else if (
                  xt.elementType === vt ||
                  (typeof vt == "object" &&
                    vt !== null &&
                    vt.$$typeof === Ha &&
                    uh(vt) === xt.type)
                ) {
                  s(ut, xt.sibling),
                    (lt = $(xt, ct.props)),
                    (lt.ref = sh(ut, xt, ct)),
                    (lt.return = ut),
                    (ut = lt);
                  break e;
                }
                s(ut, xt);
                break;
              } else o(ut, xt);
              xt = xt.sibling;
            }
            ct.type === ya
              ? ((lt = Ah(ct.props.children, ut.mode, pt, ct.key)),
                (lt.return = ut),
                (ut = lt))
              : ((pt = yh(ct.type, ct.key, ct.props, null, ut.mode, pt)),
                (pt.ref = sh(ut, lt, ct)),
                (pt.return = ut),
                (ut = pt));
          }
          return tt(ut);
        case wa:
          e: {
            for (xt = ct.key; lt !== null; ) {
              if (lt.key === xt)
                if (
                  lt.tag === 4 &&
                  lt.stateNode.containerInfo === ct.containerInfo &&
                  lt.stateNode.implementation === ct.implementation
                ) {
                  s(ut, lt.sibling),
                    (lt = $(lt, ct.children || [])),
                    (lt.return = ut),
                    (ut = lt);
                  break e;
                } else {
                  s(ut, lt);
                  break;
                }
              else o(ut, lt);
              lt = lt.sibling;
            }
            (lt = zh(ct, ut.mode, pt)), (lt.return = ut), (ut = lt);
          }
          return tt(ut);
        case Ha:
          return (xt = ct._init), mt(ut, lt, xt(ct._payload), pt);
      }
      if (eb(ct)) return ht(ut, lt, ct, pt);
      if (Ka(ct)) return ft(ut, lt, ct, pt);
      th(ut, ct);
    }
    return (typeof ct == "string" && ct !== "") || typeof ct == "number"
      ? ((ct = "" + ct),
        lt !== null && lt.tag === 6
          ? (s(ut, lt.sibling), (lt = $(lt, ct)), (lt.return = ut), (ut = lt))
          : (s(ut, lt),
            (lt = xh(ct, ut.mode, pt)),
            (lt.return = ut),
            (ut = lt)),
        tt(ut))
      : s(ut, lt);
  }
  return mt;
}
var Bh = vh$1(!0),
  Ch = vh$1(!1),
  Dh = {},
  Eh = Uf(Dh),
  Fh = Uf(Dh),
  Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh) throw Error(p$1(174));
  return a;
}
function Ih(a, o) {
  switch ((G(Gh, o), G(Fh, a), G(Eh, Dh), (a = o.nodeType), a)) {
    case 9:
    case 11:
      o = (o = o.documentElement) ? o.namespaceURI : lb(null, "");
      break;
    default:
      (a = a === 8 ? o.parentNode : o),
        (o = a.namespaceURI || null),
        (a = a.tagName),
        (o = lb(o, a));
  }
  E(Eh), G(Eh, o);
}
function Jh() {
  E(Eh), E(Fh), E(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var o = Hh(Eh.current),
    s = lb(o, a.type);
  o !== s && (G(Fh, a), G(Eh, s));
}
function Lh(a) {
  Fh.current === a && (E(Eh), E(Fh));
}
var M = Uf(0);
function Mh(a) {
  for (var o = a; o !== null; ) {
    if (o.tag === 13) {
      var s = o.memoizedState;
      if (
        s !== null &&
        ((s = s.dehydrated), s === null || s.data === "$?" || s.data === "$!")
      )
        return o;
    } else if (o.tag === 19 && o.memoizedProps.revealOrder !== void 0) {
      if (o.flags & 128) return o;
    } else if (o.child !== null) {
      (o.child.return = o), (o = o.child);
      continue;
    }
    if (o === a) break;
    for (; o.sibling === null; ) {
      if (o.return === null || o.return === a) return null;
      o = o.return;
    }
    (o.sibling.return = o.return), (o = o.sibling);
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++)
    Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher,
  Qh = ua.ReactCurrentBatchConfig,
  Rh = 0,
  N = null,
  O = null,
  P = null,
  Sh = !1,
  Th = !1,
  Uh = 0,
  Vh = 0;
function Q() {
  throw Error(p$1(321));
}
function Wh(a, o) {
  if (o === null) return !1;
  for (var s = 0; s < o.length && s < a.length; s++)
    if (!He(a[s], o[s])) return !1;
  return !0;
}
function Xh(a, o, s, _, $, et) {
  if (
    ((Rh = et),
    (N = o),
    (o.memoizedState = null),
    (o.updateQueue = null),
    (o.lanes = 0),
    (Ph.current = a === null || a.memoizedState === null ? Yh : Zh),
    (a = s(_, $)),
    Th)
  ) {
    et = 0;
    do {
      if (((Th = !1), (Uh = 0), 25 <= et)) throw Error(p$1(301));
      (et += 1),
        (P = O = null),
        (o.updateQueue = null),
        (Ph.current = $h),
        (a = s(_, $));
    } while (Th);
  }
  if (
    ((Ph.current = ai),
    (o = O !== null && O.next !== null),
    (Rh = 0),
    (P = O = N = null),
    (Sh = !1),
    o)
  )
    throw Error(p$1(300));
  return a;
}
function bi() {
  var a = Uh !== 0;
  return (Uh = 0), a;
}
function ci() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return P === null ? (N.memoizedState = P = a) : (P = P.next = a), P;
}
function di() {
  if (O === null) {
    var a = N.alternate;
    a = a !== null ? a.memoizedState : null;
  } else a = O.next;
  var o = P === null ? N.memoizedState : P.next;
  if (o !== null) (P = o), (O = a);
  else {
    if (a === null) throw Error(p$1(310));
    (O = a),
      (a = {
        memoizedState: O.memoizedState,
        baseState: O.baseState,
        baseQueue: O.baseQueue,
        queue: O.queue,
        next: null,
      }),
      P === null ? (N.memoizedState = P = a) : (P = P.next = a);
  }
  return P;
}
function ei(a, o) {
  return typeof o == "function" ? o(a) : o;
}
function fi(a) {
  var o = di(),
    s = o.queue;
  if (s === null) throw Error(p$1(311));
  s.lastRenderedReducer = a;
  var _ = O,
    $ = _.baseQueue,
    et = s.pending;
  if (et !== null) {
    if ($ !== null) {
      var tt = $.next;
      ($.next = et.next), (et.next = tt);
    }
    (_.baseQueue = $ = et), (s.pending = null);
  }
  if ($ !== null) {
    (et = $.next), (_ = _.baseState);
    var rt = (tt = null),
      nt = null,
      it = et;
    do {
      var at = it.lane;
      if ((Rh & at) === at)
        nt !== null &&
          (nt = nt.next =
            {
              lane: 0,
              action: it.action,
              hasEagerState: it.hasEagerState,
              eagerState: it.eagerState,
              next: null,
            }),
          (_ = it.hasEagerState ? it.eagerState : a(_, it.action));
      else {
        var st = {
          lane: at,
          action: it.action,
          hasEagerState: it.hasEagerState,
          eagerState: it.eagerState,
          next: null,
        };
        nt === null ? ((rt = nt = st), (tt = _)) : (nt = nt.next = st),
          (N.lanes |= at),
          (hh |= at);
      }
      it = it.next;
    } while (it !== null && it !== et);
    nt === null ? (tt = _) : (nt.next = rt),
      He(_, o.memoizedState) || (Ug = !0),
      (o.memoizedState = _),
      (o.baseState = tt),
      (o.baseQueue = nt),
      (s.lastRenderedState = _);
  }
  if (((a = s.interleaved), a !== null)) {
    $ = a;
    do (et = $.lane), (N.lanes |= et), (hh |= et), ($ = $.next);
    while ($ !== a);
  } else $ === null && (s.lanes = 0);
  return [o.memoizedState, s.dispatch];
}
function gi(a) {
  var o = di(),
    s = o.queue;
  if (s === null) throw Error(p$1(311));
  s.lastRenderedReducer = a;
  var _ = s.dispatch,
    $ = s.pending,
    et = o.memoizedState;
  if ($ !== null) {
    s.pending = null;
    var tt = ($ = $.next);
    do (et = a(et, tt.action)), (tt = tt.next);
    while (tt !== $);
    He(et, o.memoizedState) || (Ug = !0),
      (o.memoizedState = et),
      o.baseQueue === null && (o.baseState = et),
      (s.lastRenderedState = et);
  }
  return [et, _];
}
function hi() {}
function ii(a, o) {
  var s = N,
    _ = di(),
    $ = o(),
    et = !He(_.memoizedState, $);
  if (
    (et && ((_.memoizedState = $), (Ug = !0)),
    (_ = _.queue),
    ji(ki.bind(null, s, _, a), [a]),
    _.getSnapshot !== o || et || (P !== null && P.memoizedState.tag & 1))
  ) {
    if (
      ((s.flags |= 2048),
      li(9, mi.bind(null, s, _, $, o), void 0, null),
      R === null)
    )
      throw Error(p$1(349));
    Rh & 30 || ni(s, o, $);
  }
  return $;
}
function ni(a, o, s) {
  (a.flags |= 16384),
    (a = { getSnapshot: o, value: s }),
    (o = N.updateQueue),
    o === null
      ? ((o = { lastEffect: null, stores: null }),
        (N.updateQueue = o),
        (o.stores = [a]))
      : ((s = o.stores), s === null ? (o.stores = [a]) : s.push(a));
}
function mi(a, o, s, _) {
  (o.value = s), (o.getSnapshot = _), oi(o) && pi(a);
}
function ki(a, o, s) {
  return s(function () {
    oi(o) && pi(a);
  });
}
function oi(a) {
  var o = a.getSnapshot;
  a = a.value;
  try {
    var s = o();
    return !He(a, s);
  } catch {
    return !0;
  }
}
function pi(a) {
  var o = Zg(a, 1);
  o !== null && mh(o, a, 1, -1);
}
function qi(a) {
  var o = ci();
  return (
    typeof a == "function" && (a = a()),
    (o.memoizedState = o.baseState = a),
    (a = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: ei,
      lastRenderedState: a,
    }),
    (o.queue = a),
    (a = a.dispatch = ri.bind(null, N, a)),
    [o.memoizedState, a]
  );
}
function li(a, o, s, _) {
  return (
    (a = { tag: a, create: o, destroy: s, deps: _, next: null }),
    (o = N.updateQueue),
    o === null
      ? ((o = { lastEffect: null, stores: null }),
        (N.updateQueue = o),
        (o.lastEffect = a.next = a))
      : ((s = o.lastEffect),
        s === null
          ? (o.lastEffect = a.next = a)
          : ((_ = s.next), (s.next = a), (a.next = _), (o.lastEffect = a))),
    a
  );
}
function si() {
  return di().memoizedState;
}
function ti(a, o, s, _) {
  var $ = ci();
  (N.flags |= a),
    ($.memoizedState = li(1 | o, s, void 0, _ === void 0 ? null : _));
}
function ui(a, o, s, _) {
  var $ = di();
  _ = _ === void 0 ? null : _;
  var et = void 0;
  if (O !== null) {
    var tt = O.memoizedState;
    if (((et = tt.destroy), _ !== null && Wh(_, tt.deps))) {
      $.memoizedState = li(o, s, et, _);
      return;
    }
  }
  (N.flags |= a), ($.memoizedState = li(1 | o, s, et, _));
}
function vi(a, o) {
  return ti(8390656, 8, a, o);
}
function ji(a, o) {
  return ui(2048, 8, a, o);
}
function wi(a, o) {
  return ui(4, 2, a, o);
}
function xi(a, o) {
  return ui(4, 4, a, o);
}
function yi(a, o) {
  if (typeof o == "function")
    return (
      (a = a()),
      o(a),
      function () {
        o(null);
      }
    );
  if (o != null)
    return (
      (a = a()),
      (o.current = a),
      function () {
        o.current = null;
      }
    );
}
function zi(a, o, s) {
  return (
    (s = s != null ? s.concat([a]) : null), ui(4, 4, yi.bind(null, o, a), s)
  );
}
function Ai() {}
function Bi(a, o) {
  var s = di();
  o = o === void 0 ? null : o;
  var _ = s.memoizedState;
  return _ !== null && o !== null && Wh(o, _[1])
    ? _[0]
    : ((s.memoizedState = [a, o]), a);
}
function Ci(a, o) {
  var s = di();
  o = o === void 0 ? null : o;
  var _ = s.memoizedState;
  return _ !== null && o !== null && Wh(o, _[1])
    ? _[0]
    : ((a = a()), (s.memoizedState = [a, o]), a);
}
function Di(a, o, s) {
  return Rh & 21
    ? (He(s, o) || ((s = yc()), (N.lanes |= s), (hh |= s), (a.baseState = !0)),
      o)
    : (a.baseState && ((a.baseState = !1), (Ug = !0)), (a.memoizedState = s));
}
function Ei(a, o) {
  var s = C;
  (C = s !== 0 && 4 > s ? s : 4), a(!0);
  var _ = Qh.transition;
  Qh.transition = {};
  try {
    a(!1), o();
  } finally {
    (C = s), (Qh.transition = _);
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, o, s) {
  var _ = lh(a);
  if (
    ((s = {
      lane: _,
      action: s,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    Hi(a))
  )
    Ii(o, s);
  else if (((s = Yg(a, o, s, _)), s !== null)) {
    var $ = L();
    mh(s, a, _, $), Ji(s, o, _);
  }
}
function ri(a, o, s) {
  var _ = lh(a),
    $ = { lane: _, action: s, hasEagerState: !1, eagerState: null, next: null };
  if (Hi(a)) Ii(o, $);
  else {
    var et = a.alternate;
    if (
      a.lanes === 0 &&
      (et === null || et.lanes === 0) &&
      ((et = o.lastRenderedReducer), et !== null)
    )
      try {
        var tt = o.lastRenderedState,
          rt = et(tt, s);
        if ((($.hasEagerState = !0), ($.eagerState = rt), He(rt, tt))) {
          var nt = o.interleaved;
          nt === null
            ? (($.next = $), Xg(o))
            : (($.next = nt.next), (nt.next = $)),
            (o.interleaved = $);
          return;
        }
      } catch {
      } finally {
      }
    (s = Yg(a, o, $, _)),
      s !== null && (($ = L()), mh(s, a, _, $), Ji(s, o, _));
  }
}
function Hi(a) {
  var o = a.alternate;
  return a === N || (o !== null && o === N);
}
function Ii(a, o) {
  Th = Sh = !0;
  var s = a.pending;
  s === null ? (o.next = o) : ((o.next = s.next), (s.next = o)),
    (a.pending = o);
}
function Ji(a, o, s) {
  if (s & 4194240) {
    var _ = o.lanes;
    (_ &= a.pendingLanes), (s |= _), (o.lanes = s), Cc(a, s);
  }
}
var ai = {
    readContext: Vg,
    useCallback: Q,
    useContext: Q,
    useEffect: Q,
    useImperativeHandle: Q,
    useInsertionEffect: Q,
    useLayoutEffect: Q,
    useMemo: Q,
    useReducer: Q,
    useRef: Q,
    useState: Q,
    useDebugValue: Q,
    useDeferredValue: Q,
    useTransition: Q,
    useMutableSource: Q,
    useSyncExternalStore: Q,
    useId: Q,
    unstable_isNewReconciler: !1,
  },
  Yh = {
    readContext: Vg,
    useCallback: function (a, o) {
      return (ci().memoizedState = [a, o === void 0 ? null : o]), a;
    },
    useContext: Vg,
    useEffect: vi,
    useImperativeHandle: function (a, o, s) {
      return (
        (s = s != null ? s.concat([a]) : null),
        ti(4194308, 4, yi.bind(null, o, a), s)
      );
    },
    useLayoutEffect: function (a, o) {
      return ti(4194308, 4, a, o);
    },
    useInsertionEffect: function (a, o) {
      return ti(4, 2, a, o);
    },
    useMemo: function (a, o) {
      var s = ci();
      return (
        (o = o === void 0 ? null : o), (a = a()), (s.memoizedState = [a, o]), a
      );
    },
    useReducer: function (a, o, s) {
      var _ = ci();
      return (
        (o = s !== void 0 ? s(o) : o),
        (_.memoizedState = _.baseState = o),
        (a = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: a,
          lastRenderedState: o,
        }),
        (_.queue = a),
        (a = a.dispatch = Gi.bind(null, N, a)),
        [_.memoizedState, a]
      );
    },
    useRef: function (a) {
      var o = ci();
      return (a = { current: a }), (o.memoizedState = a);
    },
    useState: qi,
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      return (ci().memoizedState = a);
    },
    useTransition: function () {
      var a = qi(!1),
        o = a[0];
      return (a = Ei.bind(null, a[1])), (ci().memoizedState = a), [o, a];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (a, o, s) {
      var _ = N,
        $ = ci();
      if (I) {
        if (s === void 0) throw Error(p$1(407));
        s = s();
      } else {
        if (((s = o()), R === null)) throw Error(p$1(349));
        Rh & 30 || ni(_, o, s);
      }
      $.memoizedState = s;
      var et = { value: s, getSnapshot: o };
      return (
        ($.queue = et),
        vi(ki.bind(null, _, et, a), [a]),
        (_.flags |= 2048),
        li(9, mi.bind(null, _, et, s, o), void 0, null),
        s
      );
    },
    useId: function () {
      var a = ci(),
        o = R.identifierPrefix;
      if (I) {
        var s = sg,
          _ = rg;
        (s = (_ & ~(1 << (32 - oc(_) - 1))).toString(32) + s),
          (o = ":" + o + "R" + s),
          (s = Uh++),
          0 < s && (o += "H" + s.toString(32)),
          (o += ":");
      } else (s = Vh++), (o = ":" + o + "r" + s.toString(32) + ":");
      return (a.memoizedState = o);
    },
    unstable_isNewReconciler: !1,
  },
  Zh = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: fi,
    useRef: si,
    useState: function () {
      return fi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      var o = di();
      return Di(o, O.memoizedState, a);
    },
    useTransition: function () {
      var a = fi(ei)[0],
        o = di().memoizedState;
      return [a, o];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1,
  },
  $h = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: gi,
    useRef: si,
    useState: function () {
      return gi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      var o = di();
      return O === null ? (o.memoizedState = a) : Di(o, O.memoizedState, a);
    },
    useTransition: function () {
      var a = gi(ei)[0],
        o = di().memoizedState;
      return [a, o];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1,
  };
function Ki(a, o) {
  try {
    var s = "",
      _ = o;
    do (s += Pa(_)), (_ = _.return);
    while (_);
    var $ = s;
  } catch (et) {
    $ =
      `
Error generating stack: ` +
      et.message +
      `
` +
      et.stack;
  }
  return { value: a, source: o, stack: $, digest: null };
}
function Li(a, o, s) {
  return { value: a, source: null, stack: s ?? null, digest: o ?? null };
}
function Mi(a, o) {
  try {
    console.error(o.value);
  } catch (s) {
    setTimeout(function () {
      throw s;
    });
  }
}
var Ni = typeof WeakMap == "function" ? WeakMap : Map;
function Oi(a, o, s) {
  (s = ch(-1, s)), (s.tag = 3), (s.payload = { element: null });
  var _ = o.value;
  return (
    (s.callback = function () {
      Pi || ((Pi = !0), (Qi = _)), Mi(a, o);
    }),
    s
  );
}
function Ri(a, o, s) {
  (s = ch(-1, s)), (s.tag = 3);
  var _ = a.type.getDerivedStateFromError;
  if (typeof _ == "function") {
    var $ = o.value;
    (s.payload = function () {
      return _($);
    }),
      (s.callback = function () {
        Mi(a, o);
      });
  }
  var et = a.stateNode;
  return (
    et !== null &&
      typeof et.componentDidCatch == "function" &&
      (s.callback = function () {
        Mi(a, o),
          typeof _ != "function" &&
            (Si === null ? (Si = new Set([this])) : Si.add(this));
        var tt = o.stack;
        this.componentDidCatch(o.value, {
          componentStack: tt !== null ? tt : "",
        });
      }),
    s
  );
}
function Ti(a, o, s) {
  var _ = a.pingCache;
  if (_ === null) {
    _ = a.pingCache = new Ni();
    var $ = new Set();
    _.set(o, $);
  } else ($ = _.get(o)), $ === void 0 && (($ = new Set()), _.set(o, $));
  $.has(s) || ($.add(s), (a = Ui.bind(null, a, o, s)), o.then(a, a));
}
function Vi(a) {
  do {
    var o;
    if (
      ((o = a.tag === 13) &&
        ((o = a.memoizedState), (o = o !== null ? o.dehydrated !== null : !0)),
      o)
    )
      return a;
    a = a.return;
  } while (a !== null);
  return null;
}
function Wi(a, o, s, _, $) {
  return a.mode & 1
    ? ((a.flags |= 65536), (a.lanes = $), a)
    : (a === o
        ? (a.flags |= 65536)
        : ((a.flags |= 128),
          (s.flags |= 131072),
          (s.flags &= -52805),
          s.tag === 1 &&
            (s.alternate === null
              ? (s.tag = 17)
              : ((o = ch(-1, 1)), (o.tag = 2), dh(s, o, 1))),
          (s.lanes |= 1)),
      a);
}
var Xi = ua.ReactCurrentOwner,
  Ug = !1;
function Yi(a, o, s, _) {
  o.child = a === null ? Ch(o, null, s, _) : Bh(o, a.child, s, _);
}
function Zi(a, o, s, _, $) {
  s = s.render;
  var et = o.ref;
  return (
    Tg(o, $),
    (_ = Xh(a, o, s, _, et, $)),
    (s = bi()),
    a !== null && !Ug
      ? ((o.updateQueue = a.updateQueue),
        (o.flags &= -2053),
        (a.lanes &= ~$),
        $i(a, o, $))
      : (I && s && vg(o), (o.flags |= 1), Yi(a, o, _, $), o.child)
  );
}
function aj(a, o, s, _, $) {
  if (a === null) {
    var et = s.type;
    return typeof et == "function" &&
      !bj(et) &&
      et.defaultProps === void 0 &&
      s.compare === null &&
      s.defaultProps === void 0
      ? ((o.tag = 15), (o.type = et), cj(a, o, et, _, $))
      : ((a = yh(s.type, null, _, o, o.mode, $)),
        (a.ref = o.ref),
        (a.return = o),
        (o.child = a));
  }
  if (((et = a.child), !(a.lanes & $))) {
    var tt = et.memoizedProps;
    if (
      ((s = s.compare), (s = s !== null ? s : Ie), s(tt, _) && a.ref === o.ref)
    )
      return $i(a, o, $);
  }
  return (
    (o.flags |= 1),
    (a = wh(et, _)),
    (a.ref = o.ref),
    (a.return = o),
    (o.child = a)
  );
}
function cj(a, o, s, _, $) {
  if (a !== null) {
    var et = a.memoizedProps;
    if (Ie(et, _) && a.ref === o.ref)
      if (((Ug = !1), (o.pendingProps = _ = et), (a.lanes & $) !== 0))
        a.flags & 131072 && (Ug = !0);
      else return (o.lanes = a.lanes), $i(a, o, $);
  }
  return dj(a, o, s, _, $);
}
function ej(a, o, s) {
  var _ = o.pendingProps,
    $ = _.children,
    et = a !== null ? a.memoizedState : null;
  if (_.mode === "hidden")
    if (!(o.mode & 1))
      (o.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        G(fj, gj),
        (gj |= s);
    else {
      if (!(s & 1073741824))
        return (
          (a = et !== null ? et.baseLanes | s : s),
          (o.lanes = o.childLanes = 1073741824),
          (o.memoizedState = {
            baseLanes: a,
            cachePool: null,
            transitions: null,
          }),
          (o.updateQueue = null),
          G(fj, gj),
          (gj |= a),
          null
        );
      (o.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (_ = et !== null ? et.baseLanes : s),
        G(fj, gj),
        (gj |= _);
    }
  else
    et !== null ? ((_ = et.baseLanes | s), (o.memoizedState = null)) : (_ = s),
      G(fj, gj),
      (gj |= _);
  return Yi(a, o, $, s), o.child;
}
function hj(a, o) {
  var s = o.ref;
  ((a === null && s !== null) || (a !== null && a.ref !== s)) &&
    ((o.flags |= 512), (o.flags |= 2097152));
}
function dj(a, o, s, _, $) {
  var et = Zf(s) ? Xf : H.current;
  return (
    (et = Yf(o, et)),
    Tg(o, $),
    (s = Xh(a, o, s, _, et, $)),
    (_ = bi()),
    a !== null && !Ug
      ? ((o.updateQueue = a.updateQueue),
        (o.flags &= -2053),
        (a.lanes &= ~$),
        $i(a, o, $))
      : (I && _ && vg(o), (o.flags |= 1), Yi(a, o, s, $), o.child)
  );
}
function ij(a, o, s, _, $) {
  if (Zf(s)) {
    var et = !0;
    cg(o);
  } else et = !1;
  if ((Tg(o, $), o.stateNode === null))
    jj(a, o), ph(o, s, _), rh(o, s, _, $), (_ = !0);
  else if (a === null) {
    var tt = o.stateNode,
      rt = o.memoizedProps;
    tt.props = rt;
    var nt = tt.context,
      it = s.contextType;
    typeof it == "object" && it !== null
      ? (it = Vg(it))
      : ((it = Zf(s) ? Xf : H.current), (it = Yf(o, it)));
    var at = s.getDerivedStateFromProps,
      st =
        typeof at == "function" ||
        typeof tt.getSnapshotBeforeUpdate == "function";
    st ||
      (typeof tt.UNSAFE_componentWillReceiveProps != "function" &&
        typeof tt.componentWillReceiveProps != "function") ||
      ((rt !== _ || nt !== it) && qh(o, tt, _, it)),
      ($g = !1);
    var ot = o.memoizedState;
    (tt.state = ot),
      gh(o, _, tt, $),
      (nt = o.memoizedState),
      rt !== _ || ot !== nt || Wf.current || $g
        ? (typeof at == "function" && (kh(o, s, at, _), (nt = o.memoizedState)),
          (rt = $g || oh(o, s, rt, _, ot, nt, it))
            ? (st ||
                (typeof tt.UNSAFE_componentWillMount != "function" &&
                  typeof tt.componentWillMount != "function") ||
                (typeof tt.componentWillMount == "function" &&
                  tt.componentWillMount(),
                typeof tt.UNSAFE_componentWillMount == "function" &&
                  tt.UNSAFE_componentWillMount()),
              typeof tt.componentDidMount == "function" && (o.flags |= 4194308))
            : (typeof tt.componentDidMount == "function" &&
                (o.flags |= 4194308),
              (o.memoizedProps = _),
              (o.memoizedState = nt)),
          (tt.props = _),
          (tt.state = nt),
          (tt.context = it),
          (_ = rt))
        : (typeof tt.componentDidMount == "function" && (o.flags |= 4194308),
          (_ = !1));
  } else {
    (tt = o.stateNode),
      bh(a, o),
      (rt = o.memoizedProps),
      (it = o.type === o.elementType ? rt : Lg(o.type, rt)),
      (tt.props = it),
      (st = o.pendingProps),
      (ot = tt.context),
      (nt = s.contextType),
      typeof nt == "object" && nt !== null
        ? (nt = Vg(nt))
        : ((nt = Zf(s) ? Xf : H.current), (nt = Yf(o, nt)));
    var dt = s.getDerivedStateFromProps;
    (at =
      typeof dt == "function" ||
      typeof tt.getSnapshotBeforeUpdate == "function") ||
      (typeof tt.UNSAFE_componentWillReceiveProps != "function" &&
        typeof tt.componentWillReceiveProps != "function") ||
      ((rt !== st || ot !== nt) && qh(o, tt, _, nt)),
      ($g = !1),
      (ot = o.memoizedState),
      (tt.state = ot),
      gh(o, _, tt, $);
    var ht = o.memoizedState;
    rt !== st || ot !== ht || Wf.current || $g
      ? (typeof dt == "function" && (kh(o, s, dt, _), (ht = o.memoizedState)),
        (it = $g || oh(o, s, it, _, ot, ht, nt) || !1)
          ? (at ||
              (typeof tt.UNSAFE_componentWillUpdate != "function" &&
                typeof tt.componentWillUpdate != "function") ||
              (typeof tt.componentWillUpdate == "function" &&
                tt.componentWillUpdate(_, ht, nt),
              typeof tt.UNSAFE_componentWillUpdate == "function" &&
                tt.UNSAFE_componentWillUpdate(_, ht, nt)),
            typeof tt.componentDidUpdate == "function" && (o.flags |= 4),
            typeof tt.getSnapshotBeforeUpdate == "function" &&
              (o.flags |= 1024))
          : (typeof tt.componentDidUpdate != "function" ||
              (rt === a.memoizedProps && ot === a.memoizedState) ||
              (o.flags |= 4),
            typeof tt.getSnapshotBeforeUpdate != "function" ||
              (rt === a.memoizedProps && ot === a.memoizedState) ||
              (o.flags |= 1024),
            (o.memoizedProps = _),
            (o.memoizedState = ht)),
        (tt.props = _),
        (tt.state = ht),
        (tt.context = nt),
        (_ = it))
      : (typeof tt.componentDidUpdate != "function" ||
          (rt === a.memoizedProps && ot === a.memoizedState) ||
          (o.flags |= 4),
        typeof tt.getSnapshotBeforeUpdate != "function" ||
          (rt === a.memoizedProps && ot === a.memoizedState) ||
          (o.flags |= 1024),
        (_ = !1));
  }
  return kj(a, o, s, _, et, $);
}
function kj(a, o, s, _, $, et) {
  hj(a, o);
  var tt = (o.flags & 128) !== 0;
  if (!_ && !tt) return $ && dg(o, s, !1), $i(a, o, et);
  (_ = o.stateNode), (Xi.current = o);
  var rt =
    tt && typeof s.getDerivedStateFromError != "function" ? null : _.render();
  return (
    (o.flags |= 1),
    a !== null && tt
      ? ((o.child = Bh(o, a.child, null, et)), (o.child = Bh(o, null, rt, et)))
      : Yi(a, o, rt, et),
    (o.memoizedState = _.state),
    $ && dg(o, s, !0),
    o.child
  );
}
function lj(a) {
  var o = a.stateNode;
  o.pendingContext
    ? ag(a, o.pendingContext, o.pendingContext !== o.context)
    : o.context && ag(a, o.context, !1),
    Ih(a, o.containerInfo);
}
function mj(a, o, s, _, $) {
  return Ig(), Jg($), (o.flags |= 256), Yi(a, o, s, _), o.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function pj(a, o, s) {
  var _ = o.pendingProps,
    $ = M.current,
    et = !1,
    tt = (o.flags & 128) !== 0,
    rt;
  if (
    ((rt = tt) ||
      (rt = a !== null && a.memoizedState === null ? !1 : ($ & 2) !== 0),
    rt
      ? ((et = !0), (o.flags &= -129))
      : (a === null || a.memoizedState !== null) && ($ |= 1),
    G(M, $ & 1),
    a === null)
  )
    return (
      Eg(o),
      (a = o.memoizedState),
      a !== null && ((a = a.dehydrated), a !== null)
        ? (o.mode & 1
            ? a.data === "$!"
              ? (o.lanes = 8)
              : (o.lanes = 1073741824)
            : (o.lanes = 1),
          null)
        : ((tt = _.children),
          (a = _.fallback),
          et
            ? ((_ = o.mode),
              (et = o.child),
              (tt = { mode: "hidden", children: tt }),
              !(_ & 1) && et !== null
                ? ((et.childLanes = 0), (et.pendingProps = tt))
                : (et = qj(tt, _, 0, null)),
              (a = Ah(a, _, s, null)),
              (et.return = o),
              (a.return = o),
              (et.sibling = a),
              (o.child = et),
              (o.child.memoizedState = oj(s)),
              (o.memoizedState = nj),
              a)
            : rj(o, tt))
    );
  if ((($ = a.memoizedState), $ !== null && ((rt = $.dehydrated), rt !== null)))
    return sj(a, o, tt, _, rt, $, s);
  if (et) {
    (et = _.fallback), (tt = o.mode), ($ = a.child), (rt = $.sibling);
    var nt = { mode: "hidden", children: _.children };
    return (
      !(tt & 1) && o.child !== $
        ? ((_ = o.child),
          (_.childLanes = 0),
          (_.pendingProps = nt),
          (o.deletions = null))
        : ((_ = wh($, nt)), (_.subtreeFlags = $.subtreeFlags & 14680064)),
      rt !== null
        ? (et = wh(rt, et))
        : ((et = Ah(et, tt, s, null)), (et.flags |= 2)),
      (et.return = o),
      (_.return = o),
      (_.sibling = et),
      (o.child = _),
      (_ = et),
      (et = o.child),
      (tt = a.child.memoizedState),
      (tt =
        tt === null
          ? oj(s)
          : {
              baseLanes: tt.baseLanes | s,
              cachePool: null,
              transitions: tt.transitions,
            }),
      (et.memoizedState = tt),
      (et.childLanes = a.childLanes & ~s),
      (o.memoizedState = nj),
      _
    );
  }
  return (
    (et = a.child),
    (a = et.sibling),
    (_ = wh(et, { mode: "visible", children: _.children })),
    !(o.mode & 1) && (_.lanes = s),
    (_.return = o),
    (_.sibling = null),
    a !== null &&
      ((s = o.deletions),
      s === null ? ((o.deletions = [a]), (o.flags |= 16)) : s.push(a)),
    (o.child = _),
    (o.memoizedState = null),
    _
  );
}
function rj(a, o) {
  return (
    (o = qj({ mode: "visible", children: o }, a.mode, 0, null)),
    (o.return = a),
    (a.child = o)
  );
}
function tj(a, o, s, _) {
  return (
    _ !== null && Jg(_),
    Bh(o, a.child, null, s),
    (a = rj(o, o.pendingProps.children)),
    (a.flags |= 2),
    (o.memoizedState = null),
    a
  );
}
function sj(a, o, s, _, $, et, tt) {
  if (s)
    return o.flags & 256
      ? ((o.flags &= -257), (_ = Li(Error(p$1(422)))), tj(a, o, tt, _))
      : o.memoizedState !== null
      ? ((o.child = a.child), (o.flags |= 128), null)
      : ((et = _.fallback),
        ($ = o.mode),
        (_ = qj({ mode: "visible", children: _.children }, $, 0, null)),
        (et = Ah(et, $, tt, null)),
        (et.flags |= 2),
        (_.return = o),
        (et.return = o),
        (_.sibling = et),
        (o.child = _),
        o.mode & 1 && Bh(o, a.child, null, tt),
        (o.child.memoizedState = oj(tt)),
        (o.memoizedState = nj),
        et);
  if (!(o.mode & 1)) return tj(a, o, tt, null);
  if ($.data === "$!") {
    if (((_ = $.nextSibling && $.nextSibling.dataset), _)) var rt = _.dgst;
    return (
      (_ = rt), (et = Error(p$1(419))), (_ = Li(et, _, void 0)), tj(a, o, tt, _)
    );
  }
  if (((rt = (tt & a.childLanes) !== 0), Ug || rt)) {
    if (((_ = R), _ !== null)) {
      switch (tt & -tt) {
        case 4:
          $ = 2;
          break;
        case 16:
          $ = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          $ = 32;
          break;
        case 536870912:
          $ = 268435456;
          break;
        default:
          $ = 0;
      }
      ($ = $ & (_.suspendedLanes | tt) ? 0 : $),
        $ !== 0 &&
          $ !== et.retryLane &&
          ((et.retryLane = $), Zg(a, $), mh(_, a, $, -1));
    }
    return uj(), (_ = Li(Error(p$1(421)))), tj(a, o, tt, _);
  }
  return $.data === "$?"
    ? ((o.flags |= 128),
      (o.child = a.child),
      (o = vj.bind(null, a)),
      ($._reactRetry = o),
      null)
    : ((a = et.treeContext),
      (yg = Lf($.nextSibling)),
      (xg = o),
      (I = !0),
      (zg = null),
      a !== null &&
        ((og[pg++] = rg),
        (og[pg++] = sg),
        (og[pg++] = qg),
        (rg = a.id),
        (sg = a.overflow),
        (qg = o)),
      (o = rj(o, _.children)),
      (o.flags |= 4096),
      o);
}
function wj(a, o, s) {
  a.lanes |= o;
  var _ = a.alternate;
  _ !== null && (_.lanes |= o), Sg(a.return, o, s);
}
function xj(a, o, s, _, $) {
  var et = a.memoizedState;
  et === null
    ? (a.memoizedState = {
        isBackwards: o,
        rendering: null,
        renderingStartTime: 0,
        last: _,
        tail: s,
        tailMode: $,
      })
    : ((et.isBackwards = o),
      (et.rendering = null),
      (et.renderingStartTime = 0),
      (et.last = _),
      (et.tail = s),
      (et.tailMode = $));
}
function yj(a, o, s) {
  var _ = o.pendingProps,
    $ = _.revealOrder,
    et = _.tail;
  if ((Yi(a, o, _.children, s), (_ = M.current), _ & 2))
    (_ = (_ & 1) | 2), (o.flags |= 128);
  else {
    if (a !== null && a.flags & 128)
      e: for (a = o.child; a !== null; ) {
        if (a.tag === 13) a.memoizedState !== null && wj(a, s, o);
        else if (a.tag === 19) wj(a, s, o);
        else if (a.child !== null) {
          (a.child.return = a), (a = a.child);
          continue;
        }
        if (a === o) break e;
        for (; a.sibling === null; ) {
          if (a.return === null || a.return === o) break e;
          a = a.return;
        }
        (a.sibling.return = a.return), (a = a.sibling);
      }
    _ &= 1;
  }
  if ((G(M, _), !(o.mode & 1))) o.memoizedState = null;
  else
    switch ($) {
      case "forwards":
        for (s = o.child, $ = null; s !== null; )
          (a = s.alternate),
            a !== null && Mh(a) === null && ($ = s),
            (s = s.sibling);
        (s = $),
          s === null
            ? (($ = o.child), (o.child = null))
            : (($ = s.sibling), (s.sibling = null)),
          xj(o, !1, $, s, et);
        break;
      case "backwards":
        for (s = null, $ = o.child, o.child = null; $ !== null; ) {
          if (((a = $.alternate), a !== null && Mh(a) === null)) {
            o.child = $;
            break;
          }
          (a = $.sibling), ($.sibling = s), (s = $), ($ = a);
        }
        xj(o, !0, s, null, et);
        break;
      case "together":
        xj(o, !1, null, null, void 0);
        break;
      default:
        o.memoizedState = null;
    }
  return o.child;
}
function jj(a, o) {
  !(o.mode & 1) &&
    a !== null &&
    ((a.alternate = null), (o.alternate = null), (o.flags |= 2));
}
function $i(a, o, s) {
  if (
    (a !== null && (o.dependencies = a.dependencies),
    (hh |= o.lanes),
    !(s & o.childLanes))
  )
    return null;
  if (a !== null && o.child !== a.child) throw Error(p$1(153));
  if (o.child !== null) {
    for (
      a = o.child, s = wh(a, a.pendingProps), o.child = s, s.return = o;
      a.sibling !== null;

    )
      (a = a.sibling), (s = s.sibling = wh(a, a.pendingProps)), (s.return = o);
    s.sibling = null;
  }
  return o.child;
}
function zj(a, o, s) {
  switch (o.tag) {
    case 3:
      lj(o), Ig();
      break;
    case 5:
      Kh(o);
      break;
    case 1:
      Zf(o.type) && cg(o);
      break;
    case 4:
      Ih(o, o.stateNode.containerInfo);
      break;
    case 10:
      var _ = o.type._context,
        $ = o.memoizedProps.value;
      G(Mg, _._currentValue), (_._currentValue = $);
      break;
    case 13:
      if (((_ = o.memoizedState), _ !== null))
        return _.dehydrated !== null
          ? (G(M, M.current & 1), (o.flags |= 128), null)
          : s & o.child.childLanes
          ? pj(a, o, s)
          : (G(M, M.current & 1),
            (a = $i(a, o, s)),
            a !== null ? a.sibling : null);
      G(M, M.current & 1);
      break;
    case 19:
      if (((_ = (s & o.childLanes) !== 0), a.flags & 128)) {
        if (_) return yj(a, o, s);
        o.flags |= 128;
      }
      if (
        (($ = o.memoizedState),
        $ !== null &&
          (($.rendering = null), ($.tail = null), ($.lastEffect = null)),
        G(M, M.current),
        _)
      )
        break;
      return null;
    case 22:
    case 23:
      return (o.lanes = 0), ej(a, o, s);
  }
  return $i(a, o, s);
}
var Aj, Bj, Cj, Dj;
Aj = function (a, o) {
  for (var s = o.child; s !== null; ) {
    if (s.tag === 5 || s.tag === 6) a.appendChild(s.stateNode);
    else if (s.tag !== 4 && s.child !== null) {
      (s.child.return = s), (s = s.child);
      continue;
    }
    if (s === o) break;
    for (; s.sibling === null; ) {
      if (s.return === null || s.return === o) return;
      s = s.return;
    }
    (s.sibling.return = s.return), (s = s.sibling);
  }
};
Bj = function () {};
Cj = function (a, o, s, _) {
  var $ = a.memoizedProps;
  if ($ !== _) {
    (a = o.stateNode), Hh(Eh.current);
    var et = null;
    switch (s) {
      case "input":
        ($ = Ya(a, $)), (_ = Ya(a, _)), (et = []);
        break;
      case "select":
        ($ = A$1({}, $, { value: void 0 })),
          (_ = A$1({}, _, { value: void 0 })),
          (et = []);
        break;
      case "textarea":
        ($ = gb(a, $)), (_ = gb(a, _)), (et = []);
        break;
      default:
        typeof $.onClick != "function" &&
          typeof _.onClick == "function" &&
          (a.onclick = Bf);
    }
    ub(s, _);
    var tt;
    s = null;
    for (it in $)
      if (!_.hasOwnProperty(it) && $.hasOwnProperty(it) && $[it] != null)
        if (it === "style") {
          var rt = $[it];
          for (tt in rt) rt.hasOwnProperty(tt) && (s || (s = {}), (s[tt] = ""));
        } else
          it !== "dangerouslySetInnerHTML" &&
            it !== "children" &&
            it !== "suppressContentEditableWarning" &&
            it !== "suppressHydrationWarning" &&
            it !== "autoFocus" &&
            (ea.hasOwnProperty(it)
              ? et || (et = [])
              : (et = et || []).push(it, null));
    for (it in _) {
      var nt = _[it];
      if (
        ((rt = $ != null ? $[it] : void 0),
        _.hasOwnProperty(it) && nt !== rt && (nt != null || rt != null))
      )
        if (it === "style")
          if (rt) {
            for (tt in rt)
              !rt.hasOwnProperty(tt) ||
                (nt && nt.hasOwnProperty(tt)) ||
                (s || (s = {}), (s[tt] = ""));
            for (tt in nt)
              nt.hasOwnProperty(tt) &&
                rt[tt] !== nt[tt] &&
                (s || (s = {}), (s[tt] = nt[tt]));
          } else s || (et || (et = []), et.push(it, s)), (s = nt);
        else
          it === "dangerouslySetInnerHTML"
            ? ((nt = nt ? nt.__html : void 0),
              (rt = rt ? rt.__html : void 0),
              nt != null && rt !== nt && (et = et || []).push(it, nt))
            : it === "children"
            ? (typeof nt != "string" && typeof nt != "number") ||
              (et = et || []).push(it, "" + nt)
            : it !== "suppressContentEditableWarning" &&
              it !== "suppressHydrationWarning" &&
              (ea.hasOwnProperty(it)
                ? (nt != null && it === "onScroll" && D("scroll", a),
                  et || rt === nt || (et = []))
                : (et = et || []).push(it, nt));
    }
    s && (et = et || []).push("style", s);
    var it = et;
    (o.updateQueue = it) && (o.flags |= 4);
  }
};
Dj = function (a, o, s, _) {
  s !== _ && (o.flags |= 4);
};
function Ej(a, o) {
  if (!I)
    switch (a.tailMode) {
      case "hidden":
        o = a.tail;
        for (var s = null; o !== null; )
          o.alternate !== null && (s = o), (o = o.sibling);
        s === null ? (a.tail = null) : (s.sibling = null);
        break;
      case "collapsed":
        s = a.tail;
        for (var _ = null; s !== null; )
          s.alternate !== null && (_ = s), (s = s.sibling);
        _ === null
          ? o || a.tail === null
            ? (a.tail = null)
            : (a.tail.sibling = null)
          : (_.sibling = null);
    }
}
function S(a) {
  var o = a.alternate !== null && a.alternate.child === a.child,
    s = 0,
    _ = 0;
  if (o)
    for (var $ = a.child; $ !== null; )
      (s |= $.lanes | $.childLanes),
        (_ |= $.subtreeFlags & 14680064),
        (_ |= $.flags & 14680064),
        ($.return = a),
        ($ = $.sibling);
  else
    for ($ = a.child; $ !== null; )
      (s |= $.lanes | $.childLanes),
        (_ |= $.subtreeFlags),
        (_ |= $.flags),
        ($.return = a),
        ($ = $.sibling);
  return (a.subtreeFlags |= _), (a.childLanes = s), o;
}
function Fj(a, o, s) {
  var _ = o.pendingProps;
  switch ((wg(o), o.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(o), null;
    case 1:
      return Zf(o.type) && $f(), S(o), null;
    case 3:
      return (
        (_ = o.stateNode),
        Jh(),
        E(Wf),
        E(H),
        Oh(),
        _.pendingContext &&
          ((_.context = _.pendingContext), (_.pendingContext = null)),
        (a === null || a.child === null) &&
          (Gg(o)
            ? (o.flags |= 4)
            : a === null ||
              (a.memoizedState.isDehydrated && !(o.flags & 256)) ||
              ((o.flags |= 1024), zg !== null && (Gj(zg), (zg = null)))),
        Bj(a, o),
        S(o),
        null
      );
    case 5:
      Lh(o);
      var $ = Hh(Gh.current);
      if (((s = o.type), a !== null && o.stateNode != null))
        Cj(a, o, s, _, $),
          a.ref !== o.ref && ((o.flags |= 512), (o.flags |= 2097152));
      else {
        if (!_) {
          if (o.stateNode === null) throw Error(p$1(166));
          return S(o), null;
        }
        if (((a = Hh(Eh.current)), Gg(o))) {
          (_ = o.stateNode), (s = o.type);
          var et = o.memoizedProps;
          switch (((_[Of] = o), (_[Pf] = et), (a = (o.mode & 1) !== 0), s)) {
            case "dialog":
              D("cancel", _), D("close", _);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", _);
              break;
            case "video":
            case "audio":
              for ($ = 0; $ < lf.length; $++) D(lf[$], _);
              break;
            case "source":
              D("error", _);
              break;
            case "img":
            case "image":
            case "link":
              D("error", _), D("load", _);
              break;
            case "details":
              D("toggle", _);
              break;
            case "input":
              Za(_, et), D("invalid", _);
              break;
            case "select":
              (_._wrapperState = { wasMultiple: !!et.multiple }),
                D("invalid", _);
              break;
            case "textarea":
              hb(_, et), D("invalid", _);
          }
          ub(s, et), ($ = null);
          for (var tt in et)
            if (et.hasOwnProperty(tt)) {
              var rt = et[tt];
              tt === "children"
                ? typeof rt == "string"
                  ? _.textContent !== rt &&
                    (et.suppressHydrationWarning !== !0 &&
                      Af(_.textContent, rt, a),
                    ($ = ["children", rt]))
                  : typeof rt == "number" &&
                    _.textContent !== "" + rt &&
                    (et.suppressHydrationWarning !== !0 &&
                      Af(_.textContent, rt, a),
                    ($ = ["children", "" + rt]))
                : ea.hasOwnProperty(tt) &&
                  rt != null &&
                  tt === "onScroll" &&
                  D("scroll", _);
            }
          switch (s) {
            case "input":
              Va(_), db(_, et, !0);
              break;
            case "textarea":
              Va(_), jb(_);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof et.onClick == "function" && (_.onclick = Bf);
          }
          (_ = $), (o.updateQueue = _), _ !== null && (o.flags |= 4);
        } else {
          (tt = $.nodeType === 9 ? $ : $.ownerDocument),
            a === "http://www.w3.org/1999/xhtml" && (a = kb(s)),
            a === "http://www.w3.org/1999/xhtml"
              ? s === "script"
                ? ((a = tt.createElement("div")),
                  (a.innerHTML = "<script></script>"),
                  (a = a.removeChild(a.firstChild)))
                : typeof _.is == "string"
                ? (a = tt.createElement(s, { is: _.is }))
                : ((a = tt.createElement(s)),
                  s === "select" &&
                    ((tt = a),
                    _.multiple
                      ? (tt.multiple = !0)
                      : _.size && (tt.size = _.size)))
              : (a = tt.createElementNS(a, s)),
            (a[Of] = o),
            (a[Pf] = _),
            Aj(a, o, !1, !1),
            (o.stateNode = a);
          e: {
            switch (((tt = vb(s, _)), s)) {
              case "dialog":
                D("cancel", a), D("close", a), ($ = _);
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a), ($ = _);
                break;
              case "video":
              case "audio":
                for ($ = 0; $ < lf.length; $++) D(lf[$], a);
                $ = _;
                break;
              case "source":
                D("error", a), ($ = _);
                break;
              case "img":
              case "image":
              case "link":
                D("error", a), D("load", a), ($ = _);
                break;
              case "details":
                D("toggle", a), ($ = _);
                break;
              case "input":
                Za(a, _), ($ = Ya(a, _)), D("invalid", a);
                break;
              case "option":
                $ = _;
                break;
              case "select":
                (a._wrapperState = { wasMultiple: !!_.multiple }),
                  ($ = A$1({}, _, { value: void 0 })),
                  D("invalid", a);
                break;
              case "textarea":
                hb(a, _), ($ = gb(a, _)), D("invalid", a);
                break;
              default:
                $ = _;
            }
            ub(s, $), (rt = $);
            for (et in rt)
              if (rt.hasOwnProperty(et)) {
                var nt = rt[et];
                et === "style"
                  ? sb(a, nt)
                  : et === "dangerouslySetInnerHTML"
                  ? ((nt = nt ? nt.__html : void 0), nt != null && nb(a, nt))
                  : et === "children"
                  ? typeof nt == "string"
                    ? (s !== "textarea" || nt !== "") && ob(a, nt)
                    : typeof nt == "number" && ob(a, "" + nt)
                  : et !== "suppressContentEditableWarning" &&
                    et !== "suppressHydrationWarning" &&
                    et !== "autoFocus" &&
                    (ea.hasOwnProperty(et)
                      ? nt != null && et === "onScroll" && D("scroll", a)
                      : nt != null && ta(a, et, nt, tt));
              }
            switch (s) {
              case "input":
                Va(a), db(a, _, !1);
                break;
              case "textarea":
                Va(a), jb(a);
                break;
              case "option":
                _.value != null && a.setAttribute("value", "" + Sa(_.value));
                break;
              case "select":
                (a.multiple = !!_.multiple),
                  (et = _.value),
                  et != null
                    ? fb(a, !!_.multiple, et, !1)
                    : _.defaultValue != null &&
                      fb(a, !!_.multiple, _.defaultValue, !0);
                break;
              default:
                typeof $.onClick == "function" && (a.onclick = Bf);
            }
            switch (s) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                _ = !!_.autoFocus;
                break e;
              case "img":
                _ = !0;
                break e;
              default:
                _ = !1;
            }
          }
          _ && (o.flags |= 4);
        }
        o.ref !== null && ((o.flags |= 512), (o.flags |= 2097152));
      }
      return S(o), null;
    case 6:
      if (a && o.stateNode != null) Dj(a, o, a.memoizedProps, _);
      else {
        if (typeof _ != "string" && o.stateNode === null) throw Error(p$1(166));
        if (((s = Hh(Gh.current)), Hh(Eh.current), Gg(o))) {
          if (
            ((_ = o.stateNode),
            (s = o.memoizedProps),
            (_[Of] = o),
            (et = _.nodeValue !== s) && ((a = xg), a !== null))
          )
            switch (a.tag) {
              case 3:
                Af(_.nodeValue, s, (a.mode & 1) !== 0);
                break;
              case 5:
                a.memoizedProps.suppressHydrationWarning !== !0 &&
                  Af(_.nodeValue, s, (a.mode & 1) !== 0);
            }
          et && (o.flags |= 4);
        } else
          (_ = (s.nodeType === 9 ? s : s.ownerDocument).createTextNode(_)),
            (_[Of] = o),
            (o.stateNode = _);
      }
      return S(o), null;
    case 13:
      if (
        (E(M),
        (_ = o.memoizedState),
        a === null ||
          (a.memoizedState !== null && a.memoizedState.dehydrated !== null))
      ) {
        if (I && yg !== null && o.mode & 1 && !(o.flags & 128))
          Hg(), Ig(), (o.flags |= 98560), (et = !1);
        else if (((et = Gg(o)), _ !== null && _.dehydrated !== null)) {
          if (a === null) {
            if (!et) throw Error(p$1(318));
            if (
              ((et = o.memoizedState),
              (et = et !== null ? et.dehydrated : null),
              !et)
            )
              throw Error(p$1(317));
            et[Of] = o;
          } else
            Ig(), !(o.flags & 128) && (o.memoizedState = null), (o.flags |= 4);
          S(o), (et = !1);
        } else zg !== null && (Gj(zg), (zg = null)), (et = !0);
        if (!et) return o.flags & 65536 ? o : null;
      }
      return o.flags & 128
        ? ((o.lanes = s), o)
        : ((_ = _ !== null),
          _ !== (a !== null && a.memoizedState !== null) &&
            _ &&
            ((o.child.flags |= 8192),
            o.mode & 1 &&
              (a === null || M.current & 1 ? T === 0 && (T = 3) : uj())),
          o.updateQueue !== null && (o.flags |= 4),
          S(o),
          null);
    case 4:
      return (
        Jh(), Bj(a, o), a === null && sf(o.stateNode.containerInfo), S(o), null
      );
    case 10:
      return Rg(o.type._context), S(o), null;
    case 17:
      return Zf(o.type) && $f(), S(o), null;
    case 19:
      if ((E(M), (et = o.memoizedState), et === null)) return S(o), null;
      if (((_ = (o.flags & 128) !== 0), (tt = et.rendering), tt === null))
        if (_) Ej(et, !1);
        else {
          if (T !== 0 || (a !== null && a.flags & 128))
            for (a = o.child; a !== null; ) {
              if (((tt = Mh(a)), tt !== null)) {
                for (
                  o.flags |= 128,
                    Ej(et, !1),
                    _ = tt.updateQueue,
                    _ !== null && ((o.updateQueue = _), (o.flags |= 4)),
                    o.subtreeFlags = 0,
                    _ = s,
                    s = o.child;
                  s !== null;

                )
                  (et = s),
                    (a = _),
                    (et.flags &= 14680066),
                    (tt = et.alternate),
                    tt === null
                      ? ((et.childLanes = 0),
                        (et.lanes = a),
                        (et.child = null),
                        (et.subtreeFlags = 0),
                        (et.memoizedProps = null),
                        (et.memoizedState = null),
                        (et.updateQueue = null),
                        (et.dependencies = null),
                        (et.stateNode = null))
                      : ((et.childLanes = tt.childLanes),
                        (et.lanes = tt.lanes),
                        (et.child = tt.child),
                        (et.subtreeFlags = 0),
                        (et.deletions = null),
                        (et.memoizedProps = tt.memoizedProps),
                        (et.memoizedState = tt.memoizedState),
                        (et.updateQueue = tt.updateQueue),
                        (et.type = tt.type),
                        (a = tt.dependencies),
                        (et.dependencies =
                          a === null
                            ? null
                            : {
                                lanes: a.lanes,
                                firstContext: a.firstContext,
                              })),
                    (s = s.sibling);
                return G(M, (M.current & 1) | 2), o.child;
              }
              a = a.sibling;
            }
          et.tail !== null &&
            B() > Hj &&
            ((o.flags |= 128), (_ = !0), Ej(et, !1), (o.lanes = 4194304));
        }
      else {
        if (!_)
          if (((a = Mh(tt)), a !== null)) {
            if (
              ((o.flags |= 128),
              (_ = !0),
              (s = a.updateQueue),
              s !== null && ((o.updateQueue = s), (o.flags |= 4)),
              Ej(et, !0),
              et.tail === null &&
                et.tailMode === "hidden" &&
                !tt.alternate &&
                !I)
            )
              return S(o), null;
          } else
            2 * B() - et.renderingStartTime > Hj &&
              s !== 1073741824 &&
              ((o.flags |= 128), (_ = !0), Ej(et, !1), (o.lanes = 4194304));
        et.isBackwards
          ? ((tt.sibling = o.child), (o.child = tt))
          : ((s = et.last),
            s !== null ? (s.sibling = tt) : (o.child = tt),
            (et.last = tt));
      }
      return et.tail !== null
        ? ((o = et.tail),
          (et.rendering = o),
          (et.tail = o.sibling),
          (et.renderingStartTime = B()),
          (o.sibling = null),
          (s = M.current),
          G(M, _ ? (s & 1) | 2 : s & 1),
          o)
        : (S(o), null);
    case 22:
    case 23:
      return (
        Ij(),
        (_ = o.memoizedState !== null),
        a !== null && (a.memoizedState !== null) !== _ && (o.flags |= 8192),
        _ && o.mode & 1
          ? gj & 1073741824 && (S(o), o.subtreeFlags & 6 && (o.flags |= 8192))
          : S(o),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$1(156, o.tag));
}
function Jj(a, o) {
  switch ((wg(o), o.tag)) {
    case 1:
      return (
        Zf(o.type) && $f(),
        (a = o.flags),
        a & 65536 ? ((o.flags = (a & -65537) | 128), o) : null
      );
    case 3:
      return (
        Jh(),
        E(Wf),
        E(H),
        Oh(),
        (a = o.flags),
        a & 65536 && !(a & 128) ? ((o.flags = (a & -65537) | 128), o) : null
      );
    case 5:
      return Lh(o), null;
    case 13:
      if ((E(M), (a = o.memoizedState), a !== null && a.dehydrated !== null)) {
        if (o.alternate === null) throw Error(p$1(340));
        Ig();
      }
      return (
        (a = o.flags), a & 65536 ? ((o.flags = (a & -65537) | 128), o) : null
      );
    case 19:
      return E(M), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(o.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = !1,
  U = !1,
  Lj = typeof WeakSet == "function" ? WeakSet : Set,
  V = null;
function Mj(a, o) {
  var s = a.ref;
  if (s !== null)
    if (typeof s == "function")
      try {
        s(null);
      } catch (_) {
        W(a, o, _);
      }
    else s.current = null;
}
function Nj(a, o, s) {
  try {
    s();
  } catch (_) {
    W(a, o, _);
  }
}
var Oj = !1;
function Pj(a, o) {
  if (((Cf = dd), (a = Me()), Ne(a))) {
    if ("selectionStart" in a)
      var s = { start: a.selectionStart, end: a.selectionEnd };
    else
      e: {
        s = ((s = a.ownerDocument) && s.defaultView) || window;
        var _ = s.getSelection && s.getSelection();
        if (_ && _.rangeCount !== 0) {
          s = _.anchorNode;
          var $ = _.anchorOffset,
            et = _.focusNode;
          _ = _.focusOffset;
          try {
            s.nodeType, et.nodeType;
          } catch {
            s = null;
            break e;
          }
          var tt = 0,
            rt = -1,
            nt = -1,
            it = 0,
            at = 0,
            st = a,
            ot = null;
          t: for (;;) {
            for (
              var dt;
              st !== s || ($ !== 0 && st.nodeType !== 3) || (rt = tt + $),
                st !== et || (_ !== 0 && st.nodeType !== 3) || (nt = tt + _),
                st.nodeType === 3 && (tt += st.nodeValue.length),
                (dt = st.firstChild) !== null;

            )
              (ot = st), (st = dt);
            for (;;) {
              if (st === a) break t;
              if (
                (ot === s && ++it === $ && (rt = tt),
                ot === et && ++at === _ && (nt = tt),
                (dt = st.nextSibling) !== null)
              )
                break;
              (st = ot), (ot = st.parentNode);
            }
            st = dt;
          }
          s = rt === -1 || nt === -1 ? null : { start: rt, end: nt };
        } else s = null;
      }
    s = s || { start: 0, end: 0 };
  } else s = null;
  for (Df = { focusedElem: a, selectionRange: s }, dd = !1, V = o; V !== null; )
    if (((o = V), (a = o.child), (o.subtreeFlags & 1028) !== 0 && a !== null))
      (a.return = o), (V = a);
    else
      for (; V !== null; ) {
        o = V;
        try {
          var ht = o.alternate;
          if (o.flags & 1024)
            switch (o.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (ht !== null) {
                  var ft = ht.memoizedProps,
                    mt = ht.memoizedState,
                    ut = o.stateNode,
                    lt = ut.getSnapshotBeforeUpdate(
                      o.elementType === o.type ? ft : Lg(o.type, ft),
                      mt
                    );
                  ut.__reactInternalSnapshotBeforeUpdate = lt;
                }
                break;
              case 3:
                var ct = o.stateNode.containerInfo;
                ct.nodeType === 1
                  ? (ct.textContent = "")
                  : ct.nodeType === 9 &&
                    ct.documentElement &&
                    ct.removeChild(ct.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$1(163));
            }
        } catch (pt) {
          W(o, o.return, pt);
        }
        if (((a = o.sibling), a !== null)) {
          (a.return = o.return), (V = a);
          break;
        }
        V = o.return;
      }
  return (ht = Oj), (Oj = !1), ht;
}
function Qj(a, o, s) {
  var _ = o.updateQueue;
  if (((_ = _ !== null ? _.lastEffect : null), _ !== null)) {
    var $ = (_ = _.next);
    do {
      if (($.tag & a) === a) {
        var et = $.destroy;
        ($.destroy = void 0), et !== void 0 && Nj(o, s, et);
      }
      $ = $.next;
    } while ($ !== _);
  }
}
function Rj(a, o) {
  if (
    ((o = o.updateQueue), (o = o !== null ? o.lastEffect : null), o !== null)
  ) {
    var s = (o = o.next);
    do {
      if ((s.tag & a) === a) {
        var _ = s.create;
        s.destroy = _();
      }
      s = s.next;
    } while (s !== o);
  }
}
function Sj(a) {
  var o = a.ref;
  if (o !== null) {
    var s = a.stateNode;
    switch (a.tag) {
      case 5:
        a = s;
        break;
      default:
        a = s;
    }
    typeof o == "function" ? o(a) : (o.current = a);
  }
}
function Tj(a) {
  var o = a.alternate;
  o !== null && ((a.alternate = null), Tj(o)),
    (a.child = null),
    (a.deletions = null),
    (a.sibling = null),
    a.tag === 5 &&
      ((o = a.stateNode),
      o !== null &&
        (delete o[Of], delete o[Pf], delete o[of], delete o[Qf], delete o[Rf])),
    (a.stateNode = null),
    (a.return = null),
    (a.dependencies = null),
    (a.memoizedProps = null),
    (a.memoizedState = null),
    (a.pendingProps = null),
    (a.stateNode = null),
    (a.updateQueue = null);
}
function Uj(a) {
  return a.tag === 5 || a.tag === 3 || a.tag === 4;
}
function Vj(a) {
  e: for (;;) {
    for (; a.sibling === null; ) {
      if (a.return === null || Uj(a.return)) return null;
      a = a.return;
    }
    for (
      a.sibling.return = a.return, a = a.sibling;
      a.tag !== 5 && a.tag !== 6 && a.tag !== 18;

    ) {
      if (a.flags & 2 || a.child === null || a.tag === 4) continue e;
      (a.child.return = a), (a = a.child);
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Wj(a, o, s) {
  var _ = a.tag;
  if (_ === 5 || _ === 6)
    (a = a.stateNode),
      o
        ? s.nodeType === 8
          ? s.parentNode.insertBefore(a, o)
          : s.insertBefore(a, o)
        : (s.nodeType === 8
            ? ((o = s.parentNode), o.insertBefore(a, s))
            : ((o = s), o.appendChild(a)),
          (s = s._reactRootContainer),
          s != null || o.onclick !== null || (o.onclick = Bf));
  else if (_ !== 4 && ((a = a.child), a !== null))
    for (Wj(a, o, s), a = a.sibling; a !== null; ) Wj(a, o, s), (a = a.sibling);
}
function Xj(a, o, s) {
  var _ = a.tag;
  if (_ === 5 || _ === 6)
    (a = a.stateNode), o ? s.insertBefore(a, o) : s.appendChild(a);
  else if (_ !== 4 && ((a = a.child), a !== null))
    for (Xj(a, o, s), a = a.sibling; a !== null; ) Xj(a, o, s), (a = a.sibling);
}
var X = null,
  Yj = !1;
function Zj(a, o, s) {
  for (s = s.child; s !== null; ) ak(a, o, s), (s = s.sibling);
}
function ak(a, o, s) {
  if (lc && typeof lc.onCommitFiberUnmount == "function")
    try {
      lc.onCommitFiberUnmount(kc, s);
    } catch {}
  switch (s.tag) {
    case 5:
      U || Mj(s, o);
    case 6:
      var _ = X,
        $ = Yj;
      (X = null),
        Zj(a, o, s),
        (X = _),
        (Yj = $),
        X !== null &&
          (Yj
            ? ((a = X),
              (s = s.stateNode),
              a.nodeType === 8 ? a.parentNode.removeChild(s) : a.removeChild(s))
            : X.removeChild(s.stateNode));
      break;
    case 18:
      X !== null &&
        (Yj
          ? ((a = X),
            (s = s.stateNode),
            a.nodeType === 8
              ? Kf(a.parentNode, s)
              : a.nodeType === 1 && Kf(a, s),
            bd(a))
          : Kf(X, s.stateNode));
      break;
    case 4:
      (_ = X),
        ($ = Yj),
        (X = s.stateNode.containerInfo),
        (Yj = !0),
        Zj(a, o, s),
        (X = _),
        (Yj = $);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !U &&
        ((_ = s.updateQueue), _ !== null && ((_ = _.lastEffect), _ !== null))
      ) {
        $ = _ = _.next;
        do {
          var et = $,
            tt = et.destroy;
          (et = et.tag),
            tt !== void 0 && (et & 2 || et & 4) && Nj(s, o, tt),
            ($ = $.next);
        } while ($ !== _);
      }
      Zj(a, o, s);
      break;
    case 1:
      if (
        !U &&
        (Mj(s, o),
        (_ = s.stateNode),
        typeof _.componentWillUnmount == "function")
      )
        try {
          (_.props = s.memoizedProps),
            (_.state = s.memoizedState),
            _.componentWillUnmount();
        } catch (rt) {
          W(s, o, rt);
        }
      Zj(a, o, s);
      break;
    case 21:
      Zj(a, o, s);
      break;
    case 22:
      s.mode & 1
        ? ((U = (_ = U) || s.memoizedState !== null), Zj(a, o, s), (U = _))
        : Zj(a, o, s);
      break;
    default:
      Zj(a, o, s);
  }
}
function bk(a) {
  var o = a.updateQueue;
  if (o !== null) {
    a.updateQueue = null;
    var s = a.stateNode;
    s === null && (s = a.stateNode = new Lj()),
      o.forEach(function (_) {
        var $ = ck.bind(null, a, _);
        s.has(_) || (s.add(_), _.then($, $));
      });
  }
}
function dk(a, o) {
  var s = o.deletions;
  if (s !== null)
    for (var _ = 0; _ < s.length; _++) {
      var $ = s[_];
      try {
        var et = a,
          tt = o,
          rt = tt;
        e: for (; rt !== null; ) {
          switch (rt.tag) {
            case 5:
              (X = rt.stateNode), (Yj = !1);
              break e;
            case 3:
              (X = rt.stateNode.containerInfo), (Yj = !0);
              break e;
            case 4:
              (X = rt.stateNode.containerInfo), (Yj = !0);
              break e;
          }
          rt = rt.return;
        }
        if (X === null) throw Error(p$1(160));
        ak(et, tt, $), (X = null), (Yj = !1);
        var nt = $.alternate;
        nt !== null && (nt.return = null), ($.return = null);
      } catch (it) {
        W($, o, it);
      }
    }
  if (o.subtreeFlags & 12854)
    for (o = o.child; o !== null; ) ek(o, a), (o = o.sibling);
}
function ek(a, o) {
  var s = a.alternate,
    _ = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((dk(o, a), fk(a), _ & 4)) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (ft) {
          W(a, a.return, ft);
        }
        try {
          Qj(5, a, a.return);
        } catch (ft) {
          W(a, a.return, ft);
        }
      }
      break;
    case 1:
      dk(o, a), fk(a), _ & 512 && s !== null && Mj(s, s.return);
      break;
    case 5:
      if (
        (dk(o, a),
        fk(a),
        _ & 512 && s !== null && Mj(s, s.return),
        a.flags & 32)
      ) {
        var $ = a.stateNode;
        try {
          ob($, "");
        } catch (ft) {
          W(a, a.return, ft);
        }
      }
      if (_ & 4 && (($ = a.stateNode), $ != null)) {
        var et = a.memoizedProps,
          tt = s !== null ? s.memoizedProps : et,
          rt = a.type,
          nt = a.updateQueue;
        if (((a.updateQueue = null), nt !== null))
          try {
            rt === "input" &&
              et.type === "radio" &&
              et.name != null &&
              ab($, et),
              vb(rt, tt);
            var it = vb(rt, et);
            for (tt = 0; tt < nt.length; tt += 2) {
              var at = nt[tt],
                st = nt[tt + 1];
              at === "style"
                ? sb($, st)
                : at === "dangerouslySetInnerHTML"
                ? nb($, st)
                : at === "children"
                ? ob($, st)
                : ta($, at, st, it);
            }
            switch (rt) {
              case "input":
                bb($, et);
                break;
              case "textarea":
                ib($, et);
                break;
              case "select":
                var ot = $._wrapperState.wasMultiple;
                $._wrapperState.wasMultiple = !!et.multiple;
                var dt = et.value;
                dt != null
                  ? fb($, !!et.multiple, dt, !1)
                  : ot !== !!et.multiple &&
                    (et.defaultValue != null
                      ? fb($, !!et.multiple, et.defaultValue, !0)
                      : fb($, !!et.multiple, et.multiple ? [] : "", !1));
            }
            $[Pf] = et;
          } catch (ft) {
            W(a, a.return, ft);
          }
      }
      break;
    case 6:
      if ((dk(o, a), fk(a), _ & 4)) {
        if (a.stateNode === null) throw Error(p$1(162));
        ($ = a.stateNode), (et = a.memoizedProps);
        try {
          $.nodeValue = et;
        } catch (ft) {
          W(a, a.return, ft);
        }
      }
      break;
    case 3:
      if (
        (dk(o, a), fk(a), _ & 4 && s !== null && s.memoizedState.isDehydrated)
      )
        try {
          bd(o.containerInfo);
        } catch (ft) {
          W(a, a.return, ft);
        }
      break;
    case 4:
      dk(o, a), fk(a);
      break;
    case 13:
      dk(o, a),
        fk(a),
        ($ = a.child),
        $.flags & 8192 &&
          ((et = $.memoizedState !== null),
          ($.stateNode.isHidden = et),
          !et ||
            ($.alternate !== null && $.alternate.memoizedState !== null) ||
            (gk = B())),
        _ & 4 && bk(a);
      break;
    case 22:
      if (
        ((at = s !== null && s.memoizedState !== null),
        a.mode & 1 ? ((U = (it = U) || at), dk(o, a), (U = it)) : dk(o, a),
        fk(a),
        _ & 8192)
      ) {
        if (
          ((it = a.memoizedState !== null),
          (a.stateNode.isHidden = it) && !at && a.mode & 1)
        )
          for (V = a, at = a.child; at !== null; ) {
            for (st = V = at; V !== null; ) {
              switch (((ot = V), (dt = ot.child), ot.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, ot, ot.return);
                  break;
                case 1:
                  Mj(ot, ot.return);
                  var ht = ot.stateNode;
                  if (typeof ht.componentWillUnmount == "function") {
                    (_ = ot), (s = ot.return);
                    try {
                      (o = _),
                        (ht.props = o.memoizedProps),
                        (ht.state = o.memoizedState),
                        ht.componentWillUnmount();
                    } catch (ft) {
                      W(_, s, ft);
                    }
                  }
                  break;
                case 5:
                  Mj(ot, ot.return);
                  break;
                case 22:
                  if (ot.memoizedState !== null) {
                    hk(st);
                    continue;
                  }
              }
              dt !== null ? ((dt.return = ot), (V = dt)) : hk(st);
            }
            at = at.sibling;
          }
        e: for (at = null, st = a; ; ) {
          if (st.tag === 5) {
            if (at === null) {
              at = st;
              try {
                ($ = st.stateNode),
                  it
                    ? ((et = $.style),
                      typeof et.setProperty == "function"
                        ? et.setProperty("display", "none", "important")
                        : (et.display = "none"))
                    : ((rt = st.stateNode),
                      (nt = st.memoizedProps.style),
                      (tt =
                        nt != null && nt.hasOwnProperty("display")
                          ? nt.display
                          : null),
                      (rt.style.display = rb("display", tt)));
              } catch (ft) {
                W(a, a.return, ft);
              }
            }
          } else if (st.tag === 6) {
            if (at === null)
              try {
                st.stateNode.nodeValue = it ? "" : st.memoizedProps;
              } catch (ft) {
                W(a, a.return, ft);
              }
          } else if (
            ((st.tag !== 22 && st.tag !== 23) ||
              st.memoizedState === null ||
              st === a) &&
            st.child !== null
          ) {
            (st.child.return = st), (st = st.child);
            continue;
          }
          if (st === a) break e;
          for (; st.sibling === null; ) {
            if (st.return === null || st.return === a) break e;
            at === st && (at = null), (st = st.return);
          }
          at === st && (at = null),
            (st.sibling.return = st.return),
            (st = st.sibling);
        }
      }
      break;
    case 19:
      dk(o, a), fk(a), _ & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(o, a), fk(a);
  }
}
function fk(a) {
  var o = a.flags;
  if (o & 2) {
    try {
      e: {
        for (var s = a.return; s !== null; ) {
          if (Uj(s)) {
            var _ = s;
            break e;
          }
          s = s.return;
        }
        throw Error(p$1(160));
      }
      switch (_.tag) {
        case 5:
          var $ = _.stateNode;
          _.flags & 32 && (ob($, ""), (_.flags &= -33));
          var et = Vj(a);
          Xj(a, et, $);
          break;
        case 3:
        case 4:
          var tt = _.stateNode.containerInfo,
            rt = Vj(a);
          Wj(a, rt, tt);
          break;
        default:
          throw Error(p$1(161));
      }
    } catch (nt) {
      W(a, a.return, nt);
    }
    a.flags &= -3;
  }
  o & 4096 && (a.flags &= -4097);
}
function ik(a, o, s) {
  (V = a), jk(a);
}
function jk(a, o, s) {
  for (var _ = (a.mode & 1) !== 0; V !== null; ) {
    var $ = V,
      et = $.child;
    if ($.tag === 22 && _) {
      var tt = $.memoizedState !== null || Kj;
      if (!tt) {
        var rt = $.alternate,
          nt = (rt !== null && rt.memoizedState !== null) || U;
        rt = Kj;
        var it = U;
        if (((Kj = tt), (U = nt) && !it))
          for (V = $; V !== null; )
            (tt = V),
              (nt = tt.child),
              tt.tag === 22 && tt.memoizedState !== null
                ? kk($)
                : nt !== null
                ? ((nt.return = tt), (V = nt))
                : kk($);
        for (; et !== null; ) (V = et), jk(et), (et = et.sibling);
        (V = $), (Kj = rt), (U = it);
      }
      lk(a);
    } else
      $.subtreeFlags & 8772 && et !== null
        ? ((et.return = $), (V = et))
        : lk(a);
  }
}
function lk(a) {
  for (; V !== null; ) {
    var o = V;
    if (o.flags & 8772) {
      var s = o.alternate;
      try {
        if (o.flags & 8772)
          switch (o.tag) {
            case 0:
            case 11:
            case 15:
              U || Rj(5, o);
              break;
            case 1:
              var _ = o.stateNode;
              if (o.flags & 4 && !U)
                if (s === null) _.componentDidMount();
                else {
                  var $ =
                    o.elementType === o.type
                      ? s.memoizedProps
                      : Lg(o.type, s.memoizedProps);
                  _.componentDidUpdate(
                    $,
                    s.memoizedState,
                    _.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var et = o.updateQueue;
              et !== null && ih(o, et, _);
              break;
            case 3:
              var tt = o.updateQueue;
              if (tt !== null) {
                if (((s = null), o.child !== null))
                  switch (o.child.tag) {
                    case 5:
                      s = o.child.stateNode;
                      break;
                    case 1:
                      s = o.child.stateNode;
                  }
                ih(o, tt, s);
              }
              break;
            case 5:
              var rt = o.stateNode;
              if (s === null && o.flags & 4) {
                s = rt;
                var nt = o.memoizedProps;
                switch (o.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    nt.autoFocus && s.focus();
                    break;
                  case "img":
                    nt.src && (s.src = nt.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (o.memoizedState === null) {
                var it = o.alternate;
                if (it !== null) {
                  var at = it.memoizedState;
                  if (at !== null) {
                    var st = at.dehydrated;
                    st !== null && bd(st);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$1(163));
          }
        U || (o.flags & 512 && Sj(o));
      } catch (ot) {
        W(o, o.return, ot);
      }
    }
    if (o === a) {
      V = null;
      break;
    }
    if (((s = o.sibling), s !== null)) {
      (s.return = o.return), (V = s);
      break;
    }
    V = o.return;
  }
}
function hk(a) {
  for (; V !== null; ) {
    var o = V;
    if (o === a) {
      V = null;
      break;
    }
    var s = o.sibling;
    if (s !== null) {
      (s.return = o.return), (V = s);
      break;
    }
    V = o.return;
  }
}
function kk(a) {
  for (; V !== null; ) {
    var o = V;
    try {
      switch (o.tag) {
        case 0:
        case 11:
        case 15:
          var s = o.return;
          try {
            Rj(4, o);
          } catch (nt) {
            W(o, s, nt);
          }
          break;
        case 1:
          var _ = o.stateNode;
          if (typeof _.componentDidMount == "function") {
            var $ = o.return;
            try {
              _.componentDidMount();
            } catch (nt) {
              W(o, $, nt);
            }
          }
          var et = o.return;
          try {
            Sj(o);
          } catch (nt) {
            W(o, et, nt);
          }
          break;
        case 5:
          var tt = o.return;
          try {
            Sj(o);
          } catch (nt) {
            W(o, tt, nt);
          }
      }
    } catch (nt) {
      W(o, o.return, nt);
    }
    if (o === a) {
      V = null;
      break;
    }
    var rt = o.sibling;
    if (rt !== null) {
      (rt.return = o.return), (V = rt);
      break;
    }
    V = o.return;
  }
}
var mk = Math.ceil,
  nk = ua.ReactCurrentDispatcher,
  ok = ua.ReactCurrentOwner,
  pk = ua.ReactCurrentBatchConfig,
  K = 0,
  R = null,
  Y = null,
  Z = 0,
  gj = 0,
  fj = Uf(0),
  T = 0,
  qk = null,
  hh = 0,
  rk = 0,
  sk = 0,
  tk = null,
  uk = null,
  gk = 0,
  Hj = 1 / 0,
  vk = null,
  Pi = !1,
  Qi = null,
  Si = null,
  wk = !1,
  xk = null,
  yk = 0,
  zk = 0,
  Ak = null,
  Bk = -1,
  Ck = 0;
function L() {
  return K & 6 ? B() : Bk !== -1 ? Bk : (Bk = B());
}
function lh(a) {
  return a.mode & 1
    ? K & 2 && Z !== 0
      ? Z & -Z
      : Kg.transition !== null
      ? (Ck === 0 && (Ck = yc()), Ck)
      : ((a = C),
        a !== 0 || ((a = window.event), (a = a === void 0 ? 16 : jd(a.type))),
        a)
    : 1;
}
function mh(a, o, s, _) {
  if (50 < zk) throw ((zk = 0), (Ak = null), Error(p$1(185)));
  Ac(a, s, _),
    (!(K & 2) || a !== R) &&
      (a === R && (!(K & 2) && (rk |= s), T === 4 && Dk(a, Z)),
      Ek(a, _),
      s === 1 && K === 0 && !(o.mode & 1) && ((Hj = B() + 500), fg && jg()));
}
function Ek(a, o) {
  var s = a.callbackNode;
  wc(a, o);
  var _ = uc(a, a === R ? Z : 0);
  if (_ === 0)
    s !== null && bc(s), (a.callbackNode = null), (a.callbackPriority = 0);
  else if (((o = _ & -_), a.callbackPriority !== o)) {
    if ((s != null && bc(s), o === 1))
      a.tag === 0 ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)),
        Jf(function () {
          !(K & 6) && jg();
        }),
        (s = null);
    else {
      switch (Dc(_)) {
        case 1:
          s = fc;
          break;
        case 4:
          s = gc;
          break;
        case 16:
          s = hc;
          break;
        case 536870912:
          s = jc;
          break;
        default:
          s = hc;
      }
      s = Gk(s, Hk.bind(null, a));
    }
    (a.callbackPriority = o), (a.callbackNode = s);
  }
}
function Hk(a, o) {
  if (((Bk = -1), (Ck = 0), K & 6)) throw Error(p$1(327));
  var s = a.callbackNode;
  if (Ik() && a.callbackNode !== s) return null;
  var _ = uc(a, a === R ? Z : 0);
  if (_ === 0) return null;
  if (_ & 30 || _ & a.expiredLanes || o) o = Jk(a, _);
  else {
    o = _;
    var $ = K;
    K |= 2;
    var et = Kk();
    (R !== a || Z !== o) && ((vk = null), (Hj = B() + 500), Lk(a, o));
    do
      try {
        Mk();
        break;
      } catch (rt) {
        Nk(a, rt);
      }
    while (1);
    Qg(),
      (nk.current = et),
      (K = $),
      Y !== null ? (o = 0) : ((R = null), (Z = 0), (o = T));
  }
  if (o !== 0) {
    if (
      (o === 2 && (($ = xc(a)), $ !== 0 && ((_ = $), (o = Ok(a, $)))), o === 1)
    )
      throw ((s = qk), Lk(a, 0), Dk(a, _), Ek(a, B()), s);
    if (o === 6) Dk(a, _);
    else {
      if (
        (($ = a.current.alternate),
        !(_ & 30) &&
          !Pk($) &&
          ((o = Jk(a, _)),
          o === 2 && ((et = xc(a)), et !== 0 && ((_ = et), (o = Ok(a, et)))),
          o === 1))
      )
        throw ((s = qk), Lk(a, 0), Dk(a, _), Ek(a, B()), s);
      switch (((a.finishedWork = $), (a.finishedLanes = _), o)) {
        case 0:
        case 1:
          throw Error(p$1(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          if (
            (Dk(a, _), (_ & 130023424) === _ && ((o = gk + 500 - B()), 10 < o))
          ) {
            if (uc(a, 0) !== 0) break;
            if ((($ = a.suspendedLanes), ($ & _) !== _)) {
              L(), (a.pingedLanes |= a.suspendedLanes & $);
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), o);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          if ((Dk(a, _), (_ & 4194240) === _)) break;
          for (o = a.eventTimes, $ = -1; 0 < _; ) {
            var tt = 31 - oc(_);
            (et = 1 << tt), (tt = o[tt]), tt > $ && ($ = tt), (_ &= ~et);
          }
          if (
            ((_ = $),
            (_ = B() - _),
            (_ =
              (120 > _
                ? 120
                : 480 > _
                ? 480
                : 1080 > _
                ? 1080
                : 1920 > _
                ? 1920
                : 3e3 > _
                ? 3e3
                : 4320 > _
                ? 4320
                : 1960 * mk(_ / 1960)) - _),
            10 < _)
          ) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), _);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p$1(329));
      }
    }
  }
  return Ek(a, B()), a.callbackNode === s ? Hk.bind(null, a) : null;
}
function Ok(a, o) {
  var s = tk;
  return (
    a.current.memoizedState.isDehydrated && (Lk(a, o).flags |= 256),
    (a = Jk(a, o)),
    a !== 2 && ((o = uk), (uk = s), o !== null && Gj(o)),
    a
  );
}
function Gj(a) {
  uk === null ? (uk = a) : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var o = a; ; ) {
    if (o.flags & 16384) {
      var s = o.updateQueue;
      if (s !== null && ((s = s.stores), s !== null))
        for (var _ = 0; _ < s.length; _++) {
          var $ = s[_],
            et = $.getSnapshot;
          $ = $.value;
          try {
            if (!He(et(), $)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((s = o.child), o.subtreeFlags & 16384 && s !== null))
      (s.return = o), (o = s);
    else {
      if (o === a) break;
      for (; o.sibling === null; ) {
        if (o.return === null || o.return === a) return !0;
        o = o.return;
      }
      (o.sibling.return = o.return), (o = o.sibling);
    }
  }
  return !0;
}
function Dk(a, o) {
  for (
    o &= ~sk,
      o &= ~rk,
      a.suspendedLanes |= o,
      a.pingedLanes &= ~o,
      a = a.expirationTimes;
    0 < o;

  ) {
    var s = 31 - oc(o),
      _ = 1 << s;
    (a[s] = -1), (o &= ~_);
  }
}
function Fk(a) {
  if (K & 6) throw Error(p$1(327));
  Ik();
  var o = uc(a, 0);
  if (!(o & 1)) return Ek(a, B()), null;
  var s = Jk(a, o);
  if (a.tag !== 0 && s === 2) {
    var _ = xc(a);
    _ !== 0 && ((o = _), (s = Ok(a, _)));
  }
  if (s === 1) throw ((s = qk), Lk(a, 0), Dk(a, o), Ek(a, B()), s);
  if (s === 6) throw Error(p$1(345));
  return (
    (a.finishedWork = a.current.alternate),
    (a.finishedLanes = o),
    Qk(a, uk, vk),
    Ek(a, B()),
    null
  );
}
function Rk(a, o) {
  var s = K;
  K |= 1;
  try {
    return a(o);
  } finally {
    (K = s), K === 0 && ((Hj = B() + 500), fg && jg());
  }
}
function Sk(a) {
  xk !== null && xk.tag === 0 && !(K & 6) && Ik();
  var o = K;
  K |= 1;
  var s = pk.transition,
    _ = C;
  try {
    if (((pk.transition = null), (C = 1), a)) return a();
  } finally {
    (C = _), (pk.transition = s), (K = o), !(K & 6) && jg();
  }
}
function Ij() {
  (gj = fj.current), E(fj);
}
function Lk(a, o) {
  (a.finishedWork = null), (a.finishedLanes = 0);
  var s = a.timeoutHandle;
  if ((s !== -1 && ((a.timeoutHandle = -1), Gf(s)), Y !== null))
    for (s = Y.return; s !== null; ) {
      var _ = s;
      switch ((wg(_), _.tag)) {
        case 1:
          (_ = _.type.childContextTypes), _ != null && $f();
          break;
        case 3:
          Jh(), E(Wf), E(H), Oh();
          break;
        case 5:
          Lh(_);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E(M);
          break;
        case 19:
          E(M);
          break;
        case 10:
          Rg(_.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      s = s.return;
    }
  if (
    ((R = a),
    (Y = a = wh(a.current, null)),
    (Z = gj = o),
    (T = 0),
    (qk = null),
    (sk = rk = hh = 0),
    (uk = tk = null),
    Wg !== null)
  ) {
    for (o = 0; o < Wg.length; o++)
      if (((s = Wg[o]), (_ = s.interleaved), _ !== null)) {
        s.interleaved = null;
        var $ = _.next,
          et = s.pending;
        if (et !== null) {
          var tt = et.next;
          (et.next = $), (_.next = tt);
        }
        s.pending = _;
      }
    Wg = null;
  }
  return a;
}
function Nk(a, o) {
  do {
    var s = Y;
    try {
      if ((Qg(), (Ph.current = ai), Sh)) {
        for (var _ = N.memoizedState; _ !== null; ) {
          var $ = _.queue;
          $ !== null && ($.pending = null), (_ = _.next);
        }
        Sh = !1;
      }
      if (
        ((Rh = 0),
        (P = O = N = null),
        (Th = !1),
        (Uh = 0),
        (ok.current = null),
        s === null || s.return === null)
      ) {
        (T = 1), (qk = o), (Y = null);
        break;
      }
      e: {
        var et = a,
          tt = s.return,
          rt = s,
          nt = o;
        if (
          ((o = Z),
          (rt.flags |= 32768),
          nt !== null && typeof nt == "object" && typeof nt.then == "function")
        ) {
          var it = nt,
            at = rt,
            st = at.tag;
          if (!(at.mode & 1) && (st === 0 || st === 11 || st === 15)) {
            var ot = at.alternate;
            ot
              ? ((at.updateQueue = ot.updateQueue),
                (at.memoizedState = ot.memoizedState),
                (at.lanes = ot.lanes))
              : ((at.updateQueue = null), (at.memoizedState = null));
          }
          var dt = Vi(tt);
          if (dt !== null) {
            (dt.flags &= -257),
              Wi(dt, tt, rt, et, o),
              dt.mode & 1 && Ti(et, it, o),
              (o = dt),
              (nt = it);
            var ht = o.updateQueue;
            if (ht === null) {
              var ft = new Set();
              ft.add(nt), (o.updateQueue = ft);
            } else ht.add(nt);
            break e;
          } else {
            if (!(o & 1)) {
              Ti(et, it, o), uj();
              break e;
            }
            nt = Error(p$1(426));
          }
        } else if (I && rt.mode & 1) {
          var mt = Vi(tt);
          if (mt !== null) {
            !(mt.flags & 65536) && (mt.flags |= 256),
              Wi(mt, tt, rt, et, o),
              Jg(Ki(nt, rt));
            break e;
          }
        }
        (et = nt = Ki(nt, rt)),
          T !== 4 && (T = 2),
          tk === null ? (tk = [et]) : tk.push(et),
          (et = tt);
        do {
          switch (et.tag) {
            case 3:
              (et.flags |= 65536), (o &= -o), (et.lanes |= o);
              var ut = Oi(et, nt, o);
              fh(et, ut);
              break e;
            case 1:
              rt = nt;
              var lt = et.type,
                ct = et.stateNode;
              if (
                !(et.flags & 128) &&
                (typeof lt.getDerivedStateFromError == "function" ||
                  (ct !== null &&
                    typeof ct.componentDidCatch == "function" &&
                    (Si === null || !Si.has(ct))))
              ) {
                (et.flags |= 65536), (o &= -o), (et.lanes |= o);
                var pt = Ri(et, rt, o);
                fh(et, pt);
                break e;
              }
          }
          et = et.return;
        } while (et !== null);
      }
      Tk(s);
    } catch (vt) {
      (o = vt), Y === s && s !== null && (Y = s = s.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  return (nk.current = ai), a === null ? ai : a;
}
function uj() {
  (T === 0 || T === 3 || T === 2) && (T = 4),
    R === null || (!(hh & 268435455) && !(rk & 268435455)) || Dk(R, Z);
}
function Jk(a, o) {
  var s = K;
  K |= 2;
  var _ = Kk();
  (R !== a || Z !== o) && ((vk = null), Lk(a, o));
  do
    try {
      Uk();
      break;
    } catch ($) {
      Nk(a, $);
    }
  while (1);
  if ((Qg(), (K = s), (nk.current = _), Y !== null)) throw Error(p$1(261));
  return (R = null), (Z = 0), T;
}
function Uk() {
  for (; Y !== null; ) Vk(Y);
}
function Mk() {
  for (; Y !== null && !cc(); ) Vk(Y);
}
function Vk(a) {
  var o = Wk(a.alternate, a, gj);
  (a.memoizedProps = a.pendingProps),
    o === null ? Tk(a) : (Y = o),
    (ok.current = null);
}
function Tk(a) {
  var o = a;
  do {
    var s = o.alternate;
    if (((a = o.return), o.flags & 32768)) {
      if (((s = Jj(s, o)), s !== null)) {
        (s.flags &= 32767), (Y = s);
        return;
      }
      if (a !== null)
        (a.flags |= 32768), (a.subtreeFlags = 0), (a.deletions = null);
      else {
        (T = 6), (Y = null);
        return;
      }
    } else if (((s = Fj(s, o, gj)), s !== null)) {
      Y = s;
      return;
    }
    if (((o = o.sibling), o !== null)) {
      Y = o;
      return;
    }
    Y = o = a;
  } while (o !== null);
  T === 0 && (T = 5);
}
function Qk(a, o, s) {
  var _ = C,
    $ = pk.transition;
  try {
    (pk.transition = null), (C = 1), Xk(a, o, s, _);
  } finally {
    (pk.transition = $), (C = _);
  }
  return null;
}
function Xk(a, o, s, _) {
  do Ik();
  while (xk !== null);
  if (K & 6) throw Error(p$1(327));
  s = a.finishedWork;
  var $ = a.finishedLanes;
  if (s === null) return null;
  if (((a.finishedWork = null), (a.finishedLanes = 0), s === a.current))
    throw Error(p$1(177));
  (a.callbackNode = null), (a.callbackPriority = 0);
  var et = s.lanes | s.childLanes;
  if (
    (Bc(a, et),
    a === R && ((Y = R = null), (Z = 0)),
    (!(s.subtreeFlags & 2064) && !(s.flags & 2064)) ||
      wk ||
      ((wk = !0),
      Gk(hc, function () {
        return Ik(), null;
      })),
    (et = (s.flags & 15990) !== 0),
    s.subtreeFlags & 15990 || et)
  ) {
    (et = pk.transition), (pk.transition = null);
    var tt = C;
    C = 1;
    var rt = K;
    (K |= 4),
      (ok.current = null),
      Pj(a, s),
      ek(s, a),
      Oe(Df),
      (dd = !!Cf),
      (Df = Cf = null),
      (a.current = s),
      ik(s),
      dc(),
      (K = rt),
      (C = tt),
      (pk.transition = et);
  } else a.current = s;
  if (
    (wk && ((wk = !1), (xk = a), (yk = $)),
    (et = a.pendingLanes),
    et === 0 && (Si = null),
    mc(s.stateNode),
    Ek(a, B()),
    o !== null)
  )
    for (_ = a.onRecoverableError, s = 0; s < o.length; s++)
      ($ = o[s]), _($.value, { componentStack: $.stack, digest: $.digest });
  if (Pi) throw ((Pi = !1), (a = Qi), (Qi = null), a);
  return (
    yk & 1 && a.tag !== 0 && Ik(),
    (et = a.pendingLanes),
    et & 1 ? (a === Ak ? zk++ : ((zk = 0), (Ak = a))) : (zk = 0),
    jg(),
    null
  );
}
function Ik() {
  if (xk !== null) {
    var a = Dc(yk),
      o = pk.transition,
      s = C;
    try {
      if (((pk.transition = null), (C = 16 > a ? 16 : a), xk === null))
        var _ = !1;
      else {
        if (((a = xk), (xk = null), (yk = 0), K & 6)) throw Error(p$1(331));
        var $ = K;
        for (K |= 4, V = a.current; V !== null; ) {
          var et = V,
            tt = et.child;
          if (V.flags & 16) {
            var rt = et.deletions;
            if (rt !== null) {
              for (var nt = 0; nt < rt.length; nt++) {
                var it = rt[nt];
                for (V = it; V !== null; ) {
                  var at = V;
                  switch (at.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, at, et);
                  }
                  var st = at.child;
                  if (st !== null) (st.return = at), (V = st);
                  else
                    for (; V !== null; ) {
                      at = V;
                      var ot = at.sibling,
                        dt = at.return;
                      if ((Tj(at), at === it)) {
                        V = null;
                        break;
                      }
                      if (ot !== null) {
                        (ot.return = dt), (V = ot);
                        break;
                      }
                      V = dt;
                    }
                }
              }
              var ht = et.alternate;
              if (ht !== null) {
                var ft = ht.child;
                if (ft !== null) {
                  ht.child = null;
                  do {
                    var mt = ft.sibling;
                    (ft.sibling = null), (ft = mt);
                  } while (ft !== null);
                }
              }
              V = et;
            }
          }
          if (et.subtreeFlags & 2064 && tt !== null) (tt.return = et), (V = tt);
          else
            e: for (; V !== null; ) {
              if (((et = V), et.flags & 2048))
                switch (et.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Qj(9, et, et.return);
                }
              var ut = et.sibling;
              if (ut !== null) {
                (ut.return = et.return), (V = ut);
                break e;
              }
              V = et.return;
            }
        }
        var lt = a.current;
        for (V = lt; V !== null; ) {
          tt = V;
          var ct = tt.child;
          if (tt.subtreeFlags & 2064 && ct !== null) (ct.return = tt), (V = ct);
          else
            e: for (tt = lt; V !== null; ) {
              if (((rt = V), rt.flags & 2048))
                try {
                  switch (rt.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Rj(9, rt);
                  }
                } catch (vt) {
                  W(rt, rt.return, vt);
                }
              if (rt === tt) {
                V = null;
                break e;
              }
              var pt = rt.sibling;
              if (pt !== null) {
                (pt.return = rt.return), (V = pt);
                break e;
              }
              V = rt.return;
            }
        }
        if (
          ((K = $), jg(), lc && typeof lc.onPostCommitFiberRoot == "function")
        )
          try {
            lc.onPostCommitFiberRoot(kc, a);
          } catch {}
        _ = !0;
      }
      return _;
    } finally {
      (C = s), (pk.transition = o);
    }
  }
  return !1;
}
function Yk(a, o, s) {
  (o = Ki(s, o)),
    (o = Oi(a, o, 1)),
    (a = dh(a, o, 1)),
    (o = L()),
    a !== null && (Ac(a, 1, o), Ek(a, o));
}
function W(a, o, s) {
  if (a.tag === 3) Yk(a, a, s);
  else
    for (; o !== null; ) {
      if (o.tag === 3) {
        Yk(o, a, s);
        break;
      } else if (o.tag === 1) {
        var _ = o.stateNode;
        if (
          typeof o.type.getDerivedStateFromError == "function" ||
          (typeof _.componentDidCatch == "function" &&
            (Si === null || !Si.has(_)))
        ) {
          (a = Ki(s, a)),
            (a = Ri(o, a, 1)),
            (o = dh(o, a, 1)),
            (a = L()),
            o !== null && (Ac(o, 1, a), Ek(o, a));
          break;
        }
      }
      o = o.return;
    }
}
function Ui(a, o, s) {
  var _ = a.pingCache;
  _ !== null && _.delete(o),
    (o = L()),
    (a.pingedLanes |= a.suspendedLanes & s),
    R === a &&
      (Z & s) === s &&
      (T === 4 || (T === 3 && (Z & 130023424) === Z && 500 > B() - gk)
        ? Lk(a, 0)
        : (sk |= s)),
    Ek(a, o);
}
function Zk(a, o) {
  o === 0 &&
    (a.mode & 1
      ? ((o = sc), (sc <<= 1), !(sc & 130023424) && (sc = 4194304))
      : (o = 1));
  var s = L();
  (a = Zg(a, o)), a !== null && (Ac(a, o, s), Ek(a, s));
}
function vj(a) {
  var o = a.memoizedState,
    s = 0;
  o !== null && (s = o.retryLane), Zk(a, s);
}
function ck(a, o) {
  var s = 0;
  switch (a.tag) {
    case 13:
      var _ = a.stateNode,
        $ = a.memoizedState;
      $ !== null && (s = $.retryLane);
      break;
    case 19:
      _ = a.stateNode;
      break;
    default:
      throw Error(p$1(314));
  }
  _ !== null && _.delete(o), Zk(a, s);
}
var Wk;
Wk = function (a, o, s) {
  if (a !== null)
    if (a.memoizedProps !== o.pendingProps || Wf.current) Ug = !0;
    else {
      if (!(a.lanes & s) && !(o.flags & 128)) return (Ug = !1), zj(a, o, s);
      Ug = !!(a.flags & 131072);
    }
  else (Ug = !1), I && o.flags & 1048576 && ug(o, ng, o.index);
  switch (((o.lanes = 0), o.tag)) {
    case 2:
      var _ = o.type;
      jj(a, o), (a = o.pendingProps);
      var $ = Yf(o, H.current);
      Tg(o, s), ($ = Xh(null, o, _, a, $, s));
      var et = bi();
      return (
        (o.flags |= 1),
        typeof $ == "object" &&
        $ !== null &&
        typeof $.render == "function" &&
        $.$$typeof === void 0
          ? ((o.tag = 1),
            (o.memoizedState = null),
            (o.updateQueue = null),
            Zf(_) ? ((et = !0), cg(o)) : (et = !1),
            (o.memoizedState =
              $.state !== null && $.state !== void 0 ? $.state : null),
            ah(o),
            ($.updater = nh),
            (o.stateNode = $),
            ($._reactInternals = o),
            rh(o, _, a, s),
            (o = kj(null, o, _, !0, et, s)))
          : ((o.tag = 0), I && et && vg(o), Yi(null, o, $, s), (o = o.child)),
        o
      );
    case 16:
      _ = o.elementType;
      e: {
        switch (
          (jj(a, o),
          (a = o.pendingProps),
          ($ = _._init),
          (_ = $(_._payload)),
          (o.type = _),
          ($ = o.tag = $k(_)),
          (a = Lg(_, a)),
          $)
        ) {
          case 0:
            o = dj(null, o, _, a, s);
            break e;
          case 1:
            o = ij(null, o, _, a, s);
            break e;
          case 11:
            o = Zi(null, o, _, a, s);
            break e;
          case 14:
            o = aj(null, o, _, Lg(_.type, a), s);
            break e;
        }
        throw Error(p$1(306, _, ""));
      }
      return o;
    case 0:
      return (
        (_ = o.type),
        ($ = o.pendingProps),
        ($ = o.elementType === _ ? $ : Lg(_, $)),
        dj(a, o, _, $, s)
      );
    case 1:
      return (
        (_ = o.type),
        ($ = o.pendingProps),
        ($ = o.elementType === _ ? $ : Lg(_, $)),
        ij(a, o, _, $, s)
      );
    case 3:
      e: {
        if ((lj(o), a === null)) throw Error(p$1(387));
        (_ = o.pendingProps),
          (et = o.memoizedState),
          ($ = et.element),
          bh(a, o),
          gh(o, _, null, s);
        var tt = o.memoizedState;
        if (((_ = tt.element), et.isDehydrated))
          if (
            ((et = {
              element: _,
              isDehydrated: !1,
              cache: tt.cache,
              pendingSuspenseBoundaries: tt.pendingSuspenseBoundaries,
              transitions: tt.transitions,
            }),
            (o.updateQueue.baseState = et),
            (o.memoizedState = et),
            o.flags & 256)
          ) {
            ($ = Ki(Error(p$1(423)), o)), (o = mj(a, o, _, s, $));
            break e;
          } else if (_ !== $) {
            ($ = Ki(Error(p$1(424)), o)), (o = mj(a, o, _, s, $));
            break e;
          } else
            for (
              yg = Lf(o.stateNode.containerInfo.firstChild),
                xg = o,
                I = !0,
                zg = null,
                s = Ch(o, null, _, s),
                o.child = s;
              s;

            )
              (s.flags = (s.flags & -3) | 4096), (s = s.sibling);
        else {
          if ((Ig(), _ === $)) {
            o = $i(a, o, s);
            break e;
          }
          Yi(a, o, _, s);
        }
        o = o.child;
      }
      return o;
    case 5:
      return (
        Kh(o),
        a === null && Eg(o),
        (_ = o.type),
        ($ = o.pendingProps),
        (et = a !== null ? a.memoizedProps : null),
        (tt = $.children),
        Ef(_, $) ? (tt = null) : et !== null && Ef(_, et) && (o.flags |= 32),
        hj(a, o),
        Yi(a, o, tt, s),
        o.child
      );
    case 6:
      return a === null && Eg(o), null;
    case 13:
      return pj(a, o, s);
    case 4:
      return (
        Ih(o, o.stateNode.containerInfo),
        (_ = o.pendingProps),
        a === null ? (o.child = Bh(o, null, _, s)) : Yi(a, o, _, s),
        o.child
      );
    case 11:
      return (
        (_ = o.type),
        ($ = o.pendingProps),
        ($ = o.elementType === _ ? $ : Lg(_, $)),
        Zi(a, o, _, $, s)
      );
    case 7:
      return Yi(a, o, o.pendingProps, s), o.child;
    case 8:
      return Yi(a, o, o.pendingProps.children, s), o.child;
    case 12:
      return Yi(a, o, o.pendingProps.children, s), o.child;
    case 10:
      e: {
        if (
          ((_ = o.type._context),
          ($ = o.pendingProps),
          (et = o.memoizedProps),
          (tt = $.value),
          G(Mg, _._currentValue),
          (_._currentValue = tt),
          et !== null)
        )
          if (He(et.value, tt)) {
            if (et.children === $.children && !Wf.current) {
              o = $i(a, o, s);
              break e;
            }
          } else
            for (et = o.child, et !== null && (et.return = o); et !== null; ) {
              var rt = et.dependencies;
              if (rt !== null) {
                tt = et.child;
                for (var nt = rt.firstContext; nt !== null; ) {
                  if (nt.context === _) {
                    if (et.tag === 1) {
                      (nt = ch(-1, s & -s)), (nt.tag = 2);
                      var it = et.updateQueue;
                      if (it !== null) {
                        it = it.shared;
                        var at = it.pending;
                        at === null
                          ? (nt.next = nt)
                          : ((nt.next = at.next), (at.next = nt)),
                          (it.pending = nt);
                      }
                    }
                    (et.lanes |= s),
                      (nt = et.alternate),
                      nt !== null && (nt.lanes |= s),
                      Sg(et.return, s, o),
                      (rt.lanes |= s);
                    break;
                  }
                  nt = nt.next;
                }
              } else if (et.tag === 10)
                tt = et.type === o.type ? null : et.child;
              else if (et.tag === 18) {
                if (((tt = et.return), tt === null)) throw Error(p$1(341));
                (tt.lanes |= s),
                  (rt = tt.alternate),
                  rt !== null && (rt.lanes |= s),
                  Sg(tt, s, o),
                  (tt = et.sibling);
              } else tt = et.child;
              if (tt !== null) tt.return = et;
              else
                for (tt = et; tt !== null; ) {
                  if (tt === o) {
                    tt = null;
                    break;
                  }
                  if (((et = tt.sibling), et !== null)) {
                    (et.return = tt.return), (tt = et);
                    break;
                  }
                  tt = tt.return;
                }
              et = tt;
            }
        Yi(a, o, $.children, s), (o = o.child);
      }
      return o;
    case 9:
      return (
        ($ = o.type),
        (_ = o.pendingProps.children),
        Tg(o, s),
        ($ = Vg($)),
        (_ = _($)),
        (o.flags |= 1),
        Yi(a, o, _, s),
        o.child
      );
    case 14:
      return (
        (_ = o.type),
        ($ = Lg(_, o.pendingProps)),
        ($ = Lg(_.type, $)),
        aj(a, o, _, $, s)
      );
    case 15:
      return cj(a, o, o.type, o.pendingProps, s);
    case 17:
      return (
        (_ = o.type),
        ($ = o.pendingProps),
        ($ = o.elementType === _ ? $ : Lg(_, $)),
        jj(a, o),
        (o.tag = 1),
        Zf(_) ? ((a = !0), cg(o)) : (a = !1),
        Tg(o, s),
        ph(o, _, $),
        rh(o, _, $, s),
        kj(null, o, _, !0, a, s)
      );
    case 19:
      return yj(a, o, s);
    case 22:
      return ej(a, o, s);
  }
  throw Error(p$1(156, o.tag));
};
function Gk(a, o) {
  return ac(a, o);
}
function al(a, o, s, _) {
  (this.tag = a),
    (this.key = s),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = o),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = _),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Bg(a, o, s, _) {
  return new al(a, o, s, _);
}
function bj(a) {
  return (a = a.prototype), !(!a || !a.isReactComponent);
}
function $k(a) {
  if (typeof a == "function") return bj(a) ? 1 : 0;
  if (a != null) {
    if (((a = a.$$typeof), a === Da)) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function wh(a, o) {
  var s = a.alternate;
  return (
    s === null
      ? ((s = Bg(a.tag, o, a.key, a.mode)),
        (s.elementType = a.elementType),
        (s.type = a.type),
        (s.stateNode = a.stateNode),
        (s.alternate = a),
        (a.alternate = s))
      : ((s.pendingProps = o),
        (s.type = a.type),
        (s.flags = 0),
        (s.subtreeFlags = 0),
        (s.deletions = null)),
    (s.flags = a.flags & 14680064),
    (s.childLanes = a.childLanes),
    (s.lanes = a.lanes),
    (s.child = a.child),
    (s.memoizedProps = a.memoizedProps),
    (s.memoizedState = a.memoizedState),
    (s.updateQueue = a.updateQueue),
    (o = a.dependencies),
    (s.dependencies =
      o === null ? null : { lanes: o.lanes, firstContext: o.firstContext }),
    (s.sibling = a.sibling),
    (s.index = a.index),
    (s.ref = a.ref),
    s
  );
}
function yh(a, o, s, _, $, et) {
  var tt = 2;
  if (((_ = a), typeof a == "function")) bj(a) && (tt = 1);
  else if (typeof a == "string") tt = 5;
  else
    e: switch (a) {
      case ya:
        return Ah(s.children, $, et, o);
      case za:
        (tt = 8), ($ |= 8);
        break;
      case Aa:
        return (
          (a = Bg(12, s, o, $ | 2)), (a.elementType = Aa), (a.lanes = et), a
        );
      case Ea:
        return (a = Bg(13, s, o, $)), (a.elementType = Ea), (a.lanes = et), a;
      case Fa:
        return (a = Bg(19, s, o, $)), (a.elementType = Fa), (a.lanes = et), a;
      case Ia:
        return qj(s, $, et, o);
      default:
        if (typeof a == "object" && a !== null)
          switch (a.$$typeof) {
            case Ba:
              tt = 10;
              break e;
            case Ca:
              tt = 9;
              break e;
            case Da:
              tt = 11;
              break e;
            case Ga:
              tt = 14;
              break e;
            case Ha:
              (tt = 16), (_ = null);
              break e;
          }
        throw Error(p$1(130, a == null ? a : typeof a, ""));
    }
  return (
    (o = Bg(tt, s, o, $)), (o.elementType = a), (o.type = _), (o.lanes = et), o
  );
}
function Ah(a, o, s, _) {
  return (a = Bg(7, a, _, o)), (a.lanes = s), a;
}
function qj(a, o, s, _) {
  return (
    (a = Bg(22, a, _, o)),
    (a.elementType = Ia),
    (a.lanes = s),
    (a.stateNode = { isHidden: !1 }),
    a
  );
}
function xh(a, o, s) {
  return (a = Bg(6, a, null, o)), (a.lanes = s), a;
}
function zh(a, o, s) {
  return (
    (o = Bg(4, a.children !== null ? a.children : [], a.key, o)),
    (o.lanes = s),
    (o.stateNode = {
      containerInfo: a.containerInfo,
      pendingChildren: null,
      implementation: a.implementation,
    }),
    o
  );
}
function bl(a, o, s, _, $) {
  (this.tag = o),
    (this.containerInfo = a),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = zc(0)),
    (this.expirationTimes = zc(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = zc(0)),
    (this.identifierPrefix = _),
    (this.onRecoverableError = $),
    (this.mutableSourceEagerHydrationData = null);
}
function cl(a, o, s, _, $, et, tt, rt, nt) {
  return (
    (a = new bl(a, o, s, rt, nt)),
    o === 1 ? ((o = 1), et === !0 && (o |= 8)) : (o = 0),
    (et = Bg(3, null, null, o)),
    (a.current = et),
    (et.stateNode = a),
    (et.memoizedState = {
      element: _,
      isDehydrated: s,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    ah(et),
    a
  );
}
function dl(a, o, s) {
  var _ = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: _ == null ? null : "" + _,
    children: a,
    containerInfo: o,
    implementation: s,
  };
}
function el(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  e: {
    if (Vb(a) !== a || a.tag !== 1) throw Error(p$1(170));
    var o = a;
    do {
      switch (o.tag) {
        case 3:
          o = o.stateNode.context;
          break e;
        case 1:
          if (Zf(o.type)) {
            o = o.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      o = o.return;
    } while (o !== null);
    throw Error(p$1(171));
  }
  if (a.tag === 1) {
    var s = a.type;
    if (Zf(s)) return bg(a, s, o);
  }
  return o;
}
function fl(a, o, s, _, $, et, tt, rt, nt) {
  return (
    (a = cl(s, _, !0, a, $, et, tt, rt, nt)),
    (a.context = el(null)),
    (s = a.current),
    (_ = L()),
    ($ = lh(s)),
    (et = ch(_, $)),
    (et.callback = o ?? null),
    dh(s, et, $),
    (a.current.lanes = $),
    Ac(a, $, _),
    Ek(a, _),
    a
  );
}
function gl(a, o, s, _) {
  var $ = o.current,
    et = L(),
    tt = lh($);
  return (
    (s = el(s)),
    o.context === null ? (o.context = s) : (o.pendingContext = s),
    (o = ch(et, tt)),
    (o.payload = { element: a }),
    (_ = _ === void 0 ? null : _),
    _ !== null && (o.callback = _),
    (a = dh($, o, tt)),
    a !== null && (mh(a, $, tt, et), eh(a, $, tt)),
    tt
  );
}
function hl(a) {
  if (((a = a.current), !a.child)) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, o) {
  if (((a = a.memoizedState), a !== null && a.dehydrated !== null)) {
    var s = a.retryLane;
    a.retryLane = s !== 0 && s < o ? s : o;
  }
}
function jl(a, o) {
  il(a, o), (a = a.alternate) && il(a, o);
}
function kl() {
  return null;
}
var ll =
  typeof reportError == "function"
    ? reportError
    : function (a) {
        console.error(a);
      };
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function (a) {
  var o = this._internalRoot;
  if (o === null) throw Error(p$1(409));
  gl(a, o, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function () {
  var a = this._internalRoot;
  if (a !== null) {
    this._internalRoot = null;
    var o = a.containerInfo;
    Sk(function () {
      gl(null, a, null, null);
    }),
      (o[uf] = null);
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var o = Hc();
    a = { blockedOn: null, target: a, priority: o };
    for (var s = 0; s < Qc.length && o !== 0 && o < Qc[s].priority; s++);
    Qc.splice(s, 0, a), s === 0 && Vc(a);
  }
};
function ol(a) {
  return !(!a || (a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11));
}
function pl(a) {
  return !(
    !a ||
    (a.nodeType !== 1 &&
      a.nodeType !== 9 &&
      a.nodeType !== 11 &&
      (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "))
  );
}
function ql() {}
function rl(a, o, s, _, $) {
  if ($) {
    if (typeof _ == "function") {
      var et = _;
      _ = function () {
        var it = hl(tt);
        et.call(it);
      };
    }
    var tt = fl(o, _, a, 0, null, !1, !1, "", ql);
    return (
      (a._reactRootContainer = tt),
      (a[uf] = tt.current),
      sf(a.nodeType === 8 ? a.parentNode : a),
      Sk(),
      tt
    );
  }
  for (; ($ = a.lastChild); ) a.removeChild($);
  if (typeof _ == "function") {
    var rt = _;
    _ = function () {
      var it = hl(nt);
      rt.call(it);
    };
  }
  var nt = cl(a, 0, !1, null, null, !1, !1, "", ql);
  return (
    (a._reactRootContainer = nt),
    (a[uf] = nt.current),
    sf(a.nodeType === 8 ? a.parentNode : a),
    Sk(function () {
      gl(o, nt, s, _);
    }),
    nt
  );
}
function sl(a, o, s, _, $) {
  var et = s._reactRootContainer;
  if (et) {
    var tt = et;
    if (typeof $ == "function") {
      var rt = $;
      $ = function () {
        var nt = hl(tt);
        rt.call(nt);
      };
    }
    gl(o, tt, a, $);
  } else tt = rl(s, o, a, $, _);
  return hl(tt);
}
Ec = function (a) {
  switch (a.tag) {
    case 3:
      var o = a.stateNode;
      if (o.current.memoizedState.isDehydrated) {
        var s = tc(o.pendingLanes);
        s !== 0 &&
          (Cc(o, s | 1), Ek(o, B()), !(K & 6) && ((Hj = B() + 500), jg()));
      }
      break;
    case 13:
      Sk(function () {
        var _ = Zg(a, 1);
        if (_ !== null) {
          var $ = L();
          mh(_, a, 1, $);
        }
      }),
        jl(a, 1);
  }
};
Fc = function (a) {
  if (a.tag === 13) {
    var o = Zg(a, 134217728);
    if (o !== null) {
      var s = L();
      mh(o, a, 134217728, s);
    }
    jl(a, 134217728);
  }
};
Gc = function (a) {
  if (a.tag === 13) {
    var o = lh(a),
      s = Zg(a, o);
    if (s !== null) {
      var _ = L();
      mh(s, a, o, _);
    }
    jl(a, o);
  }
};
Hc = function () {
  return C;
};
Ic = function (a, o) {
  var s = C;
  try {
    return (C = a), o();
  } finally {
    C = s;
  }
};
yb = function (a, o, s) {
  switch (o) {
    case "input":
      if ((bb(a, s), (o = s.name), s.type === "radio" && o != null)) {
        for (s = a; s.parentNode; ) s = s.parentNode;
        for (
          s = s.querySelectorAll(
            "input[name=" + JSON.stringify("" + o) + '][type="radio"]'
          ),
            o = 0;
          o < s.length;
          o++
        ) {
          var _ = s[o];
          if (_ !== a && _.form === a.form) {
            var $ = Db(_);
            if (!$) throw Error(p$1(90));
            Wa(_), bb(_, $);
          }
        }
      }
      break;
    case "textarea":
      ib(a, s);
      break;
    case "select":
      (o = s.value), o != null && fb(a, !!s.multiple, o, !1);
  }
};
Gb = Rk;
Hb = Sk;
var tl = { usingClientEntryPoint: !1, Events: [Cb, ue, Db, Eb, Fb, Rk] },
  ul = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  vl = {
    bundleType: ul.bundleType,
    version: ul.version,
    rendererPackageName: ul.rendererPackageName,
    rendererConfig: ul.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ua.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (a) {
      return (a = Zb(a)), a === null ? null : a.stateNode;
    },
    findFiberByHostInstance: ul.findFiberByHostInstance || kl,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      (kc = wl.inject(vl)), (lc = wl);
    } catch {}
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function (a, o) {
  var s = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!ol(o)) throw Error(p$1(200));
  return dl(a, o, null, s);
};
reactDom_production_min.createRoot = function (a, o) {
  if (!ol(a)) throw Error(p$1(299));
  var s = !1,
    _ = "",
    $ = ll;
  return (
    o != null &&
      (o.unstable_strictMode === !0 && (s = !0),
      o.identifierPrefix !== void 0 && (_ = o.identifierPrefix),
      o.onRecoverableError !== void 0 && ($ = o.onRecoverableError)),
    (o = cl(a, 1, !1, null, null, s, !1, _, $)),
    (a[uf] = o.current),
    sf(a.nodeType === 8 ? a.parentNode : a),
    new ml(o)
  );
};
reactDom_production_min.findDOMNode = function (a) {
  if (a == null) return null;
  if (a.nodeType === 1) return a;
  var o = a._reactInternals;
  if (o === void 0)
    throw typeof a.render == "function"
      ? Error(p$1(188))
      : ((a = Object.keys(a).join(",")), Error(p$1(268, a)));
  return (a = Zb(o)), (a = a === null ? null : a.stateNode), a;
};
reactDom_production_min.flushSync = function (a) {
  return Sk(a);
};
reactDom_production_min.hydrate = function (a, o, s) {
  if (!pl(o)) throw Error(p$1(200));
  return sl(null, a, o, !0, s);
};
reactDom_production_min.hydrateRoot = function (a, o, s) {
  if (!ol(a)) throw Error(p$1(405));
  var _ = (s != null && s.hydratedSources) || null,
    $ = !1,
    et = "",
    tt = ll;
  if (
    (s != null &&
      (s.unstable_strictMode === !0 && ($ = !0),
      s.identifierPrefix !== void 0 && (et = s.identifierPrefix),
      s.onRecoverableError !== void 0 && (tt = s.onRecoverableError)),
    (o = fl(o, null, a, 1, s ?? null, $, !1, et, tt)),
    (a[uf] = o.current),
    sf(a),
    _)
  )
    for (a = 0; a < _.length; a++)
      (s = _[a]),
        ($ = s._getVersion),
        ($ = $(s._source)),
        o.mutableSourceEagerHydrationData == null
          ? (o.mutableSourceEagerHydrationData = [s, $])
          : o.mutableSourceEagerHydrationData.push(s, $);
  return new nl(o);
};
reactDom_production_min.render = function (a, o, s) {
  if (!pl(o)) throw Error(p$1(200));
  return sl(null, a, o, !1, s);
};
reactDom_production_min.unmountComponentAtNode = function (a) {
  if (!pl(a)) throw Error(p$1(40));
  return a._reactRootContainer
    ? (Sk(function () {
        sl(null, null, a, !1, function () {
          (a._reactRootContainer = null), (a[uf] = null);
        });
      }),
      !0)
    : !1;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function (
  a,
  o,
  s,
  _
) {
  if (!pl(s)) throw Error(p$1(200));
  if (a == null || a._reactInternals === void 0) throw Error(p$1(38));
  return sl(a, o, s, !1, _);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
function checkDCE() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
    } catch (a) {
      console.error(a);
    }
}
checkDCE(), (reactDom.exports = reactDom_production_min);
var reactDomExports = reactDom.exports,
  m$1 = reactDomExports;
(client.createRoot = m$1.createRoot), (client.hydrateRoot = m$1.hydrateRoot);
/**
 * @remix-run/router v1.7.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function _extends$3() {
  return (
    (_extends$3 = Object.assign
      ? Object.assign.bind()
      : function (a) {
          for (var o = 1; o < arguments.length; o++) {
            var s = arguments[o];
            for (var _ in s)
              Object.prototype.hasOwnProperty.call(s, _) && (a[_] = s[_]);
          }
          return a;
        }),
    _extends$3.apply(this, arguments)
  );
}
var Action;
(function (a) {
  (a.Pop = "POP"), (a.Push = "PUSH"), (a.Replace = "REPLACE");
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createHashHistory(a) {
  a === void 0 && (a = {});
  function o($, et) {
    let {
      pathname: tt = "/",
      search: rt = "",
      hash: nt = "",
    } = parsePath($.location.hash.substr(1));
    return createLocation(
      "",
      { pathname: tt, search: rt, hash: nt },
      (et.state && et.state.usr) || null,
      (et.state && et.state.key) || "default"
    );
  }
  function s($, et) {
    let tt = $.document.querySelector("base"),
      rt = "";
    if (tt && tt.getAttribute("href")) {
      let nt = $.location.href,
        it = nt.indexOf("#");
      rt = it === -1 ? nt : nt.slice(0, it);
    }
    return rt + "#" + (typeof et == "string" ? et : createPath(et));
  }
  function _($, et) {
    warning$1(
      $.pathname.charAt(0) === "/",
      "relative pathnames are not supported in hash history.push(" +
        JSON.stringify(et) +
        ")"
    );
  }
  return getUrlBasedHistory(o, s, _, a);
}
function invariant$1(a, o) {
  if (a === !1 || a === null || typeof a > "u") throw new Error(o);
}
function warning$1(a, o) {
  if (!a) {
    typeof console < "u" && console.warn(o);
    try {
      throw new Error(o);
    } catch {}
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(a, o) {
  return { usr: a.state, key: a.key, idx: o };
}
function createLocation(a, o, s, _) {
  return (
    s === void 0 && (s = null),
    _extends$3(
      { pathname: typeof a == "string" ? a : a.pathname, search: "", hash: "" },
      typeof o == "string" ? parsePath(o) : o,
      { state: s, key: (o && o.key) || _ || createKey() }
    )
  );
}
function createPath(a) {
  let { pathname: o = "/", search: s = "", hash: _ = "" } = a;
  return (
    s && s !== "?" && (o += s.charAt(0) === "?" ? s : "?" + s),
    _ && _ !== "#" && (o += _.charAt(0) === "#" ? _ : "#" + _),
    o
  );
}
function parsePath(a) {
  let o = {};
  if (a) {
    let s = a.indexOf("#");
    s >= 0 && ((o.hash = a.substr(s)), (a = a.substr(0, s)));
    let _ = a.indexOf("?");
    _ >= 0 && ((o.search = a.substr(_)), (a = a.substr(0, _))),
      a && (o.pathname = a);
  }
  return o;
}
function getUrlBasedHistory(a, o, s, _) {
  _ === void 0 && (_ = {});
  let { window: $ = document.defaultView, v5Compat: et = !1 } = _,
    tt = $.history,
    rt = Action.Pop,
    nt = null,
    it = at();
  it == null &&
    ((it = 0), tt.replaceState(_extends$3({}, tt.state, { idx: it }), ""));
  function at() {
    return (tt.state || { idx: null }).idx;
  }
  function st() {
    rt = Action.Pop;
    let mt = at(),
      ut = mt == null ? null : mt - it;
    (it = mt), nt && nt({ action: rt, location: ft.location, delta: ut });
  }
  function ot(mt, ut) {
    rt = Action.Push;
    let lt = createLocation(ft.location, mt, ut);
    s && s(lt, mt), (it = at() + 1);
    let ct = getHistoryState(lt, it),
      pt = ft.createHref(lt);
    try {
      tt.pushState(ct, "", pt);
    } catch (vt) {
      if (vt instanceof DOMException && vt.name === "DataCloneError") throw vt;
      $.location.assign(pt);
    }
    et && nt && nt({ action: rt, location: ft.location, delta: 1 });
  }
  function dt(mt, ut) {
    rt = Action.Replace;
    let lt = createLocation(ft.location, mt, ut);
    s && s(lt, mt), (it = at());
    let ct = getHistoryState(lt, it),
      pt = ft.createHref(lt);
    tt.replaceState(ct, "", pt),
      et && nt && nt({ action: rt, location: ft.location, delta: 0 });
  }
  function ht(mt) {
    let ut = $.location.origin !== "null" ? $.location.origin : $.location.href,
      lt = typeof mt == "string" ? mt : createPath(mt);
    return (
      invariant$1(
        ut,
        "No window.location.(origin|href) available to create URL for href: " +
          lt
      ),
      new URL(lt, ut)
    );
  }
  let ft = {
    get action() {
      return rt;
    },
    get location() {
      return a($, tt);
    },
    listen(mt) {
      if (nt) throw new Error("A history only accepts one active listener");
      return (
        $.addEventListener(PopStateEventType, st),
        (nt = mt),
        () => {
          $.removeEventListener(PopStateEventType, st), (nt = null);
        }
      );
    },
    createHref(mt) {
      return o($, mt);
    },
    createURL: ht,
    encodeLocation(mt) {
      let ut = ht(mt);
      return { pathname: ut.pathname, search: ut.search, hash: ut.hash };
    },
    push: ot,
    replace: dt,
    go(mt) {
      return tt.go(mt);
    },
  };
  return ft;
}
var ResultType;
(function (a) {
  (a.data = "data"),
    (a.deferred = "deferred"),
    (a.redirect = "redirect"),
    (a.error = "error");
})(ResultType || (ResultType = {}));
function matchRoutes(a, o, s) {
  s === void 0 && (s = "/");
  let _ = typeof o == "string" ? parsePath(o) : o,
    $ = stripBasename(_.pathname || "/", s);
  if ($ == null) return null;
  let et = flattenRoutes(a);
  rankRouteBranches(et);
  let tt = null;
  for (let rt = 0; tt == null && rt < et.length; ++rt)
    tt = matchRouteBranch(et[rt], safelyDecodeURI($));
  return tt;
}
function flattenRoutes(a, o, s, _) {
  o === void 0 && (o = []), s === void 0 && (s = []), _ === void 0 && (_ = "");
  let $ = (et, tt, rt) => {
    let nt = {
      relativePath: rt === void 0 ? et.path || "" : rt,
      caseSensitive: et.caseSensitive === !0,
      childrenIndex: tt,
      route: et,
    };
    nt.relativePath.startsWith("/") &&
      (invariant$1(
        nt.relativePath.startsWith(_),
        'Absolute route path "' +
          nt.relativePath +
          '" nested under path ' +
          ('"' + _ + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes."
      ),
      (nt.relativePath = nt.relativePath.slice(_.length)));
    let it = joinPaths([_, nt.relativePath]),
      at = s.concat(nt);
    et.children &&
      et.children.length > 0 &&
      (invariant$1(
        et.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + it + '".')
      ),
      flattenRoutes(et.children, o, at, it)),
      !(et.path == null && !et.index) &&
        o.push({ path: it, score: computeScore(it, et.index), routesMeta: at });
  };
  return (
    a.forEach((et, tt) => {
      var rt;
      if (et.path === "" || !((rt = et.path) != null && rt.includes("?")))
        $(et, tt);
      else for (let nt of explodeOptionalSegments(et.path)) $(et, tt, nt);
    }),
    o
  );
}
function explodeOptionalSegments(a) {
  let o = a.split("/");
  if (o.length === 0) return [];
  let [s, ..._] = o,
    $ = s.endsWith("?"),
    et = s.replace(/\?$/, "");
  if (_.length === 0) return $ ? [et, ""] : [et];
  let tt = explodeOptionalSegments(_.join("/")),
    rt = [];
  return (
    rt.push(...tt.map((nt) => (nt === "" ? et : [et, nt].join("/")))),
    $ && rt.push(...tt),
    rt.map((nt) => (a.startsWith("/") && nt === "" ? "/" : nt))
  );
}
function rankRouteBranches(a) {
  a.sort((o, s) =>
    o.score !== s.score
      ? s.score - o.score
      : compareIndexes(
          o.routesMeta.map((_) => _.childrenIndex),
          s.routesMeta.map((_) => _.childrenIndex)
        )
  );
}
const paramRe = /^:\w+$/,
  dynamicSegmentValue = 3,
  indexRouteValue = 2,
  emptySegmentValue = 1,
  staticSegmentValue = 10,
  splatPenalty = -2,
  isSplat = (a) => a === "*";
function computeScore(a, o) {
  let s = a.split("/"),
    _ = s.length;
  return (
    s.some(isSplat) && (_ += splatPenalty),
    o && (_ += indexRouteValue),
    s
      .filter(($) => !isSplat($))
      .reduce(
        ($, et) =>
          $ +
          (paramRe.test(et)
            ? dynamicSegmentValue
            : et === ""
            ? emptySegmentValue
            : staticSegmentValue),
        _
      )
  );
}
function compareIndexes(a, o) {
  return a.length === o.length && a.slice(0, -1).every((_, $) => _ === o[$])
    ? a[a.length - 1] - o[o.length - 1]
    : 0;
}
function matchRouteBranch(a, o) {
  let { routesMeta: s } = a,
    _ = {},
    $ = "/",
    et = [];
  for (let tt = 0; tt < s.length; ++tt) {
    let rt = s[tt],
      nt = tt === s.length - 1,
      it = $ === "/" ? o : o.slice($.length) || "/",
      at = matchPath(
        { path: rt.relativePath, caseSensitive: rt.caseSensitive, end: nt },
        it
      );
    if (!at) return null;
    Object.assign(_, at.params);
    let st = rt.route;
    et.push({
      params: _,
      pathname: joinPaths([$, at.pathname]),
      pathnameBase: normalizePathname(joinPaths([$, at.pathnameBase])),
      route: st,
    }),
      at.pathnameBase !== "/" && ($ = joinPaths([$, at.pathnameBase]));
  }
  return et;
}
function matchPath(a, o) {
  typeof a == "string" && (a = { path: a, caseSensitive: !1, end: !0 });
  let [s, _] = compilePath(a.path, a.caseSensitive, a.end),
    $ = o.match(s);
  if (!$) return null;
  let et = $[0],
    tt = et.replace(/(.)\/+$/, "$1"),
    rt = $.slice(1);
  return {
    params: _.reduce((it, at, st) => {
      if (at === "*") {
        let ot = rt[st] || "";
        tt = et.slice(0, et.length - ot.length).replace(/(.)\/+$/, "$1");
      }
      return (it[at] = safelyDecodeURIComponent(rt[st] || "", at)), it;
    }, {}),
    pathname: et,
    pathnameBase: tt,
    pattern: a,
  };
}
function compilePath(a, o, s) {
  o === void 0 && (o = !1),
    s === void 0 && (s = !0),
    warning$1(
      a === "*" || !a.endsWith("*") || a.endsWith("/*"),
      'Route path "' +
        a +
        '" will be treated as if it were ' +
        ('"' + a.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + a.replace(/\*$/, "/*") + '".')
    );
  let _ = [],
    $ =
      "^" +
      a
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&")
        .replace(/\/:(\w+)/g, (tt, rt) => (_.push(rt), "/([^\\/]+)"));
  return (
    a.endsWith("*")
      ? (_.push("*"),
        ($ += a === "*" || a === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : s
      ? ($ += "\\/*$")
      : a !== "" && a !== "/" && ($ += "(?:(?=\\/|$))"),
    [new RegExp($, o ? void 0 : "i"), _]
  );
}
function safelyDecodeURI(a) {
  try {
    return decodeURI(a);
  } catch (o) {
    return (
      warning$1(
        !1,
        'The URL path "' +
          a +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + o + ").")
      ),
      a
    );
  }
}
function safelyDecodeURIComponent(a, o) {
  try {
    return decodeURIComponent(a);
  } catch (s) {
    return (
      warning$1(
        !1,
        'The value for the URL param "' +
          o +
          '" will not be decoded because' +
          (' the string "' +
            a +
            '" is a malformed URL segment. This is probably') +
          (" due to a bad percent encoding (" + s + ").")
      ),
      a
    );
  }
}
function stripBasename(a, o) {
  if (o === "/") return a;
  if (!a.toLowerCase().startsWith(o.toLowerCase())) return null;
  let s = o.endsWith("/") ? o.length - 1 : o.length,
    _ = a.charAt(s);
  return _ && _ !== "/" ? null : a.slice(s) || "/";
}
function resolvePath(a, o) {
  o === void 0 && (o = "/");
  let {
    pathname: s,
    search: _ = "",
    hash: $ = "",
  } = typeof a == "string" ? parsePath(a) : a;
  return {
    pathname: s ? (s.startsWith("/") ? s : resolvePathname(s, o)) : o,
    search: normalizeSearch(_),
    hash: normalizeHash($),
  };
}
function resolvePathname(a, o) {
  let s = o.replace(/\/+$/, "").split("/");
  return (
    a.split("/").forEach(($) => {
      $ === ".." ? s.length > 1 && s.pop() : $ !== "." && s.push($);
    }),
    s.length > 1 ? s.join("/") : "/"
  );
}
function getInvalidPathError(a, o, s, _) {
  return (
    "Cannot include a '" +
    a +
    "' character in a manually specified " +
    ("`to." +
      o +
      "` field [" +
      JSON.stringify(_) +
      "].  Please separate it out to the ") +
    ("`to." + s + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function getPathContributingMatches(a) {
  return a.filter(
    (o, s) => s === 0 || (o.route.path && o.route.path.length > 0)
  );
}
function resolveTo(a, o, s, _) {
  _ === void 0 && (_ = !1);
  let $;
  typeof a == "string"
    ? ($ = parsePath(a))
    : (($ = _extends$3({}, a)),
      invariant$1(
        !$.pathname || !$.pathname.includes("?"),
        getInvalidPathError("?", "pathname", "search", $)
      ),
      invariant$1(
        !$.pathname || !$.pathname.includes("#"),
        getInvalidPathError("#", "pathname", "hash", $)
      ),
      invariant$1(
        !$.search || !$.search.includes("#"),
        getInvalidPathError("#", "search", "hash", $)
      ));
  let et = a === "" || $.pathname === "",
    tt = et ? "/" : $.pathname,
    rt;
  if (_ || tt == null) rt = s;
  else {
    let st = o.length - 1;
    if (tt.startsWith("..")) {
      let ot = tt.split("/");
      for (; ot[0] === ".."; ) ot.shift(), (st -= 1);
      $.pathname = ot.join("/");
    }
    rt = st >= 0 ? o[st] : "/";
  }
  let nt = resolvePath($, rt),
    it = tt && tt !== "/" && tt.endsWith("/"),
    at = (et || tt === ".") && s.endsWith("/");
  return !nt.pathname.endsWith("/") && (it || at) && (nt.pathname += "/"), nt;
}
const joinPaths = (a) => a.join("/").replace(/\/\/+/g, "/"),
  normalizePathname = (a) => a.replace(/\/+$/, "").replace(/^\/*/, "/"),
  normalizeSearch = (a) =>
    !a || a === "?" ? "" : a.startsWith("?") ? a : "?" + a,
  normalizeHash = (a) =>
    !a || a === "#" ? "" : a.startsWith("#") ? a : "#" + a;
function isRouteErrorResponse(a) {
  return (
    a != null &&
    typeof a.status == "number" &&
    typeof a.statusText == "string" &&
    typeof a.internal == "boolean" &&
    "data" in a
  );
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function _extends$2() {
  return (
    (_extends$2 = Object.assign
      ? Object.assign.bind()
      : function (a) {
          for (var o = 1; o < arguments.length; o++) {
            var s = arguments[o];
            for (var _ in s)
              Object.prototype.hasOwnProperty.call(s, _) && (a[_] = s[_]);
          }
          return a;
        }),
    _extends$2.apply(this, arguments)
  );
}
const DataRouterContext = reactExports.createContext(null),
  DataRouterStateContext = reactExports.createContext(null),
  NavigationContext = reactExports.createContext(null),
  LocationContext = reactExports.createContext(null),
  RouteContext = reactExports.createContext({
    outlet: null,
    matches: [],
    isDataRoute: !1,
  }),
  RouteErrorContext = reactExports.createContext(null);
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  return (
    useInRouterContext() || invariant$1(!1),
    reactExports.useContext(LocationContext).location
  );
}
function useIsomorphicLayoutEffect$1(a) {
  reactExports.useContext(NavigationContext).static ||
    reactExports.useLayoutEffect(a);
}
function useNavigate() {
  let { isDataRoute: a } = reactExports.useContext(RouteContext);
  return a ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  useInRouterContext() || invariant$1(!1);
  let a = reactExports.useContext(DataRouterContext),
    { basename: o, navigator: s } = reactExports.useContext(NavigationContext),
    { matches: _ } = reactExports.useContext(RouteContext),
    { pathname: $ } = useLocation(),
    et = JSON.stringify(
      getPathContributingMatches(_).map((nt) => nt.pathnameBase)
    ),
    tt = reactExports.useRef(!1);
  return (
    useIsomorphicLayoutEffect$1(() => {
      tt.current = !0;
    }),
    reactExports.useCallback(
      function (nt, it) {
        if ((it === void 0 && (it = {}), !tt.current)) return;
        if (typeof nt == "number") {
          s.go(nt);
          return;
        }
        let at = resolveTo(nt, JSON.parse(et), $, it.relative === "path");
        a == null &&
          o !== "/" &&
          (at.pathname = at.pathname === "/" ? o : joinPaths([o, at.pathname])),
          (it.replace ? s.replace : s.push)(at, it.state, it);
      },
      [o, s, et, $, a]
    )
  );
}
const OutletContext = reactExports.createContext(null);
function useOutlet(a) {
  let o = reactExports.useContext(RouteContext).outlet;
  return (
    o && reactExports.createElement(OutletContext.Provider, { value: a }, o)
  );
}
function useRoutes(a, o) {
  return useRoutesImpl(a, o);
}
function useRoutesImpl(a, o, s) {
  useInRouterContext() || invariant$1(!1);
  let { navigator: _ } = reactExports.useContext(NavigationContext),
    { matches: $ } = reactExports.useContext(RouteContext),
    et = $[$.length - 1],
    tt = et ? et.params : {};
  et && et.pathname;
  let rt = et ? et.pathnameBase : "/";
  et && et.route;
  let nt = useLocation(),
    it;
  if (o) {
    var at;
    let ft = typeof o == "string" ? parsePath(o) : o;
    rt === "/" ||
      ((at = ft.pathname) != null && at.startsWith(rt)) ||
      invariant$1(!1),
      (it = ft);
  } else it = nt;
  let st = it.pathname || "/",
    ot = rt === "/" ? st : st.slice(rt.length) || "/",
    dt = matchRoutes(a, { pathname: ot }),
    ht = _renderMatches(
      dt &&
        dt.map((ft) =>
          Object.assign({}, ft, {
            params: Object.assign({}, tt, ft.params),
            pathname: joinPaths([
              rt,
              _.encodeLocation
                ? _.encodeLocation(ft.pathname).pathname
                : ft.pathname,
            ]),
            pathnameBase:
              ft.pathnameBase === "/"
                ? rt
                : joinPaths([
                    rt,
                    _.encodeLocation
                      ? _.encodeLocation(ft.pathnameBase).pathname
                      : ft.pathnameBase,
                  ]),
          })
        ),
      $,
      s
    );
  return o && ht
    ? reactExports.createElement(
        LocationContext.Provider,
        {
          value: {
            location: _extends$2(
              {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
              },
              it
            ),
            navigationType: Action.Pop,
          },
        },
        ht
      )
    : ht;
}
function DefaultErrorComponent() {
  let a = useRouteError(),
    o = isRouteErrorResponse(a)
      ? a.status + " " + a.statusText
      : a instanceof Error
      ? a.message
      : JSON.stringify(a),
    s = a instanceof Error ? a.stack : null,
    $ = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" },
    et = null;
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    reactExports.createElement("h2", null, "Unexpected Application Error!"),
    reactExports.createElement("h3", { style: { fontStyle: "italic" } }, o),
    s ? reactExports.createElement("pre", { style: $ }, s) : null,
    et
  );
}
const defaultErrorElement = reactExports.createElement(
  DefaultErrorComponent,
  null
);
class RenderErrorBoundary extends reactExports.Component {
  constructor(o) {
    super(o),
      (this.state = {
        location: o.location,
        revalidation: o.revalidation,
        error: o.error,
      });
  }
  static getDerivedStateFromError(o) {
    return { error: o };
  }
  static getDerivedStateFromProps(o, s) {
    return s.location !== o.location ||
      (s.revalidation !== "idle" && o.revalidation === "idle")
      ? { error: o.error, location: o.location, revalidation: o.revalidation }
      : {
          error: o.error || s.error,
          location: s.location,
          revalidation: o.revalidation || s.revalidation,
        };
  }
  componentDidCatch(o, s) {
    console.error(
      "React Router caught the following error during render",
      o,
      s
    );
  }
  render() {
    return this.state.error
      ? reactExports.createElement(
          RouteContext.Provider,
          { value: this.props.routeContext },
          reactExports.createElement(RouteErrorContext.Provider, {
            value: this.state.error,
            children: this.props.component,
          })
        )
      : this.props.children;
  }
}
function RenderedRoute(a) {
  let { routeContext: o, match: s, children: _ } = a,
    $ = reactExports.useContext(DataRouterContext);
  return (
    $ &&
      $.static &&
      $.staticContext &&
      (s.route.errorElement || s.route.ErrorBoundary) &&
      ($.staticContext._deepestRenderedBoundaryId = s.route.id),
    reactExports.createElement(RouteContext.Provider, { value: o }, _)
  );
}
function _renderMatches(a, o, s) {
  var _;
  if ((o === void 0 && (o = []), s === void 0 && (s = null), a == null)) {
    var $;
    if (($ = s) != null && $.errors) a = s.matches;
    else return null;
  }
  let et = a,
    tt = (_ = s) == null ? void 0 : _.errors;
  if (tt != null) {
    let rt = et.findIndex(
      (nt) => nt.route.id && (tt == null ? void 0 : tt[nt.route.id])
    );
    rt >= 0 || invariant$1(!1), (et = et.slice(0, Math.min(et.length, rt + 1)));
  }
  return et.reduceRight((rt, nt, it) => {
    let at = nt.route.id ? (tt == null ? void 0 : tt[nt.route.id]) : null,
      st = null;
    s && (st = nt.route.errorElement || defaultErrorElement);
    let ot = o.concat(et.slice(0, it + 1)),
      dt = () => {
        let ht;
        return (
          at
            ? (ht = st)
            : nt.route.Component
            ? (ht = reactExports.createElement(nt.route.Component, null))
            : nt.route.element
            ? (ht = nt.route.element)
            : (ht = rt),
          reactExports.createElement(RenderedRoute, {
            match: nt,
            routeContext: { outlet: rt, matches: ot, isDataRoute: s != null },
            children: ht,
          })
        );
      };
    return s && (nt.route.ErrorBoundary || nt.route.errorElement || it === 0)
      ? reactExports.createElement(RenderErrorBoundary, {
          location: s.location,
          revalidation: s.revalidation,
          component: st,
          error: at,
          children: dt(),
          routeContext: { outlet: null, matches: ot, isDataRoute: !0 },
        })
      : dt();
  }, null);
}
var DataRouterHook$1;
(function (a) {
  (a.UseBlocker = "useBlocker"),
    (a.UseRevalidator = "useRevalidator"),
    (a.UseNavigateStable = "useNavigate");
})(DataRouterHook$1 || (DataRouterHook$1 = {}));
var DataRouterStateHook$1;
(function (a) {
  (a.UseBlocker = "useBlocker"),
    (a.UseLoaderData = "useLoaderData"),
    (a.UseActionData = "useActionData"),
    (a.UseRouteError = "useRouteError"),
    (a.UseNavigation = "useNavigation"),
    (a.UseRouteLoaderData = "useRouteLoaderData"),
    (a.UseMatches = "useMatches"),
    (a.UseRevalidator = "useRevalidator"),
    (a.UseNavigateStable = "useNavigate"),
    (a.UseRouteId = "useRouteId");
})(DataRouterStateHook$1 || (DataRouterStateHook$1 = {}));
function useDataRouterContext(a) {
  let o = reactExports.useContext(DataRouterContext);
  return o || invariant$1(!1), o;
}
function useDataRouterState(a) {
  let o = reactExports.useContext(DataRouterStateContext);
  return o || invariant$1(!1), o;
}
function useRouteContext(a) {
  let o = reactExports.useContext(RouteContext);
  return o || invariant$1(!1), o;
}
function useCurrentRouteId(a) {
  let o = useRouteContext(),
    s = o.matches[o.matches.length - 1];
  return s.route.id || invariant$1(!1), s.route.id;
}
function useRouteError() {
  var a;
  let o = reactExports.useContext(RouteErrorContext),
    s = useDataRouterState(DataRouterStateHook$1.UseRouteError),
    _ = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  return o || ((a = s.errors) == null ? void 0 : a[_]);
}
function useNavigateStable() {
  let { router: a } = useDataRouterContext(DataRouterHook$1.UseNavigateStable),
    o = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable),
    s = reactExports.useRef(!1);
  return (
    useIsomorphicLayoutEffect$1(() => {
      s.current = !0;
    }),
    reactExports.useCallback(
      function ($, et) {
        et === void 0 && (et = {}),
          s.current &&
            (typeof $ == "number"
              ? a.navigate($)
              : a.navigate($, _extends$2({ fromRouteId: o }, et)));
      },
      [a, o]
    )
  );
}
function Outlet(a) {
  return useOutlet(a.context);
}
function Route(a) {
  invariant$1(!1);
}
function Router(a) {
  let {
    basename: o = "/",
    children: s = null,
    location: _,
    navigationType: $ = Action.Pop,
    navigator: et,
    static: tt = !1,
  } = a;
  useInRouterContext() && invariant$1(!1);
  let rt = o.replace(/^\/*/, "/"),
    nt = reactExports.useMemo(
      () => ({ basename: rt, navigator: et, static: tt }),
      [rt, et, tt]
    );
  typeof _ == "string" && (_ = parsePath(_));
  let {
      pathname: it = "/",
      search: at = "",
      hash: st = "",
      state: ot = null,
      key: dt = "default",
    } = _,
    ht = reactExports.useMemo(() => {
      let ft = stripBasename(it, rt);
      return ft == null
        ? null
        : {
            location: {
              pathname: ft,
              search: at,
              hash: st,
              state: ot,
              key: dt,
            },
            navigationType: $,
          };
    }, [rt, it, at, st, ot, dt, $]);
  return ht == null
    ? null
    : reactExports.createElement(
        NavigationContext.Provider,
        { value: nt },
        reactExports.createElement(LocationContext.Provider, {
          children: s,
          value: ht,
        })
      );
}
function Routes(a) {
  let { children: o, location: s } = a;
  return useRoutes(createRoutesFromChildren(o), s);
}
var AwaitRenderStatus;
(function (a) {
  (a[(a.pending = 0)] = "pending"),
    (a[(a.success = 1)] = "success"),
    (a[(a.error = 2)] = "error");
})(AwaitRenderStatus || (AwaitRenderStatus = {}));
new Promise(() => {});
function createRoutesFromChildren(a, o) {
  o === void 0 && (o = []);
  let s = [];
  return (
    reactExports.Children.forEach(a, (_, $) => {
      if (!reactExports.isValidElement(_)) return;
      let et = [...o, $];
      if (_.type === reactExports.Fragment) {
        s.push.apply(s, createRoutesFromChildren(_.props.children, et));
        return;
      }
      _.type !== Route && invariant$1(!1),
        !_.props.index || !_.props.children || invariant$1(!1);
      let tt = {
        id: _.props.id || et.join("-"),
        caseSensitive: _.props.caseSensitive,
        element: _.props.element,
        Component: _.props.Component,
        index: _.props.index,
        path: _.props.path,
        loader: _.props.loader,
        action: _.props.action,
        errorElement: _.props.errorElement,
        ErrorBoundary: _.props.ErrorBoundary,
        hasErrorBoundary:
          _.props.ErrorBoundary != null || _.props.errorElement != null,
        shouldRevalidate: _.props.shouldRevalidate,
        handle: _.props.handle,
        lazy: _.props.lazy,
      };
      _.props.children &&
        (tt.children = createRoutesFromChildren(_.props.children, et)),
        s.push(tt);
    }),
    s
  );
}
/**
 * React Router DOM v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ const START_TRANSITION = "startTransition",
  startTransitionImpl = React$1[START_TRANSITION];
function HashRouter(a) {
  let { basename: o, children: s, future: _, window: $ } = a,
    et = reactExports.useRef();
  et.current == null &&
    (et.current = createHashHistory({ window: $, v5Compat: !0 }));
  let tt = et.current,
    [rt, nt] = reactExports.useState({
      action: tt.action,
      location: tt.location,
    }),
    { v7_startTransition: it } = _ || {},
    at = reactExports.useCallback(
      (st) => {
        it && startTransitionImpl ? startTransitionImpl(() => nt(st)) : nt(st);
      },
      [nt, it]
    );
  return (
    reactExports.useLayoutEffect(() => tt.listen(at), [tt, at]),
    reactExports.createElement(Router, {
      basename: o,
      children: s,
      location: rt.location,
      navigationType: rt.action,
      navigator: tt,
    })
  );
}
var DataRouterHook;
(function (a) {
  (a.UseScrollRestoration = "useScrollRestoration"),
    (a.UseSubmit = "useSubmit"),
    (a.UseSubmitFetcher = "useSubmitFetcher"),
    (a.UseFetcher = "useFetcher");
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function (a) {
  (a.UseFetchers = "useFetchers"),
    (a.UseScrollRestoration = "useScrollRestoration");
})(DataRouterStateHook || (DataRouterStateHook = {}));
const App$1 = "";
function sheetForTag(a) {
  if (a.sheet) return a.sheet;
  for (var o = 0; o < document.styleSheets.length; o++)
    if (document.styleSheets[o].ownerNode === a) return document.styleSheets[o];
}
function createStyleElement(a) {
  var o = document.createElement("style");
  return (
    o.setAttribute("data-emotion", a.key),
    a.nonce !== void 0 && o.setAttribute("nonce", a.nonce),
    o.appendChild(document.createTextNode("")),
    o.setAttribute("data-s", ""),
    o
  );
}
var StyleSheet = (function () {
    function a(s) {
      var _ = this;
      (this._insertTag = function ($) {
        var et;
        _.tags.length === 0
          ? _.insertionPoint
            ? (et = _.insertionPoint.nextSibling)
            : _.prepend
            ? (et = _.container.firstChild)
            : (et = _.before)
          : (et = _.tags[_.tags.length - 1].nextSibling),
          _.container.insertBefore($, et),
          _.tags.push($);
      }),
        (this.isSpeedy = s.speedy === void 0 ? !0 : s.speedy),
        (this.tags = []),
        (this.ctr = 0),
        (this.nonce = s.nonce),
        (this.key = s.key),
        (this.container = s.container),
        (this.prepend = s.prepend),
        (this.insertionPoint = s.insertionPoint),
        (this.before = null);
    }
    var o = a.prototype;
    return (
      (o.hydrate = function (_) {
        _.forEach(this._insertTag);
      }),
      (o.insert = function (_) {
        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
          this._insertTag(createStyleElement(this));
        var $ = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
          var et = sheetForTag($);
          try {
            et.insertRule(_, et.cssRules.length);
          } catch {}
        } else $.appendChild(document.createTextNode(_));
        this.ctr++;
      }),
      (o.flush = function () {
        this.tags.forEach(function (_) {
          return _.parentNode && _.parentNode.removeChild(_);
        }),
          (this.tags = []),
          (this.ctr = 0);
      }),
      a
    );
  })(),
  MS = "-ms-",
  MOZ = "-moz-",
  WEBKIT = "-webkit-",
  COMMENT = "comm",
  RULESET = "rule",
  DECLARATION = "decl",
  IMPORT = "@import",
  KEYFRAMES = "@keyframes",
  LAYER = "@layer",
  abs = Math.abs,
  from = String.fromCharCode,
  assign$2 = Object.assign;
function hash$1(a, o) {
  return charat(a, 0) ^ 45
    ? (((((((o << 2) ^ charat(a, 0)) << 2) ^ charat(a, 1)) << 2) ^
        charat(a, 2)) <<
        2) ^
        charat(a, 3)
    : 0;
}
function trim(a) {
  return a.trim();
}
function match(a, o) {
  return (a = o.exec(a)) ? a[0] : a;
}
function replace(a, o, s) {
  return a.replace(o, s);
}
function indexof(a, o) {
  return a.indexOf(o);
}
function charat(a, o) {
  return a.charCodeAt(o) | 0;
}
function substr(a, o, s) {
  return a.slice(o, s);
}
function strlen(a) {
  return a.length;
}
function sizeof(a) {
  return a.length;
}
function append(a, o) {
  return o.push(a), a;
}
function combine(a, o) {
  return a.map(o).join("");
}
var line = 1,
  column = 1,
  length = 0,
  position$1 = 0,
  character = 0,
  characters = "";
function node(a, o, s, _, $, et, tt) {
  return {
    value: a,
    root: o,
    parent: s,
    type: _,
    props: $,
    children: et,
    line,
    column,
    length: tt,
    return: "",
  };
}
function copy(a, o) {
  return assign$2(
    node("", null, null, "", null, null, 0),
    a,
    { length: -a.length },
    o
  );
}
function char() {
  return character;
}
function prev() {
  return (
    (character = position$1 > 0 ? charat(characters, --position$1) : 0),
    column--,
    character === 10 && ((column = 1), line--),
    character
  );
}
function next() {
  return (
    (character = position$1 < length ? charat(characters, position$1++) : 0),
    column++,
    character === 10 && ((column = 1), line++),
    character
  );
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(a, o) {
  return substr(characters, a, o);
}
function token(a) {
  switch (a) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(a) {
  return (
    (line = column = 1),
    (length = strlen((characters = a))),
    (position$1 = 0),
    []
  );
}
function dealloc(a) {
  return (characters = ""), a;
}
function delimit(a) {
  return trim(
    slice(position$1 - 1, delimiter(a === 91 ? a + 2 : a === 40 ? a + 1 : a))
  );
}
function whitespace(a) {
  for (; (character = peek()) && character < 33; ) next();
  return token(a) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(a, o) {
  for (
    ;
    --o &&
    next() &&
    !(
      character < 48 ||
      character > 102 ||
      (character > 57 && character < 65) ||
      (character > 70 && character < 97)
    );

  );
  return slice(a, caret() + (o < 6 && peek() == 32 && next() == 32));
}
function delimiter(a) {
  for (; next(); )
    switch (character) {
      case a:
        return position$1;
      case 34:
      case 39:
        a !== 34 && a !== 39 && delimiter(character);
        break;
      case 40:
        a === 41 && delimiter(a);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(a, o) {
  for (; next() && a + character !== 47 + 10; )
    if (a + character === 42 + 42 && peek() === 47) break;
  return "/*" + slice(o, position$1 - 1) + "*" + from(a === 47 ? a : next());
}
function identifier(a) {
  for (; !token(peek()); ) next();
  return slice(a, position$1);
}
function compile(a) {
  return dealloc(
    parse$1("", null, null, null, [""], (a = alloc(a)), 0, [0], a)
  );
}
function parse$1(a, o, s, _, $, et, tt, rt, nt) {
  for (
    var it = 0,
      at = 0,
      st = tt,
      ot = 0,
      dt = 0,
      ht = 0,
      ft = 1,
      mt = 1,
      ut = 1,
      lt = 0,
      ct = "",
      pt = $,
      vt = et,
      xt = _,
      bt = ct;
    mt;

  )
    switch (((ht = lt), (lt = next()))) {
      case 40:
        if (ht != 108 && charat(bt, st - 1) == 58) {
          indexof((bt += replace(delimit(lt), "&", "&\f")), "&\f") != -1 &&
            (ut = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        bt += delimit(lt);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        bt += whitespace(ht);
        break;
      case 92:
        bt += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), o, s), nt);
            break;
          default:
            bt += "/";
        }
        break;
      case 123 * ft:
        rt[it++] = strlen(bt) * ut;
      case 125 * ft:
      case 59:
      case 0:
        switch (lt) {
          case 0:
          case 125:
            mt = 0;
          case 59 + at:
            ut == -1 && (bt = replace(bt, /\f/g, "")),
              dt > 0 &&
                strlen(bt) - st &&
                append(
                  dt > 32
                    ? declaration(bt + ";", _, s, st - 1)
                    : declaration(replace(bt, " ", "") + ";", _, s, st - 2),
                  nt
                );
            break;
          case 59:
            bt += ";";
          default:
            if (
              (append(
                (xt = ruleset(
                  bt,
                  o,
                  s,
                  it,
                  at,
                  $,
                  rt,
                  ct,
                  (pt = []),
                  (vt = []),
                  st
                )),
                et
              ),
              lt === 123)
            )
              if (at === 0) parse$1(bt, o, xt, xt, pt, et, st, rt, vt);
              else
                switch (ot === 99 && charat(bt, 3) === 110 ? 100 : ot) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse$1(
                      a,
                      xt,
                      xt,
                      _ &&
                        append(
                          ruleset(a, xt, xt, 0, 0, $, rt, ct, $, (pt = []), st),
                          vt
                        ),
                      $,
                      vt,
                      st,
                      rt,
                      _ ? pt : vt
                    );
                    break;
                  default:
                    parse$1(bt, xt, xt, xt, [""], vt, 0, rt, vt);
                }
        }
        (it = at = dt = 0), (ft = ut = 1), (ct = bt = ""), (st = tt);
        break;
      case 58:
        (st = 1 + strlen(bt)), (dt = ht);
      default:
        if (ft < 1) {
          if (lt == 123) --ft;
          else if (lt == 125 && ft++ == 0 && prev() == 125) continue;
        }
        switch (((bt += from(lt)), lt * ft)) {
          case 38:
            ut = at > 0 ? 1 : ((bt += "\f"), -1);
            break;
          case 44:
            (rt[it++] = (strlen(bt) - 1) * ut), (ut = 1);
            break;
          case 64:
            peek() === 45 && (bt += delimit(next())),
              (ot = peek()),
              (at = st = strlen((ct = bt += identifier(caret())))),
              lt++;
            break;
          case 45:
            ht === 45 && strlen(bt) == 2 && (ft = 0);
        }
    }
  return et;
}
function ruleset(a, o, s, _, $, et, tt, rt, nt, it, at) {
  for (
    var st = $ - 1,
      ot = $ === 0 ? et : [""],
      dt = sizeof(ot),
      ht = 0,
      ft = 0,
      mt = 0;
    ht < _;
    ++ht
  )
    for (
      var ut = 0, lt = substr(a, st + 1, (st = abs((ft = tt[ht])))), ct = a;
      ut < dt;
      ++ut
    )
      (ct = trim(ft > 0 ? ot[ut] + " " + lt : replace(lt, /&\f/g, ot[ut]))) &&
        (nt[mt++] = ct);
  return node(a, o, s, $ === 0 ? RULESET : rt, nt, it, at);
}
function comment(a, o, s) {
  return node(a, o, s, COMMENT, from(char()), substr(a, 2, -2), 0);
}
function declaration(a, o, s, _) {
  return node(a, o, s, DECLARATION, substr(a, 0, _), substr(a, _ + 1, -1), _);
}
function serialize(a, o) {
  for (var s = "", _ = sizeof(a), $ = 0; $ < _; $++)
    s += o(a[$], $, a, o) || "";
  return s;
}
function stringify(a, o, s, _) {
  switch (a.type) {
    case LAYER:
      if (a.children.length) break;
    case IMPORT:
    case DECLARATION:
      return (a.return = a.return || a.value);
    case COMMENT:
      return "";
    case KEYFRAMES:
      return (a.return = a.value + "{" + serialize(a.children, _) + "}");
    case RULESET:
      a.value = a.props.join(",");
  }
  return strlen((s = serialize(a.children, _)))
    ? (a.return = a.value + "{" + s + "}")
    : "";
}
function middleware(a) {
  var o = sizeof(a);
  return function (s, _, $, et) {
    for (var tt = "", rt = 0; rt < o; rt++) tt += a[rt](s, _, $, et) || "";
    return tt;
  };
}
function rulesheet(a) {
  return function (o) {
    o.root || ((o = o.return) && a(o));
  };
}
var weakMemoize = function (o) {
  var s = new WeakMap();
  return function (_) {
    if (s.has(_)) return s.get(_);
    var $ = o(_);
    return s.set(_, $), $;
  };
};
function memoize$2(a) {
  var o = Object.create(null);
  return function (s) {
    return o[s] === void 0 && (o[s] = a(s)), o[s];
  };
}
var identifierWithPointTracking = function (o, s, _) {
    for (
      var $ = 0, et = 0;
      ($ = et), (et = peek()), $ === 38 && et === 12 && (s[_] = 1), !token(et);

    )
      next();
    return slice(o, position$1);
  },
  toRules = function (o, s) {
    var _ = -1,
      $ = 44;
    do
      switch (token($)) {
        case 0:
          $ === 38 && peek() === 12 && (s[_] = 1),
            (o[_] += identifierWithPointTracking(position$1 - 1, s, _));
          break;
        case 2:
          o[_] += delimit($);
          break;
        case 4:
          if ($ === 44) {
            (o[++_] = peek() === 58 ? "&\f" : ""), (s[_] = o[_].length);
            break;
          }
        default:
          o[_] += from($);
      }
    while (($ = next()));
    return o;
  },
  getRules = function (o, s) {
    return dealloc(toRules(alloc(o), s));
  },
  fixedElements = new WeakMap(),
  compat = function (o) {
    if (!(o.type !== "rule" || !o.parent || o.length < 1)) {
      for (
        var s = o.value,
          _ = o.parent,
          $ = o.column === _.column && o.line === _.line;
        _.type !== "rule";

      )
        if (((_ = _.parent), !_)) return;
      if (
        !(
          o.props.length === 1 &&
          s.charCodeAt(0) !== 58 &&
          !fixedElements.get(_)
        ) &&
        !$
      ) {
        fixedElements.set(o, !0);
        for (
          var et = [], tt = getRules(s, et), rt = _.props, nt = 0, it = 0;
          nt < tt.length;
          nt++
        )
          for (var at = 0; at < rt.length; at++, it++)
            o.props[it] = et[nt]
              ? tt[nt].replace(/&\f/g, rt[at])
              : rt[at] + " " + tt[nt];
      }
    }
  },
  removeLabel = function (o) {
    if (o.type === "decl") {
      var s = o.value;
      s.charCodeAt(0) === 108 &&
        s.charCodeAt(2) === 98 &&
        ((o.return = ""), (o.value = ""));
    }
  };
function prefix(a, o) {
  switch (hash$1(a, o)) {
    case 5103:
      return WEBKIT + "print-" + a + a;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + a + a;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + a + MOZ + a + MS + a + a;
    case 6828:
    case 4268:
      return WEBKIT + a + MS + a + a;
    case 6165:
      return WEBKIT + a + MS + "flex-" + a + a;
    case 5187:
      return (
        WEBKIT +
        a +
        replace(a, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") +
        a
      );
    case 5443:
      return WEBKIT + a + MS + "flex-item-" + replace(a, /flex-|-self/, "") + a;
    case 4675:
      return (
        WEBKIT +
        a +
        MS +
        "flex-line-pack" +
        replace(a, /align-content|flex-|-self/, "") +
        a
      );
    case 5548:
      return WEBKIT + a + MS + replace(a, "shrink", "negative") + a;
    case 5292:
      return WEBKIT + a + MS + replace(a, "basis", "preferred-size") + a;
    case 6060:
      return (
        WEBKIT +
        "box-" +
        replace(a, "-grow", "") +
        WEBKIT +
        a +
        MS +
        replace(a, "grow", "positive") +
        a
      );
    case 4554:
      return (
        WEBKIT + replace(a, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + a
      );
    case 6187:
      return (
        replace(
          replace(
            replace(a, /(zoom-|grab)/, WEBKIT + "$1"),
            /(image-set)/,
            WEBKIT + "$1"
          ),
          a,
          ""
        ) + a
      );
    case 5495:
    case 3959:
      return replace(a, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return (
        replace(
          replace(
            a,
            /(.+:)(flex-)?(.*)/,
            WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"
          ),
          /s.+-b[^;]+/,
          "justify"
        ) +
        WEBKIT +
        a +
        a
      );
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(a, /(.+)-inline(.+)/, WEBKIT + "$1$2") + a;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(a) - 1 - o > 6)
        switch (charat(a, o + 1)) {
          case 109:
            if (charat(a, o + 4) !== 45) break;
          case 102:
            return (
              replace(
                a,
                /(.+:)(.+)-([^]+)/,
                "$1" +
                  WEBKIT +
                  "$2-$3$1" +
                  MOZ +
                  (charat(a, o + 3) == 108 ? "$3" : "$2-$3")
              ) + a
            );
          case 115:
            return ~indexof(a, "stretch")
              ? prefix(replace(a, "stretch", "fill-available"), o) + a
              : a;
        }
      break;
    case 4949:
      if (charat(a, o + 1) !== 115) break;
    case 6444:
      switch (charat(a, strlen(a) - 3 - (~indexof(a, "!important") && 10))) {
        case 107:
          return replace(a, ":", ":" + WEBKIT) + a;
        case 101:
          return (
            replace(
              a,
              /(.+:)([^;!]+)(;|!.+)?/,
              "$1" +
                WEBKIT +
                (charat(a, 14) === 45 ? "inline-" : "") +
                "box$3$1" +
                WEBKIT +
                "$2$3$1" +
                MS +
                "$2box$3"
            ) + a
          );
      }
      break;
    case 5936:
      switch (charat(a, o + 11)) {
        case 114:
          return WEBKIT + a + MS + replace(a, /[svh]\w+-[tblr]{2}/, "tb") + a;
        case 108:
          return (
            WEBKIT + a + MS + replace(a, /[svh]\w+-[tblr]{2}/, "tb-rl") + a
          );
        case 45:
          return WEBKIT + a + MS + replace(a, /[svh]\w+-[tblr]{2}/, "lr") + a;
      }
      return WEBKIT + a + MS + a + a;
  }
  return a;
}
var prefixer = function (o, s, _, $) {
    if (o.length > -1 && !o.return)
      switch (o.type) {
        case DECLARATION:
          o.return = prefix(o.value, o.length);
          break;
        case KEYFRAMES:
          return serialize(
            [copy(o, { value: replace(o.value, "@", "@" + WEBKIT) })],
            $
          );
        case RULESET:
          if (o.length)
            return combine(o.props, function (et) {
              switch (match(et, /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  return serialize(
                    [
                      copy(o, {
                        props: [replace(et, /:(read-\w+)/, ":" + MOZ + "$1")],
                      }),
                    ],
                    $
                  );
                case "::placeholder":
                  return serialize(
                    [
                      copy(o, {
                        props: [
                          replace(et, /:(plac\w+)/, ":" + WEBKIT + "input-$1"),
                        ],
                      }),
                      copy(o, {
                        props: [replace(et, /:(plac\w+)/, ":" + MOZ + "$1")],
                      }),
                      copy(o, {
                        props: [replace(et, /:(plac\w+)/, MS + "input-$1")],
                      }),
                    ],
                    $
                  );
              }
              return "";
            });
      }
  },
  defaultStylisPlugins = [prefixer],
  createCache = function (o) {
    var s = o.key;
    if (s === "css") {
      var _ = document.querySelectorAll("style[data-emotion]:not([data-s])");
      Array.prototype.forEach.call(_, function (ft) {
        var mt = ft.getAttribute("data-emotion");
        mt.indexOf(" ") !== -1 &&
          (document.head.appendChild(ft), ft.setAttribute("data-s", ""));
      });
    }
    var $ = o.stylisPlugins || defaultStylisPlugins,
      et = {},
      tt,
      rt = [];
    (tt = o.container || document.head),
      Array.prototype.forEach.call(
        document.querySelectorAll('style[data-emotion^="' + s + ' "]'),
        function (ft) {
          for (
            var mt = ft.getAttribute("data-emotion").split(" "), ut = 1;
            ut < mt.length;
            ut++
          )
            et[mt[ut]] = !0;
          rt.push(ft);
        }
      );
    var nt,
      it = [compat, removeLabel];
    {
      var at,
        st = [
          stringify,
          rulesheet(function (ft) {
            at.insert(ft);
          }),
        ],
        ot = middleware(it.concat($, st)),
        dt = function (mt) {
          return serialize(compile(mt), ot);
        };
      nt = function (mt, ut, lt, ct) {
        (at = lt),
          dt(mt ? mt + "{" + ut.styles + "}" : ut.styles),
          ct && (ht.inserted[ut.name] = !0);
      };
    }
    var ht = {
      key: s,
      sheet: new StyleSheet({
        key: s,
        container: tt,
        nonce: o.nonce,
        speedy: o.speedy,
        prepend: o.prepend,
        insertionPoint: o.insertionPoint,
      }),
      nonce: o.nonce,
      inserted: et,
      registered: {},
      insert: nt,
    };
    return ht.sheet.hydrate(rt), ht;
  };
function _extends$1() {
  return (
    (_extends$1 = Object.assign
      ? Object.assign.bind()
      : function (a) {
          for (var o = 1; o < arguments.length; o++) {
            var s = arguments[o];
            for (var _ in s)
              Object.prototype.hasOwnProperty.call(s, _) && (a[_] = s[_]);
          }
          return a;
        }),
    _extends$1.apply(this, arguments)
  );
}
var reactIs$1 = { exports: {} },
  reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var b = typeof Symbol == "function" && Symbol.for,
  c = b ? Symbol.for("react.element") : 60103,
  d = b ? Symbol.for("react.portal") : 60106,
  e = b ? Symbol.for("react.fragment") : 60107,
  f = b ? Symbol.for("react.strict_mode") : 60108,
  g = b ? Symbol.for("react.profiler") : 60114,
  h$1 = b ? Symbol.for("react.provider") : 60109,
  k$1 = b ? Symbol.for("react.context") : 60110,
  l = b ? Symbol.for("react.async_mode") : 60111,
  m = b ? Symbol.for("react.concurrent_mode") : 60111,
  n = b ? Symbol.for("react.forward_ref") : 60112,
  p = b ? Symbol.for("react.suspense") : 60113,
  q = b ? Symbol.for("react.suspense_list") : 60120,
  r$1 = b ? Symbol.for("react.memo") : 60115,
  t$1 = b ? Symbol.for("react.lazy") : 60116,
  v$1 = b ? Symbol.for("react.block") : 60121,
  w$1 = b ? Symbol.for("react.fundamental") : 60117,
  x = b ? Symbol.for("react.responder") : 60118,
  y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if (typeof a == "object" && a !== null) {
    var o = a.$$typeof;
    switch (o) {
      case c:
        switch (((a = a.type), a)) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (((a = a && a.$$typeof), a)) {
              case k$1:
              case n:
              case t$1:
              case r$1:
              case h$1:
                return a;
              default:
                return o;
            }
        }
      case d:
        return o;
    }
  }
}
function A(a) {
  return z(a) === m;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h$1;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t$1;
reactIs_production_min.Memo = r$1;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p;
reactIs_production_min.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};
reactIs_production_min.isConcurrentMode = A;
reactIs_production_min.isContextConsumer = function (a) {
  return z(a) === k$1;
};
reactIs_production_min.isContextProvider = function (a) {
  return z(a) === h$1;
};
reactIs_production_min.isElement = function (a) {
  return typeof a == "object" && a !== null && a.$$typeof === c;
};
reactIs_production_min.isForwardRef = function (a) {
  return z(a) === n;
};
reactIs_production_min.isFragment = function (a) {
  return z(a) === e;
};
reactIs_production_min.isLazy = function (a) {
  return z(a) === t$1;
};
reactIs_production_min.isMemo = function (a) {
  return z(a) === r$1;
};
reactIs_production_min.isPortal = function (a) {
  return z(a) === d;
};
reactIs_production_min.isProfiler = function (a) {
  return z(a) === g;
};
reactIs_production_min.isStrictMode = function (a) {
  return z(a) === f;
};
reactIs_production_min.isSuspense = function (a) {
  return z(a) === p;
};
reactIs_production_min.isValidElementType = function (a) {
  return (
    typeof a == "string" ||
    typeof a == "function" ||
    a === e ||
    a === m ||
    a === g ||
    a === f ||
    a === p ||
    a === q ||
    (typeof a == "object" &&
      a !== null &&
      (a.$$typeof === t$1 ||
        a.$$typeof === r$1 ||
        a.$$typeof === h$1 ||
        a.$$typeof === k$1 ||
        a.$$typeof === n ||
        a.$$typeof === w$1 ||
        a.$$typeof === x ||
        a.$$typeof === y ||
        a.$$typeof === v$1))
  );
};
reactIs_production_min.typeOf = z;
reactIs$1.exports = reactIs_production_min;
var reactIsExports = reactIs$1.exports,
  reactIs = reactIsExports,
  FORWARD_REF_STATICS = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
  },
  MEMO_STATICS = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0,
  },
  TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
var isBrowser$2 = !0;
function getRegisteredStyles(a, o, s) {
  var _ = "";
  return (
    s.split(" ").forEach(function ($) {
      a[$] !== void 0 ? o.push(a[$] + ";") : (_ += $ + " ");
    }),
    _
  );
}
var registerStyles = function (o, s, _) {
    var $ = o.key + "-" + s.name;
    (_ === !1 || isBrowser$2 === !1) &&
      o.registered[$] === void 0 &&
      (o.registered[$] = s.styles);
  },
  insertStyles = function (o, s, _) {
    registerStyles(o, s, _);
    var $ = o.key + "-" + s.name;
    if (o.inserted[s.name] === void 0) {
      var et = s;
      do o.insert(s === et ? "." + $ : "", et, o.sheet, !0), (et = et.next);
      while (et !== void 0);
    }
  };
function murmur2(a) {
  for (var o = 0, s, _ = 0, $ = a.length; $ >= 4; ++_, $ -= 4)
    (s =
      (a.charCodeAt(_) & 255) |
      ((a.charCodeAt(++_) & 255) << 8) |
      ((a.charCodeAt(++_) & 255) << 16) |
      ((a.charCodeAt(++_) & 255) << 24)),
      (s = (s & 65535) * 1540483477 + (((s >>> 16) * 59797) << 16)),
      (s ^= s >>> 24),
      (o =
        ((s & 65535) * 1540483477 + (((s >>> 16) * 59797) << 16)) ^
        ((o & 65535) * 1540483477 + (((o >>> 16) * 59797) << 16)));
  switch ($) {
    case 3:
      o ^= (a.charCodeAt(_ + 2) & 255) << 16;
    case 2:
      o ^= (a.charCodeAt(_ + 1) & 255) << 8;
    case 1:
      (o ^= a.charCodeAt(_) & 255),
        (o = (o & 65535) * 1540483477 + (((o >>> 16) * 59797) << 16));
  }
  return (
    (o ^= o >>> 13),
    (o = (o & 65535) * 1540483477 + (((o >>> 16) * 59797) << 16)),
    ((o ^ (o >>> 15)) >>> 0).toString(36)
  );
}
var unitlessKeys = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  hyphenateRegex = /[A-Z]|^ms/g,
  animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
  isCustomProperty = function (o) {
    return o.charCodeAt(1) === 45;
  },
  isProcessableValue = function (o) {
    return o != null && typeof o != "boolean";
  },
  processStyleName = memoize$2(function (a) {
    return isCustomProperty(a)
      ? a
      : a.replace(hyphenateRegex, "-$&").toLowerCase();
  }),
  processStyleValue = function (o, s) {
    switch (o) {
      case "animation":
      case "animationName":
        if (typeof s == "string")
          return s.replace(animationRegex, function (_, $, et) {
            return (cursor = { name: $, styles: et, next: cursor }), $;
          });
    }
    return unitlessKeys[o] !== 1 &&
      !isCustomProperty(o) &&
      typeof s == "number" &&
      s !== 0
      ? s + "px"
      : s;
  },
  noComponentSelectorMessage =
    "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(a, o, s) {
  if (s == null) return "";
  if (s.__emotion_styles !== void 0) return s;
  switch (typeof s) {
    case "boolean":
      return "";
    case "object": {
      if (s.anim === 1)
        return (
          (cursor = { name: s.name, styles: s.styles, next: cursor }), s.name
        );
      if (s.styles !== void 0) {
        var _ = s.next;
        if (_ !== void 0)
          for (; _ !== void 0; )
            (cursor = { name: _.name, styles: _.styles, next: cursor }),
              (_ = _.next);
        var $ = s.styles + ";";
        return $;
      }
      return createStringFromObject(a, o, s);
    }
    case "function": {
      if (a !== void 0) {
        var et = cursor,
          tt = s(a);
        return (cursor = et), handleInterpolation(a, o, tt);
      }
      break;
    }
  }
  if (o == null) return s;
  var rt = o[s];
  return rt !== void 0 ? rt : s;
}
function createStringFromObject(a, o, s) {
  var _ = "";
  if (Array.isArray(s))
    for (var $ = 0; $ < s.length; $++)
      _ += handleInterpolation(a, o, s[$]) + ";";
  else
    for (var et in s) {
      var tt = s[et];
      if (typeof tt != "object")
        o != null && o[tt] !== void 0
          ? (_ += et + "{" + o[tt] + "}")
          : isProcessableValue(tt) &&
            (_ += processStyleName(et) + ":" + processStyleValue(et, tt) + ";");
      else if (
        Array.isArray(tt) &&
        typeof tt[0] == "string" &&
        (o == null || o[tt[0]] === void 0)
      )
        for (var rt = 0; rt < tt.length; rt++)
          isProcessableValue(tt[rt]) &&
            (_ +=
              processStyleName(et) + ":" + processStyleValue(et, tt[rt]) + ";");
      else {
        var nt = handleInterpolation(a, o, tt);
        switch (et) {
          case "animation":
          case "animationName": {
            _ += processStyleName(et) + ":" + nt + ";";
            break;
          }
          default:
            _ += et + "{" + nt + "}";
        }
      }
    }
  return _;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g,
  cursor,
  serializeStyles = function (o, s, _) {
    if (
      o.length === 1 &&
      typeof o[0] == "object" &&
      o[0] !== null &&
      o[0].styles !== void 0
    )
      return o[0];
    var $ = !0,
      et = "";
    cursor = void 0;
    var tt = o[0];
    tt == null || tt.raw === void 0
      ? (($ = !1), (et += handleInterpolation(_, s, tt)))
      : (et += tt[0]);
    for (var rt = 1; rt < o.length; rt++)
      (et += handleInterpolation(_, s, o[rt])), $ && (et += tt[rt]);
    labelPattern.lastIndex = 0;
    for (var nt = "", it; (it = labelPattern.exec(et)) !== null; )
      nt += "-" + it[1];
    var at = murmur2(et) + nt;
    return { name: at, styles: et, next: cursor };
  },
  syncFallback = function (o) {
    return o();
  },
  useInsertionEffect = React$1["useInsertionEffect"]
    ? React$1["useInsertionEffect"]
    : !1,
  useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback,
  useInsertionEffectWithLayoutFallback =
    useInsertionEffect || reactExports.useLayoutEffect,
  EmotionCacheContext = reactExports.createContext(
    typeof HTMLElement < "u" ? createCache({ key: "css" }) : null
  );
EmotionCacheContext.Provider;
var withEmotionCache = function (o) {
    return reactExports.forwardRef(function (s, _) {
      var $ = reactExports.useContext(EmotionCacheContext);
      return o(s, $, _);
    });
  },
  ThemeContext = reactExports.createContext({}),
  getTheme$1 = function (o, s) {
    if (typeof s == "function") {
      var _ = s(o);
      return _;
    }
    return _extends$1({}, o, s);
  },
  createCacheWithTheme = weakMemoize(function (a) {
    return weakMemoize(function (o) {
      return getTheme$1(a, o);
    });
  }),
  ThemeProvider$1 = function (o) {
    var s = reactExports.useContext(ThemeContext);
    return (
      o.theme !== s && (s = createCacheWithTheme(s)(o.theme)),
      reactExports.createElement(
        ThemeContext.Provider,
        { value: s },
        o.children
      )
    );
  },
  Global = withEmotionCache(function (a, o) {
    var s = a.styles,
      _ = serializeStyles([s], void 0, reactExports.useContext(ThemeContext)),
      $ = reactExports.useRef();
    return (
      useInsertionEffectWithLayoutFallback(
        function () {
          var et = o.key + "-global",
            tt = new o.sheet.constructor({
              key: et,
              nonce: o.sheet.nonce,
              container: o.sheet.container,
              speedy: o.sheet.isSpeedy,
            }),
            rt = !1,
            nt = document.querySelector(
              'style[data-emotion="' + et + " " + _.name + '"]'
            );
          return (
            o.sheet.tags.length && (tt.before = o.sheet.tags[0]),
            nt !== null &&
              ((rt = !0),
              nt.setAttribute("data-emotion", et),
              tt.hydrate([nt])),
            ($.current = [tt, rt]),
            function () {
              tt.flush();
            }
          );
        },
        [o]
      ),
      useInsertionEffectWithLayoutFallback(
        function () {
          var et = $.current,
            tt = et[0],
            rt = et[1];
          if (rt) {
            et[1] = !1;
            return;
          }
          if (
            (_.next !== void 0 && insertStyles(o, _.next, !0), tt.tags.length)
          ) {
            var nt = tt.tags[tt.tags.length - 1].nextElementSibling;
            (tt.before = nt), tt.flush();
          }
          o.insert("", _, tt, !1);
        },
        [o, _.name]
      ),
      null
    );
  });
function css$2() {
  for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
    o[s] = arguments[s];
  return serializeStyles(o);
}
var keyframes$1 = function () {
    var o = css$2.apply(void 0, arguments),
      s = "animation-" + o.name;
    return {
      name: s,
      styles: "@keyframes " + s + "{" + o.styles + "}",
      anim: 1,
      toString: function () {
        return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
      },
    };
  },
  css$1 = String.raw,
  vhPolyfill = css$1`
  :root,
  :host {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root,
    :host {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root,
    :host {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root,
    :host {
      --chakra-vh: 100dvh;
    }
  }
`,
  CSSPolyfill = () => jsxRuntimeExports.jsx(Global, { styles: vhPolyfill }),
  CSSReset = ({ scope: a = "" }) =>
    jsxRuntimeExports.jsx(Global, {
      styles: css$1`
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        margin: 0;
        font-feature-settings: "kern";
      }

      ${a} :where(*, *::before, *::after) {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
        word-wrap: break-word;
      }

      main {
        display: block;
      }

      ${a} hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      ${a} :where(pre, code, kbd,samp) {
        font-family: SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      ${a} a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      ${a} abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      ${a} :where(b, strong) {
        font-weight: bold;
      }

      ${a} small {
        font-size: 80%;
      }

      ${a} :where(sub,sup) {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      ${a} sub {
        bottom: -0.25em;
      }

      ${a} sup {
        top: -0.5em;
      }

      ${a} img {
        border-style: none;
      }

      ${a} :where(button, input, optgroup, select, textarea) {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      ${a} :where(button, input) {
        overflow: visible;
      }

      ${a} :where(button, select) {
        text-transform: none;
      }

      ${a} :where(
          button::-moz-focus-inner,
          [type="button"]::-moz-focus-inner,
          [type="reset"]::-moz-focus-inner,
          [type="submit"]::-moz-focus-inner
        ) {
        border-style: none;
        padding: 0;
      }

      ${a} fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      ${a} legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      ${a} progress {
        vertical-align: baseline;
      }

      ${a} textarea {
        overflow: auto;
      }

      ${a} :where([type="checkbox"], [type="radio"]) {
        box-sizing: border-box;
        padding: 0;
      }

      ${a} input[type="number"]::-webkit-inner-spin-button,
      ${a} input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      ${a} input[type="number"] {
        -moz-appearance: textfield;
      }

      ${a} input[type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      ${a} input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ${a} ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      ${a} details {
        display: block;
      }

      ${a} summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      ${a} :where(
          blockquote,
          dl,
          dd,
          h1,
          h2,
          h3,
          h4,
          h5,
          h6,
          hr,
          figure,
          p,
          pre
        ) {
        margin: 0;
      }

      ${a} button {
        background: transparent;
        padding: 0;
      }

      ${a} fieldset {
        margin: 0;
        padding: 0;
      }

      ${a} :where(ol, ul) {
        margin: 0;
        padding: 0;
      }

      ${a} textarea {
        resize: vertical;
      }

      ${a} :where(button, [role="button"]) {
        cursor: pointer;
      }

      ${a} button::-moz-focus-inner {
        border: 0 !important;
      }

      ${a} table {
        border-collapse: collapse;
      }

      ${a} :where(h1, h2, h3, h4, h5, h6) {
        font-size: inherit;
        font-weight: inherit;
      }

      ${a} :where(button, input, optgroup, select, textarea) {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      ${a} :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
      }

      ${a} :where(img, video) {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible]
        :focus:not([data-focus-visible-added]):not(
          [data-focus-visible-disabled]
        ) {
        outline: none;
        box-shadow: none;
      }

      ${a} select::-ms-expand {
        display: none;
      }

      ${vhPolyfill}
    `,
    });
function getErrorMessage(a, o) {
  return `${a} returned \`undefined\`. Seems you forgot to wrap component within ${o}`;
}
function createContext$1(a = {}) {
  const {
      name: o,
      strict: s = !0,
      hookName: _ = "useContext",
      providerName: $ = "Provider",
      errorMessage: et,
      defaultValue: tt,
    } = a,
    rt = reactExports.createContext(tt);
  rt.displayName = o;
  function nt() {
    var it;
    const at = reactExports.useContext(rt);
    if (!at && s) {
      const st = new Error(et ?? getErrorMessage(_, $));
      throw (
        ((st.name = "ContextError"),
        (it = Error.captureStackTrace) == null || it.call(Error, st, nt),
        st)
      );
    }
    return at;
  }
  return [rt.Provider, nt, rt];
}
var [PortalManagerContextProvider, usePortalManager] = createContext$1({
  strict: !1,
  name: "PortalManagerContext",
});
function PortalManager(a) {
  const { children: o, zIndex: s } = a;
  return jsxRuntimeExports.jsx(PortalManagerContextProvider, {
    value: { zIndex: s },
    children: o,
  });
}
PortalManager.displayName = "PortalManager";
var useSafeLayoutEffect$1 =
    globalThis != null && globalThis.document
      ? reactExports.useLayoutEffect
      : reactExports.useEffect,
  [PortalContextProvider, usePortalContext] = createContext$1({
    strict: !1,
    name: "PortalContext",
  }),
  PORTAL_CLASSNAME = "chakra-portal",
  PORTAL_SELECTOR = ".chakra-portal",
  Container$1 = (a) =>
    jsxRuntimeExports.jsx("div", {
      className: "chakra-portal-zIndex",
      style: {
        position: "absolute",
        zIndex: a.zIndex,
        top: 0,
        left: 0,
        right: 0,
      },
      children: a.children,
    }),
  DefaultPortal = (a) => {
    const { appendToParentPortal: o, children: s } = a,
      [_, $] = reactExports.useState(null),
      et = reactExports.useRef(null),
      [, tt] = reactExports.useState({});
    reactExports.useEffect(() => tt({}), []);
    const rt = usePortalContext(),
      nt = usePortalManager();
    useSafeLayoutEffect$1(() => {
      if (!_) return;
      const at = _.ownerDocument,
        st = o ? rt ?? at.body : at.body;
      if (!st) return;
      (et.current = at.createElement("div")),
        (et.current.className = PORTAL_CLASSNAME),
        st.appendChild(et.current),
        tt({});
      const ot = et.current;
      return () => {
        st.contains(ot) && st.removeChild(ot);
      };
    }, [_]);
    const it =
      nt != null && nt.zIndex
        ? jsxRuntimeExports.jsx(Container$1, {
            zIndex: nt == null ? void 0 : nt.zIndex,
            children: s,
          })
        : s;
    return et.current
      ? reactDomExports.createPortal(
          jsxRuntimeExports.jsx(PortalContextProvider, {
            value: et.current,
            children: it,
          }),
          et.current
        )
      : jsxRuntimeExports.jsx("span", {
          ref: (at) => {
            at && $(at);
          },
        });
  },
  ContainerPortal = (a) => {
    const { children: o, containerRef: s, appendToParentPortal: _ } = a,
      $ = s.current,
      et = $ ?? (typeof window < "u" ? document.body : void 0),
      tt = reactExports.useMemo(() => {
        const nt = $ == null ? void 0 : $.ownerDocument.createElement("div");
        return nt && (nt.className = PORTAL_CLASSNAME), nt;
      }, [$]),
      [, rt] = reactExports.useState({});
    return (
      useSafeLayoutEffect$1(() => rt({}), []),
      useSafeLayoutEffect$1(() => {
        if (!(!tt || !et))
          return (
            et.appendChild(tt),
            () => {
              et.removeChild(tt);
            }
          );
      }, [tt, et]),
      et && tt
        ? reactDomExports.createPortal(
            jsxRuntimeExports.jsx(PortalContextProvider, {
              value: _ ? tt : null,
              children: o,
            }),
            tt
          )
        : null
    );
  };
function Portal(a) {
  const o = { appendToParentPortal: !0, ...a },
    { containerRef: s, ..._ } = o;
  return s
    ? jsxRuntimeExports.jsx(ContainerPortal, { containerRef: s, ..._ })
    : jsxRuntimeExports.jsx(DefaultPortal, { ..._ });
}
Portal.className = PORTAL_CLASSNAME;
Portal.selector = PORTAL_SELECTOR;
Portal.displayName = "Portal";
function useTheme() {
  const a = reactExports.useContext(ThemeContext);
  if (!a)
    throw Error(
      "useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`"
    );
  return a;
}
var ColorModeContext = reactExports.createContext({});
ColorModeContext.displayName = "ColorModeContext";
function useColorMode() {
  const a = reactExports.useContext(ColorModeContext);
  if (a === void 0)
    throw new Error("useColorMode must be used within a ColorModeProvider");
  return a;
}
function useColorModeValue(a, o) {
  const { colorMode: s } = useColorMode();
  return s === "dark" ? o : a;
}
var classNames = { light: "chakra-ui-light", dark: "chakra-ui-dark" };
function getColorModeUtils(a = {}) {
  const { preventTransition: o = !0 } = a,
    s = {
      setDataset: (_) => {
        const $ = o ? s.preventTransition() : void 0;
        (document.documentElement.dataset.theme = _),
          (document.documentElement.style.colorScheme = _),
          $ == null || $();
      },
      setClassName(_) {
        document.body.classList.add(_ ? classNames.dark : classNames.light),
          document.body.classList.remove(
            _ ? classNames.light : classNames.dark
          );
      },
      query() {
        return window.matchMedia("(prefers-color-scheme: dark)");
      },
      getSystemTheme(_) {
        var $;
        return (($ = s.query().matches) != null ? $ : _ === "dark")
          ? "dark"
          : "light";
      },
      addListener(_) {
        const $ = s.query(),
          et = (tt) => {
            _(tt.matches ? "dark" : "light");
          };
        return (
          typeof $.addListener == "function"
            ? $.addListener(et)
            : $.addEventListener("change", et),
          () => {
            typeof $.removeListener == "function"
              ? $.removeListener(et)
              : $.removeEventListener("change", et);
          }
        );
      },
      preventTransition() {
        const _ = document.createElement("style");
        return (
          _.appendChild(
            document.createTextNode(
              "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"
            )
          ),
          document.head.appendChild(_),
          () => {
            window.getComputedStyle(document.body),
              requestAnimationFrame(() => {
                requestAnimationFrame(() => {
                  document.head.removeChild(_);
                });
              });
          }
        );
      },
    };
  return s;
}
var STORAGE_KEY = "chakra-ui-color-mode";
function createLocalStorageManager(a) {
  return {
    ssr: !1,
    type: "localStorage",
    get(o) {
      if (!(globalThis != null && globalThis.document)) return o;
      let s;
      try {
        s = localStorage.getItem(a) || o;
      } catch {}
      return s || o;
    },
    set(o) {
      try {
        localStorage.setItem(a, o);
      } catch {}
    },
  };
}
var localStorageManager = createLocalStorageManager(STORAGE_KEY),
  noop$1 = () => {};
function getTheme(a, o) {
  return a.type === "cookie" && a.ssr ? a.get(o) : o;
}
function ColorModeProvider(a) {
  const {
      value: o,
      children: s,
      options: {
        useSystemColorMode: _,
        initialColorMode: $,
        disableTransitionOnChange: et,
      } = {},
      colorModeManager: tt = localStorageManager,
    } = a,
    rt = $ === "dark" ? "dark" : "light",
    [nt, it] = reactExports.useState(() => getTheme(tt, rt)),
    [at, st] = reactExports.useState(() => getTheme(tt)),
    {
      getSystemTheme: ot,
      setClassName: dt,
      setDataset: ht,
      addListener: ft,
    } = reactExports.useMemo(
      () => getColorModeUtils({ preventTransition: et }),
      [et]
    ),
    mt = $ === "system" && !nt ? at : nt,
    ut = reactExports.useCallback(
      (pt) => {
        const vt = pt === "system" ? ot() : pt;
        it(vt), dt(vt === "dark"), ht(vt), tt.set(vt);
      },
      [tt, ot, dt, ht]
    );
  useSafeLayoutEffect$1(() => {
    $ === "system" && st(ot());
  }, []),
    reactExports.useEffect(() => {
      const pt = tt.get();
      if (pt) {
        ut(pt);
        return;
      }
      if ($ === "system") {
        ut("system");
        return;
      }
      ut(rt);
    }, [tt, rt, $, ut]);
  const lt = reactExports.useCallback(() => {
    ut(mt === "dark" ? "light" : "dark");
  }, [mt, ut]);
  reactExports.useEffect(() => {
    if (_) return ft(ut);
  }, [_, ft, ut]);
  const ct = reactExports.useMemo(
    () => ({
      colorMode: o ?? mt,
      toggleColorMode: o ? noop$1 : lt,
      setColorMode: o ? noop$1 : ut,
      forced: o !== void 0,
    }),
    [mt, lt, ut, o]
  );
  return jsxRuntimeExports.jsx(ColorModeContext.Provider, {
    value: ct,
    children: s,
  });
}
ColorModeProvider.displayName = "ColorModeProvider";
function useChakra() {
  const a = useColorMode(),
    o = useTheme();
  return { ...a, theme: o };
}
function getBreakpointValue(a, o, s) {
  var _, $;
  if (o == null) return o;
  const et = (tt) => {
    var rt, nt;
    return (nt = (rt = a.__breakpoints) == null ? void 0 : rt.asArray) == null
      ? void 0
      : nt[tt];
  };
  return ($ = (_ = et(o)) != null ? _ : et(s)) != null ? $ : s;
}
function getTokenValue(a, o, s) {
  var _, $;
  if (o == null) return o;
  const et = (tt) => {
    var rt, nt;
    return (nt = (rt = a.__cssMap) == null ? void 0 : rt[tt]) == null
      ? void 0
      : nt.value;
  };
  return ($ = (_ = et(o)) != null ? _ : et(s)) != null ? $ : s;
}
function getToken(a, o, s) {
  const _ = Array.isArray(o) ? o : [o],
    $ = Array.isArray(s) ? s : [s];
  return (et) => {
    const tt = $.filter(Boolean),
      rt = _.map((nt, it) => {
        var at, st;
        if (a === "breakpoints")
          return getBreakpointValue(et, nt, (at = tt[it]) != null ? at : nt);
        const ot = `${a}.${nt}`;
        return getTokenValue(et, ot, (st = tt[it]) != null ? st : nt);
      });
    return Array.isArray(o) ? rt : rt[0];
  };
}
var cx = (...a) => a.filter(Boolean).join(" ");
function isObject$4(a) {
  const o = typeof a;
  return a != null && (o === "object" || o === "function") && !Array.isArray(a);
}
function runIfFn$2(a, ...o) {
  return isFunction$2(a) ? a(...o) : a;
}
var isFunction$2 = (a) => typeof a == "function",
  dataAttr = (a) => (a ? "" : void 0),
  ariaAttr = (a) => (a ? !0 : void 0);
function callAllHandlers$1(...a) {
  return function (s) {
    a.some((_) => (_ == null || _(s), s == null ? void 0 : s.defaultPrevented));
  };
}
function callAll(...a) {
  return function (s) {
    a.forEach((_) => {
      _ == null || _(s);
    });
  };
}
var lodash_mergewith = { exports: {} };
lodash_mergewith.exports;
(function (a, o) {
  var s = 200,
    _ = "__lodash_hash_undefined__",
    $ = 800,
    et = 16,
    tt = 9007199254740991,
    rt = "[object Arguments]",
    nt = "[object Array]",
    it = "[object AsyncFunction]",
    at = "[object Boolean]",
    st = "[object Date]",
    ot = "[object Error]",
    dt = "[object Function]",
    ht = "[object GeneratorFunction]",
    ft = "[object Map]",
    mt = "[object Number]",
    ut = "[object Null]",
    lt = "[object Object]",
    ct = "[object Proxy]",
    pt = "[object RegExp]",
    vt = "[object Set]",
    xt = "[object String]",
    bt = "[object Undefined]",
    St = "[object WeakMap]",
    Pt = "[object ArrayBuffer]",
    Mt = "[object DataView]",
    It = "[object Float32Array]",
    Rt = "[object Float64Array]",
    jt = "[object Int8Array]",
    Dt = "[object Int16Array]",
    At = "[object Int32Array]",
    Et = "[object Uint8Array]",
    kt = "[object Uint8ClampedArray]",
    gt = "[object Uint16Array]",
    yt = "[object Uint32Array]",
    wt = /[\\^$.*+?()[\]{}|]/g,
    _t = /^\[object .+?Constructor\]$/,
    Ft = /^(?:0|[1-9]\d*)$/,
    Vt = {};
  (Vt[It] =
    Vt[Rt] =
    Vt[jt] =
    Vt[Dt] =
    Vt[At] =
    Vt[Et] =
    Vt[kt] =
    Vt[gt] =
    Vt[yt] =
      !0),
    (Vt[rt] =
      Vt[nt] =
      Vt[Pt] =
      Vt[at] =
      Vt[Mt] =
      Vt[st] =
      Vt[ot] =
      Vt[dt] =
      Vt[ft] =
      Vt[mt] =
      Vt[lt] =
      Vt[pt] =
      Vt[vt] =
      Vt[xt] =
      Vt[St] =
        !1);
  var Lt =
      typeof commonjsGlobal == "object" &&
      commonjsGlobal &&
      commonjsGlobal.Object === Object &&
      commonjsGlobal,
    Wt = typeof self == "object" && self && self.Object === Object && self,
    zt = Lt || Wt || Function("return this")(),
    Gt = o && !o.nodeType && o,
    Kt = Gt && !0 && a && !a.nodeType && a,
    er = Kt && Kt.exports === Gt,
    Xt = er && Lt.process,
    Yt = (function () {
      try {
        var Ct = Kt && Kt.require && Kt.require("util").types;
        return Ct || (Xt && Xt.binding && Xt.binding("util"));
      } catch {}
    })(),
    nr = Yt && Yt.isTypedArray;
  function Ht(Ct, Tt, $t) {
    switch ($t.length) {
      case 0:
        return Ct.call(Tt);
      case 1:
        return Ct.call(Tt, $t[0]);
      case 2:
        return Ct.call(Tt, $t[0], $t[1]);
      case 3:
        return Ct.call(Tt, $t[0], $t[1], $t[2]);
    }
    return Ct.apply(Tt, $t);
  }
  function Bt(Ct, Tt) {
    for (var $t = -1, Ot = Array(Ct); ++$t < Ct; ) Ot[$t] = Tt($t);
    return Ot;
  }
  function Nt(Ct) {
    return function (Tt) {
      return Ct(Tt);
    };
  }
  function tr(Ct, Tt) {
    return Ct == null ? void 0 : Ct[Tt];
  }
  function rr(Ct, Tt) {
    return function ($t) {
      return Ct(Tt($t));
    };
  }
  var or = Array.prototype,
    pr = Function.prototype,
    sr = Object.prototype,
    ir = zt["__core-js_shared__"],
    cr = pr.toString,
    ar = sr.hasOwnProperty,
    lr = (function () {
      var Ct = /[^.]+$/.exec((ir && ir.keys && ir.keys.IE_PROTO) || "");
      return Ct ? "Symbol(src)_1." + Ct : "";
    })(),
    mr = sr.toString,
    ur = cr.call(Object),
    gr = RegExp(
      "^" +
        cr
          .call(ar)
          .replace(wt, "\\$&")
          .replace(
            /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
            "$1.*?"
          ) +
        "$"
    ),
    vr = er ? zt.Buffer : void 0,
    xr = zt.Symbol,
    br = zt.Uint8Array,
    Gr = vr ? vr.allocUnsafe : void 0,
    Hr = rr(Object.getPrototypeOf, Object),
    Ur = Object.create,
    on = sr.propertyIsEnumerable,
    sn = or.splice,
    Sr = xr ? xr.toStringTag : void 0,
    $r = (function () {
      try {
        var Ct = jr(Object, "defineProperty");
        return Ct({}, "", {}), Ct;
      } catch {}
    })(),
    ln = vr ? vr.isBuffer : void 0,
    qr = Math.max,
    cn = Date.now,
    Kr = jr(zt, "Map"),
    Pr = jr(Object, "create"),
    un = (function () {
      function Ct() {}
      return function (Tt) {
        if (!Cr(Tt)) return {};
        if (Ur) return Ur(Tt);
        Ct.prototype = Tt;
        var $t = new Ct();
        return (Ct.prototype = void 0), $t;
      };
    })();
  function Er(Ct) {
    var Tt = -1,
      $t = Ct == null ? 0 : Ct.length;
    for (this.clear(); ++Tt < $t; ) {
      var Ot = Ct[Tt];
      this.set(Ot[0], Ot[1]);
    }
  }
  function fn() {
    (this.__data__ = Pr ? Pr(null) : {}), (this.size = 0);
  }
  function dn(Ct) {
    var Tt = this.has(Ct) && delete this.__data__[Ct];
    return (this.size -= Tt ? 1 : 0), Tt;
  }
  function hn(Ct) {
    var Tt = this.__data__;
    if (Pr) {
      var $t = Tt[Ct];
      return $t === _ ? void 0 : $t;
    }
    return ar.call(Tt, Ct) ? Tt[Ct] : void 0;
  }
  function pn(Ct) {
    var Tt = this.__data__;
    return Pr ? Tt[Ct] !== void 0 : ar.call(Tt, Ct);
  }
  function mn(Ct, Tt) {
    var $t = this.__data__;
    return (
      (this.size += this.has(Ct) ? 0 : 1),
      ($t[Ct] = Pr && Tt === void 0 ? _ : Tt),
      this
    );
  }
  (Er.prototype.clear = fn),
    (Er.prototype.delete = dn),
    (Er.prototype.get = hn),
    (Er.prototype.has = pn),
    (Er.prototype.set = mn);
  function yr(Ct) {
    var Tt = -1,
      $t = Ct == null ? 0 : Ct.length;
    for (this.clear(); ++Tt < $t; ) {
      var Ot = Ct[Tt];
      this.set(Ot[0], Ot[1]);
    }
  }
  function gn() {
    (this.__data__ = []), (this.size = 0);
  }
  function vn(Ct) {
    var Tt = this.__data__,
      $t = Ar(Tt, Ct);
    if ($t < 0) return !1;
    var Ot = Tt.length - 1;
    return $t == Ot ? Tt.pop() : sn.call(Tt, $t, 1), --this.size, !0;
  }
  function yn(Ct) {
    var Tt = this.__data__,
      $t = Ar(Tt, Ct);
    return $t < 0 ? void 0 : Tt[$t][1];
  }
  function xn(Ct) {
    return Ar(this.__data__, Ct) > -1;
  }
  function bn(Ct, Tt) {
    var $t = this.__data__,
      Ot = Ar($t, Ct);
    return Ot < 0 ? (++this.size, $t.push([Ct, Tt])) : ($t[Ot][1] = Tt), this;
  }
  (yr.prototype.clear = gn),
    (yr.prototype.delete = vn),
    (yr.prototype.get = yn),
    (yr.prototype.has = xn),
    (yr.prototype.set = bn);
  function _r(Ct) {
    var Tt = -1,
      $t = Ct == null ? 0 : Ct.length;
    for (this.clear(); ++Tt < $t; ) {
      var Ot = Ct[Tt];
      this.set(Ot[0], Ot[1]);
    }
  }
  function Sn() {
    (this.size = 0),
      (this.__data__ = {
        hash: new Er(),
        map: new (Kr || yr)(),
        string: new Er(),
      });
  }
  function En(Ct) {
    var Tt = Rr(this, Ct).delete(Ct);
    return (this.size -= Tt ? 1 : 0), Tt;
  }
  function Cn(Ct) {
    return Rr(this, Ct).get(Ct);
  }
  function _n(Ct) {
    return Rr(this, Ct).has(Ct);
  }
  function kn(Ct, Tt) {
    var $t = Rr(this, Ct),
      Ot = $t.size;
    return $t.set(Ct, Tt), (this.size += $t.size == Ot ? 0 : 1), this;
  }
  (_r.prototype.clear = Sn),
    (_r.prototype.delete = En),
    (_r.prototype.get = Cn),
    (_r.prototype.has = _n),
    (_r.prototype.set = kn);
  function kr(Ct) {
    var Tt = (this.__data__ = new yr(Ct));
    this.size = Tt.size;
  }
  function Pn() {
    (this.__data__ = new yr()), (this.size = 0);
  }
  function wn(Ct) {
    var Tt = this.__data__,
      $t = Tt.delete(Ct);
    return (this.size = Tt.size), $t;
  }
  function Tn(Ct) {
    return this.__data__.get(Ct);
  }
  function $n(Ct) {
    return this.__data__.has(Ct);
  }
  function An(Ct, Tt) {
    var $t = this.__data__;
    if ($t instanceof yr) {
      var Ot = $t.__data__;
      if (!Kr || Ot.length < s - 1)
        return Ot.push([Ct, Tt]), (this.size = ++$t.size), this;
      $t = this.__data__ = new _r(Ot);
    }
    return $t.set(Ct, Tt), (this.size = $t.size), this;
  }
  (kr.prototype.clear = Pn),
    (kr.prototype.delete = wn),
    (kr.prototype.get = Tn),
    (kr.prototype.has = $n),
    (kr.prototype.set = An);
  function Mn(Ct, Tt) {
    var $t = Or(Ct),
      Ot = !$t && Lr(Ct),
      qt = !$t && !Ot && Jr(Ct),
      Zt = !$t && !Ot && !qt && tn(Ct),
      Qt = $t || Ot || qt || Zt,
      Ut = Qt ? Bt(Ct.length, String) : [],
      Jt = Ut.length;
    for (var hr in Ct)
      (Tt || ar.call(Ct, hr)) &&
        !(
          Qt &&
          (hr == "length" ||
            (qt && (hr == "offset" || hr == "parent")) ||
            (Zt &&
              (hr == "buffer" || hr == "byteLength" || hr == "byteOffset")) ||
            Zr(hr, Jt))
        ) &&
        Ut.push(hr);
    return Ut;
  }
  function Fr(Ct, Tt, $t) {
    (($t !== void 0 && !Ir(Ct[Tt], $t)) || ($t === void 0 && !(Tt in Ct))) &&
      Dr(Ct, Tt, $t);
  }
  function Rn(Ct, Tt, $t) {
    var Ot = Ct[Tt];
    (!(ar.call(Ct, Tt) && Ir(Ot, $t)) || ($t === void 0 && !(Tt in Ct))) &&
      Dr(Ct, Tt, $t);
  }
  function Ar(Ct, Tt) {
    for (var $t = Ct.length; $t--; ) if (Ir(Ct[$t][0], Tt)) return $t;
    return -1;
  }
  function Dr(Ct, Tt, $t) {
    Tt == "__proto__" && $r
      ? $r(Ct, Tt, {
          configurable: !0,
          enumerable: !0,
          value: $t,
          writable: !0,
        })
      : (Ct[Tt] = $t);
  }
  var In = Un();
  function Mr(Ct) {
    return Ct == null
      ? Ct === void 0
        ? bt
        : ut
      : Sr && Sr in Object(Ct)
      ? qn(Ct)
      : Jn(Ct);
  }
  function Yr(Ct) {
    return wr(Ct) && Mr(Ct) == rt;
  }
  function Fn(Ct) {
    if (!Cr(Ct) || Zn(Ct)) return !1;
    var Tt = zr(Ct) ? gr : _t;
    return Tt.test(xa(Ct));
  }
  function Dn(Ct) {
    return wr(Ct) && en(Ct.length) && !!Vt[Mr(Ct)];
  }
  function jn(Ct) {
    if (!Cr(Ct)) return Qn(Ct);
    var Tt = Qr(Ct),
      $t = [];
    for (var Ot in Ct)
      (Ot == "constructor" && (Tt || !ar.call(Ct, Ot))) || $t.push(Ot);
    return $t;
  }
  function Xr(Ct, Tt, $t, Ot, qt) {
    Ct !== Tt &&
      In(
        Tt,
        function (Zt, Qt) {
          if ((qt || (qt = new kr()), Cr(Zt))) Vn(Ct, Tt, Qt, $t, Xr, Ot, qt);
          else {
            var Ut = Ot ? Ot(Vr(Ct, Qt), Zt, Qt + "", Ct, Tt, qt) : void 0;
            Ut === void 0 && (Ut = Zt), Fr(Ct, Qt, Ut);
          }
        },
        rn
      );
  }
  function Vn(Ct, Tt, $t, Ot, qt, Zt, Qt) {
    var Ut = Vr(Ct, $t),
      Jt = Vr(Tt, $t),
      hr = Qt.get(Jt);
    if (hr) {
      Fr(Ct, $t, hr);
      return;
    }
    var dr = Zt ? Zt(Ut, Jt, $t + "", Ct, Tt, Qt) : void 0,
      Tr = dr === void 0;
    if (Tr) {
      var Nr = Or(Jt),
        Wr = !Nr && Jr(Jt),
        an = !Nr && !Wr && tn(Jt);
      (dr = Jt),
        Nr || Wr || an
          ? Or(Ut)
            ? (dr = Ut)
            : ba(Ut)
            ? (dr = Wn(Ut))
            : Wr
            ? ((Tr = !1), (dr = Bn(Jt, !0)))
            : an
            ? ((Tr = !1), (dr = Nn(Jt, !0)))
            : (dr = [])
          : $a(Jt) || Lr(Jt)
          ? ((dr = Ut),
            Lr(Ut) ? (dr = eo(Ut)) : (!Cr(Ut) || zr(Ut)) && (dr = Kn(Jt)))
          : (Tr = !1);
    }
    Tr && (Qt.set(Jt, dr), qt(dr, Jt, Ot, Zt, Qt), Qt.delete(Jt)),
      Fr(Ct, $t, dr);
  }
  function Ln(Ct, Tt) {
    return na(_i(Ct, Tt, nn), Ct + "");
  }
  var On = $r
    ? function (Ct, Tt) {
        return $r(Ct, "toString", {
          configurable: !0,
          enumerable: !1,
          value: ro(Tt),
          writable: !0,
        });
      }
    : nn;
  function Bn(Ct, Tt) {
    if (Tt) return Ct.slice();
    var $t = Ct.length,
      Ot = Gr ? Gr($t) : new Ct.constructor($t);
    return Ct.copy(Ot), Ot;
  }
  function zn(Ct) {
    var Tt = new Ct.constructor(Ct.byteLength);
    return new br(Tt).set(new br(Ct)), Tt;
  }
  function Nn(Ct, Tt) {
    var $t = Tt ? zn(Ct.buffer) : Ct.buffer;
    return new Ct.constructor($t, Ct.byteOffset, Ct.length);
  }
  function Wn(Ct, Tt) {
    var $t = -1,
      Ot = Ct.length;
    for (Tt || (Tt = Array(Ot)); ++$t < Ot; ) Tt[$t] = Ct[$t];
    return Tt;
  }
  function Gn(Ct, Tt, $t, Ot) {
    var qt = !$t;
    $t || ($t = {});
    for (var Zt = -1, Qt = Tt.length; ++Zt < Qt; ) {
      var Ut = Tt[Zt],
        Jt = Ot ? Ot($t[Ut], Ct[Ut], Ut, $t, Ct) : void 0;
      Jt === void 0 && (Jt = Ct[Ut]), qt ? Dr($t, Ut, Jt) : Rn($t, Ut, Jt);
    }
    return $t;
  }
  function Hn(Ct) {
    return Ln(function (Tt, $t) {
      var Ot = -1,
        qt = $t.length,
        Zt = qt > 1 ? $t[qt - 1] : void 0,
        Qt = qt > 2 ? $t[2] : void 0;
      for (
        Zt = Ct.length > 3 && typeof Zt == "function" ? (qt--, Zt) : void 0,
          Qt && Yn($t[0], $t[1], Qt) && ((Zt = qt < 3 ? void 0 : Zt), (qt = 1)),
          Tt = Object(Tt);
        ++Ot < qt;

      ) {
        var Ut = $t[Ot];
        Ut && Ct(Tt, Ut, Ot, Zt);
      }
      return Tt;
    });
  }
  function Un(Ct) {
    return function (Tt, $t, Ot) {
      for (var qt = -1, Zt = Object(Tt), Qt = Ot(Tt), Ut = Qt.length; Ut--; ) {
        var Jt = Qt[Ct ? Ut : ++qt];
        if ($t(Zt[Jt], Jt, Zt) === !1) break;
      }
      return Tt;
    };
  }
  function Rr(Ct, Tt) {
    var $t = Ct.__data__;
    return Xn(Tt) ? $t[typeof Tt == "string" ? "string" : "hash"] : $t.map;
  }
  function jr(Ct, Tt) {
    var $t = tr(Ct, Tt);
    return Fn($t) ? $t : void 0;
  }
  function qn(Ct) {
    var Tt = ar.call(Ct, Sr),
      $t = Ct[Sr];
    try {
      Ct[Sr] = void 0;
      var Ot = !0;
    } catch {}
    var qt = mr.call(Ct);
    return Ot && (Tt ? (Ct[Sr] = $t) : delete Ct[Sr]), qt;
  }
  function Kn(Ct) {
    return typeof Ct.constructor == "function" && !Qr(Ct) ? un(Hr(Ct)) : {};
  }
  function Zr(Ct, Tt) {
    var $t = typeof Ct;
    return (
      (Tt = Tt ?? tt),
      !!Tt &&
        ($t == "number" || ($t != "symbol" && Ft.test(Ct))) &&
        Ct > -1 &&
        Ct % 1 == 0 &&
        Ct < Tt
    );
  }
  function Yn(Ct, Tt, $t) {
    if (!Cr($t)) return !1;
    var Ot = typeof Tt;
    return (
      Ot == "number" ? Br($t) && Zr(Tt, $t.length) : Ot == "string" && Tt in $t
    )
      ? Ir($t[Tt], Ct)
      : !1;
  }
  function Xn(Ct) {
    var Tt = typeof Ct;
    return Tt == "string" || Tt == "number" || Tt == "symbol" || Tt == "boolean"
      ? Ct !== "__proto__"
      : Ct === null;
  }
  function Zn(Ct) {
    return !!lr && lr in Ct;
  }
  function Qr(Ct) {
    var Tt = Ct && Ct.constructor,
      $t = (typeof Tt == "function" && Tt.prototype) || sr;
    return Ct === $t;
  }
  function Qn(Ct) {
    var Tt = [];
    if (Ct != null) for (var $t in Object(Ct)) Tt.push($t);
    return Tt;
  }
  function Jn(Ct) {
    return mr.call(Ct);
  }
  function _i(Ct, Tt, $t) {
    return (
      (Tt = qr(Tt === void 0 ? Ct.length - 1 : Tt, 0)),
      function () {
        for (
          var Ot = arguments,
            qt = -1,
            Zt = qr(Ot.length - Tt, 0),
            Qt = Array(Zt);
          ++qt < Zt;

        )
          Qt[qt] = Ot[Tt + qt];
        qt = -1;
        for (var Ut = Array(Tt + 1); ++qt < Tt; ) Ut[qt] = Ot[qt];
        return (Ut[Tt] = $t(Qt)), Ht(Ct, this, Ut);
      }
    );
  }
  function Vr(Ct, Tt) {
    if (
      !(Tt === "constructor" && typeof Ct[Tt] == "function") &&
      Tt != "__proto__"
    )
      return Ct[Tt];
  }
  var na = ga(On);
  function ga(Ct) {
    var Tt = 0,
      $t = 0;
    return function () {
      var Ot = cn(),
        qt = et - (Ot - $t);
      if ((($t = Ot), qt > 0)) {
        if (++Tt >= $) return arguments[0];
      } else Tt = 0;
      return Ct.apply(void 0, arguments);
    };
  }
  function xa(Ct) {
    if (Ct != null) {
      try {
        return cr.call(Ct);
      } catch {}
      try {
        return Ct + "";
      } catch {}
    }
    return "";
  }
  function Ir(Ct, Tt) {
    return Ct === Tt || (Ct !== Ct && Tt !== Tt);
  }
  var Lr = Yr(
      (function () {
        return arguments;
      })()
    )
      ? Yr
      : function (Ct) {
          return wr(Ct) && ar.call(Ct, "callee") && !on.call(Ct, "callee");
        },
    Or = Array.isArray;
  function Br(Ct) {
    return Ct != null && en(Ct.length) && !zr(Ct);
  }
  function ba(Ct) {
    return wr(Ct) && Br(Ct);
  }
  var Jr = ln || no;
  function zr(Ct) {
    if (!Cr(Ct)) return !1;
    var Tt = Mr(Ct);
    return Tt == dt || Tt == ht || Tt == it || Tt == ct;
  }
  function en(Ct) {
    return typeof Ct == "number" && Ct > -1 && Ct % 1 == 0 && Ct <= tt;
  }
  function Cr(Ct) {
    var Tt = typeof Ct;
    return Ct != null && (Tt == "object" || Tt == "function");
  }
  function wr(Ct) {
    return Ct != null && typeof Ct == "object";
  }
  function $a(Ct) {
    if (!wr(Ct) || Mr(Ct) != lt) return !1;
    var Tt = Hr(Ct);
    if (Tt === null) return !0;
    var $t = ar.call(Tt, "constructor") && Tt.constructor;
    return typeof $t == "function" && $t instanceof $t && cr.call($t) == ur;
  }
  var tn = nr ? Nt(nr) : Dn;
  function eo(Ct) {
    return Gn(Ct, rn(Ct));
  }
  function rn(Ct) {
    return Br(Ct) ? Mn(Ct, !0) : jn(Ct);
  }
  var to = Hn(function (Ct, Tt, $t, Ot) {
    Xr(Ct, Tt, $t, Ot);
  });
  function ro(Ct) {
    return function () {
      return Ct;
    };
  }
  function nn(Ct) {
    return Ct;
  }
  function no() {
    return !1;
  }
  a.exports = to;
})(lodash_mergewith, lodash_mergewith.exports);
var lodash_mergewithExports = lodash_mergewith.exports;
const mergeWith = getDefaultExportFromCjs(lodash_mergewithExports);
var isImportant = (a) => /!(important)?$/.test(a),
  withoutImportant = (a) =>
    typeof a == "string" ? a.replace(/!(important)?$/, "").trim() : a,
  tokenToCSSVar = (a, o) => (s) => {
    const _ = String(o),
      $ = isImportant(_),
      et = withoutImportant(_),
      tt = a ? `${a}.${et}` : et;
    let rt =
      isObject$4(s.__cssMap) && tt in s.__cssMap ? s.__cssMap[tt].varRef : o;
    return (rt = withoutImportant(rt)), $ ? `${rt} !important` : rt;
  };
function createTransform(a) {
  const { scale: o, transform: s, compose: _ } = a;
  return (et, tt) => {
    var rt;
    const nt = tokenToCSSVar(o, et)(tt);
    let it = (rt = s == null ? void 0 : s(nt, tt)) != null ? rt : nt;
    return _ && (it = _(it, tt)), it;
  };
}
var pipe$1 =
  (...a) =>
  (o) =>
    a.reduce((s, _) => _(s), o);
function toConfig(a, o) {
  return (s) => {
    const _ = { property: s, scale: a };
    return (_.transform = createTransform({ scale: a, transform: o })), _;
  };
}
var getRtl =
  ({ rtl: a, ltr: o }) =>
  (s) =>
    s.direction === "rtl" ? a : o;
function logical(a) {
  const { property: o, scale: s, transform: _ } = a;
  return {
    scale: s,
    property: getRtl(o),
    transform: s ? createTransform({ scale: s, compose: _ }) : _,
  };
}
var transformTemplate = [
  "rotate(var(--chakra-rotate, 0))",
  "scaleX(var(--chakra-scale-x, 1))",
  "scaleY(var(--chakra-scale-y, 1))",
  "skewX(var(--chakra-skew-x, 0))",
  "skewY(var(--chakra-skew-y, 0))",
];
function getTransformTemplate() {
  return [
    "translateX(var(--chakra-translate-x, 0))",
    "translateY(var(--chakra-translate-y, 0))",
    ...transformTemplate,
  ].join(" ");
}
function getTransformGpuTemplate() {
  return [
    "translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)",
    ...transformTemplate,
  ].join(" ");
}
var filterTemplate = {
    "--chakra-blur": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-invert": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-drop-shadow": "var(--chakra-empty,/*!*/ /*!*/)",
    filter: [
      "var(--chakra-blur)",
      "var(--chakra-brightness)",
      "var(--chakra-contrast)",
      "var(--chakra-grayscale)",
      "var(--chakra-hue-rotate)",
      "var(--chakra-invert)",
      "var(--chakra-saturate)",
      "var(--chakra-sepia)",
      "var(--chakra-drop-shadow)",
    ].join(" "),
  },
  backdropFilterTemplate = {
    backdropFilter: [
      "var(--chakra-backdrop-blur)",
      "var(--chakra-backdrop-brightness)",
      "var(--chakra-backdrop-contrast)",
      "var(--chakra-backdrop-grayscale)",
      "var(--chakra-backdrop-hue-rotate)",
      "var(--chakra-backdrop-invert)",
      "var(--chakra-backdrop-opacity)",
      "var(--chakra-backdrop-saturate)",
      "var(--chakra-backdrop-sepia)",
    ].join(" "),
    "--chakra-backdrop-blur": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-invert": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-opacity": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-backdrop-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
  };
function getRingTemplate(a) {
  return {
    "--chakra-ring-offset-shadow":
      "var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)",
    "--chakra-ring-shadow":
      "var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)",
    "--chakra-ring-width": a,
    boxShadow: [
      "var(--chakra-ring-offset-shadow)",
      "var(--chakra-ring-shadow)",
      "var(--chakra-shadow, 0 0 #0000)",
    ].join(", "),
  };
}
var flexDirectionTemplate = {
    "row-reverse": {
      space: "--chakra-space-x-reverse",
      divide: "--chakra-divide-x-reverse",
    },
    "column-reverse": {
      space: "--chakra-space-y-reverse",
      divide: "--chakra-divide-y-reverse",
    },
  },
  directionMap = {
    "to-t": "to top",
    "to-tr": "to top right",
    "to-r": "to right",
    "to-br": "to bottom right",
    "to-b": "to bottom",
    "to-bl": "to bottom left",
    "to-l": "to left",
    "to-tl": "to top left",
  },
  valueSet = new Set(Object.values(directionMap)),
  globalSet = new Set([
    "none",
    "-moz-initial",
    "inherit",
    "initial",
    "revert",
    "unset",
  ]),
  trimSpace = (a) => a.trim();
function parseGradient(a, o) {
  if (a == null || globalSet.has(a)) return a;
  if (!(isCSSFunction(a) || globalSet.has(a))) return `url('${a}')`;
  const $ = /(^[a-z-A-Z]+)\((.*)\)/g.exec(a),
    et = $ == null ? void 0 : $[1],
    tt = $ == null ? void 0 : $[2];
  if (!et || !tt) return a;
  const rt = et.includes("-gradient") ? et : `${et}-gradient`,
    [nt, ...it] = tt.split(",").map(trimSpace).filter(Boolean);
  if ((it == null ? void 0 : it.length) === 0) return a;
  const at = nt in directionMap ? directionMap[nt] : nt;
  it.unshift(at);
  const st = it.map((ot) => {
    if (valueSet.has(ot)) return ot;
    const dt = ot.indexOf(" "),
      [ht, ft] = dt !== -1 ? [ot.substr(0, dt), ot.substr(dt + 1)] : [ot],
      mt = isCSSFunction(ft) ? ft : ft && ft.split(" "),
      ut = `colors.${ht}`,
      lt = ut in o.__cssMap ? o.__cssMap[ut].varRef : ht;
    return mt ? [lt, ...(Array.isArray(mt) ? mt : [mt])].join(" ") : lt;
  });
  return `${rt}(${st.join(", ")})`;
}
var isCSSFunction = (a) =>
    typeof a == "string" && a.includes("(") && a.includes(")"),
  gradientTransform = (a, o) => parseGradient(a, o ?? {});
function isCssVar(a) {
  return /^var\(--.+\)$/.test(a);
}
var analyzeCSSValue = (a) => {
    const o = parseFloat(a.toString()),
      s = a.toString().replace(String(o), "");
    return { unitless: !s, value: o, unit: s };
  },
  wrap$1 = (a) => (o) => `${a}(${o})`,
  transformFunctions = {
    filter(a) {
      return a !== "auto" ? a : filterTemplate;
    },
    backdropFilter(a) {
      return a !== "auto" ? a : backdropFilterTemplate;
    },
    ring(a) {
      return getRingTemplate(transformFunctions.px(a));
    },
    bgClip(a) {
      return a === "text"
        ? { color: "transparent", backgroundClip: "text" }
        : { backgroundClip: a };
    },
    transform(a) {
      return a === "auto"
        ? getTransformTemplate()
        : a === "auto-gpu"
        ? getTransformGpuTemplate()
        : a;
    },
    vh(a) {
      return a === "$100vh" ? "var(--chakra-vh)" : a;
    },
    px(a) {
      if (a == null) return a;
      const { unitless: o } = analyzeCSSValue(a);
      return o || typeof a == "number" ? `${a}px` : a;
    },
    fraction(a) {
      return typeof a != "number" || a > 1 ? a : `${a * 100}%`;
    },
    float(a, o) {
      const s = { left: "right", right: "left" };
      return o.direction === "rtl" ? s[a] : a;
    },
    degree(a) {
      if (isCssVar(a) || a == null) return a;
      const o = typeof a == "string" && !a.endsWith("deg");
      return typeof a == "number" || o ? `${a}deg` : a;
    },
    gradient: gradientTransform,
    blur: wrap$1("blur"),
    opacity: wrap$1("opacity"),
    brightness: wrap$1("brightness"),
    contrast: wrap$1("contrast"),
    dropShadow: wrap$1("drop-shadow"),
    grayscale: wrap$1("grayscale"),
    hueRotate: wrap$1("hue-rotate"),
    invert: wrap$1("invert"),
    saturate: wrap$1("saturate"),
    sepia: wrap$1("sepia"),
    bgImage(a) {
      return a == null || isCSSFunction(a) || globalSet.has(a)
        ? a
        : `url(${a})`;
    },
    outline(a) {
      const o = String(a) === "0" || String(a) === "none";
      return a !== null && o
        ? { outline: "2px solid transparent", outlineOffset: "2px" }
        : { outline: a };
    },
    flexDirection(a) {
      var o;
      const { space: s, divide: _ } =
          (o = flexDirectionTemplate[a]) != null ? o : {},
        $ = { flexDirection: a };
      return s && ($[s] = 1), _ && ($[_] = 1), $;
    },
  },
  t = {
    borderWidths: toConfig("borderWidths"),
    borderStyles: toConfig("borderStyles"),
    colors: toConfig("colors"),
    borders: toConfig("borders"),
    gradients: toConfig("gradients", transformFunctions.gradient),
    radii: toConfig("radii", transformFunctions.px),
    space: toConfig(
      "space",
      pipe$1(transformFunctions.vh, transformFunctions.px)
    ),
    spaceT: toConfig(
      "space",
      pipe$1(transformFunctions.vh, transformFunctions.px)
    ),
    degreeT(a) {
      return { property: a, transform: transformFunctions.degree };
    },
    prop(a, o, s) {
      return {
        property: a,
        scale: o,
        ...(o && { transform: createTransform({ scale: o, transform: s }) }),
      };
    },
    propT(a, o) {
      return { property: a, transform: o };
    },
    sizes: toConfig(
      "sizes",
      pipe$1(transformFunctions.vh, transformFunctions.px)
    ),
    sizesT: toConfig(
      "sizes",
      pipe$1(transformFunctions.vh, transformFunctions.fraction)
    ),
    shadows: toConfig("shadows"),
    logical,
    blur: toConfig("blur", transformFunctions.blur),
  },
  background = {
    background: t.colors("background"),
    backgroundColor: t.colors("backgroundColor"),
    backgroundImage: t.gradients("backgroundImage"),
    backgroundSize: !0,
    backgroundPosition: !0,
    backgroundRepeat: !0,
    backgroundAttachment: !0,
    backgroundClip: { transform: transformFunctions.bgClip },
    bgSize: t.prop("backgroundSize"),
    bgPosition: t.prop("backgroundPosition"),
    bg: t.colors("background"),
    bgColor: t.colors("backgroundColor"),
    bgPos: t.prop("backgroundPosition"),
    bgRepeat: t.prop("backgroundRepeat"),
    bgAttachment: t.prop("backgroundAttachment"),
    bgGradient: t.gradients("backgroundImage"),
    bgClip: { transform: transformFunctions.bgClip },
  };
Object.assign(background, {
  bgImage: background.backgroundImage,
  bgImg: background.backgroundImage,
});
var border = {
  border: t.borders("border"),
  borderWidth: t.borderWidths("borderWidth"),
  borderStyle: t.borderStyles("borderStyle"),
  borderColor: t.colors("borderColor"),
  borderRadius: t.radii("borderRadius"),
  borderTop: t.borders("borderTop"),
  borderBlockStart: t.borders("borderBlockStart"),
  borderTopLeftRadius: t.radii("borderTopLeftRadius"),
  borderStartStartRadius: t.logical({
    scale: "radii",
    property: { ltr: "borderTopLeftRadius", rtl: "borderTopRightRadius" },
  }),
  borderEndStartRadius: t.logical({
    scale: "radii",
    property: { ltr: "borderBottomLeftRadius", rtl: "borderBottomRightRadius" },
  }),
  borderTopRightRadius: t.radii("borderTopRightRadius"),
  borderStartEndRadius: t.logical({
    scale: "radii",
    property: { ltr: "borderTopRightRadius", rtl: "borderTopLeftRadius" },
  }),
  borderEndEndRadius: t.logical({
    scale: "radii",
    property: { ltr: "borderBottomRightRadius", rtl: "borderBottomLeftRadius" },
  }),
  borderRight: t.borders("borderRight"),
  borderInlineEnd: t.borders("borderInlineEnd"),
  borderBottom: t.borders("borderBottom"),
  borderBlockEnd: t.borders("borderBlockEnd"),
  borderBottomLeftRadius: t.radii("borderBottomLeftRadius"),
  borderBottomRightRadius: t.radii("borderBottomRightRadius"),
  borderLeft: t.borders("borderLeft"),
  borderInlineStart: { property: "borderInlineStart", scale: "borders" },
  borderInlineStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopLeftRadius", "borderBottomLeftRadius"],
      rtl: ["borderTopRightRadius", "borderBottomRightRadius"],
    },
  }),
  borderInlineEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopRightRadius", "borderBottomRightRadius"],
      rtl: ["borderTopLeftRadius", "borderBottomLeftRadius"],
    },
  }),
  borderX: t.borders(["borderLeft", "borderRight"]),
  borderInline: t.borders("borderInline"),
  borderY: t.borders(["borderTop", "borderBottom"]),
  borderBlock: t.borders("borderBlock"),
  borderTopWidth: t.borderWidths("borderTopWidth"),
  borderBlockStartWidth: t.borderWidths("borderBlockStartWidth"),
  borderTopColor: t.colors("borderTopColor"),
  borderBlockStartColor: t.colors("borderBlockStartColor"),
  borderTopStyle: t.borderStyles("borderTopStyle"),
  borderBlockStartStyle: t.borderStyles("borderBlockStartStyle"),
  borderBottomWidth: t.borderWidths("borderBottomWidth"),
  borderBlockEndWidth: t.borderWidths("borderBlockEndWidth"),
  borderBottomColor: t.colors("borderBottomColor"),
  borderBlockEndColor: t.colors("borderBlockEndColor"),
  borderBottomStyle: t.borderStyles("borderBottomStyle"),
  borderBlockEndStyle: t.borderStyles("borderBlockEndStyle"),
  borderLeftWidth: t.borderWidths("borderLeftWidth"),
  borderInlineStartWidth: t.borderWidths("borderInlineStartWidth"),
  borderLeftColor: t.colors("borderLeftColor"),
  borderInlineStartColor: t.colors("borderInlineStartColor"),
  borderLeftStyle: t.borderStyles("borderLeftStyle"),
  borderInlineStartStyle: t.borderStyles("borderInlineStartStyle"),
  borderRightWidth: t.borderWidths("borderRightWidth"),
  borderInlineEndWidth: t.borderWidths("borderInlineEndWidth"),
  borderRightColor: t.colors("borderRightColor"),
  borderInlineEndColor: t.colors("borderInlineEndColor"),
  borderRightStyle: t.borderStyles("borderRightStyle"),
  borderInlineEndStyle: t.borderStyles("borderInlineEndStyle"),
  borderTopRadius: t.radii(["borderTopLeftRadius", "borderTopRightRadius"]),
  borderBottomRadius: t.radii([
    "borderBottomLeftRadius",
    "borderBottomRightRadius",
  ]),
  borderLeftRadius: t.radii(["borderTopLeftRadius", "borderBottomLeftRadius"]),
  borderRightRadius: t.radii([
    "borderTopRightRadius",
    "borderBottomRightRadius",
  ]),
};
Object.assign(border, {
  rounded: border.borderRadius,
  roundedTop: border.borderTopRadius,
  roundedTopLeft: border.borderTopLeftRadius,
  roundedTopRight: border.borderTopRightRadius,
  roundedTopStart: border.borderStartStartRadius,
  roundedTopEnd: border.borderStartEndRadius,
  roundedBottom: border.borderBottomRadius,
  roundedBottomLeft: border.borderBottomLeftRadius,
  roundedBottomRight: border.borderBottomRightRadius,
  roundedBottomStart: border.borderEndStartRadius,
  roundedBottomEnd: border.borderEndEndRadius,
  roundedLeft: border.borderLeftRadius,
  roundedRight: border.borderRightRadius,
  roundedStart: border.borderInlineStartRadius,
  roundedEnd: border.borderInlineEndRadius,
  borderStart: border.borderInlineStart,
  borderEnd: border.borderInlineEnd,
  borderTopStartRadius: border.borderStartStartRadius,
  borderTopEndRadius: border.borderStartEndRadius,
  borderBottomStartRadius: border.borderEndStartRadius,
  borderBottomEndRadius: border.borderEndEndRadius,
  borderStartRadius: border.borderInlineStartRadius,
  borderEndRadius: border.borderInlineEndRadius,
  borderStartWidth: border.borderInlineStartWidth,
  borderEndWidth: border.borderInlineEndWidth,
  borderStartColor: border.borderInlineStartColor,
  borderEndColor: border.borderInlineEndColor,
  borderStartStyle: border.borderInlineStartStyle,
  borderEndStyle: border.borderInlineEndStyle,
});
var color$1 = {
    color: t.colors("color"),
    textColor: t.colors("color"),
    fill: t.colors("fill"),
    stroke: t.colors("stroke"),
  },
  effect = {
    boxShadow: t.shadows("boxShadow"),
    mixBlendMode: !0,
    blendMode: t.prop("mixBlendMode"),
    backgroundBlendMode: !0,
    bgBlendMode: t.prop("backgroundBlendMode"),
    opacity: !0,
  };
Object.assign(effect, { shadow: effect.boxShadow });
var filter$1 = {
    filter: { transform: transformFunctions.filter },
    blur: t.blur("--chakra-blur"),
    brightness: t.propT("--chakra-brightness", transformFunctions.brightness),
    contrast: t.propT("--chakra-contrast", transformFunctions.contrast),
    hueRotate: t.degreeT("--chakra-hue-rotate"),
    invert: t.propT("--chakra-invert", transformFunctions.invert),
    saturate: t.propT("--chakra-saturate", transformFunctions.saturate),
    dropShadow: t.propT("--chakra-drop-shadow", transformFunctions.dropShadow),
    backdropFilter: { transform: transformFunctions.backdropFilter },
    backdropBlur: t.blur("--chakra-backdrop-blur"),
    backdropBrightness: t.propT(
      "--chakra-backdrop-brightness",
      transformFunctions.brightness
    ),
    backdropContrast: t.propT(
      "--chakra-backdrop-contrast",
      transformFunctions.contrast
    ),
    backdropHueRotate: t.degreeT("--chakra-backdrop-hue-rotate"),
    backdropInvert: t.propT(
      "--chakra-backdrop-invert",
      transformFunctions.invert
    ),
    backdropSaturate: t.propT(
      "--chakra-backdrop-saturate",
      transformFunctions.saturate
    ),
  },
  flexbox = {
    alignItems: !0,
    alignContent: !0,
    justifyItems: !0,
    justifyContent: !0,
    flexWrap: !0,
    flexDirection: { transform: transformFunctions.flexDirection },
    flex: !0,
    flexFlow: !0,
    flexGrow: !0,
    flexShrink: !0,
    flexBasis: t.sizes("flexBasis"),
    justifySelf: !0,
    alignSelf: !0,
    order: !0,
    placeItems: !0,
    placeContent: !0,
    placeSelf: !0,
    gap: t.space("gap"),
    rowGap: t.space("rowGap"),
    columnGap: t.space("columnGap"),
  };
Object.assign(flexbox, { flexDir: flexbox.flexDirection });
var grid = {
    gridGap: t.space("gridGap"),
    gridColumnGap: t.space("gridColumnGap"),
    gridRowGap: t.space("gridRowGap"),
    gridColumn: !0,
    gridRow: !0,
    gridAutoFlow: !0,
    gridAutoColumns: !0,
    gridColumnStart: !0,
    gridColumnEnd: !0,
    gridRowStart: !0,
    gridRowEnd: !0,
    gridAutoRows: !0,
    gridTemplate: !0,
    gridTemplateColumns: !0,
    gridTemplateRows: !0,
    gridTemplateAreas: !0,
    gridArea: !0,
  },
  interactivity = {
    appearance: !0,
    cursor: !0,
    resize: !0,
    userSelect: !0,
    pointerEvents: !0,
    outline: { transform: transformFunctions.outline },
    outlineOffset: !0,
    outlineColor: t.colors("outlineColor"),
  },
  layout$1 = {
    width: t.sizesT("width"),
    inlineSize: t.sizesT("inlineSize"),
    height: t.sizes("height"),
    blockSize: t.sizes("blockSize"),
    boxSize: t.sizes(["width", "height"]),
    minWidth: t.sizes("minWidth"),
    minInlineSize: t.sizes("minInlineSize"),
    minHeight: t.sizes("minHeight"),
    minBlockSize: t.sizes("minBlockSize"),
    maxWidth: t.sizes("maxWidth"),
    maxInlineSize: t.sizes("maxInlineSize"),
    maxHeight: t.sizes("maxHeight"),
    maxBlockSize: t.sizes("maxBlockSize"),
    overflow: !0,
    overflowX: !0,
    overflowY: !0,
    overscrollBehavior: !0,
    overscrollBehaviorX: !0,
    overscrollBehaviorY: !0,
    display: !0,
    aspectRatio: !0,
    hideFrom: {
      scale: "breakpoints",
      transform: (a, o) => {
        var s, _, $;
        return {
          [`@media screen and (min-width: ${
            ($ =
              (_ = (s = o.__breakpoints) == null ? void 0 : s.get(a)) == null
                ? void 0
                : _.minW) != null
              ? $
              : a
          })`]: { display: "none" },
        };
      },
    },
    hideBelow: {
      scale: "breakpoints",
      transform: (a, o) => {
        var s, _, $;
        return {
          [`@media screen and (max-width: ${
            ($ =
              (_ = (s = o.__breakpoints) == null ? void 0 : s.get(a)) == null
                ? void 0
                : _._minW) != null
              ? $
              : a
          })`]: { display: "none" },
        };
      },
    },
    verticalAlign: !0,
    boxSizing: !0,
    boxDecorationBreak: !0,
    float: t.propT("float", transformFunctions.float),
    objectFit: !0,
    objectPosition: !0,
    visibility: !0,
    isolation: !0,
  };
Object.assign(layout$1, {
  w: layout$1.width,
  h: layout$1.height,
  minW: layout$1.minWidth,
  maxW: layout$1.maxWidth,
  minH: layout$1.minHeight,
  maxH: layout$1.maxHeight,
  overscroll: layout$1.overscrollBehavior,
  overscrollX: layout$1.overscrollBehaviorX,
  overscrollY: layout$1.overscrollBehaviorY,
});
var list = {
  listStyleType: !0,
  listStylePosition: !0,
  listStylePos: t.prop("listStylePosition"),
  listStyleImage: !0,
  listStyleImg: t.prop("listStyleImage"),
};
function get$1(a, o, s, _) {
  const $ = typeof o == "string" ? o.split(".") : [o];
  for (_ = 0; _ < $.length && a; _ += 1) a = a[$[_]];
  return a === void 0 ? s : a;
}
var memoize$1 = (a) => {
    const o = new WeakMap();
    return (_, $, et, tt) => {
      if (typeof _ > "u") return a(_, $, et);
      o.has(_) || o.set(_, new Map());
      const rt = o.get(_);
      if (rt.has($)) return rt.get($);
      const nt = a(_, $, et, tt);
      return rt.set($, nt), nt;
    };
  },
  memoizedGet$1 = memoize$1(get$1),
  srOnly = {
    border: "0px",
    clip: "rect(0, 0, 0, 0)",
    width: "1px",
    height: "1px",
    margin: "-1px",
    padding: "0px",
    overflow: "hidden",
    whiteSpace: "nowrap",
    position: "absolute",
  },
  srFocusable = {
    position: "static",
    width: "auto",
    height: "auto",
    clip: "auto",
    padding: "0",
    margin: "0",
    overflow: "visible",
    whiteSpace: "normal",
  },
  getWithPriority = (a, o, s) => {
    const _ = {},
      $ = memoizedGet$1(a, o, {});
    for (const et in $) (et in s && s[et] != null) || (_[et] = $[et]);
    return _;
  },
  others = {
    srOnly: {
      transform(a) {
        return a === !0 ? srOnly : a === "focusable" ? srFocusable : {};
      },
    },
    layerStyle: {
      processResult: !0,
      transform: (a, o, s) => getWithPriority(o, `layerStyles.${a}`, s),
    },
    textStyle: {
      processResult: !0,
      transform: (a, o, s) => getWithPriority(o, `textStyles.${a}`, s),
    },
    apply: {
      processResult: !0,
      transform: (a, o, s) => getWithPriority(o, a, s),
    },
  },
  position = {
    position: !0,
    pos: t.prop("position"),
    zIndex: t.prop("zIndex", "zIndices"),
    inset: t.spaceT("inset"),
    insetX: t.spaceT(["left", "right"]),
    insetInline: t.spaceT("insetInline"),
    insetY: t.spaceT(["top", "bottom"]),
    insetBlock: t.spaceT("insetBlock"),
    top: t.spaceT("top"),
    insetBlockStart: t.spaceT("insetBlockStart"),
    bottom: t.spaceT("bottom"),
    insetBlockEnd: t.spaceT("insetBlockEnd"),
    left: t.spaceT("left"),
    insetInlineStart: t.logical({
      scale: "space",
      property: { ltr: "left", rtl: "right" },
    }),
    right: t.spaceT("right"),
    insetInlineEnd: t.logical({
      scale: "space",
      property: { ltr: "right", rtl: "left" },
    }),
  };
Object.assign(position, {
  insetStart: position.insetInlineStart,
  insetEnd: position.insetInlineEnd,
});
var ring = {
    ring: { transform: transformFunctions.ring },
    ringColor: t.colors("--chakra-ring-color"),
    ringOffset: t.prop("--chakra-ring-offset-width"),
    ringOffsetColor: t.colors("--chakra-ring-offset-color"),
    ringInset: t.prop("--chakra-ring-inset"),
  },
  space = {
    margin: t.spaceT("margin"),
    marginTop: t.spaceT("marginTop"),
    marginBlockStart: t.spaceT("marginBlockStart"),
    marginRight: t.spaceT("marginRight"),
    marginInlineEnd: t.spaceT("marginInlineEnd"),
    marginBottom: t.spaceT("marginBottom"),
    marginBlockEnd: t.spaceT("marginBlockEnd"),
    marginLeft: t.spaceT("marginLeft"),
    marginInlineStart: t.spaceT("marginInlineStart"),
    marginX: t.spaceT(["marginInlineStart", "marginInlineEnd"]),
    marginInline: t.spaceT("marginInline"),
    marginY: t.spaceT(["marginTop", "marginBottom"]),
    marginBlock: t.spaceT("marginBlock"),
    padding: t.space("padding"),
    paddingTop: t.space("paddingTop"),
    paddingBlockStart: t.space("paddingBlockStart"),
    paddingRight: t.space("paddingRight"),
    paddingBottom: t.space("paddingBottom"),
    paddingBlockEnd: t.space("paddingBlockEnd"),
    paddingLeft: t.space("paddingLeft"),
    paddingInlineStart: t.space("paddingInlineStart"),
    paddingInlineEnd: t.space("paddingInlineEnd"),
    paddingX: t.space(["paddingInlineStart", "paddingInlineEnd"]),
    paddingInline: t.space("paddingInline"),
    paddingY: t.space(["paddingTop", "paddingBottom"]),
    paddingBlock: t.space("paddingBlock"),
  };
Object.assign(space, {
  m: space.margin,
  mt: space.marginTop,
  mr: space.marginRight,
  me: space.marginInlineEnd,
  marginEnd: space.marginInlineEnd,
  mb: space.marginBottom,
  ml: space.marginLeft,
  ms: space.marginInlineStart,
  marginStart: space.marginInlineStart,
  mx: space.marginX,
  my: space.marginY,
  p: space.padding,
  pt: space.paddingTop,
  py: space.paddingY,
  px: space.paddingX,
  pb: space.paddingBottom,
  pl: space.paddingLeft,
  ps: space.paddingInlineStart,
  paddingStart: space.paddingInlineStart,
  pr: space.paddingRight,
  pe: space.paddingInlineEnd,
  paddingEnd: space.paddingInlineEnd,
});
var textDecoration = {
    textDecorationColor: t.colors("textDecorationColor"),
    textDecoration: !0,
    textDecor: { property: "textDecoration" },
    textDecorationLine: !0,
    textDecorationStyle: !0,
    textDecorationThickness: !0,
    textUnderlineOffset: !0,
    textShadow: t.shadows("textShadow"),
  },
  transform = {
    clipPath: !0,
    transform: t.propT("transform", transformFunctions.transform),
    transformOrigin: !0,
    translateX: t.spaceT("--chakra-translate-x"),
    translateY: t.spaceT("--chakra-translate-y"),
    skewX: t.degreeT("--chakra-skew-x"),
    skewY: t.degreeT("--chakra-skew-y"),
    scaleX: t.prop("--chakra-scale-x"),
    scaleY: t.prop("--chakra-scale-y"),
    scale: t.prop(["--chakra-scale-x", "--chakra-scale-y"]),
    rotate: t.degreeT("--chakra-rotate"),
  },
  transition$1 = {
    transition: !0,
    transitionDelay: !0,
    animation: !0,
    willChange: !0,
    transitionDuration: t.prop("transitionDuration", "transition.duration"),
    transitionProperty: t.prop("transitionProperty", "transition.property"),
    transitionTimingFunction: t.prop(
      "transitionTimingFunction",
      "transition.easing"
    ),
  },
  typography$1 = {
    fontFamily: t.prop("fontFamily", "fonts"),
    fontSize: t.prop("fontSize", "fontSizes", transformFunctions.px),
    fontWeight: t.prop("fontWeight", "fontWeights"),
    lineHeight: t.prop("lineHeight", "lineHeights"),
    letterSpacing: t.prop("letterSpacing", "letterSpacings"),
    textAlign: !0,
    fontStyle: !0,
    textIndent: !0,
    wordBreak: !0,
    overflowWrap: !0,
    textOverflow: !0,
    textTransform: !0,
    whiteSpace: !0,
    isTruncated: {
      transform(a) {
        if (a === !0)
          return {
            overflow: "hidden",
            textOverflow: "ellipsis",
            whiteSpace: "nowrap",
          };
      },
    },
    noOfLines: {
      static: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        display: "-webkit-box",
        WebkitBoxOrient: "vertical",
        WebkitLineClamp: "var(--chakra-line-clamp)",
      },
      property: "--chakra-line-clamp",
    },
  },
  scroll = {
    scrollBehavior: !0,
    scrollSnapAlign: !0,
    scrollSnapStop: !0,
    scrollSnapType: !0,
    scrollMargin: t.spaceT("scrollMargin"),
    scrollMarginTop: t.spaceT("scrollMarginTop"),
    scrollMarginBottom: t.spaceT("scrollMarginBottom"),
    scrollMarginLeft: t.spaceT("scrollMarginLeft"),
    scrollMarginRight: t.spaceT("scrollMarginRight"),
    scrollMarginX: t.spaceT(["scrollMarginLeft", "scrollMarginRight"]),
    scrollMarginY: t.spaceT(["scrollMarginTop", "scrollMarginBottom"]),
    scrollPadding: t.spaceT("scrollPadding"),
    scrollPaddingTop: t.spaceT("scrollPaddingTop"),
    scrollPaddingBottom: t.spaceT("scrollPaddingBottom"),
    scrollPaddingLeft: t.spaceT("scrollPaddingLeft"),
    scrollPaddingRight: t.spaceT("scrollPaddingRight"),
    scrollPaddingX: t.spaceT(["scrollPaddingLeft", "scrollPaddingRight"]),
    scrollPaddingY: t.spaceT(["scrollPaddingTop", "scrollPaddingBottom"]),
  };
function resolveReference(a) {
  return isObject$4(a) && a.reference ? a.reference : String(a);
}
var toExpression = (a, ...o) =>
    o.map(resolveReference).join(` ${a} `).replace(/calc/g, ""),
  add$1 = (...a) => `calc(${toExpression("+", ...a)})`,
  subtract$1 = (...a) => `calc(${toExpression("-", ...a)})`,
  multiply$1 = (...a) => `calc(${toExpression("*", ...a)})`,
  divide$1 = (...a) => `calc(${toExpression("/", ...a)})`,
  negate$1 = (a) => {
    const o = resolveReference(a);
    return o != null && !Number.isNaN(parseFloat(o))
      ? String(o).startsWith("-")
        ? String(o).slice(1)
        : `-${o}`
      : multiply$1(o, -1);
  },
  calc$1 = Object.assign(
    (a) => ({
      add: (...o) => calc$1(add$1(a, ...o)),
      subtract: (...o) => calc$1(subtract$1(a, ...o)),
      multiply: (...o) => calc$1(multiply$1(a, ...o)),
      divide: (...o) => calc$1(divide$1(a, ...o)),
      negate: () => calc$1(negate$1(a)),
      toString: () => a.toString(),
    }),
    {
      add: add$1,
      subtract: subtract$1,
      multiply: multiply$1,
      divide: divide$1,
      negate: negate$1,
    }
  );
function replaceWhiteSpace$1(a, o = "-") {
  return a.replace(/\s+/g, o);
}
function escape$1(a) {
  const o = replaceWhiteSpace$1(a.toString());
  return escapeSymbol(escapeDot(o));
}
function escapeDot(a) {
  return a.includes("\\.")
    ? a
    : !Number.isInteger(parseFloat(a.toString()))
    ? a.replace(".", "\\.")
    : a;
}
function escapeSymbol(a) {
  return a.replace(/[!-,/:-@[-^`{-~]/g, "\\$&");
}
function addPrefix$1(a, o = "") {
  return [o, a].filter(Boolean).join("-");
}
function toVarReference(a, o) {
  return `var(${a}${o ? `, ${o}` : ""})`;
}
function toVarDefinition(a, o = "") {
  return escape$1(`--${addPrefix$1(a, o)}`);
}
function cssVar$1(a, o, s) {
  const _ = toVarDefinition(a, s);
  return { variable: _, reference: toVarReference(_, o) };
}
function defineCssVars(a, o) {
  const s = {};
  for (const _ of o) {
    if (Array.isArray(_)) {
      const [$, et] = _;
      s[$] = cssVar$1(`${a}-${$}`, et);
      continue;
    }
    s[_] = cssVar$1(`${a}-${_}`);
  }
  return s;
}
function getLastItem(a) {
  const o = a == null ? 0 : a.length;
  return o ? a[o - 1] : void 0;
}
function analyzeCSSValue2(a) {
  const o = parseFloat(a.toString()),
    s = a.toString().replace(String(o), "");
  return { unitless: !s, value: o, unit: s };
}
function px$2(a) {
  if (a == null) return a;
  const { unitless: o } = analyzeCSSValue2(a);
  return o || typeof a == "number" ? `${a}px` : a;
}
var sortByBreakpointValue = (a, o) =>
    parseInt(a[1], 10) > parseInt(o[1], 10) ? 1 : -1,
  sortBps = (a) =>
    Object.fromEntries(Object.entries(a).sort(sortByBreakpointValue));
function normalize(a) {
  const o = sortBps(a);
  return Object.assign(Object.values(o), o);
}
function keys(a) {
  const o = Object.keys(sortBps(a));
  return new Set(o);
}
function subtract2(a) {
  var o;
  if (!a) return a;
  a = (o = px$2(a)) != null ? o : a;
  const s = -0.02;
  return typeof a == "number"
    ? `${a + s}`
    : a.replace(/(\d+\.?\d*)/u, (_) => `${parseFloat(_) + s}`);
}
function toMediaQueryString(a, o) {
  const s = ["@media screen"];
  return (
    a && s.push("and", `(min-width: ${px$2(a)})`),
    o && s.push("and", `(max-width: ${px$2(o)})`),
    s.join(" ")
  );
}
function analyzeBreakpoints(a) {
  var o;
  if (!a) return null;
  a.base = (o = a.base) != null ? o : "0px";
  const s = normalize(a),
    _ = Object.entries(a)
      .sort(sortByBreakpointValue)
      .map(([tt, rt], nt, it) => {
        var at;
        let [, st] = (at = it[nt + 1]) != null ? at : [];
        return (
          (st = parseFloat(st) > 0 ? subtract2(st) : void 0),
          {
            _minW: subtract2(rt),
            breakpoint: tt,
            minW: rt,
            maxW: st,
            maxWQuery: toMediaQueryString(null, st),
            minWQuery: toMediaQueryString(rt),
            minMaxQuery: toMediaQueryString(rt, st),
          }
        );
      }),
    $ = keys(a),
    et = Array.from($.values());
  return {
    keys: $,
    normalized: s,
    isResponsive(tt) {
      const rt = Object.keys(tt);
      return rt.length > 0 && rt.every((nt) => $.has(nt));
    },
    asObject: sortBps(a),
    asArray: normalize(a),
    details: _,
    get(tt) {
      return _.find((rt) => rt.breakpoint === tt);
    },
    media: [null, ...s.map((tt) => toMediaQueryString(tt)).slice(1)],
    toArrayValue(tt) {
      if (!isObject$4(tt))
        throw new Error("toArrayValue: value must be an object");
      const rt = et.map((nt) => {
        var it;
        return (it = tt[nt]) != null ? it : null;
      });
      for (; getLastItem(rt) === null; ) rt.pop();
      return rt;
    },
    toObjectValue(tt) {
      if (!Array.isArray(tt))
        throw new Error("toObjectValue: value must be an array");
      return tt.reduce((rt, nt, it) => {
        const at = et[it];
        return at != null && nt != null && (rt[at] = nt), rt;
      }, {});
    },
  };
}
var state = {
    hover: (a, o) => `${a}:hover ${o}, ${a}[data-hover] ${o}`,
    focus: (a, o) => `${a}:focus ${o}, ${a}[data-focus] ${o}`,
    focusVisible: (a, o) => `${a}:focus-visible ${o}`,
    focusWithin: (a, o) => `${a}:focus-within ${o}`,
    active: (a, o) => `${a}:active ${o}, ${a}[data-active] ${o}`,
    disabled: (a, o) => `${a}:disabled ${o}, ${a}[data-disabled] ${o}`,
    invalid: (a, o) => `${a}:invalid ${o}, ${a}[data-invalid] ${o}`,
    checked: (a, o) => `${a}:checked ${o}, ${a}[data-checked] ${o}`,
    indeterminate: (a, o) =>
      `${a}:indeterminate ${o}, ${a}[aria-checked=mixed] ${o}, ${a}[data-indeterminate] ${o}`,
    readOnly: (a, o) =>
      `${a}:read-only ${o}, ${a}[readonly] ${o}, ${a}[data-read-only] ${o}`,
    expanded: (a, o) =>
      `${a}:read-only ${o}, ${a}[aria-expanded=true] ${o}, ${a}[data-expanded] ${o}`,
    placeholderShown: (a, o) => `${a}:placeholder-shown ${o}`,
  },
  toGroup = (a) =>
    merge((o) => a(o, "&"), "[role=group]", "[data-group]", ".group"),
  toPeer = (a) => merge((o) => a(o, "~ &"), "[data-peer]", ".peer"),
  merge = (a, ...o) => o.map(a).join(", "),
  pseudoSelectors = {
    _hover: "&:hover, &[data-hover]",
    _active: "&:active, &[data-active]",
    _focus: "&:focus, &[data-focus]",
    _highlighted: "&[data-highlighted]",
    _focusWithin: "&:focus-within",
    _focusVisible: "&:focus-visible, &[data-focus-visible]",
    _disabled:
      "&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]",
    _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
    _before: "&::before",
    _after: "&::after",
    _empty: "&:empty",
    _expanded: "&[aria-expanded=true], &[data-expanded]",
    _checked: "&[aria-checked=true], &[data-checked]",
    _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
    _pressed: "&[aria-pressed=true], &[data-pressed]",
    _invalid: "&[aria-invalid=true], &[data-invalid]",
    _valid: "&[data-valid], &[data-state=valid]",
    _loading: "&[data-loading], &[aria-busy=true]",
    _selected: "&[aria-selected=true], &[data-selected]",
    _hidden: "&[hidden], &[data-hidden]",
    _autofill: "&:-webkit-autofill",
    _even: "&:nth-of-type(even)",
    _odd: "&:nth-of-type(odd)",
    _first: "&:first-of-type",
    _firstLetter: "&::first-letter",
    _last: "&:last-of-type",
    _notFirst: "&:not(:first-of-type)",
    _notLast: "&:not(:last-of-type)",
    _visited: "&:visited",
    _activeLink: "&[aria-current=page]",
    _activeStep: "&[aria-current=step]",
    _indeterminate:
      "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
    _groupHover: toGroup(state.hover),
    _peerHover: toPeer(state.hover),
    _groupFocus: toGroup(state.focus),
    _peerFocus: toPeer(state.focus),
    _groupFocusVisible: toGroup(state.focusVisible),
    _peerFocusVisible: toPeer(state.focusVisible),
    _groupActive: toGroup(state.active),
    _peerActive: toPeer(state.active),
    _groupDisabled: toGroup(state.disabled),
    _peerDisabled: toPeer(state.disabled),
    _groupInvalid: toGroup(state.invalid),
    _peerInvalid: toPeer(state.invalid),
    _groupChecked: toGroup(state.checked),
    _peerChecked: toPeer(state.checked),
    _groupFocusWithin: toGroup(state.focusWithin),
    _peerFocusWithin: toPeer(state.focusWithin),
    _peerPlaceholderShown: toPeer(state.placeholderShown),
    _placeholder: "&::placeholder",
    _placeholderShown: "&:placeholder-shown",
    _fullScreen: "&:fullscreen",
    _selection: "&::selection",
    _rtl: "[dir=rtl] &, &[dir=rtl]",
    _ltr: "[dir=ltr] &, &[dir=ltr]",
    _mediaDark: "@media (prefers-color-scheme: dark)",
    _mediaReduceMotion: "@media (prefers-reduced-motion: reduce)",
    _dark:
      ".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",
    _light:
      ".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]",
    _horizontal: "&[data-orientation=horizontal]",
    _vertical: "&[data-orientation=vertical]",
  },
  pseudoPropNames = Object.keys(pseudoSelectors);
function tokenToCssVar(a, o) {
  return cssVar$1(String(a).replace(/\./g, "-"), void 0, o);
}
function createThemeVars(a, o) {
  let s = {};
  const _ = {};
  for (const [$, et] of Object.entries(a)) {
    const { isSemantic: tt, value: rt } = et,
      { variable: nt, reference: it } = tokenToCssVar(
        $,
        o == null ? void 0 : o.cssVarPrefix
      );
    if (!tt) {
      if ($.startsWith("space")) {
        const ot = $.split("."),
          [dt, ...ht] = ot,
          ft = `${dt}.-${ht.join(".")}`,
          mt = calc$1.negate(rt),
          ut = calc$1.negate(it);
        _[ft] = { value: mt, var: nt, varRef: ut };
      }
      (s[nt] = rt), (_[$] = { value: rt, var: nt, varRef: it });
      continue;
    }
    const at = (ot) => {
        const ht = [String($).split(".")[0], ot].join(".");
        if (!a[ht]) return ot;
        const { reference: mt } = tokenToCssVar(
          ht,
          o == null ? void 0 : o.cssVarPrefix
        );
        return mt;
      },
      st = isObject$4(rt) ? rt : { default: rt };
    (s = mergeWith(
      s,
      Object.entries(st).reduce((ot, [dt, ht]) => {
        var ft, mt;
        if (!ht) return ot;
        const ut = at(`${ht}`);
        if (dt === "default") return (ot[nt] = ut), ot;
        const lt =
          (mt = (ft = pseudoSelectors) == null ? void 0 : ft[dt]) != null
            ? mt
            : dt;
        return (ot[lt] = { [nt]: ut }), ot;
      }, {})
    )),
      (_[$] = { value: it, var: nt, varRef: it });
  }
  return { cssVars: s, cssMap: _ };
}
function omit$3(a, o = []) {
  const s = Object.assign({}, a);
  for (const _ of o) _ in s && delete s[_];
  return s;
}
function pick(a, o) {
  const s = {};
  for (const _ of o) _ in a && (s[_] = a[_]);
  return s;
}
function isObject5(a) {
  return typeof a == "object" && a != null && !Array.isArray(a);
}
function walkObject(a, o, s = {}) {
  const { stop: _, getKey: $ } = s;
  function et(tt, rt = []) {
    var nt;
    if (isObject5(tt) || Array.isArray(tt)) {
      const it = {};
      for (const [at, st] of Object.entries(tt)) {
        const ot = (nt = $ == null ? void 0 : $(at)) != null ? nt : at,
          dt = [...rt, ot];
        if (_ != null && _(tt, dt)) return o(tt, rt);
        it[ot] = et(st, dt);
      }
      return it;
    }
    return o(tt, rt);
  }
  return et(a);
}
var tokens = [
  "colors",
  "borders",
  "borderWidths",
  "borderStyles",
  "fonts",
  "fontSizes",
  "fontWeights",
  "gradients",
  "letterSpacings",
  "lineHeights",
  "radii",
  "space",
  "shadows",
  "sizes",
  "zIndices",
  "transition",
  "blur",
  "breakpoints",
];
function extractTokens(a) {
  return pick(a, tokens);
}
function extractSemanticTokens(a) {
  return a.semanticTokens;
}
function omitVars(a) {
  const { __cssMap: o, __cssVars: s, __breakpoints: _, ...$ } = a;
  return $;
}
var isSemanticCondition = (a) => pseudoPropNames.includes(a) || a === "default";
function flattenTokens({ tokens: a, semanticTokens: o }) {
  const s = {};
  return (
    walkObject(a, (_, $) => {
      _ != null && (s[$.join(".")] = { isSemantic: !1, value: _ });
    }),
    walkObject(
      o,
      (_, $) => {
        _ != null && (s[$.join(".")] = { isSemantic: !0, value: _ });
      },
      { stop: (_) => Object.keys(_).every(isSemanticCondition) }
    ),
    s
  );
}
function toCSSVar(a) {
  var o;
  const s = omitVars(a),
    _ = extractTokens(s),
    $ = extractSemanticTokens(s),
    et = flattenTokens({ tokens: _, semanticTokens: $ }),
    tt = (o = s.config) == null ? void 0 : o.cssVarPrefix,
    { cssMap: rt, cssVars: nt } = createThemeVars(et, { cssVarPrefix: tt });
  return (
    Object.assign(s, {
      __cssVars: {
        ...{
          "--chakra-ring-inset": "var(--chakra-empty,/*!*/ /*!*/)",
          "--chakra-ring-offset-width": "0px",
          "--chakra-ring-offset-color": "#fff",
          "--chakra-ring-color": "rgba(66, 153, 225, 0.6)",
          "--chakra-ring-offset-shadow": "0 0 #0000",
          "--chakra-ring-shadow": "0 0 #0000",
          "--chakra-space-x-reverse": "0",
          "--chakra-space-y-reverse": "0",
        },
        ...nt,
      },
      __cssMap: rt,
      __breakpoints: analyzeBreakpoints(s.breakpoints),
    }),
    s
  );
}
var systemProps = mergeWith(
  {},
  background,
  border,
  color$1,
  flexbox,
  layout$1,
  filter$1,
  ring,
  interactivity,
  grid,
  others,
  position,
  effect,
  space,
  scroll,
  typography$1,
  textDecoration,
  transform,
  list,
  transition$1
);
Object.assign({}, space, layout$1, flexbox, grid, position);
var propNames = [...Object.keys(systemProps), ...pseudoPropNames],
  styleProps = { ...systemProps, ...pseudoSelectors },
  isStyleProp = (a) => a in styleProps,
  expandResponsive = (a) => (o) => {
    if (!o.__breakpoints) return a;
    const { isResponsive: s, toArrayValue: _, media: $ } = o.__breakpoints,
      et = {};
    for (const tt in a) {
      let rt = runIfFn$2(a[tt], o);
      if (rt == null) continue;
      if (((rt = isObject$4(rt) && s(rt) ? _(rt) : rt), !Array.isArray(rt))) {
        et[tt] = rt;
        continue;
      }
      const nt = rt.slice(0, $.length).length;
      for (let it = 0; it < nt; it += 1) {
        const at = $ == null ? void 0 : $[it];
        if (!at) {
          et[tt] = rt[it];
          continue;
        }
        (et[at] = et[at] || {}), rt[it] != null && (et[at][tt] = rt[it]);
      }
    }
    return et;
  };
function splitByComma(a) {
  const o = [];
  let s = "",
    _ = !1;
  for (let $ = 0; $ < a.length; $++) {
    const et = a[$];
    et === "("
      ? ((_ = !0), (s += et))
      : et === ")"
      ? ((_ = !1), (s += et))
      : et === "," && !_
      ? (o.push(s), (s = ""))
      : (s += et);
  }
  return (s = s.trim()), s && o.push(s), o;
}
function isCssVar2(a) {
  return /^var\(--.+\)$/.test(a);
}
var isCSSVariableTokenValue = (a, o) =>
    a.startsWith("--") && typeof o == "string" && !isCssVar2(o),
  resolveTokenValue = (a, o) => {
    var s, _;
    if (o == null) return o;
    const $ = (nt) => {
        var it, at;
        return (at = (it = a.__cssMap) == null ? void 0 : it[nt]) == null
          ? void 0
          : at.varRef;
      },
      et = (nt) => {
        var it;
        return (it = $(nt)) != null ? it : nt;
      },
      [tt, rt] = splitByComma(o);
    return (o = (_ = (s = $(tt)) != null ? s : et(rt)) != null ? _ : et(o)), o;
  };
function getCss(a) {
  const { configs: o = {}, pseudos: s = {}, theme: _ } = a,
    $ = (et, tt = !1) => {
      var rt, nt, it;
      const at = runIfFn$2(et, _),
        st = expandResponsive(at)(_);
      let ot = {};
      for (let dt in st) {
        const ht = st[dt];
        let ft = runIfFn$2(ht, _);
        dt in s && (dt = s[dt]),
          isCSSVariableTokenValue(dt, ft) && (ft = resolveTokenValue(_, ft));
        let mt = o[dt];
        if ((mt === !0 && (mt = { property: dt }), isObject$4(ft))) {
          (ot[dt] = (rt = ot[dt]) != null ? rt : {}),
            (ot[dt] = mergeWith({}, ot[dt], $(ft, !0)));
          continue;
        }
        let ut =
          (it =
            (nt = mt == null ? void 0 : mt.transform) == null
              ? void 0
              : nt.call(mt, ft, _, at)) != null
            ? it
            : ft;
        ut = mt != null && mt.processResult ? $(ut, !0) : ut;
        const lt = runIfFn$2(mt == null ? void 0 : mt.property, _);
        if (!tt && mt != null && mt.static) {
          const ct = runIfFn$2(mt.static, _);
          ot = mergeWith({}, ot, ct);
        }
        if (lt && Array.isArray(lt)) {
          for (const ct of lt) ot[ct] = ut;
          continue;
        }
        if (lt) {
          lt === "&" && isObject$4(ut)
            ? (ot = mergeWith({}, ot, ut))
            : (ot[lt] = ut);
          continue;
        }
        if (isObject$4(ut)) {
          ot = mergeWith({}, ot, ut);
          continue;
        }
        ot[dt] = ut;
      }
      return ot;
    };
  return $;
}
var css = (a) => (o) =>
  getCss({ theme: o, pseudos: pseudoSelectors, configs: systemProps })(a);
function defineStyle(a) {
  return a;
}
function defineStyleConfig(a) {
  return a;
}
function createMultiStyleConfigHelpers(a) {
  return {
    definePartsStyle(o) {
      return o;
    },
    defineMultiStyleConfig(o) {
      return { parts: a, ...o };
    },
  };
}
function normalize2(a, o) {
  if (Array.isArray(a)) return a;
  if (isObject$4(a)) return o(a);
  if (a != null) return [a];
}
function getNextIndex(a, o) {
  for (let s = o + 1; s < a.length; s++) if (a[s] != null) return s;
  return -1;
}
function createResolver(a) {
  const o = a.__breakpoints;
  return function (_, $, et, tt) {
    var rt, nt;
    if (!o) return;
    const it = {},
      at = normalize2(et, o.toArrayValue);
    if (!at) return it;
    const st = at.length,
      ot = st === 1,
      dt = !!_.parts;
    for (let ht = 0; ht < st; ht++) {
      const ft = o.details[ht],
        mt = o.details[getNextIndex(at, ht)],
        ut = toMediaQueryString(ft.minW, mt == null ? void 0 : mt._minW),
        lt = runIfFn$2((rt = _[$]) == null ? void 0 : rt[at[ht]], tt);
      if (lt) {
        if (dt) {
          (nt = _.parts) == null ||
            nt.forEach((ct) => {
              mergeWith(it, { [ct]: ot ? lt[ct] : { [ut]: lt[ct] } });
            });
          continue;
        }
        if (!dt) {
          ot ? mergeWith(it, lt) : (it[ut] = lt);
          continue;
        }
        it[ut] = lt;
      }
    }
    return it;
  };
}
function resolveStyleConfig(a) {
  return (o) => {
    var s;
    const { variant: _, size: $, theme: et } = o,
      tt = createResolver(et);
    return mergeWith(
      {},
      runIfFn$2((s = a.baseStyle) != null ? s : {}, o),
      tt(a, "sizes", $, o),
      tt(a, "variants", _, o)
    );
  };
}
function omitThemingProps(a) {
  return omit$3(a, ["styleConfig", "size", "variant", "colorScheme"]);
}
var transitionProperty = {
    common:
      "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
    colors: "background-color, border-color, color, fill, stroke",
    dimensions: "width, height",
    position: "left, right, top, bottom",
    background: "background-color, background-image, background-position",
  },
  transitionTimingFunction = {
    "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
    "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
    "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)",
  },
  transitionDuration = {
    "ultra-fast": "50ms",
    faster: "100ms",
    fast: "150ms",
    normal: "200ms",
    slow: "300ms",
    slower: "400ms",
    "ultra-slow": "500ms",
  },
  transition = {
    property: transitionProperty,
    easing: transitionTimingFunction,
    duration: transitionDuration,
  },
  transition_default = transition,
  zIndices = {
    hide: -1,
    auto: "auto",
    base: 0,
    docked: 10,
    dropdown: 1e3,
    sticky: 1100,
    banner: 1200,
    overlay: 1300,
    modal: 1400,
    popover: 1500,
    skipLink: 1600,
    toast: 1700,
    tooltip: 1800,
  },
  z_index_default = zIndices,
  borders$1 = {
    none: 0,
    "1px": "1px solid",
    "2px": "2px solid",
    "4px": "4px solid",
    "8px": "8px solid",
  },
  borders_default = borders$1,
  breakpoints = {
    base: "0em",
    sm: "30em",
    md: "48em",
    lg: "62em",
    xl: "80em",
    "2xl": "96em",
  },
  breakpoints_default = breakpoints,
  colors = {
    transparent: "transparent",
    current: "currentColor",
    black: "#000000",
    white: "#FFFFFF",
    whiteAlpha: {
      50: "rgba(255, 255, 255, 0.04)",
      100: "rgba(255, 255, 255, 0.06)",
      200: "rgba(255, 255, 255, 0.08)",
      300: "rgba(255, 255, 255, 0.16)",
      400: "rgba(255, 255, 255, 0.24)",
      500: "rgba(255, 255, 255, 0.36)",
      600: "rgba(255, 255, 255, 0.48)",
      700: "rgba(255, 255, 255, 0.64)",
      800: "rgba(255, 255, 255, 0.80)",
      900: "rgba(255, 255, 255, 0.92)",
    },
    blackAlpha: {
      50: "rgba(0, 0, 0, 0.04)",
      100: "rgba(0, 0, 0, 0.06)",
      200: "rgba(0, 0, 0, 0.08)",
      300: "rgba(0, 0, 0, 0.16)",
      400: "rgba(0, 0, 0, 0.24)",
      500: "rgba(0, 0, 0, 0.36)",
      600: "rgba(0, 0, 0, 0.48)",
      700: "rgba(0, 0, 0, 0.64)",
      800: "rgba(0, 0, 0, 0.80)",
      900: "rgba(0, 0, 0, 0.92)",
    },
    gray: {
      50: "#F7FAFC",
      100: "#EDF2F7",
      200: "#E2E8F0",
      300: "#CBD5E0",
      400: "#A0AEC0",
      500: "#718096",
      600: "#4A5568",
      700: "#2D3748",
      800: "#1A202C",
      900: "#171923",
    },
    red: {
      50: "#FFF5F5",
      100: "#FED7D7",
      200: "#FEB2B2",
      300: "#FC8181",
      400: "#F56565",
      500: "#E53E3E",
      600: "#C53030",
      700: "#9B2C2C",
      800: "#822727",
      900: "#63171B",
    },
    orange: {
      50: "#FFFAF0",
      100: "#FEEBC8",
      200: "#FBD38D",
      300: "#F6AD55",
      400: "#ED8936",
      500: "#DD6B20",
      600: "#C05621",
      700: "#9C4221",
      800: "#7B341E",
      900: "#652B19",
    },
    yellow: {
      50: "#FFFFF0",
      100: "#FEFCBF",
      200: "#FAF089",
      300: "#F6E05E",
      400: "#ECC94B",
      500: "#D69E2E",
      600: "#B7791F",
      700: "#975A16",
      800: "#744210",
      900: "#5F370E",
    },
    green: {
      50: "#F0FFF4",
      100: "#C6F6D5",
      200: "#9AE6B4",
      300: "#68D391",
      400: "#48BB78",
      500: "#38A169",
      600: "#2F855A",
      700: "#276749",
      800: "#22543D",
      900: "#1C4532",
    },
    teal: {
      50: "#E6FFFA",
      100: "#B2F5EA",
      200: "#81E6D9",
      300: "#4FD1C5",
      400: "#38B2AC",
      500: "#319795",
      600: "#2C7A7B",
      700: "#285E61",
      800: "#234E52",
      900: "#1D4044",
    },
    blue: {
      50: "#ebf8ff",
      100: "#bee3f8",
      200: "#90cdf4",
      300: "#63b3ed",
      400: "#4299e1",
      500: "#3182ce",
      600: "#2b6cb0",
      700: "#2c5282",
      800: "#2a4365",
      900: "#1A365D",
    },
    cyan: {
      50: "#EDFDFD",
      100: "#C4F1F9",
      200: "#9DECF9",
      300: "#76E4F7",
      400: "#0BC5EA",
      500: "#00B5D8",
      600: "#00A3C4",
      700: "#0987A0",
      800: "#086F83",
      900: "#065666",
    },
    purple: {
      50: "#FAF5FF",
      100: "#E9D8FD",
      200: "#D6BCFA",
      300: "#B794F4",
      400: "#9F7AEA",
      500: "#805AD5",
      600: "#6B46C1",
      700: "#553C9A",
      800: "#44337A",
      900: "#322659",
    },
    pink: {
      50: "#FFF5F7",
      100: "#FED7E2",
      200: "#FBB6CE",
      300: "#F687B3",
      400: "#ED64A6",
      500: "#D53F8C",
      600: "#B83280",
      700: "#97266D",
      800: "#702459",
      900: "#521B41",
    },
    linkedin: {
      50: "#E8F4F9",
      100: "#CFEDFB",
      200: "#9BDAF3",
      300: "#68C7EC",
      400: "#34B3E4",
      500: "#00A0DC",
      600: "#008CC9",
      700: "#0077B5",
      800: "#005E93",
      900: "#004471",
    },
    facebook: {
      50: "#E8F4F9",
      100: "#D9DEE9",
      200: "#B7C2DA",
      300: "#6482C0",
      400: "#4267B2",
      500: "#385898",
      600: "#314E89",
      700: "#29487D",
      800: "#223B67",
      900: "#1E355B",
    },
    messenger: {
      50: "#D0E6FF",
      100: "#B9DAFF",
      200: "#A2CDFF",
      300: "#7AB8FF",
      400: "#2E90FF",
      500: "#0078FF",
      600: "#0063D1",
      700: "#0052AC",
      800: "#003C7E",
      900: "#002C5C",
    },
    whatsapp: {
      50: "#dffeec",
      100: "#b9f5d0",
      200: "#90edb3",
      300: "#65e495",
      400: "#3cdd78",
      500: "#22c35e",
      600: "#179848",
      700: "#0c6c33",
      800: "#01421c",
      900: "#001803",
    },
    twitter: {
      50: "#E5F4FD",
      100: "#C8E9FB",
      200: "#A8DCFA",
      300: "#83CDF7",
      400: "#57BBF5",
      500: "#1DA1F2",
      600: "#1A94DA",
      700: "#1681BF",
      800: "#136B9E",
      900: "#0D4D71",
    },
    telegram: {
      50: "#E3F2F9",
      100: "#C5E4F3",
      200: "#A2D4EC",
      300: "#7AC1E4",
      400: "#47A9DA",
      500: "#0088CC",
      600: "#007AB8",
      700: "#006BA1",
      800: "#005885",
      900: "#003F5E",
    },
  },
  colors_default = colors,
  radii = {
    none: "0",
    sm: "0.125rem",
    base: "0.25rem",
    md: "0.375rem",
    lg: "0.5rem",
    xl: "0.75rem",
    "2xl": "1rem",
    "3xl": "1.5rem",
    full: "9999px",
  },
  radius_default = radii,
  shadows = {
    xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
    sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
    base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
    md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
    lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
    xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
    "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
    outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
    inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
    none: "none",
    "dark-lg":
      "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px",
  },
  shadows_default = shadows,
  blur = {
    none: 0,
    sm: "4px",
    base: "8px",
    md: "12px",
    lg: "16px",
    xl: "24px",
    "2xl": "40px",
    "3xl": "64px",
  },
  blur_default = blur,
  typography = {
    letterSpacings: {
      tighter: "-0.05em",
      tight: "-0.025em",
      normal: "0",
      wide: "0.025em",
      wider: "0.05em",
      widest: "0.1em",
    },
    lineHeights: {
      normal: "normal",
      none: 1,
      shorter: 1.25,
      short: 1.375,
      base: 1.5,
      tall: 1.625,
      taller: "2",
      3: ".75rem",
      4: "1rem",
      5: "1.25rem",
      6: "1.5rem",
      7: "1.75rem",
      8: "2rem",
      9: "2.25rem",
      10: "2.5rem",
    },
    fontWeights: {
      hairline: 100,
      thin: 200,
      light: 300,
      normal: 400,
      medium: 500,
      semibold: 600,
      bold: 700,
      extrabold: 800,
      black: 900,
    },
    fonts: {
      heading:
        '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace',
    },
    fontSizes: {
      "3xs": "0.45rem",
      "2xs": "0.625rem",
      xs: "0.75rem",
      sm: "0.875rem",
      md: "1rem",
      lg: "1.125rem",
      xl: "1.25rem",
      "2xl": "1.5rem",
      "3xl": "1.875rem",
      "4xl": "2.25rem",
      "5xl": "3rem",
      "6xl": "3.75rem",
      "7xl": "4.5rem",
      "8xl": "6rem",
      "9xl": "8rem",
    },
  },
  typography_default = typography,
  spacing = {
    px: "1px",
    0.5: "0.125rem",
    1: "0.25rem",
    1.5: "0.375rem",
    2: "0.5rem",
    2.5: "0.625rem",
    3: "0.75rem",
    3.5: "0.875rem",
    4: "1rem",
    5: "1.25rem",
    6: "1.5rem",
    7: "1.75rem",
    8: "2rem",
    9: "2.25rem",
    10: "2.5rem",
    12: "3rem",
    14: "3.5rem",
    16: "4rem",
    20: "5rem",
    24: "6rem",
    28: "7rem",
    32: "8rem",
    36: "9rem",
    40: "10rem",
    44: "11rem",
    48: "12rem",
    52: "13rem",
    56: "14rem",
    60: "15rem",
    64: "16rem",
    72: "18rem",
    80: "20rem",
    96: "24rem",
  },
  largeSizes = {
    max: "max-content",
    min: "min-content",
    full: "100%",
    "3xs": "14rem",
    "2xs": "16rem",
    xs: "20rem",
    sm: "24rem",
    md: "28rem",
    lg: "32rem",
    xl: "36rem",
    "2xl": "42rem",
    "3xl": "48rem",
    "4xl": "56rem",
    "5xl": "64rem",
    "6xl": "72rem",
    "7xl": "80rem",
    "8xl": "90rem",
    prose: "60ch",
  },
  container = { sm: "640px", md: "768px", lg: "1024px", xl: "1280px" },
  sizes$m = { ...spacing, ...largeSizes, container },
  sizes_default = sizes$m,
  foundations = {
    breakpoints: breakpoints_default,
    zIndices: z_index_default,
    radii: radius_default,
    blur: blur_default,
    colors: colors_default,
    ...typography_default,
    sizes: sizes_default,
    shadows: shadows_default,
    space: spacing,
    borders: borders_default,
    transition: transition_default,
  },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$p,
    definePartsStyle: definePartsStyle$p,
  } = createMultiStyleConfigHelpers([
    "stepper",
    "step",
    "title",
    "description",
    "indicator",
    "separator",
    "icon",
    "number",
  ]),
  $size$4 = cssVar$1("stepper-indicator-size"),
  $iconSize = cssVar$1("stepper-icon-size"),
  $titleFontSize = cssVar$1("stepper-title-font-size"),
  $descFontSize = cssVar$1("stepper-description-font-size"),
  $accentColor = cssVar$1("stepper-accent-color"),
  baseStyle$F = definePartsStyle$p(({ colorScheme: a }) => ({
    stepper: {
      display: "flex",
      justifyContent: "space-between",
      gap: "4",
      "&[data-orientation=vertical]": {
        flexDirection: "column",
        alignItems: "flex-start",
      },
      "&[data-orientation=horizontal]": {
        flexDirection: "row",
        alignItems: "center",
      },
      [$accentColor.variable]: `colors.${a}.500`,
      _dark: { [$accentColor.variable]: `colors.${a}.200` },
    },
    title: { fontSize: $titleFontSize.reference, fontWeight: "medium" },
    description: {
      fontSize: $descFontSize.reference,
      color: "chakra-subtle-text",
    },
    number: { fontSize: $titleFontSize.reference },
    step: {
      flexShrink: 0,
      position: "relative",
      display: "flex",
      gap: "2",
      "&[data-orientation=horizontal]": { alignItems: "center" },
      flex: "1",
      "&:last-of-type:not([data-stretch])": { flex: "initial" },
    },
    icon: {
      flexShrink: 0,
      width: $iconSize.reference,
      height: $iconSize.reference,
    },
    indicator: {
      flexShrink: 0,
      borderRadius: "full",
      width: $size$4.reference,
      height: $size$4.reference,
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      "&[data-status=active]": {
        borderWidth: "2px",
        borderColor: $accentColor.reference,
      },
      "&[data-status=complete]": {
        bg: $accentColor.reference,
        color: "chakra-inverse-text",
      },
      "&[data-status=incomplete]": { borderWidth: "2px" },
    },
    separator: {
      bg: "chakra-border-color",
      flex: "1",
      "&[data-status=complete]": { bg: $accentColor.reference },
      "&[data-orientation=horizontal]": {
        width: "100%",
        height: "2px",
        marginStart: "2",
      },
      "&[data-orientation=vertical]": {
        width: "2px",
        position: "absolute",
        height: "100%",
        maxHeight: `calc(100% - ${$size$4.reference} - 8px)`,
        top: `calc(${$size$4.reference} + 4px)`,
        insetStart: `calc(${$size$4.reference} / 2 - 1px)`,
      },
    },
  })),
  stepperTheme = defineMultiStyleConfig$p({
    baseStyle: baseStyle$F,
    sizes: {
      xs: definePartsStyle$p({
        stepper: {
          [$size$4.variable]: "sizes.4",
          [$iconSize.variable]: "sizes.3",
          [$titleFontSize.variable]: "fontSizes.xs",
          [$descFontSize.variable]: "fontSizes.xs",
        },
      }),
      sm: definePartsStyle$p({
        stepper: {
          [$size$4.variable]: "sizes.6",
          [$iconSize.variable]: "sizes.4",
          [$titleFontSize.variable]: "fontSizes.sm",
          [$descFontSize.variable]: "fontSizes.xs",
        },
      }),
      md: definePartsStyle$p({
        stepper: {
          [$size$4.variable]: "sizes.8",
          [$iconSize.variable]: "sizes.5",
          [$titleFontSize.variable]: "fontSizes.md",
          [$descFontSize.variable]: "fontSizes.sm",
        },
      }),
      lg: definePartsStyle$p({
        stepper: {
          [$size$4.variable]: "sizes.10",
          [$iconSize.variable]: "sizes.6",
          [$titleFontSize.variable]: "fontSizes.lg",
          [$descFontSize.variable]: "fontSizes.md",
        },
      }),
    },
    defaultProps: { size: "md", colorScheme: "blue" },
  });
function anatomy(a, o = {}) {
  let s = !1;
  function _() {
    if (!s) {
      s = !0;
      return;
    }
    throw new Error(
      "[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?"
    );
  }
  function $(...at) {
    _();
    for (const st of at) o[st] = nt(st);
    return anatomy(a, o);
  }
  function et(...at) {
    for (const st of at) st in o || (o[st] = nt(st));
    return anatomy(a, o);
  }
  function tt() {
    return Object.fromEntries(
      Object.entries(o).map(([st, ot]) => [st, ot.selector])
    );
  }
  function rt() {
    return Object.fromEntries(
      Object.entries(o).map(([st, ot]) => [st, ot.className])
    );
  }
  function nt(at) {
    const dt = `chakra-${(["container", "root"].includes(at ?? "")
      ? [a]
      : [a, at]
    )
      .filter(Boolean)
      .join("__")}`;
    return { className: dt, selector: `.${dt}`, toString: () => at };
  }
  return {
    parts: $,
    toPart: nt,
    extend: et,
    selectors: tt,
    classnames: rt,
    get keys() {
      return Object.keys(o);
    },
    __type: {},
  };
}
var accordionAnatomy = anatomy("accordion")
    .parts("root", "container", "button", "panel")
    .extend("icon"),
  alertAnatomy = anatomy("alert")
    .parts("title", "description", "container")
    .extend("icon", "spinner"),
  avatarAnatomy = anatomy("avatar")
    .parts("label", "badge", "container")
    .extend("excessLabel", "group"),
  breadcrumbAnatomy = anatomy("breadcrumb")
    .parts("link", "item", "container")
    .extend("separator");
anatomy("button").parts();
var checkboxAnatomy = anatomy("checkbox")
  .parts("control", "icon", "container")
  .extend("label");
anatomy("progress").parts("track", "filledTrack").extend("label");
var drawerAnatomy = anatomy("drawer")
    .parts("overlay", "dialogContainer", "dialog")
    .extend("header", "closeButton", "body", "footer"),
  editableAnatomy = anatomy("editable").parts("preview", "input", "textarea"),
  formAnatomy = anatomy("form").parts(
    "container",
    "requiredIndicator",
    "helperText"
  ),
  formErrorAnatomy = anatomy("formError").parts("text", "icon"),
  inputAnatomy = anatomy("input").parts("addon", "field", "element", "group"),
  listAnatomy = anatomy("list").parts("container", "item", "icon"),
  menuAnatomy = anatomy("menu")
    .parts("button", "list", "item")
    .extend("groupTitle", "icon", "command", "divider"),
  modalAnatomy = anatomy("modal")
    .parts("overlay", "dialogContainer", "dialog")
    .extend("header", "closeButton", "body", "footer"),
  numberInputAnatomy = anatomy("numberinput").parts(
    "root",
    "field",
    "stepperGroup",
    "stepper"
  );
anatomy("pininput").parts("field");
var popoverAnatomy = anatomy("popover")
    .parts("content", "header", "body", "footer")
    .extend("popper", "arrow", "closeButton"),
  progressAnatomy = anatomy("progress").parts("label", "filledTrack", "track"),
  radioAnatomy = anatomy("radio").parts("container", "control", "label"),
  selectAnatomy = anatomy("select").parts("field", "icon"),
  sliderAnatomy = anatomy("slider").parts(
    "container",
    "track",
    "thumb",
    "filledTrack",
    "mark"
  ),
  statAnatomy = anatomy("stat").parts(
    "container",
    "label",
    "helpText",
    "number",
    "icon"
  ),
  switchAnatomy = anatomy("switch").parts("container", "track", "thumb"),
  tableAnatomy = anatomy("table").parts(
    "table",
    "thead",
    "tbody",
    "tr",
    "th",
    "td",
    "tfoot",
    "caption"
  ),
  tabsAnatomy = anatomy("tabs").parts(
    "root",
    "tab",
    "tablist",
    "tabpanel",
    "tabpanels",
    "indicator"
  ),
  tagAnatomy = anatomy("tag").parts("container", "label", "closeButton"),
  cardAnatomy = anatomy("card").parts("container", "header", "body", "footer");
function guard(a, o, s) {
  return Math.min(Math.max(a, s), o);
}
class ColorError extends Error {
  constructor(o) {
    super(`Failed to parse color: "${o}"`);
  }
}
var ColorError$1 = ColorError;
function parseToRgba(a) {
  if (typeof a != "string") throw new ColorError$1(a);
  if (a.trim().toLowerCase() === "transparent") return [0, 0, 0, 0];
  let o = a.trim();
  o = namedColorRegex.test(a) ? nameToHex(a) : a;
  const s = reducedHexRegex.exec(o);
  if (s) {
    const tt = Array.from(s).slice(1);
    return [
      ...tt.slice(0, 3).map((rt) => parseInt(r(rt, 2), 16)),
      parseInt(r(tt[3] || "f", 2), 16) / 255,
    ];
  }
  const _ = hexRegex.exec(o);
  if (_) {
    const tt = Array.from(_).slice(1);
    return [
      ...tt.slice(0, 3).map((rt) => parseInt(rt, 16)),
      parseInt(tt[3] || "ff", 16) / 255,
    ];
  }
  const $ = rgbaRegex.exec(o);
  if ($) {
    const tt = Array.from($).slice(1);
    return [
      ...tt.slice(0, 3).map((rt) => parseInt(rt, 10)),
      parseFloat(tt[3] || "1"),
    ];
  }
  const et = hslaRegex.exec(o);
  if (et) {
    const [tt, rt, nt, it] = Array.from(et).slice(1).map(parseFloat);
    if (guard(0, 100, rt) !== rt) throw new ColorError$1(a);
    if (guard(0, 100, nt) !== nt) throw new ColorError$1(a);
    return [...hslToRgb(tt, rt, nt), Number.isNaN(it) ? 1 : it];
  }
  throw new ColorError$1(a);
}
function hash(a) {
  let o = 5381,
    s = a.length;
  for (; s; ) o = (o * 33) ^ a.charCodeAt(--s);
  return (o >>> 0) % 2341;
}
const colorToInt = (a) => parseInt(a.replace(/_/g, ""), 36),
  compressedColorMap =
    "1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm"
      .split(" ")
      .reduce((a, o) => {
        const s = colorToInt(o.substring(0, 3)),
          _ = colorToInt(o.substring(3)).toString(16);
        let $ = "";
        for (let et = 0; et < 6 - _.length; et++) $ += "0";
        return (a[s] = `${$}${_}`), a;
      }, {});
function nameToHex(a) {
  const o = a.toLowerCase().trim(),
    s = compressedColorMap[hash(o)];
  if (!s) throw new ColorError$1(a);
  return `#${s}`;
}
const r = (a, o) =>
    Array.from(Array(o))
      .map(() => a)
      .join(""),
  reducedHexRegex = new RegExp(`^#${r("([a-f0-9])", 3)}([a-f0-9])?$`, "i"),
  hexRegex = new RegExp(`^#${r("([a-f0-9]{2})", 3)}([a-f0-9]{2})?$`, "i"),
  rgbaRegex = new RegExp(
    `^rgba?\\(\\s*(\\d+)\\s*${r(
      ",\\s*(\\d+)\\s*",
      2
    )}(?:,\\s*([\\d.]+))?\\s*\\)$`,
    "i"
  ),
  hslaRegex =
    /^hsla?\(\s*([\d.]+)\s*,\s*([\d.]+)%\s*,\s*([\d.]+)%(?:\s*,\s*([\d.]+))?\s*\)$/i,
  namedColorRegex = /^[a-z]+$/i,
  roundColor = (a) => Math.round(a * 255),
  hslToRgb = (a, o, s) => {
    let _ = s / 100;
    if (o === 0) return [_, _, _].map(roundColor);
    const $ = (((a % 360) + 360) % 360) / 60,
      et = (1 - Math.abs(2 * _ - 1)) * (o / 100),
      tt = et * (1 - Math.abs(($ % 2) - 1));
    let rt = 0,
      nt = 0,
      it = 0;
    $ >= 0 && $ < 1
      ? ((rt = et), (nt = tt))
      : $ >= 1 && $ < 2
      ? ((rt = tt), (nt = et))
      : $ >= 2 && $ < 3
      ? ((nt = et), (it = tt))
      : $ >= 3 && $ < 4
      ? ((nt = tt), (it = et))
      : $ >= 4 && $ < 5
      ? ((rt = tt), (it = et))
      : $ >= 5 && $ < 6 && ((rt = et), (it = tt));
    const at = _ - et / 2,
      st = rt + at,
      ot = nt + at,
      dt = it + at;
    return [st, ot, dt].map(roundColor);
  };
function rgba$1(a, o, s, _) {
  return `rgba(${guard(0, 255, a).toFixed()}, ${guard(
    0,
    255,
    o
  ).toFixed()}, ${guard(0, 255, s).toFixed()}, ${parseFloat(
    guard(0, 1, _).toFixed(3)
  )})`;
}
function transparentize$1(a, o) {
  const [s, _, $, et] = parseToRgba(a);
  return rgba$1(s, _, $, et - o);
}
function toHex(a) {
  const [o, s, _, $] = parseToRgba(a);
  let et = (tt) => {
    const rt = guard(0, 255, tt).toString(16);
    return rt.length === 1 ? `0${rt}` : rt;
  };
  return `#${et(o)}${et(s)}${et(_)}${$ < 1 ? et(Math.round($ * 255)) : ""}`;
}
function dlv_es_default(a, o, s, _, $) {
  for (o = o.split ? o.split(".") : o, _ = 0; _ < o.length; _++)
    a = a ? a[o[_]] : $;
  return a === $ ? s : a;
}
var isEmptyObject = (a) => Object.keys(a).length === 0,
  getColor = (a, o, s) => {
    const _ = dlv_es_default(a, `colors.${o}`, o);
    try {
      return toHex(_), _;
    } catch {
      return s ?? "#000000";
    }
  },
  getBrightness = (a) => {
    const [o, s, _] = parseToRgba(a);
    return (o * 299 + s * 587 + _ * 114) / 1e3;
  },
  tone = (a) => (o) => {
    const s = getColor(o, a);
    return getBrightness(s) < 128 ? "dark" : "light";
  },
  isDark = (a) => (o) => tone(a)(o) === "dark",
  transparentize = (a, o) => (s) => {
    const _ = getColor(s, a);
    return transparentize$1(_, 1 - o);
  };
function generateStripe(a = "1rem", o = "rgba(255, 255, 255, 0.15)") {
  return {
    backgroundImage: `linear-gradient(
    45deg,
    ${o} 25%,
    transparent 25%,
    transparent 50%,
    ${o} 50%,
    ${o} 75%,
    transparent 75%,
    transparent
  )`,
    backgroundSize: `${a} ${a}`,
  };
}
var randomHex = () =>
  `#${Math.floor(Math.random() * 16777215)
    .toString(16)
    .padEnd(6, "0")}`;
function randomColor(a) {
  const o = randomHex();
  return !a || isEmptyObject(a)
    ? o
    : a.string && a.colors
    ? randomColorFromList(a.string, a.colors)
    : a.string && !a.colors
    ? randomColorFromString(a.string)
    : a.colors && !a.string
    ? randomFromList(a.colors)
    : o;
}
function randomColorFromString(a) {
  let o = 0;
  if (a.length === 0) return o.toString();
  for (let _ = 0; _ < a.length; _ += 1)
    (o = a.charCodeAt(_) + ((o << 5) - o)), (o = o & o);
  let s = "#";
  for (let _ = 0; _ < 3; _ += 1) {
    const $ = (o >> (_ * 8)) & 255;
    s += `00${$.toString(16)}`.substr(-2);
  }
  return s;
}
function randomColorFromList(a, o) {
  let s = 0;
  if (a.length === 0) return o[0];
  for (let _ = 0; _ < a.length; _ += 1)
    (s = a.charCodeAt(_) + ((s << 5) - s)), (s = s & s);
  return (s = ((s % o.length) + o.length) % o.length), o[s];
}
function randomFromList(a) {
  return a[Math.floor(Math.random() * a.length)];
}
function mode(a, o) {
  return (s) => (s.colorMode === "dark" ? o : a);
}
function orient(a) {
  const { orientation: o, vertical: s, horizontal: _ } = a;
  return o ? (o === "vertical" ? s : _) : {};
}
function toRef(a) {
  return isObject$4(a) && a.reference ? a.reference : String(a);
}
var toExpr = (a, ...o) => o.map(toRef).join(` ${a} `).replace(/calc/g, ""),
  add = (...a) => `calc(${toExpr("+", ...a)})`,
  subtract = (...a) => `calc(${toExpr("-", ...a)})`,
  multiply = (...a) => `calc(${toExpr("*", ...a)})`,
  divide = (...a) => `calc(${toExpr("/", ...a)})`,
  negate = (a) => {
    const o = toRef(a);
    return o != null && !Number.isNaN(parseFloat(o))
      ? String(o).startsWith("-")
        ? String(o).slice(1)
        : `-${o}`
      : multiply(o, -1);
  },
  calc = Object.assign(
    (a) => ({
      add: (...o) => calc(add(a, ...o)),
      subtract: (...o) => calc(subtract(a, ...o)),
      multiply: (...o) => calc(multiply(a, ...o)),
      divide: (...o) => calc(divide(a, ...o)),
      negate: () => calc(negate(a)),
      toString: () => a.toString(),
    }),
    { add, subtract, multiply, divide, negate }
  );
function isDecimal(a) {
  return !Number.isInteger(parseFloat(a.toString()));
}
function replaceWhiteSpace(a, o = "-") {
  return a.replace(/\s+/g, o);
}
function escape(a) {
  const o = replaceWhiteSpace(a.toString());
  return o.includes("\\.") ? a : isDecimal(a) ? o.replace(".", "\\.") : a;
}
function addPrefix(a, o = "") {
  return [o, escape(a)].filter(Boolean).join("-");
}
function toVarRef(a, o) {
  return `var(${escape(a)}${o ? `, ${o}` : ""})`;
}
function toVar(a, o = "") {
  return `--${addPrefix(a, o)}`;
}
function cssVar(a, o) {
  const s = toVar(a, o == null ? void 0 : o.prefix);
  return {
    variable: s,
    reference: toVarRef(s, getFallback(o == null ? void 0 : o.fallback)),
  };
}
function getFallback(a) {
  return typeof a == "string" ? a : a == null ? void 0 : a.reference;
}
var {
    defineMultiStyleConfig: defineMultiStyleConfig$o,
    definePartsStyle: definePartsStyle$o,
  } = createMultiStyleConfigHelpers(switchAnatomy.keys),
  $width = cssVar("switch-track-width"),
  $height$1 = cssVar("switch-track-height"),
  $diff = cssVar("switch-track-diff"),
  diffValue = calc.subtract($width, $height$1),
  $translateX = cssVar("switch-thumb-x"),
  $bg$f = cssVar("switch-bg"),
  baseStyleTrack$2 = (a) => {
    const { colorScheme: o } = a;
    return {
      borderRadius: "full",
      p: "0.5",
      width: [$width.reference],
      height: [$height$1.reference],
      transitionProperty: "common",
      transitionDuration: "fast",
      [$bg$f.variable]: "colors.gray.300",
      _dark: { [$bg$f.variable]: "colors.whiteAlpha.400" },
      _focusVisible: { boxShadow: "outline" },
      _disabled: { opacity: 0.4, cursor: "not-allowed" },
      _checked: {
        [$bg$f.variable]: `colors.${o}.500`,
        _dark: { [$bg$f.variable]: `colors.${o}.200` },
      },
      bg: $bg$f.reference,
    };
  },
  baseStyleThumb$1 = {
    bg: "white",
    transitionProperty: "transform",
    transitionDuration: "normal",
    borderRadius: "inherit",
    width: [$height$1.reference],
    height: [$height$1.reference],
    _checked: { transform: `translateX(${$translateX.reference})` },
  },
  baseStyle$E = definePartsStyle$o((a) => ({
    container: {
      [$diff.variable]: diffValue,
      [$translateX.variable]: $diff.reference,
      _rtl: { [$translateX.variable]: calc($diff).negate().toString() },
    },
    track: baseStyleTrack$2(a),
    thumb: baseStyleThumb$1,
  })),
  sizes$l = {
    sm: definePartsStyle$o({
      container: {
        [$width.variable]: "1.375rem",
        [$height$1.variable]: "sizes.3",
      },
    }),
    md: definePartsStyle$o({
      container: {
        [$width.variable]: "1.875rem",
        [$height$1.variable]: "sizes.4",
      },
    }),
    lg: definePartsStyle$o({
      container: {
        [$width.variable]: "2.875rem",
        [$height$1.variable]: "sizes.6",
      },
    }),
  },
  switchTheme = defineMultiStyleConfig$o({
    baseStyle: baseStyle$E,
    sizes: sizes$l,
    defaultProps: { size: "md", colorScheme: "blue" },
  }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$n,
    definePartsStyle: definePartsStyle$n,
  } = createMultiStyleConfigHelpers(tableAnatomy.keys),
  baseStyle$D = definePartsStyle$n({
    table: {
      fontVariantNumeric: "lining-nums tabular-nums",
      borderCollapse: "collapse",
      width: "full",
    },
    th: {
      fontFamily: "heading",
      fontWeight: "bold",
      textTransform: "uppercase",
      letterSpacing: "wider",
      textAlign: "start",
    },
    td: { textAlign: "start" },
    caption: {
      mt: 4,
      fontFamily: "heading",
      textAlign: "center",
      fontWeight: "medium",
    },
  }),
  numericStyles = { "&[data-is-numeric=true]": { textAlign: "end" } },
  variantSimple = definePartsStyle$n((a) => {
    const { colorScheme: o } = a;
    return {
      th: {
        color: mode("gray.600", "gray.400")(a),
        borderBottom: "1px",
        borderColor: mode(`${o}.100`, `${o}.700`)(a),
        ...numericStyles,
      },
      td: {
        borderBottom: "1px",
        borderColor: mode(`${o}.100`, `${o}.700`)(a),
        ...numericStyles,
      },
      caption: { color: mode("gray.600", "gray.100")(a) },
      tfoot: { tr: { "&:last-of-type": { th: { borderBottomWidth: 0 } } } },
    };
  }),
  variantStripe = definePartsStyle$n((a) => {
    const { colorScheme: o } = a;
    return {
      th: {
        color: mode("gray.600", "gray.400")(a),
        borderBottom: "1px",
        borderColor: mode(`${o}.100`, `${o}.700`)(a),
        ...numericStyles,
      },
      td: {
        borderBottom: "1px",
        borderColor: mode(`${o}.100`, `${o}.700`)(a),
        ...numericStyles,
      },
      caption: { color: mode("gray.600", "gray.100")(a) },
      tbody: {
        tr: {
          "&:nth-of-type(odd)": {
            "th, td": {
              borderBottomWidth: "1px",
              borderColor: mode(`${o}.100`, `${o}.700`)(a),
            },
            td: { background: mode(`${o}.100`, `${o}.700`)(a) },
          },
        },
      },
      tfoot: { tr: { "&:last-of-type": { th: { borderBottomWidth: 0 } } } },
    };
  }),
  variants$c = { simple: variantSimple, striped: variantStripe, unstyled: {} },
  sizes$k = {
    sm: definePartsStyle$n({
      th: { px: "4", py: "1", lineHeight: "4", fontSize: "xs" },
      td: { px: "4", py: "2", fontSize: "sm", lineHeight: "4" },
      caption: { px: "4", py: "2", fontSize: "xs" },
    }),
    md: definePartsStyle$n({
      th: { px: "6", py: "3", lineHeight: "4", fontSize: "xs" },
      td: { px: "6", py: "4", lineHeight: "5" },
      caption: { px: "6", py: "2", fontSize: "sm" },
    }),
    lg: definePartsStyle$n({
      th: { px: "8", py: "4", lineHeight: "5", fontSize: "sm" },
      td: { px: "8", py: "5", lineHeight: "6" },
      caption: { px: "6", py: "2", fontSize: "md" },
    }),
  },
  tableTheme = defineMultiStyleConfig$n({
    baseStyle: baseStyle$D,
    variants: variants$c,
    sizes: sizes$k,
    defaultProps: { variant: "simple", size: "md", colorScheme: "gray" },
  }),
  $fg$5 = cssVar$1("tabs-color"),
  $bg$e = cssVar$1("tabs-bg"),
  $border$3 = cssVar$1("tabs-border-color"),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$m,
    definePartsStyle: definePartsStyle$m,
  } = createMultiStyleConfigHelpers(tabsAnatomy.keys),
  baseStyleRoot$1 = (a) => {
    const { orientation: o } = a;
    return { display: o === "vertical" ? "flex" : "block" };
  },
  baseStyleTab = (a) => {
    const { isFitted: o } = a;
    return {
      flex: o ? 1 : void 0,
      transitionProperty: "common",
      transitionDuration: "normal",
      _focusVisible: { zIndex: 1, boxShadow: "outline" },
      _disabled: { cursor: "not-allowed", opacity: 0.4 },
    };
  },
  baseStyleTablist = (a) => {
    const { align: o = "start", orientation: s } = a;
    return {
      justifyContent: {
        end: "flex-end",
        center: "center",
        start: "flex-start",
      }[o],
      flexDirection: s === "vertical" ? "column" : "row",
    };
  },
  baseStyleTabpanel = { p: 4 },
  baseStyle$C = definePartsStyle$m((a) => ({
    root: baseStyleRoot$1(a),
    tab: baseStyleTab(a),
    tablist: baseStyleTablist(a),
    tabpanel: baseStyleTabpanel,
  })),
  sizes$j = {
    sm: definePartsStyle$m({ tab: { py: 1, px: 4, fontSize: "sm" } }),
    md: definePartsStyle$m({ tab: { fontSize: "md", py: 2, px: 4 } }),
    lg: definePartsStyle$m({ tab: { fontSize: "lg", py: 3, px: 4 } }),
  },
  variantLine = definePartsStyle$m((a) => {
    const { colorScheme: o, orientation: s } = a,
      _ = s === "vertical",
      $ = _ ? "borderStart" : "borderBottom",
      et = _ ? "marginStart" : "marginBottom";
    return {
      tablist: { [$]: "2px solid", borderColor: "inherit" },
      tab: {
        [$]: "2px solid",
        borderColor: "transparent",
        [et]: "-2px",
        _selected: {
          [$fg$5.variable]: `colors.${o}.600`,
          _dark: { [$fg$5.variable]: `colors.${o}.300` },
          borderColor: "currentColor",
        },
        _active: {
          [$bg$e.variable]: "colors.gray.200",
          _dark: { [$bg$e.variable]: "colors.whiteAlpha.300" },
        },
        _disabled: { _active: { bg: "none" } },
        color: $fg$5.reference,
        bg: $bg$e.reference,
      },
    };
  }),
  variantEnclosed = definePartsStyle$m((a) => {
    const { colorScheme: o } = a;
    return {
      tab: {
        borderTopRadius: "md",
        border: "1px solid",
        borderColor: "transparent",
        mb: "-1px",
        [$border$3.variable]: "transparent",
        _selected: {
          [$fg$5.variable]: `colors.${o}.600`,
          [$border$3.variable]: "colors.white",
          _dark: {
            [$fg$5.variable]: `colors.${o}.300`,
            [$border$3.variable]: "colors.gray.800",
          },
          borderColor: "inherit",
          borderBottomColor: $border$3.reference,
        },
        color: $fg$5.reference,
      },
      tablist: {
        mb: "-1px",
        borderBottom: "1px solid",
        borderColor: "inherit",
      },
    };
  }),
  variantEnclosedColored = definePartsStyle$m((a) => {
    const { colorScheme: o } = a;
    return {
      tab: {
        border: "1px solid",
        borderColor: "inherit",
        [$bg$e.variable]: "colors.gray.50",
        _dark: { [$bg$e.variable]: "colors.whiteAlpha.50" },
        mb: "-1px",
        _notLast: { marginEnd: "-1px" },
        _selected: {
          [$bg$e.variable]: "colors.white",
          [$fg$5.variable]: `colors.${o}.600`,
          _dark: {
            [$bg$e.variable]: "colors.gray.800",
            [$fg$5.variable]: `colors.${o}.300`,
          },
          borderColor: "inherit",
          borderTopColor: "currentColor",
          borderBottomColor: "transparent",
        },
        color: $fg$5.reference,
        bg: $bg$e.reference,
      },
      tablist: {
        mb: "-1px",
        borderBottom: "1px solid",
        borderColor: "inherit",
      },
    };
  }),
  variantSoftRounded = definePartsStyle$m((a) => {
    const { colorScheme: o, theme: s } = a;
    return {
      tab: {
        borderRadius: "full",
        fontWeight: "semibold",
        color: "gray.600",
        _selected: {
          color: getColor(s, `${o}.700`),
          bg: getColor(s, `${o}.100`),
        },
      },
    };
  }),
  variantSolidRounded = definePartsStyle$m((a) => {
    const { colorScheme: o } = a;
    return {
      tab: {
        borderRadius: "full",
        fontWeight: "semibold",
        [$fg$5.variable]: "colors.gray.600",
        _dark: { [$fg$5.variable]: "inherit" },
        _selected: {
          [$fg$5.variable]: "colors.white",
          [$bg$e.variable]: `colors.${o}.600`,
          _dark: {
            [$fg$5.variable]: "colors.gray.800",
            [$bg$e.variable]: `colors.${o}.300`,
          },
        },
        color: $fg$5.reference,
        bg: $bg$e.reference,
      },
    };
  }),
  variantUnstyled$2 = definePartsStyle$m({}),
  variants$b = {
    line: variantLine,
    enclosed: variantEnclosed,
    "enclosed-colored": variantEnclosedColored,
    "soft-rounded": variantSoftRounded,
    "solid-rounded": variantSolidRounded,
    unstyled: variantUnstyled$2,
  },
  tabsTheme = defineMultiStyleConfig$m({
    baseStyle: baseStyle$C,
    sizes: sizes$j,
    variants: variants$b,
    defaultProps: { size: "md", variant: "line", colorScheme: "blue" },
  }),
  vars = defineCssVars("badge", ["bg", "color", "shadow"]),
  baseStyle$B = {
    px: 1,
    textTransform: "uppercase",
    fontSize: "xs",
    borderRadius: "sm",
    fontWeight: "bold",
    bg: vars.bg.reference,
    color: vars.color.reference,
    boxShadow: vars.shadow.reference,
  },
  variantSolid$3 = (a) => {
    const { colorScheme: o, theme: s } = a,
      _ = transparentize(`${o}.500`, 0.6)(s);
    return {
      [vars.bg.variable]: `colors.${o}.500`,
      [vars.color.variable]: "colors.white",
      _dark: {
        [vars.bg.variable]: _,
        [vars.color.variable]: "colors.whiteAlpha.800",
      },
    };
  },
  variantSubtle$1 = (a) => {
    const { colorScheme: o, theme: s } = a,
      _ = transparentize(`${o}.200`, 0.16)(s);
    return {
      [vars.bg.variable]: `colors.${o}.100`,
      [vars.color.variable]: `colors.${o}.800`,
      _dark: {
        [vars.bg.variable]: _,
        [vars.color.variable]: `colors.${o}.200`,
      },
    };
  },
  variantOutline$2 = (a) => {
    const { colorScheme: o, theme: s } = a,
      _ = transparentize(`${o}.200`, 0.8)(s);
    return {
      [vars.color.variable]: `colors.${o}.500`,
      _dark: { [vars.color.variable]: _ },
      [vars.shadow.variable]: `inset 0 0 0px 1px ${vars.color.reference}`,
    };
  },
  variants$a = {
    solid: variantSolid$3,
    subtle: variantSubtle$1,
    outline: variantOutline$2,
  },
  badgeTheme = {
    baseStyle: baseStyle$B,
    variants: variants$a,
    defaultProps: { variant: "subtle", colorScheme: "gray" },
  },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$l,
    definePartsStyle: definePartsStyle$l,
  } = createMultiStyleConfigHelpers(tagAnatomy.keys),
  $bg$d = cssVar$1("tag-bg"),
  $color = cssVar$1("tag-color"),
  $shadow$3 = cssVar$1("tag-shadow"),
  $minH = cssVar$1("tag-min-height"),
  $minW = cssVar$1("tag-min-width"),
  $fontSize$1 = cssVar$1("tag-font-size"),
  $paddingX = cssVar$1("tag-padding-inline"),
  baseStyleContainer$4 = {
    fontWeight: "medium",
    lineHeight: 1.2,
    outline: 0,
    [$color.variable]: vars.color.reference,
    [$bg$d.variable]: vars.bg.reference,
    [$shadow$3.variable]: vars.shadow.reference,
    color: $color.reference,
    bg: $bg$d.reference,
    boxShadow: $shadow$3.reference,
    borderRadius: "md",
    minH: $minH.reference,
    minW: $minW.reference,
    fontSize: $fontSize$1.reference,
    px: $paddingX.reference,
    _focusVisible: { [$shadow$3.variable]: "shadows.outline" },
  },
  baseStyleLabel$4 = { lineHeight: 1.2, overflow: "visible" },
  baseStyleCloseButton$3 = {
    fontSize: "lg",
    w: "5",
    h: "5",
    transitionProperty: "common",
    transitionDuration: "normal",
    borderRadius: "full",
    marginStart: "1.5",
    marginEnd: "-1",
    opacity: 0.5,
    _disabled: { opacity: 0.4 },
    _focusVisible: { boxShadow: "outline", bg: "rgba(0, 0, 0, 0.14)" },
    _hover: { opacity: 0.8 },
    _active: { opacity: 1 },
  },
  baseStyle$A = definePartsStyle$l({
    container: baseStyleContainer$4,
    label: baseStyleLabel$4,
    closeButton: baseStyleCloseButton$3,
  }),
  sizes$i = {
    sm: definePartsStyle$l({
      container: {
        [$minH.variable]: "sizes.5",
        [$minW.variable]: "sizes.5",
        [$fontSize$1.variable]: "fontSizes.xs",
        [$paddingX.variable]: "space.2",
      },
      closeButton: { marginEnd: "-2px", marginStart: "0.35rem" },
    }),
    md: definePartsStyle$l({
      container: {
        [$minH.variable]: "sizes.6",
        [$minW.variable]: "sizes.6",
        [$fontSize$1.variable]: "fontSizes.sm",
        [$paddingX.variable]: "space.2",
      },
    }),
    lg: definePartsStyle$l({
      container: {
        [$minH.variable]: "sizes.8",
        [$minW.variable]: "sizes.8",
        [$fontSize$1.variable]: "fontSizes.md",
        [$paddingX.variable]: "space.3",
      },
    }),
  },
  variants$9 = {
    subtle: definePartsStyle$l((a) => {
      var o;
      return {
        container: (o = badgeTheme.variants) == null ? void 0 : o.subtle(a),
      };
    }),
    solid: definePartsStyle$l((a) => {
      var o;
      return {
        container: (o = badgeTheme.variants) == null ? void 0 : o.solid(a),
      };
    }),
    outline: definePartsStyle$l((a) => {
      var o;
      return {
        container: (o = badgeTheme.variants) == null ? void 0 : o.outline(a),
      };
    }),
  },
  tagTheme = defineMultiStyleConfig$l({
    variants: variants$9,
    baseStyle: baseStyle$A,
    sizes: sizes$i,
    defaultProps: { size: "md", variant: "subtle", colorScheme: "gray" },
  }),
  {
    definePartsStyle: definePartsStyle$k,
    defineMultiStyleConfig: defineMultiStyleConfig$k,
  } = createMultiStyleConfigHelpers(inputAnatomy.keys),
  $height = cssVar$1("input-height"),
  $fontSize = cssVar$1("input-font-size"),
  $padding$1 = cssVar$1("input-padding"),
  $borderRadius = cssVar$1("input-border-radius"),
  baseStyle$z = definePartsStyle$k({
    addon: {
      height: $height.reference,
      fontSize: $fontSize.reference,
      px: $padding$1.reference,
      borderRadius: $borderRadius.reference,
    },
    field: {
      width: "100%",
      height: $height.reference,
      fontSize: $fontSize.reference,
      px: $padding$1.reference,
      borderRadius: $borderRadius.reference,
      minWidth: 0,
      outline: 0,
      position: "relative",
      appearance: "none",
      transitionProperty: "common",
      transitionDuration: "normal",
      _disabled: { opacity: 0.4, cursor: "not-allowed" },
    },
  }),
  size = {
    lg: {
      [$fontSize.variable]: "fontSizes.lg",
      [$padding$1.variable]: "space.4",
      [$borderRadius.variable]: "radii.md",
      [$height.variable]: "sizes.12",
    },
    md: {
      [$fontSize.variable]: "fontSizes.md",
      [$padding$1.variable]: "space.4",
      [$borderRadius.variable]: "radii.md",
      [$height.variable]: "sizes.10",
    },
    sm: {
      [$fontSize.variable]: "fontSizes.sm",
      [$padding$1.variable]: "space.3",
      [$borderRadius.variable]: "radii.sm",
      [$height.variable]: "sizes.8",
    },
    xs: {
      [$fontSize.variable]: "fontSizes.xs",
      [$padding$1.variable]: "space.2",
      [$borderRadius.variable]: "radii.sm",
      [$height.variable]: "sizes.6",
    },
  },
  sizes$h = {
    lg: definePartsStyle$k({ field: size.lg, group: size.lg }),
    md: definePartsStyle$k({ field: size.md, group: size.md }),
    sm: definePartsStyle$k({ field: size.sm, group: size.sm }),
    xs: definePartsStyle$k({ field: size.xs, group: size.xs }),
  };
function getDefaults(a) {
  const { focusBorderColor: o, errorBorderColor: s } = a;
  return {
    focusBorderColor: o || mode("blue.500", "blue.300")(a),
    errorBorderColor: s || mode("red.500", "red.300")(a),
  };
}
var variantOutline$1 = definePartsStyle$k((a) => {
    const { theme: o } = a,
      { focusBorderColor: s, errorBorderColor: _ } = getDefaults(a);
    return {
      field: {
        border: "1px solid",
        borderColor: "inherit",
        bg: "inherit",
        _hover: { borderColor: mode("gray.300", "whiteAlpha.400")(a) },
        _readOnly: { boxShadow: "none !important", userSelect: "all" },
        _invalid: {
          borderColor: getColor(o, _),
          boxShadow: `0 0 0 1px ${getColor(o, _)}`,
        },
        _focusVisible: {
          zIndex: 1,
          borderColor: getColor(o, s),
          boxShadow: `0 0 0 1px ${getColor(o, s)}`,
        },
      },
      addon: {
        border: "1px solid",
        borderColor: mode("inherit", "whiteAlpha.50")(a),
        bg: mode("gray.100", "whiteAlpha.300")(a),
      },
    };
  }),
  variantFilled = definePartsStyle$k((a) => {
    const { theme: o } = a,
      { focusBorderColor: s, errorBorderColor: _ } = getDefaults(a);
    return {
      field: {
        border: "2px solid",
        borderColor: "transparent",
        bg: mode("gray.100", "whiteAlpha.50")(a),
        _hover: { bg: mode("gray.200", "whiteAlpha.100")(a) },
        _readOnly: { boxShadow: "none !important", userSelect: "all" },
        _invalid: { borderColor: getColor(o, _) },
        _focusVisible: { bg: "transparent", borderColor: getColor(o, s) },
      },
      addon: {
        border: "2px solid",
        borderColor: "transparent",
        bg: mode("gray.100", "whiteAlpha.50")(a),
      },
    };
  }),
  variantFlushed = definePartsStyle$k((a) => {
    const { theme: o } = a,
      { focusBorderColor: s, errorBorderColor: _ } = getDefaults(a);
    return {
      field: {
        borderBottom: "1px solid",
        borderColor: "inherit",
        borderRadius: "0",
        px: "0",
        bg: "transparent",
        _readOnly: { boxShadow: "none !important", userSelect: "all" },
        _invalid: {
          borderColor: getColor(o, _),
          boxShadow: `0px 1px 0px 0px ${getColor(o, _)}`,
        },
        _focusVisible: {
          borderColor: getColor(o, s),
          boxShadow: `0px 1px 0px 0px ${getColor(o, s)}`,
        },
      },
      addon: {
        borderBottom: "2px solid",
        borderColor: "inherit",
        borderRadius: "0",
        px: "0",
        bg: "transparent",
      },
    };
  }),
  variantUnstyled$1 = definePartsStyle$k({
    field: { bg: "transparent", px: "0", height: "auto" },
    addon: { bg: "transparent", px: "0", height: "auto" },
  }),
  variants$8 = {
    outline: variantOutline$1,
    filled: variantFilled,
    flushed: variantFlushed,
    unstyled: variantUnstyled$1,
  },
  inputTheme = defineMultiStyleConfig$k({
    baseStyle: baseStyle$z,
    sizes: sizes$h,
    variants: variants$8,
    defaultProps: { size: "md", variant: "outline" },
  }),
  _a$4,
  baseStyle$y = {
    ...((_a$4 = inputTheme.baseStyle) == null ? void 0 : _a$4.field),
    paddingY: "2",
    minHeight: "20",
    lineHeight: "short",
    verticalAlign: "top",
  },
  _a2$2,
  _b$2,
  variants$7 = {
    outline: (a) => {
      var o, s;
      return (s =
        (o = inputTheme.variants) == null ? void 0 : o.outline(a).field) != null
        ? s
        : {};
    },
    flushed: (a) => {
      var o, s;
      return (s =
        (o = inputTheme.variants) == null ? void 0 : o.flushed(a).field) != null
        ? s
        : {};
    },
    filled: (a) => {
      var o, s;
      return (s =
        (o = inputTheme.variants) == null ? void 0 : o.filled(a).field) != null
        ? s
        : {};
    },
    unstyled:
      (_b$2 =
        (_a2$2 = inputTheme.variants) == null
          ? void 0
          : _a2$2.unstyled.field) != null
        ? _b$2
        : {},
  },
  _a3,
  _b2,
  _c$1,
  _d$1,
  _e$1,
  _f$1,
  _g$1,
  _h$1,
  sizes$g = {
    xs:
      (_b2 = (_a3 = inputTheme.sizes) == null ? void 0 : _a3.xs.field) != null
        ? _b2
        : {},
    sm:
      (_d$1 = (_c$1 = inputTheme.sizes) == null ? void 0 : _c$1.sm.field) !=
      null
        ? _d$1
        : {},
    md:
      (_f$1 = (_e$1 = inputTheme.sizes) == null ? void 0 : _e$1.md.field) !=
      null
        ? _f$1
        : {},
    lg:
      (_h$1 = (_g$1 = inputTheme.sizes) == null ? void 0 : _g$1.lg.field) !=
      null
        ? _h$1
        : {},
  },
  textareaTheme = {
    baseStyle: baseStyle$y,
    sizes: sizes$g,
    variants: variants$7,
    defaultProps: { size: "md", variant: "outline" },
  },
  $bg$c = cssVar("tooltip-bg"),
  $fg$4 = cssVar("tooltip-fg"),
  $arrowBg$1 = cssVar("popper-arrow-bg"),
  baseStyle$x = {
    bg: $bg$c.reference,
    color: $fg$4.reference,
    [$bg$c.variable]: "colors.gray.700",
    [$fg$4.variable]: "colors.whiteAlpha.900",
    _dark: {
      [$bg$c.variable]: "colors.gray.300",
      [$fg$4.variable]: "colors.gray.900",
    },
    [$arrowBg$1.variable]: $bg$c.reference,
    px: "2",
    py: "0.5",
    borderRadius: "sm",
    fontWeight: "medium",
    fontSize: "sm",
    boxShadow: "md",
    maxW: "xs",
    zIndex: "tooltip",
  },
  tooltipTheme = { baseStyle: baseStyle$x },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$j,
    definePartsStyle: definePartsStyle$j,
  } = createMultiStyleConfigHelpers(progressAnatomy.keys),
  filledStyle = (a) => {
    const { colorScheme: o, theme: s, isIndeterminate: _, hasStripe: $ } = a,
      et = mode(generateStripe(), generateStripe("1rem", "rgba(0,0,0,0.1)"))(a),
      tt = mode(`${o}.500`, `${o}.200`)(a),
      rt = `linear-gradient(
    to right,
    transparent 0%,
    ${getColor(s, tt)} 50%,
    transparent 100%
  )`;
    return { ...(!_ && $ && et), ...(_ ? { bgImage: rt } : { bgColor: tt }) };
  },
  baseStyleLabel$3 = {
    lineHeight: "1",
    fontSize: "0.25em",
    fontWeight: "bold",
    color: "white",
  },
  baseStyleTrack$1 = (a) => ({ bg: mode("gray.100", "whiteAlpha.300")(a) }),
  baseStyleFilledTrack$1 = (a) => ({
    transitionProperty: "common",
    transitionDuration: "slow",
    ...filledStyle(a),
  }),
  baseStyle$w = definePartsStyle$j((a) => ({
    label: baseStyleLabel$3,
    filledTrack: baseStyleFilledTrack$1(a),
    track: baseStyleTrack$1(a),
  })),
  sizes$f = {
    xs: definePartsStyle$j({ track: { h: "1" } }),
    sm: definePartsStyle$j({ track: { h: "2" } }),
    md: definePartsStyle$j({ track: { h: "3" } }),
    lg: definePartsStyle$j({ track: { h: "4" } }),
  },
  progressTheme = defineMultiStyleConfig$j({
    sizes: sizes$f,
    baseStyle: baseStyle$w,
    defaultProps: { size: "md", colorScheme: "blue" },
  }),
  isFunction$1 = (a) => typeof a == "function";
function runIfFn$1(a, ...o) {
  return isFunction$1(a) ? a(...o) : a;
}
var {
    definePartsStyle: definePartsStyle$i,
    defineMultiStyleConfig: defineMultiStyleConfig$i,
  } = createMultiStyleConfigHelpers(checkboxAnatomy.keys),
  $size$3 = cssVar$1("checkbox-size"),
  baseStyleControl$1 = (a) => {
    const { colorScheme: o } = a;
    return {
      w: $size$3.reference,
      h: $size$3.reference,
      transitionProperty: "box-shadow",
      transitionDuration: "normal",
      border: "2px solid",
      borderRadius: "sm",
      borderColor: "inherit",
      color: "white",
      _checked: {
        bg: mode(`${o}.500`, `${o}.200`)(a),
        borderColor: mode(`${o}.500`, `${o}.200`)(a),
        color: mode("white", "gray.900")(a),
        _hover: {
          bg: mode(`${o}.600`, `${o}.300`)(a),
          borderColor: mode(`${o}.600`, `${o}.300`)(a),
        },
        _disabled: {
          borderColor: mode("gray.200", "transparent")(a),
          bg: mode("gray.200", "whiteAlpha.300")(a),
          color: mode("gray.500", "whiteAlpha.500")(a),
        },
      },
      _indeterminate: {
        bg: mode(`${o}.500`, `${o}.200`)(a),
        borderColor: mode(`${o}.500`, `${o}.200`)(a),
        color: mode("white", "gray.900")(a),
      },
      _disabled: {
        bg: mode("gray.100", "whiteAlpha.100")(a),
        borderColor: mode("gray.100", "transparent")(a),
      },
      _focusVisible: { boxShadow: "outline" },
      _invalid: { borderColor: mode("red.500", "red.300")(a) },
    };
  },
  baseStyleContainer$3 = { _disabled: { cursor: "not-allowed" } },
  baseStyleLabel$2 = { userSelect: "none", _disabled: { opacity: 0.4 } },
  baseStyleIcon$6 = {
    transitionProperty: "transform",
    transitionDuration: "normal",
  },
  baseStyle$v = definePartsStyle$i((a) => ({
    icon: baseStyleIcon$6,
    container: baseStyleContainer$3,
    control: runIfFn$1(baseStyleControl$1, a),
    label: baseStyleLabel$2,
  })),
  sizes$e = {
    sm: definePartsStyle$i({
      control: { [$size$3.variable]: "sizes.3" },
      label: { fontSize: "sm" },
      icon: { fontSize: "3xs" },
    }),
    md: definePartsStyle$i({
      control: { [$size$3.variable]: "sizes.4" },
      label: { fontSize: "md" },
      icon: { fontSize: "2xs" },
    }),
    lg: definePartsStyle$i({
      control: { [$size$3.variable]: "sizes.5" },
      label: { fontSize: "lg" },
      icon: { fontSize: "2xs" },
    }),
  },
  checkboxTheme = defineMultiStyleConfig$i({
    baseStyle: baseStyle$v,
    sizes: sizes$e,
    defaultProps: { size: "md", colorScheme: "blue" },
  }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$h,
    definePartsStyle: definePartsStyle$h,
  } = createMultiStyleConfigHelpers(radioAnatomy.keys),
  baseStyleControl = (a) => {
    var o;
    const s =
      (o = runIfFn$1(checkboxTheme.baseStyle, a)) == null ? void 0 : o.control;
    return {
      ...s,
      borderRadius: "full",
      _checked: {
        ...(s == null ? void 0 : s._checked),
        _before: {
          content: '""',
          display: "inline-block",
          pos: "relative",
          w: "50%",
          h: "50%",
          borderRadius: "50%",
          bg: "currentColor",
        },
      },
    };
  },
  baseStyle$u = definePartsStyle$h((a) => {
    var o, s, _, $;
    return {
      label:
        (s = (o = checkboxTheme).baseStyle) == null
          ? void 0
          : s.call(o, a).label,
      container:
        ($ = (_ = checkboxTheme).baseStyle) == null
          ? void 0
          : $.call(_, a).container,
      control: baseStyleControl(a),
    };
  }),
  sizes$d = {
    md: definePartsStyle$h({
      control: { w: "4", h: "4" },
      label: { fontSize: "md" },
    }),
    lg: definePartsStyle$h({
      control: { w: "5", h: "5" },
      label: { fontSize: "lg" },
    }),
    sm: definePartsStyle$h({
      control: { width: "3", height: "3" },
      label: { fontSize: "sm" },
    }),
  },
  radioTheme = defineMultiStyleConfig$h({
    baseStyle: baseStyle$u,
    sizes: sizes$d,
    defaultProps: { size: "md", colorScheme: "blue" },
  }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$g,
    definePartsStyle: definePartsStyle$g,
  } = createMultiStyleConfigHelpers(selectAnatomy.keys),
  $bg$b = cssVar$1("select-bg"),
  _a$3,
  baseStyleField$1 = {
    ...((_a$3 = inputTheme.baseStyle) == null ? void 0 : _a$3.field),
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    bg: $bg$b.reference,
    [$bg$b.variable]: "colors.white",
    _dark: { [$bg$b.variable]: "colors.gray.700" },
    "> option, > optgroup": { bg: $bg$b.reference },
  },
  baseStyleIcon$5 = {
    width: "6",
    height: "100%",
    insetEnd: "2",
    position: "relative",
    color: "currentColor",
    fontSize: "xl",
    _disabled: { opacity: 0.5 },
  },
  baseStyle$t = definePartsStyle$g({
    field: baseStyleField$1,
    icon: baseStyleIcon$5,
  }),
  iconSpacing = { paddingInlineEnd: "8" },
  _a2$1,
  _b$1,
  _c,
  _d,
  _e,
  _f,
  _g,
  _h,
  sizes$c = {
    lg: {
      ...((_a2$1 = inputTheme.sizes) == null ? void 0 : _a2$1.lg),
      field: {
        ...((_b$1 = inputTheme.sizes) == null ? void 0 : _b$1.lg.field),
        ...iconSpacing,
      },
    },
    md: {
      ...((_c = inputTheme.sizes) == null ? void 0 : _c.md),
      field: {
        ...((_d = inputTheme.sizes) == null ? void 0 : _d.md.field),
        ...iconSpacing,
      },
    },
    sm: {
      ...((_e = inputTheme.sizes) == null ? void 0 : _e.sm),
      field: {
        ...((_f = inputTheme.sizes) == null ? void 0 : _f.sm.field),
        ...iconSpacing,
      },
    },
    xs: {
      ...((_g = inputTheme.sizes) == null ? void 0 : _g.xs),
      field: {
        ...((_h = inputTheme.sizes) == null ? void 0 : _h.xs.field),
        ...iconSpacing,
      },
      icon: { insetEnd: "1" },
    },
  },
  selectTheme = defineMultiStyleConfig$g({
    baseStyle: baseStyle$t,
    sizes: sizes$c,
    variants: inputTheme.variants,
    defaultProps: inputTheme.defaultProps,
  }),
  $startColor = cssVar$1("skeleton-start-color"),
  $endColor = cssVar$1("skeleton-end-color"),
  baseStyle$s = {
    [$startColor.variable]: "colors.gray.100",
    [$endColor.variable]: "colors.gray.400",
    _dark: {
      [$startColor.variable]: "colors.gray.800",
      [$endColor.variable]: "colors.gray.600",
    },
    background: $startColor.reference,
    borderColor: $endColor.reference,
    opacity: 0.7,
    borderRadius: "sm",
  },
  skeletonTheme = { baseStyle: baseStyle$s },
  $bg$a = cssVar$1("skip-link-bg"),
  baseStyle$r = {
    borderRadius: "md",
    fontWeight: "semibold",
    _focusVisible: {
      boxShadow: "outline",
      padding: "4",
      position: "fixed",
      top: "6",
      insetStart: "6",
      [$bg$a.variable]: "colors.white",
      _dark: { [$bg$a.variable]: "colors.gray.700" },
      bg: $bg$a.reference,
    },
  },
  skipLinkTheme = { baseStyle: baseStyle$r },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$f,
    definePartsStyle: definePartsStyle$f,
  } = createMultiStyleConfigHelpers(sliderAnatomy.keys),
  $thumbSize = cssVar$1("slider-thumb-size"),
  $trackSize = cssVar$1("slider-track-size"),
  $bg$9 = cssVar$1("slider-bg"),
  baseStyleContainer$2 = (a) => {
    const { orientation: o } = a;
    return {
      display: "inline-block",
      position: "relative",
      cursor: "pointer",
      _disabled: { opacity: 0.6, cursor: "default", pointerEvents: "none" },
      ...orient({
        orientation: o,
        vertical: { h: "100%" },
        horizontal: { w: "100%" },
      }),
    };
  },
  baseStyleTrack = (a) => ({
    ...orient({
      orientation: a.orientation,
      horizontal: { h: $trackSize.reference },
      vertical: { w: $trackSize.reference },
    }),
    overflow: "hidden",
    borderRadius: "sm",
    [$bg$9.variable]: "colors.gray.200",
    _dark: { [$bg$9.variable]: "colors.whiteAlpha.200" },
    _disabled: {
      [$bg$9.variable]: "colors.gray.300",
      _dark: { [$bg$9.variable]: "colors.whiteAlpha.300" },
    },
    bg: $bg$9.reference,
  }),
  baseStyleThumb = (a) => {
    const { orientation: o } = a;
    return {
      ...orient({
        orientation: o,
        vertical: {
          left: "50%",
          transform: "translateX(-50%)",
          _active: { transform: "translateX(-50%) scale(1.15)" },
        },
        horizontal: {
          top: "50%",
          transform: "translateY(-50%)",
          _active: { transform: "translateY(-50%) scale(1.15)" },
        },
      }),
      w: $thumbSize.reference,
      h: $thumbSize.reference,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "absolute",
      outline: 0,
      zIndex: 1,
      borderRadius: "full",
      bg: "white",
      boxShadow: "base",
      border: "1px solid",
      borderColor: "transparent",
      transitionProperty: "transform",
      transitionDuration: "normal",
      _focusVisible: { boxShadow: "outline" },
      _disabled: { bg: "gray.300" },
    };
  },
  baseStyleFilledTrack = (a) => {
    const { colorScheme: o } = a;
    return {
      width: "inherit",
      height: "inherit",
      [$bg$9.variable]: `colors.${o}.500`,
      _dark: { [$bg$9.variable]: `colors.${o}.200` },
      bg: $bg$9.reference,
    };
  },
  baseStyle$q = definePartsStyle$f((a) => ({
    container: baseStyleContainer$2(a),
    track: baseStyleTrack(a),
    thumb: baseStyleThumb(a),
    filledTrack: baseStyleFilledTrack(a),
  })),
  sizeLg = definePartsStyle$f({
    container: {
      [$thumbSize.variable]: "sizes.4",
      [$trackSize.variable]: "sizes.1",
    },
  }),
  sizeMd = definePartsStyle$f({
    container: {
      [$thumbSize.variable]: "sizes.3.5",
      [$trackSize.variable]: "sizes.1",
    },
  }),
  sizeSm = definePartsStyle$f({
    container: {
      [$thumbSize.variable]: "sizes.2.5",
      [$trackSize.variable]: "sizes.0.5",
    },
  }),
  sizes$b = { lg: sizeLg, md: sizeMd, sm: sizeSm },
  sliderTheme = defineMultiStyleConfig$f({
    baseStyle: baseStyle$q,
    sizes: sizes$b,
    defaultProps: { size: "md", colorScheme: "blue" },
  }),
  $size$2 = cssVar("spinner-size"),
  baseStyle$p = { width: [$size$2.reference], height: [$size$2.reference] },
  sizes$a = {
    xs: { [$size$2.variable]: "sizes.3" },
    sm: { [$size$2.variable]: "sizes.4" },
    md: { [$size$2.variable]: "sizes.6" },
    lg: { [$size$2.variable]: "sizes.8" },
    xl: { [$size$2.variable]: "sizes.12" },
  },
  spinnerTheme = {
    baseStyle: baseStyle$p,
    sizes: sizes$a,
    defaultProps: { size: "md" },
  },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$e,
    definePartsStyle: definePartsStyle$e,
  } = createMultiStyleConfigHelpers(statAnatomy.keys),
  baseStyleLabel$1 = { fontWeight: "medium" },
  baseStyleHelpText = { opacity: 0.8, marginBottom: "2" },
  baseStyleNumber = { verticalAlign: "baseline", fontWeight: "semibold" },
  baseStyleIcon$4 = {
    marginEnd: 1,
    w: "3.5",
    h: "3.5",
    verticalAlign: "middle",
  },
  baseStyle$o = definePartsStyle$e({
    container: {},
    label: baseStyleLabel$1,
    helpText: baseStyleHelpText,
    number: baseStyleNumber,
    icon: baseStyleIcon$4,
  }),
  sizes$9 = {
    md: definePartsStyle$e({
      label: { fontSize: "sm" },
      helpText: { fontSize: "sm" },
      number: { fontSize: "2xl" },
    }),
  },
  statTheme = defineMultiStyleConfig$e({
    baseStyle: baseStyle$o,
    sizes: sizes$9,
    defaultProps: { size: "md" },
  }),
  $bg$8 = cssVar$1("kbd-bg"),
  baseStyle$n = {
    [$bg$8.variable]: "colors.gray.100",
    _dark: { [$bg$8.variable]: "colors.whiteAlpha.100" },
    bg: $bg$8.reference,
    borderRadius: "md",
    borderWidth: "1px",
    borderBottomWidth: "3px",
    fontSize: "0.8em",
    fontWeight: "bold",
    lineHeight: "normal",
    px: "0.4em",
    whiteSpace: "nowrap",
  },
  kbdTheme = { baseStyle: baseStyle$n },
  baseStyle$m = {
    transitionProperty: "common",
    transitionDuration: "fast",
    transitionTimingFunction: "ease-out",
    cursor: "pointer",
    textDecoration: "none",
    outline: "none",
    color: "inherit",
    _hover: { textDecoration: "underline" },
    _focusVisible: { boxShadow: "outline" },
  },
  linkTheme = { baseStyle: baseStyle$m },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$d,
    definePartsStyle: definePartsStyle$d,
  } = createMultiStyleConfigHelpers(listAnatomy.keys),
  baseStyleIcon$3 = {
    marginEnd: "2",
    display: "inline",
    verticalAlign: "text-bottom",
  },
  baseStyle$l = definePartsStyle$d({ icon: baseStyleIcon$3 }),
  listTheme = defineMultiStyleConfig$d({ baseStyle: baseStyle$l }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$c,
    definePartsStyle: definePartsStyle$c,
  } = createMultiStyleConfigHelpers(menuAnatomy.keys),
  $bg$7 = cssVar$1("menu-bg"),
  $shadow$2 = cssVar$1("menu-shadow"),
  baseStyleList = {
    [$bg$7.variable]: "#fff",
    [$shadow$2.variable]: "shadows.sm",
    _dark: {
      [$bg$7.variable]: "colors.gray.700",
      [$shadow$2.variable]: "shadows.dark-lg",
    },
    color: "inherit",
    minW: "3xs",
    py: "2",
    zIndex: 1,
    borderRadius: "md",
    borderWidth: "1px",
    bg: $bg$7.reference,
    boxShadow: $shadow$2.reference,
  },
  baseStyleItem = {
    py: "1.5",
    px: "3",
    transitionProperty: "background",
    transitionDuration: "ultra-fast",
    transitionTimingFunction: "ease-in",
    _focus: {
      [$bg$7.variable]: "colors.gray.100",
      _dark: { [$bg$7.variable]: "colors.whiteAlpha.100" },
    },
    _active: {
      [$bg$7.variable]: "colors.gray.200",
      _dark: { [$bg$7.variable]: "colors.whiteAlpha.200" },
    },
    _expanded: {
      [$bg$7.variable]: "colors.gray.100",
      _dark: { [$bg$7.variable]: "colors.whiteAlpha.100" },
    },
    _disabled: { opacity: 0.4, cursor: "not-allowed" },
    bg: $bg$7.reference,
  },
  baseStyleGroupTitle = {
    mx: 4,
    my: 2,
    fontWeight: "semibold",
    fontSize: "sm",
  },
  baseStyleIcon$2 = {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0,
  },
  baseStyleCommand = { opacity: 0.6 },
  baseStyleDivider = {
    border: 0,
    borderBottom: "1px solid",
    borderColor: "inherit",
    my: "2",
    opacity: 0.6,
  },
  baseStyleButton$1 = {
    transitionProperty: "common",
    transitionDuration: "normal",
  },
  baseStyle$k = definePartsStyle$c({
    button: baseStyleButton$1,
    list: baseStyleList,
    item: baseStyleItem,
    groupTitle: baseStyleGroupTitle,
    icon: baseStyleIcon$2,
    command: baseStyleCommand,
    divider: baseStyleDivider,
  }),
  menuTheme = defineMultiStyleConfig$c({ baseStyle: baseStyle$k }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$b,
    definePartsStyle: definePartsStyle$b,
  } = createMultiStyleConfigHelpers(modalAnatomy.keys),
  $bg$6 = cssVar$1("modal-bg"),
  $shadow$1 = cssVar$1("modal-shadow"),
  baseStyleOverlay$1 = { bg: "blackAlpha.600", zIndex: "modal" },
  baseStyleDialogContainer$1 = (a) => {
    const { isCentered: o, scrollBehavior: s } = a;
    return {
      display: "flex",
      zIndex: "modal",
      justifyContent: "center",
      alignItems: o ? "center" : "flex-start",
      overflow: s === "inside" ? "hidden" : "auto",
      overscrollBehaviorY: "none",
    };
  },
  baseStyleDialog$1 = (a) => {
    const { isCentered: o, scrollBehavior: s } = a;
    return {
      borderRadius: "md",
      color: "inherit",
      my: o ? "auto" : "16",
      mx: o ? "auto" : void 0,
      zIndex: "modal",
      maxH: s === "inside" ? "calc(100% - 7.5rem)" : void 0,
      [$bg$6.variable]: "colors.white",
      [$shadow$1.variable]: "shadows.lg",
      _dark: {
        [$bg$6.variable]: "colors.gray.700",
        [$shadow$1.variable]: "shadows.dark-lg",
      },
      bg: $bg$6.reference,
      boxShadow: $shadow$1.reference,
    };
  },
  baseStyleHeader$2 = {
    px: "6",
    py: "4",
    fontSize: "xl",
    fontWeight: "semibold",
  },
  baseStyleCloseButton$2 = { position: "absolute", top: "2", insetEnd: "3" },
  baseStyleBody$2 = (a) => {
    const { scrollBehavior: o } = a;
    return {
      px: "6",
      py: "2",
      flex: "1",
      overflow: o === "inside" ? "auto" : void 0,
    };
  },
  baseStyleFooter$2 = { px: "6", py: "4" },
  baseStyle$j = definePartsStyle$b((a) => ({
    overlay: baseStyleOverlay$1,
    dialogContainer: runIfFn$1(baseStyleDialogContainer$1, a),
    dialog: runIfFn$1(baseStyleDialog$1, a),
    header: baseStyleHeader$2,
    closeButton: baseStyleCloseButton$2,
    body: runIfFn$1(baseStyleBody$2, a),
    footer: baseStyleFooter$2,
  }));
function getSize$3(a) {
  return definePartsStyle$b(
    a === "full"
      ? {
          dialog: { maxW: "100vw", minH: "$100vh", my: "0", borderRadius: "0" },
        }
      : { dialog: { maxW: a } }
  );
}
var sizes$8 = {
    xs: getSize$3("xs"),
    sm: getSize$3("sm"),
    md: getSize$3("md"),
    lg: getSize$3("lg"),
    xl: getSize$3("xl"),
    "2xl": getSize$3("2xl"),
    "3xl": getSize$3("3xl"),
    "4xl": getSize$3("4xl"),
    "5xl": getSize$3("5xl"),
    "6xl": getSize$3("6xl"),
    full: getSize$3("full"),
  },
  modalTheme = defineMultiStyleConfig$b({
    baseStyle: baseStyle$j,
    sizes: sizes$8,
    defaultProps: { size: "md" },
  }),
  {
    defineMultiStyleConfig: defineMultiStyleConfig$a,
    definePartsStyle: definePartsStyle$a,
  } = createMultiStyleConfigHelpers(numberInputAnatomy.keys),
  $stepperWidth = cssVar("number-input-stepper-width"),
  $inputPadding = cssVar("number-input-input-padding"),
  inputPaddingValue = calc($stepperWidth).add("0.5rem").toString(),
  $bg$5 = cssVar("number-input-bg"),
  $fg$3 = cssVar("number-input-color"),
  $border$2 = cssVar("number-input-border-color"),
  baseStyleRoot = {
    [$stepperWidth.variable]: "sizes.6",
    [$inputPadding.variable]: inputPaddingValue,
  },
  baseStyleField = (a) => {
    var o, s;
    return (s =
      (o = runIfFn$1(inputTheme.baseStyle, a)) == null ? void 0 : o.field) !=
      null
      ? s
      : {};
  },
  baseStyleStepperGroup = { width: $stepperWidth.reference },
  baseStyleStepper = {
    borderStart: "1px solid",
    borderStartColor: $border$2.reference,
    color: $fg$3.reference,
    bg: $bg$5.reference,
    [$fg$3.variable]: "colors.chakra-body-text",
    [$border$2.variable]: "colors.chakra-border-color",
    _dark: {
      [$fg$3.variable]: "colors.whiteAlpha.800",
      [$border$2.variable]: "colors.whiteAlpha.300",
    },
    _active: {
      [$bg$5.variable]: "colors.gray.200",
      _dark: { [$bg$5.variable]: "colors.whiteAlpha.300" },
    },
    _disabled: { opacity: 0.4, cursor: "not-allowed" },
  },
  baseStyle$i = definePartsStyle$a((a) => {
    var o;
    return {
      root: baseStyleRoot,
      field: (o = runIfFn$1(baseStyleField, a)) != null ? o : {},
      stepperGroup: baseStyleStepperGroup,
      stepper: baseStyleStepper,
    };
  });
function getSize$2(a) {
  var o, s, _;
  const $ = (o = inputTheme.sizes) == null ? void 0 : o[a],
    et = { lg: "md", md: "md", sm: "sm", xs: "sm" },
    tt = (_ = (s = $.field) == null ? void 0 : s.fontSize) != null ? _ : "md",
    rt = typography_default.fontSizes[tt];
  return definePartsStyle$a({
    field: {
      ...$.field,
      paddingInlineEnd: $inputPadding.reference,
      verticalAlign: "top",
    },
    stepper: {
      fontSize: calc(rt).multiply(0.75).toString(),
      _first: { borderTopEndRadius: et[a] },
      _last: { borderBottomEndRadius: et[a], mt: "-1px", borderTopWidth: 1 },
    },
  });
}
var sizes$7 = {
    xs: getSize$2("xs"),
    sm: getSize$2("sm"),
    md: getSize$2("md"),
    lg: getSize$2("lg"),
  },
  numberInputTheme = defineMultiStyleConfig$a({
    baseStyle: baseStyle$i,
    sizes: sizes$7,
    variants: inputTheme.variants,
    defaultProps: inputTheme.defaultProps,
  }),
  _a$2,
  baseStyle$h = {
    ...((_a$2 = inputTheme.baseStyle) == null ? void 0 : _a$2.field),
    textAlign: "center",
  },
  sizes$6 = {
    lg: { fontSize: "lg", w: 12, h: 12, borderRadius: "md" },
    md: { fontSize: "md", w: 10, h: 10, borderRadius: "md" },
    sm: { fontSize: "sm", w: 8, h: 8, borderRadius: "sm" },
    xs: { fontSize: "xs", w: 6, h: 6, borderRadius: "sm" },
  },
  _a2,
  _b,
  variants$6 = {
    outline: (a) => {
      var o, s, _;
      return (_ =
        (s = runIfFn$1(
          (o = inputTheme.variants) == null ? void 0 : o.outline,
          a
        )) == null
          ? void 0
          : s.field) != null
        ? _
        : {};
    },
    flushed: (a) => {
      var o, s, _;
      return (_ =
        (s = runIfFn$1(
          (o = inputTheme.variants) == null ? void 0 : o.flushed,
          a
        )) == null
          ? void 0
          : s.field) != null
        ? _
        : {};
    },
    filled: (a) => {
      var o, s, _;
      return (_ =
        (s = runIfFn$1(
          (o = inputTheme.variants) == null ? void 0 : o.filled,
          a
        )) == null
          ? void 0
          : s.field) != null
        ? _
        : {};
    },
    unstyled:
      (_b =
        (_a2 = inputTheme.variants) == null ? void 0 : _a2.unstyled.field) !=
      null
        ? _b
        : {},
  },
  pinInputTheme = {
    baseStyle: baseStyle$h,
    sizes: sizes$6,
    variants: variants$6,
    defaultProps: inputTheme.defaultProps,
  },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$9,
    definePartsStyle: definePartsStyle$9,
  } = createMultiStyleConfigHelpers(popoverAnatomy.keys),
  $popperBg = cssVar("popper-bg"),
  $arrowBg = cssVar("popper-arrow-bg"),
  $arrowShadowColor = cssVar("popper-arrow-shadow-color"),
  baseStylePopper = { zIndex: 10 },
  baseStyleContent = {
    [$popperBg.variable]: "colors.white",
    bg: $popperBg.reference,
    [$arrowBg.variable]: $popperBg.reference,
    [$arrowShadowColor.variable]: "colors.gray.200",
    _dark: {
      [$popperBg.variable]: "colors.gray.700",
      [$arrowShadowColor.variable]: "colors.whiteAlpha.300",
    },
    width: "xs",
    border: "1px solid",
    borderColor: "inherit",
    borderRadius: "md",
    boxShadow: "sm",
    zIndex: "inherit",
    _focusVisible: { outline: 0, boxShadow: "outline" },
  },
  baseStyleHeader$1 = { px: 3, py: 2, borderBottomWidth: "1px" },
  baseStyleBody$1 = { px: 3, py: 2 },
  baseStyleFooter$1 = { px: 3, py: 2, borderTopWidth: "1px" },
  baseStyleCloseButton$1 = {
    position: "absolute",
    borderRadius: "md",
    top: 1,
    insetEnd: 2,
    padding: 2,
  },
  baseStyle$g = definePartsStyle$9({
    popper: baseStylePopper,
    content: baseStyleContent,
    header: baseStyleHeader$1,
    body: baseStyleBody$1,
    footer: baseStyleFooter$1,
    closeButton: baseStyleCloseButton$1,
  }),
  popoverTheme = defineMultiStyleConfig$9({ baseStyle: baseStyle$g }),
  {
    definePartsStyle: definePartsStyle$8,
    defineMultiStyleConfig: defineMultiStyleConfig$8,
  } = createMultiStyleConfigHelpers(drawerAnatomy.keys),
  $bg$4 = cssVar$1("drawer-bg"),
  $bs = cssVar$1("drawer-box-shadow");
function getSize$1(a) {
  return definePartsStyle$8(
    a === "full"
      ? { dialog: { maxW: "100vw", h: "100vh" } }
      : { dialog: { maxW: a } }
  );
}
var baseStyleOverlay = { bg: "blackAlpha.600", zIndex: "overlay" },
  baseStyleDialogContainer = {
    display: "flex",
    zIndex: "modal",
    justifyContent: "center",
  },
  baseStyleDialog = (a) => {
    const { isFullHeight: o } = a;
    return {
      ...(o && { height: "100vh" }),
      zIndex: "modal",
      maxH: "100vh",
      color: "inherit",
      [$bg$4.variable]: "colors.white",
      [$bs.variable]: "shadows.lg",
      _dark: {
        [$bg$4.variable]: "colors.gray.700",
        [$bs.variable]: "shadows.dark-lg",
      },
      bg: $bg$4.reference,
      boxShadow: $bs.reference,
    };
  },
  baseStyleHeader = {
    px: "6",
    py: "4",
    fontSize: "xl",
    fontWeight: "semibold",
  },
  baseStyleCloseButton = { position: "absolute", top: "2", insetEnd: "3" },
  baseStyleBody = { px: "6", py: "2", flex: "1", overflow: "auto" },
  baseStyleFooter = { px: "6", py: "4" },
  baseStyle$f = definePartsStyle$8((a) => ({
    overlay: baseStyleOverlay,
    dialogContainer: baseStyleDialogContainer,
    dialog: runIfFn$1(baseStyleDialog, a),
    header: baseStyleHeader,
    closeButton: baseStyleCloseButton,
    body: baseStyleBody,
    footer: baseStyleFooter,
  })),
  sizes$5 = {
    xs: getSize$1("xs"),
    sm: getSize$1("md"),
    md: getSize$1("lg"),
    lg: getSize$1("2xl"),
    xl: getSize$1("4xl"),
    full: getSize$1("full"),
  },
  drawerTheme = defineMultiStyleConfig$8({
    baseStyle: baseStyle$f,
    sizes: sizes$5,
    defaultProps: { size: "xs" },
  }),
  {
    definePartsStyle: definePartsStyle$7,
    defineMultiStyleConfig: defineMultiStyleConfig$7,
  } = createMultiStyleConfigHelpers(editableAnatomy.keys),
  baseStylePreview = {
    borderRadius: "md",
    py: "1",
    transitionProperty: "common",
    transitionDuration: "normal",
  },
  baseStyleInput = {
    borderRadius: "md",
    py: "1",
    transitionProperty: "common",
    transitionDuration: "normal",
    width: "full",
    _focusVisible: { boxShadow: "outline" },
    _placeholder: { opacity: 0.6 },
  },
  baseStyleTextarea = {
    borderRadius: "md",
    py: "1",
    transitionProperty: "common",
    transitionDuration: "normal",
    width: "full",
    _focusVisible: { boxShadow: "outline" },
    _placeholder: { opacity: 0.6 },
  },
  baseStyle$e = definePartsStyle$7({
    preview: baseStylePreview,
    input: baseStyleInput,
    textarea: baseStyleTextarea,
  }),
  editableTheme = defineMultiStyleConfig$7({ baseStyle: baseStyle$e }),
  {
    definePartsStyle: definePartsStyle$6,
    defineMultiStyleConfig: defineMultiStyleConfig$6,
  } = createMultiStyleConfigHelpers(formAnatomy.keys),
  $fg$2 = cssVar$1("form-control-color"),
  baseStyleRequiredIndicator = {
    marginStart: "1",
    [$fg$2.variable]: "colors.red.500",
    _dark: { [$fg$2.variable]: "colors.red.300" },
    color: $fg$2.reference,
  },
  baseStyleHelperText = {
    mt: "2",
    [$fg$2.variable]: "colors.gray.600",
    _dark: { [$fg$2.variable]: "colors.whiteAlpha.600" },
    color: $fg$2.reference,
    lineHeight: "normal",
    fontSize: "sm",
  },
  baseStyle$d = definePartsStyle$6({
    container: { width: "100%", position: "relative" },
    requiredIndicator: baseStyleRequiredIndicator,
    helperText: baseStyleHelperText,
  }),
  formTheme = defineMultiStyleConfig$6({ baseStyle: baseStyle$d }),
  {
    definePartsStyle: definePartsStyle$5,
    defineMultiStyleConfig: defineMultiStyleConfig$5,
  } = createMultiStyleConfigHelpers(formErrorAnatomy.keys),
  $fg$1 = cssVar$1("form-error-color"),
  baseStyleText = {
    [$fg$1.variable]: "colors.red.500",
    _dark: { [$fg$1.variable]: "colors.red.300" },
    color: $fg$1.reference,
    mt: "2",
    fontSize: "sm",
    lineHeight: "normal",
  },
  baseStyleIcon$1 = {
    marginEnd: "0.5em",
    [$fg$1.variable]: "colors.red.500",
    _dark: { [$fg$1.variable]: "colors.red.300" },
    color: $fg$1.reference,
  },
  baseStyle$c = definePartsStyle$5({
    text: baseStyleText,
    icon: baseStyleIcon$1,
  }),
  formErrorTheme = defineMultiStyleConfig$5({ baseStyle: baseStyle$c }),
  baseStyle$b = {
    fontSize: "md",
    marginEnd: "3",
    mb: "2",
    fontWeight: "medium",
    transitionProperty: "common",
    transitionDuration: "normal",
    opacity: 1,
    _disabled: { opacity: 0.4 },
  },
  formLabelTheme = { baseStyle: baseStyle$b },
  baseStyle$a = { fontFamily: "heading", fontWeight: "bold" },
  sizes$4 = {
    "4xl": { fontSize: ["6xl", null, "7xl"], lineHeight: 1 },
    "3xl": { fontSize: ["5xl", null, "6xl"], lineHeight: 1 },
    "2xl": { fontSize: ["4xl", null, "5xl"], lineHeight: [1.2, null, 1] },
    xl: { fontSize: ["3xl", null, "4xl"], lineHeight: [1.33, null, 1.2] },
    lg: { fontSize: ["2xl", null, "3xl"], lineHeight: [1.33, null, 1.2] },
    md: { fontSize: "xl", lineHeight: 1.2 },
    sm: { fontSize: "md", lineHeight: 1.2 },
    xs: { fontSize: "sm", lineHeight: 1.2 },
  },
  headingTheme = {
    baseStyle: baseStyle$a,
    sizes: sizes$4,
    defaultProps: { size: "xl" },
  },
  {
    defineMultiStyleConfig: defineMultiStyleConfig$4,
    definePartsStyle: definePartsStyle$4,
  } = createMultiStyleConfigHelpers(breadcrumbAnatomy.keys),
  $decor = cssVar$1("breadcrumb-link-decor"),
  baseStyleLink = {
    transitionProperty: "common",
    transitionDuration: "fast",
    transitionTimingFunction: "ease-out",
    outline: "none",
    color: "inherit",
    textDecoration: $decor.reference,
    [$decor.variable]: "none",
    "&:not([aria-current=page])": {
      cursor: "pointer",
      _hover: { [$decor.variable]: "underline" },
      _focusVisible: { boxShadow: "outline" },
    },
  },
  baseStyle$9 = definePartsStyle$4({ link: baseStyleLink }),
  breadcrumbTheme = defineMultiStyleConfig$4({ baseStyle: baseStyle$9 }),
  baseStyle$8 = {
    lineHeight: "1.2",
    borderRadius: "md",
    fontWeight: "semibold",
    transitionProperty: "common",
    transitionDuration: "normal",
    _focusVisible: { boxShadow: "outline" },
    _disabled: { opacity: 0.4, cursor: "not-allowed", boxShadow: "none" },
    _hover: { _disabled: { bg: "initial" } },
  },
  variantGhost = (a) => {
    const { colorScheme: o, theme: s } = a;
    if (o === "gray")
      return {
        color: mode("gray.800", "whiteAlpha.900")(a),
        _hover: { bg: mode("gray.100", "whiteAlpha.200")(a) },
        _active: { bg: mode("gray.200", "whiteAlpha.300")(a) },
      };
    const _ = transparentize(`${o}.200`, 0.12)(s),
      $ = transparentize(`${o}.200`, 0.24)(s);
    return {
      color: mode(`${o}.600`, `${o}.200`)(a),
      bg: "transparent",
      _hover: { bg: mode(`${o}.50`, _)(a) },
      _active: { bg: mode(`${o}.100`, $)(a) },
    };
  },
  variantOutline = (a) => {
    const { colorScheme: o } = a,
      s = mode("gray.200", "whiteAlpha.300")(a);
    return {
      border: "1px solid",
      borderColor: o === "gray" ? s : "currentColor",
      ".chakra-button__group[data-attached][data-orientation=horizontal] > &:not(:last-of-type)":
        { marginEnd: "-1px" },
      ".chakra-button__group[data-attached][data-orientation=vertical] > &:not(:last-of-type)":
        { marginBottom: "-1px" },
      ...runIfFn$1(variantGhost, a),
    };
  },
  accessibleColorMap = {
    yellow: {
      bg: "yellow.400",
      color: "black",
      hoverBg: "yellow.500",
      activeBg: "yellow.600",
    },
    cyan: {
      bg: "cyan.400",
      color: "black",
      hoverBg: "cyan.500",
      activeBg: "cyan.600",
    },
  },
  variantSolid$2 = (a) => {
    var o;
    const { colorScheme: s } = a;
    if (s === "gray") {
      const nt = mode("gray.100", "whiteAlpha.200")(a);
      return {
        bg: nt,
        color: mode("gray.800", "whiteAlpha.900")(a),
        _hover: {
          bg: mode("gray.200", "whiteAlpha.300")(a),
          _disabled: { bg: nt },
        },
        _active: { bg: mode("gray.300", "whiteAlpha.400")(a) },
      };
    }
    const {
        bg: _ = `${s}.500`,
        color: $ = "white",
        hoverBg: et = `${s}.600`,
        activeBg: tt = `${s}.700`,
      } = (o = accessibleColorMap[s]) != null ? o : {},
      rt = mode(_, `${s}.200`)(a);
    return {
      bg: rt,
      color: mode($, "gray.800")(a),
      _hover: { bg: mode(et, `${s}.300`)(a), _disabled: { bg: rt } },
      _active: { bg: mode(tt, `${s}.400`)(a) },
    };
  },
  variantLink = (a) => {
    const { colorScheme: o } = a;
    return {
      padding: 0,
      height: "auto",
      lineHeight: "normal",
      verticalAlign: "baseline",
      color: mode(`${o}.500`, `${o}.200`)(a),
      _hover: {
        textDecoration: "underline",
        _disabled: { textDecoration: "none" },
      },
      _active: { color: mode(`${o}.700`, `${o}.500`)(a) },
    };
  },
  variantUnstyled = {
    bg: "none",
    color: "inherit",
    display: "inline",
    lineHeight: "inherit",
    m: "0",
    p: "0",
  },
  variants$5 = {
    ghost: variantGhost,
    outline: variantOutline,
    solid: variantSolid$2,
    link: variantLink,
    unstyled: variantUnstyled,
  },
  sizes$3 = {
    lg: { h: "12", minW: "12", fontSize: "lg", px: "6" },
    md: { h: "10", minW: "10", fontSize: "md", px: "4" },
    sm: { h: "8", minW: "8", fontSize: "sm", px: "3" },
    xs: { h: "6", minW: "6", fontSize: "xs", px: "2" },
  },
  buttonTheme = {
    baseStyle: baseStyle$8,
    variants: variants$5,
    sizes: sizes$3,
    defaultProps: { variant: "solid", size: "md", colorScheme: "gray" },
  },
  {
    definePartsStyle: definePartsStyle$3,
    defineMultiStyleConfig: defineMultiStyleConfig$3,
  } = createMultiStyleConfigHelpers(cardAnatomy.keys),
  $bg$3 = cssVar$1("card-bg"),
  $padding = cssVar$1("card-padding"),
  $shadow = cssVar$1("card-shadow"),
  $radius = cssVar$1("card-radius"),
  $border$1 = cssVar$1("card-border-width", "0"),
  $borderColor = cssVar$1("card-border-color"),
  baseStyle$7 = definePartsStyle$3({
    container: {
      [$bg$3.variable]: "colors.chakra-body-bg",
      backgroundColor: $bg$3.reference,
      boxShadow: $shadow.reference,
      borderRadius: $radius.reference,
      color: "chakra-body-text",
      borderWidth: $border$1.reference,
      borderColor: $borderColor.reference,
    },
    body: { padding: $padding.reference, flex: "1 1 0%" },
    header: { padding: $padding.reference },
    footer: { padding: $padding.reference },
  }),
  sizes$2 = {
    sm: definePartsStyle$3({
      container: {
        [$radius.variable]: "radii.base",
        [$padding.variable]: "space.3",
      },
    }),
    md: definePartsStyle$3({
      container: {
        [$radius.variable]: "radii.md",
        [$padding.variable]: "space.5",
      },
    }),
    lg: definePartsStyle$3({
      container: {
        [$radius.variable]: "radii.xl",
        [$padding.variable]: "space.7",
      },
    }),
  },
  variants$4 = {
    elevated: definePartsStyle$3({
      container: {
        [$shadow.variable]: "shadows.base",
        _dark: { [$bg$3.variable]: "colors.gray.700" },
      },
    }),
    outline: definePartsStyle$3({
      container: {
        [$border$1.variable]: "1px",
        [$borderColor.variable]: "colors.chakra-border-color",
      },
    }),
    filled: definePartsStyle$3({
      container: { [$bg$3.variable]: "colors.chakra-subtle-bg" },
    }),
    unstyled: {
      body: { [$padding.variable]: 0 },
      header: { [$padding.variable]: 0 },
      footer: { [$padding.variable]: 0 },
    },
  },
  cardTheme = defineMultiStyleConfig$3({
    baseStyle: baseStyle$7,
    variants: variants$4,
    sizes: sizes$2,
    defaultProps: { variant: "elevated", size: "md" },
  }),
  $size$1 = cssVar("close-button-size"),
  $bg$2 = cssVar("close-button-bg"),
  baseStyle$6 = {
    w: [$size$1.reference],
    h: [$size$1.reference],
    borderRadius: "md",
    transitionProperty: "common",
    transitionDuration: "normal",
    _disabled: { opacity: 0.4, cursor: "not-allowed", boxShadow: "none" },
    _hover: {
      [$bg$2.variable]: "colors.blackAlpha.100",
      _dark: { [$bg$2.variable]: "colors.whiteAlpha.100" },
    },
    _active: {
      [$bg$2.variable]: "colors.blackAlpha.200",
      _dark: { [$bg$2.variable]: "colors.whiteAlpha.200" },
    },
    _focusVisible: { boxShadow: "outline" },
    bg: $bg$2.reference,
  },
  sizes$1 = {
    lg: { [$size$1.variable]: "sizes.10", fontSize: "md" },
    md: { [$size$1.variable]: "sizes.8", fontSize: "xs" },
    sm: { [$size$1.variable]: "sizes.6", fontSize: "2xs" },
  },
  closeButtonTheme = {
    baseStyle: baseStyle$6,
    sizes: sizes$1,
    defaultProps: { size: "md" },
  },
  { variants: variants$3, defaultProps } = badgeTheme,
  baseStyle$5 = {
    fontFamily: "mono",
    fontSize: "sm",
    px: "0.2em",
    borderRadius: "sm",
    bg: vars.bg.reference,
    color: vars.color.reference,
    boxShadow: vars.shadow.reference,
  },
  codeTheme = { baseStyle: baseStyle$5, variants: variants$3, defaultProps },
  baseStyle$4 = { w: "100%", mx: "auto", maxW: "prose", px: "4" },
  containerTheme = { baseStyle: baseStyle$4 },
  baseStyle$3 = { opacity: 0.6, borderColor: "inherit" },
  variantSolid$1 = { borderStyle: "solid" },
  variantDashed = { borderStyle: "dashed" },
  variants$2 = { solid: variantSolid$1, dashed: variantDashed },
  dividerTheme = {
    baseStyle: baseStyle$3,
    variants: variants$2,
    defaultProps: { variant: "solid" },
  },
  {
    definePartsStyle: definePartsStyle$2,
    defineMultiStyleConfig: defineMultiStyleConfig$2,
  } = createMultiStyleConfigHelpers(accordionAnatomy.keys),
  baseStyleContainer$1 = {
    borderTopWidth: "1px",
    borderColor: "inherit",
    _last: { borderBottomWidth: "1px" },
  },
  baseStyleButton = {
    transitionProperty: "common",
    transitionDuration: "normal",
    fontSize: "md",
    _focusVisible: { boxShadow: "outline" },
    _hover: { bg: "blackAlpha.50" },
    _disabled: { opacity: 0.4, cursor: "not-allowed" },
    px: "4",
    py: "2",
  },
  baseStylePanel = { pt: "2", px: "4", pb: "5" },
  baseStyleIcon = { fontSize: "1.25em" },
  baseStyle$2 = definePartsStyle$2({
    container: baseStyleContainer$1,
    button: baseStyleButton,
    panel: baseStylePanel,
    icon: baseStyleIcon,
  }),
  accordionTheme = defineMultiStyleConfig$2({ baseStyle: baseStyle$2 }),
  {
    definePartsStyle: definePartsStyle$1,
    defineMultiStyleConfig: defineMultiStyleConfig$1,
  } = createMultiStyleConfigHelpers(alertAnatomy.keys),
  $fg = cssVar$1("alert-fg"),
  $bg$1 = cssVar$1("alert-bg"),
  baseStyle$1 = definePartsStyle$1({
    container: { bg: $bg$1.reference, px: "4", py: "3" },
    title: { fontWeight: "bold", lineHeight: "6", marginEnd: "2" },
    description: { lineHeight: "6" },
    icon: {
      color: $fg.reference,
      flexShrink: 0,
      marginEnd: "3",
      w: "5",
      h: "6",
    },
    spinner: {
      color: $fg.reference,
      flexShrink: 0,
      marginEnd: "3",
      w: "5",
      h: "5",
    },
  });
function getBg(a) {
  const { theme: o, colorScheme: s } = a,
    _ = transparentize(`${s}.200`, 0.16)(o);
  return { light: `colors.${s}.100`, dark: _ };
}
var variantSubtle = definePartsStyle$1((a) => {
    const { colorScheme: o } = a,
      s = getBg(a);
    return {
      container: {
        [$fg.variable]: `colors.${o}.500`,
        [$bg$1.variable]: s.light,
        _dark: { [$fg.variable]: `colors.${o}.200`, [$bg$1.variable]: s.dark },
      },
    };
  }),
  variantLeftAccent = definePartsStyle$1((a) => {
    const { colorScheme: o } = a,
      s = getBg(a);
    return {
      container: {
        [$fg.variable]: `colors.${o}.500`,
        [$bg$1.variable]: s.light,
        _dark: { [$fg.variable]: `colors.${o}.200`, [$bg$1.variable]: s.dark },
        paddingStart: "3",
        borderStartWidth: "4px",
        borderStartColor: $fg.reference,
      },
    };
  }),
  variantTopAccent = definePartsStyle$1((a) => {
    const { colorScheme: o } = a,
      s = getBg(a);
    return {
      container: {
        [$fg.variable]: `colors.${o}.500`,
        [$bg$1.variable]: s.light,
        _dark: { [$fg.variable]: `colors.${o}.200`, [$bg$1.variable]: s.dark },
        pt: "2",
        borderTopWidth: "4px",
        borderTopColor: $fg.reference,
      },
    };
  }),
  variantSolid = definePartsStyle$1((a) => {
    const { colorScheme: o } = a;
    return {
      container: {
        [$fg.variable]: "colors.white",
        [$bg$1.variable]: `colors.${o}.500`,
        _dark: {
          [$fg.variable]: "colors.gray.900",
          [$bg$1.variable]: `colors.${o}.200`,
        },
        color: $fg.reference,
      },
    };
  }),
  variants$1 = {
    subtle: variantSubtle,
    "left-accent": variantLeftAccent,
    "top-accent": variantTopAccent,
    solid: variantSolid,
  },
  alertTheme = defineMultiStyleConfig$1({
    baseStyle: baseStyle$1,
    variants: variants$1,
    defaultProps: { variant: "subtle", colorScheme: "blue" },
  }),
  { definePartsStyle, defineMultiStyleConfig } = createMultiStyleConfigHelpers(
    avatarAnatomy.keys
  ),
  $border = cssVar$1("avatar-border-color"),
  $bg = cssVar$1("avatar-bg"),
  $fs = cssVar$1("avatar-font-size"),
  $size = cssVar$1("avatar-size"),
  baseStyleBadge = {
    borderRadius: "full",
    border: "0.2em solid",
    borderColor: $border.reference,
    [$border.variable]: "white",
    _dark: { [$border.variable]: "colors.gray.800" },
  },
  baseStyleExcessLabel = {
    bg: $bg.reference,
    fontSize: $fs.reference,
    width: $size.reference,
    height: $size.reference,
    lineHeight: "1",
    [$bg.variable]: "colors.gray.200",
    _dark: { [$bg.variable]: "colors.whiteAlpha.400" },
  },
  baseStyleContainer = (a) => {
    const { name: o, theme: s } = a,
      _ = o ? randomColor({ string: o }) : "colors.gray.400",
      $ = isDark(_)(s);
    let et = "white";
    return (
      $ || (et = "gray.800"),
      {
        bg: $bg.reference,
        fontSize: $fs.reference,
        color: et,
        borderColor: $border.reference,
        verticalAlign: "top",
        width: $size.reference,
        height: $size.reference,
        "&:not([data-loaded])": { [$bg.variable]: _ },
        [$border.variable]: "colors.white",
        _dark: { [$border.variable]: "colors.gray.800" },
      }
    );
  },
  baseStyleLabel = { fontSize: $fs.reference, lineHeight: "1" },
  baseStyle = definePartsStyle((a) => ({
    badge: runIfFn$1(baseStyleBadge, a),
    excessLabel: runIfFn$1(baseStyleExcessLabel, a),
    container: runIfFn$1(baseStyleContainer, a),
    label: baseStyleLabel,
  }));
function getSize(a) {
  const o = a !== "100%" ? sizes_default[a] : void 0;
  return definePartsStyle({
    container: {
      [$size.variable]: o ?? a,
      [$fs.variable]: `calc(${o ?? a} / 2.5)`,
    },
    excessLabel: {
      [$size.variable]: o ?? a,
      [$fs.variable]: `calc(${o ?? a} / 2.5)`,
    },
  });
}
var sizes = {
    "2xs": getSize(4),
    xs: getSize(6),
    sm: getSize(8),
    md: getSize(12),
    lg: getSize(16),
    xl: getSize(24),
    "2xl": getSize(32),
    full: getSize("100%"),
  },
  avatarTheme = defineMultiStyleConfig({
    baseStyle,
    sizes,
    defaultProps: { size: "md" },
  }),
  components = {
    Accordion: accordionTheme,
    Alert: alertTheme,
    Avatar: avatarTheme,
    Badge: badgeTheme,
    Breadcrumb: breadcrumbTheme,
    Button: buttonTheme,
    Checkbox: checkboxTheme,
    CloseButton: closeButtonTheme,
    Code: codeTheme,
    Container: containerTheme,
    Divider: dividerTheme,
    Drawer: drawerTheme,
    Editable: editableTheme,
    Form: formTheme,
    FormError: formErrorTheme,
    FormLabel: formLabelTheme,
    Heading: headingTheme,
    Input: inputTheme,
    Kbd: kbdTheme,
    Link: linkTheme,
    List: listTheme,
    Menu: menuTheme,
    Modal: modalTheme,
    NumberInput: numberInputTheme,
    PinInput: pinInputTheme,
    Popover: popoverTheme,
    Progress: progressTheme,
    Radio: radioTheme,
    Select: selectTheme,
    Skeleton: skeletonTheme,
    SkipLink: skipLinkTheme,
    Slider: sliderTheme,
    Spinner: spinnerTheme,
    Stat: statTheme,
    Switch: switchTheme,
    Table: tableTheme,
    Tabs: tabsTheme,
    Tag: tagTheme,
    Textarea: textareaTheme,
    Tooltip: tooltipTheme,
    Card: cardTheme,
    Stepper: stepperTheme,
  },
  semanticTokens = {
    colors: {
      "chakra-body-text": { _light: "gray.800", _dark: "whiteAlpha.900" },
      "chakra-body-bg": { _light: "white", _dark: "gray.800" },
      "chakra-border-color": { _light: "gray.200", _dark: "whiteAlpha.300" },
      "chakra-inverse-text": { _light: "white", _dark: "gray.800" },
      "chakra-subtle-bg": { _light: "gray.100", _dark: "gray.700" },
      "chakra-subtle-text": { _light: "gray.600", _dark: "gray.400" },
      "chakra-placeholder-color": {
        _light: "gray.500",
        _dark: "whiteAlpha.400",
      },
    },
  },
  styles = {
    global: {
      body: {
        fontFamily: "body",
        color: "chakra-body-text",
        bg: "chakra-body-bg",
        transitionProperty: "background-color",
        transitionDuration: "normal",
        lineHeight: "base",
      },
      "*::placeholder": { color: "chakra-placeholder-color" },
      "*, *::before, &::after": { borderColor: "chakra-border-color" },
    },
  },
  direction = "ltr",
  config = {
    useSystemColorMode: !1,
    initialColorMode: "light",
    cssVarPrefix: "chakra",
  },
  theme = {
    semanticTokens,
    direction,
    ...foundations,
    components,
    styles,
    config,
  };
function canUseDOM() {
  return !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  );
}
var isBrowser$1 = canUseDOM();
function omit$2(a, o) {
  const s = {};
  return (
    Object.keys(a).forEach((_) => {
      o.includes(_) || (s[_] = a[_]);
    }),
    s
  );
}
function get(a, o, s, _) {
  const $ = typeof o == "string" ? o.split(".") : [o];
  for (_ = 0; _ < $.length && a; _ += 1) a = a[$[_]];
  return a === void 0 ? s : a;
}
var memoize = (a) => {
    const o = new WeakMap();
    return (_, $, et, tt) => {
      if (typeof _ > "u") return a(_, $, et);
      o.has(_) || o.set(_, new Map());
      const rt = o.get(_);
      if (rt.has($)) return rt.get($);
      const nt = a(_, $, et, tt);
      return rt.set($, nt), nt;
    };
  },
  memoizedGet = memoize(get);
function objectFilter(a, o) {
  const s = {};
  return (
    Object.keys(a).forEach((_) => {
      const $ = a[_];
      o($, _, a) && (s[_] = $);
    }),
    s
  );
}
var filterUndefined = (a) => objectFilter(a, (o) => o != null);
function isFunction(a) {
  return typeof a == "function";
}
function runIfFn(a, ...o) {
  return isFunction(a) ? a(...o) : a;
}
function callAllHandlers(...a) {
  return function (s) {
    a.some((_) => (_ == null || _(s), s == null ? void 0 : s.defaultPrevented));
  };
}
var hasElementType = typeof Element < "u",
  hasMap = typeof Map == "function",
  hasSet = typeof Set == "function",
  hasArrayBuffer = typeof ArrayBuffer == "function" && !!ArrayBuffer.isView;
function equal(a, o) {
  if (a === o) return !0;
  if (a && o && typeof a == "object" && typeof o == "object") {
    if (a.constructor !== o.constructor) return !1;
    var s, _, $;
    if (Array.isArray(a)) {
      if (((s = a.length), s != o.length)) return !1;
      for (_ = s; _-- !== 0; ) if (!equal(a[_], o[_])) return !1;
      return !0;
    }
    var et;
    if (hasMap && a instanceof Map && o instanceof Map) {
      if (a.size !== o.size) return !1;
      for (et = a.entries(); !(_ = et.next()).done; )
        if (!o.has(_.value[0])) return !1;
      for (et = a.entries(); !(_ = et.next()).done; )
        if (!equal(_.value[1], o.get(_.value[0]))) return !1;
      return !0;
    }
    if (hasSet && a instanceof Set && o instanceof Set) {
      if (a.size !== o.size) return !1;
      for (et = a.entries(); !(_ = et.next()).done; )
        if (!o.has(_.value[0])) return !1;
      return !0;
    }
    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(o)) {
      if (((s = a.length), s != o.length)) return !1;
      for (_ = s; _-- !== 0; ) if (a[_] !== o[_]) return !1;
      return !0;
    }
    if (a.constructor === RegExp)
      return a.source === o.source && a.flags === o.flags;
    if (
      a.valueOf !== Object.prototype.valueOf &&
      typeof a.valueOf == "function" &&
      typeof o.valueOf == "function"
    )
      return a.valueOf() === o.valueOf();
    if (
      a.toString !== Object.prototype.toString &&
      typeof a.toString == "function" &&
      typeof o.toString == "function"
    )
      return a.toString() === o.toString();
    if ((($ = Object.keys(a)), (s = $.length), s !== Object.keys(o).length))
      return !1;
    for (_ = s; _-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(o, $[_])) return !1;
    if (hasElementType && a instanceof Element) return !1;
    for (_ = s; _-- !== 0; )
      if (
        !(
          ($[_] === "_owner" || $[_] === "__v" || $[_] === "__o") &&
          a.$$typeof
        ) &&
        !equal(a[$[_]], o[$[_]])
      )
        return !1;
    return !0;
  }
  return a !== a && o !== o;
}
var reactFastCompare = function (o, s) {
  try {
    return equal(o, s);
  } catch (_) {
    if ((_.message || "").match(/stack|recursion/i))
      return console.warn("react-fast-compare cannot handle circular refs"), !1;
    throw _;
  }
};
const isEqual = getDefaultExportFromCjs(reactFastCompare);
function useStyleConfigImpl(a, o = {}) {
  var s;
  const { styleConfig: _, ...$ } = o,
    { theme: et, colorMode: tt } = useChakra(),
    rt = a ? memoizedGet(et, `components.${a}`) : void 0,
    nt = _ || rt,
    it = mergeWith(
      { theme: et, colorMode: tt },
      (s = nt == null ? void 0 : nt.defaultProps) != null ? s : {},
      filterUndefined(omit$2($, ["children"]))
    ),
    at = reactExports.useRef({});
  if (nt) {
    const ot = resolveStyleConfig(nt)(it);
    isEqual(at.current, ot) || (at.current = ot);
  }
  return at.current;
}
function useStyleConfig(a, o = {}) {
  return useStyleConfigImpl(a, o);
}
function useMultiStyleConfig(a, o = {}) {
  return useStyleConfigImpl(a, o);
}
var allPropNames = new Set([
    ...propNames,
    "textStyle",
    "layerStyle",
    "apply",
    "noOfLines",
    "focusBorderColor",
    "errorBorderColor",
    "as",
    "__css",
    "css",
    "sx",
  ]),
  validHTMLProps = new Set([
    "htmlWidth",
    "htmlHeight",
    "htmlSize",
    "htmlTranslate",
  ]);
function shouldForwardProp(a) {
  return validHTMLProps.has(a) || !allPropNames.has(a);
}
function assignAfter(a, ...o) {
  if (a == null)
    throw new TypeError("Cannot convert undefined or null to object");
  const s = { ...a };
  for (const _ of o)
    if (_ != null)
      for (const $ in _)
        Object.prototype.hasOwnProperty.call(_, $) &&
          ($ in s && delete s[$], (s[$] = _[$]));
  return s;
}
function compact(a) {
  const o = Object.assign({}, a);
  for (let s in o) o[s] === void 0 && delete o[s];
  return o;
}
var reactPropsRegex =
    /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
  isPropValid = memoize$2(function (a) {
    return (
      reactPropsRegex.test(a) ||
      (a.charCodeAt(0) === 111 &&
        a.charCodeAt(1) === 110 &&
        a.charCodeAt(2) < 91)
    );
  }),
  testOmitPropsOnStringTag = isPropValid,
  testOmitPropsOnComponent = function (o) {
    return o !== "theme";
  },
  getDefaultShouldForwardProp = function (o) {
    return typeof o == "string" && o.charCodeAt(0) > 96
      ? testOmitPropsOnStringTag
      : testOmitPropsOnComponent;
  },
  composeShouldForwardProps = function (o, s, _) {
    var $;
    if (s) {
      var et = s.shouldForwardProp;
      $ =
        o.__emotion_forwardProp && et
          ? function (tt) {
              return o.__emotion_forwardProp(tt) && et(tt);
            }
          : et;
    }
    return typeof $ != "function" && _ && ($ = o.__emotion_forwardProp), $;
  },
  Insertion = function (o) {
    var s = o.cache,
      _ = o.serialized,
      $ = o.isStringTag;
    return (
      registerStyles(s, _, $),
      useInsertionEffectAlwaysWithSyncFallback(function () {
        return insertStyles(s, _, $);
      }),
      null
    );
  },
  createStyled = function a(o, s) {
    var _ = o.__emotion_real === o,
      $ = (_ && o.__emotion_base) || o,
      et,
      tt;
    s !== void 0 && ((et = s.label), (tt = s.target));
    var rt = composeShouldForwardProps(o, s, _),
      nt = rt || getDefaultShouldForwardProp($),
      it = !nt("as");
    return function () {
      var at = arguments,
        st =
          _ && o.__emotion_styles !== void 0 ? o.__emotion_styles.slice(0) : [];
      if (
        (et !== void 0 && st.push("label:" + et + ";"),
        at[0] == null || at[0].raw === void 0)
      )
        st.push.apply(st, at);
      else {
        st.push(at[0][0]);
        for (var ot = at.length, dt = 1; dt < ot; dt++)
          st.push(at[dt], at[0][dt]);
      }
      var ht = withEmotionCache(function (ft, mt, ut) {
        var lt = (it && ft.as) || $,
          ct = "",
          pt = [],
          vt = ft;
        if (ft.theme == null) {
          vt = {};
          for (var xt in ft) vt[xt] = ft[xt];
          vt.theme = reactExports.useContext(ThemeContext);
        }
        typeof ft.className == "string"
          ? (ct = getRegisteredStyles(mt.registered, pt, ft.className))
          : ft.className != null && (ct = ft.className + " ");
        var bt = serializeStyles(st.concat(pt), mt.registered, vt);
        (ct += mt.key + "-" + bt.name), tt !== void 0 && (ct += " " + tt);
        var St = it && rt === void 0 ? getDefaultShouldForwardProp(lt) : nt,
          Pt = {};
        for (var Mt in ft) (it && Mt === "as") || (St(Mt) && (Pt[Mt] = ft[Mt]));
        return (
          (Pt.className = ct),
          (Pt.ref = ut),
          reactExports.createElement(
            reactExports.Fragment,
            null,
            reactExports.createElement(Insertion, {
              cache: mt,
              serialized: bt,
              isStringTag: typeof lt == "string",
            }),
            reactExports.createElement(lt, Pt)
          )
        );
      });
      return (
        (ht.displayName =
          et !== void 0
            ? et
            : "Styled(" +
              (typeof $ == "string"
                ? $
                : $.displayName || $.name || "Component") +
              ")"),
        (ht.defaultProps = o.defaultProps),
        (ht.__emotion_real = ht),
        (ht.__emotion_base = $),
        (ht.__emotion_styles = st),
        (ht.__emotion_forwardProp = rt),
        Object.defineProperty(ht, "toString", {
          value: function () {
            return "." + tt;
          },
        }),
        (ht.withComponent = function (ft, mt) {
          return a(
            ft,
            _extends$1({}, s, mt, {
              shouldForwardProp: composeShouldForwardProps(ht, mt, !0),
            })
          ).apply(void 0, st);
        }),
        ht
      );
    };
  },
  tags = [
    "a",
    "abbr",
    "address",
    "area",
    "article",
    "aside",
    "audio",
    "b",
    "base",
    "bdi",
    "bdo",
    "big",
    "blockquote",
    "body",
    "br",
    "button",
    "canvas",
    "caption",
    "cite",
    "code",
    "col",
    "colgroup",
    "data",
    "datalist",
    "dd",
    "del",
    "details",
    "dfn",
    "dialog",
    "div",
    "dl",
    "dt",
    "em",
    "embed",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hgroup",
    "hr",
    "html",
    "i",
    "iframe",
    "img",
    "input",
    "ins",
    "kbd",
    "keygen",
    "label",
    "legend",
    "li",
    "link",
    "main",
    "map",
    "mark",
    "marquee",
    "menu",
    "menuitem",
    "meta",
    "meter",
    "nav",
    "noscript",
    "object",
    "ol",
    "optgroup",
    "option",
    "output",
    "p",
    "param",
    "picture",
    "pre",
    "progress",
    "q",
    "rp",
    "rt",
    "ruby",
    "s",
    "samp",
    "script",
    "section",
    "select",
    "small",
    "source",
    "span",
    "strong",
    "style",
    "sub",
    "summary",
    "sup",
    "table",
    "tbody",
    "td",
    "textarea",
    "tfoot",
    "th",
    "thead",
    "time",
    "title",
    "tr",
    "track",
    "u",
    "ul",
    "var",
    "video",
    "wbr",
    "circle",
    "clipPath",
    "defs",
    "ellipse",
    "foreignObject",
    "g",
    "image",
    "line",
    "linearGradient",
    "mask",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "radialGradient",
    "rect",
    "stop",
    "svg",
    "text",
    "tspan",
  ],
  newStyled = createStyled.bind();
tags.forEach(function (a) {
  newStyled[a] = newStyled(a);
});
var _a$1,
  emotion_styled = (_a$1 = newStyled.default) != null ? _a$1 : newStyled,
  toCSSObject =
    ({ baseStyle: a }) =>
    (o) => {
      const { theme: s, css: _, __css: $, sx: et, ...tt } = o,
        rt = objectFilter(tt, (st, ot) => isStyleProp(ot)),
        nt = runIfFn(a, o),
        it = assignAfter({}, $, nt, filterUndefined(rt), et),
        at = css(it)(o.theme);
      return _ ? [at, _] : at;
    };
function styled(a, o) {
  const { baseStyle: s, ..._ } = o ?? {};
  _.shouldForwardProp || (_.shouldForwardProp = shouldForwardProp);
  const $ = toCSSObject({ baseStyle: s }),
    et = emotion_styled(a, _)($);
  return React.forwardRef(function (nt, it) {
    const { colorMode: at, forced: st } = useColorMode();
    return React.createElement(et, {
      ref: it,
      "data-theme": st ? at : void 0,
      ...nt,
    });
  });
}
function factory() {
  const a = new Map();
  return new Proxy(styled, {
    apply(o, s, _) {
      return styled(..._);
    },
    get(o, s) {
      return a.has(s) || a.set(s, styled(s)), a.get(s);
    },
  });
}
var chakra = factory();
function forwardRef(a) {
  return reactExports.forwardRef(a);
}
function createContext(a = {}) {
  const {
      strict: o = !0,
      errorMessage:
        s = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",
      name: _,
    } = a,
    $ = reactExports.createContext(void 0);
  $.displayName = _;
  function et() {
    var tt;
    const rt = reactExports.useContext($);
    if (!rt && o) {
      const nt = new Error(s);
      throw (
        ((nt.name = "ContextError"),
        (tt = Error.captureStackTrace) == null || tt.call(Error, nt, et),
        nt)
      );
    }
    return rt;
  }
  return [$.Provider, et, $];
}
function ThemeProvider(a) {
  const { cssVarsRoot: o, theme: s, children: _ } = a,
    $ = reactExports.useMemo(() => toCSSVar(s), [s]);
  return jsxRuntimeExports.jsxs(ThemeProvider$1, {
    theme: $,
    children: [jsxRuntimeExports.jsx(CSSVars, { root: o }), _],
  });
}
function CSSVars({ root: a = ":host, :root" }) {
  const o = [a, "[data-theme]"].join(",");
  return jsxRuntimeExports.jsx(Global, {
    styles: (s) => ({ [o]: s.__cssVars }),
  });
}
createContext({
  name: "StylesContext",
  errorMessage:
    "useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` ",
});
function GlobalStyle() {
  const { colorMode: a } = useColorMode();
  return jsxRuntimeExports.jsx(Global, {
    styles: (o) => {
      const s = memoizedGet(o, "styles.global"),
        _ = runIfFn(s, { theme: o, colorMode: a });
      return _ ? css(_)(o) : void 0;
    },
  });
}
var EnvironmentContext = reactExports.createContext({
  getDocument() {
    return document;
  },
  getWindow() {
    return window;
  },
});
EnvironmentContext.displayName = "EnvironmentContext";
function EnvironmentProvider(a) {
  const { children: o, environment: s, disabled: _ } = a,
    $ = reactExports.useRef(null),
    et = reactExports.useMemo(
      () =>
        s || {
          getDocument: () => {
            var rt, nt;
            return (nt =
              (rt = $.current) == null ? void 0 : rt.ownerDocument) != null
              ? nt
              : document;
          },
          getWindow: () => {
            var rt, nt;
            return (nt =
              (rt = $.current) == null
                ? void 0
                : rt.ownerDocument.defaultView) != null
              ? nt
              : window;
          },
        },
      [s]
    ),
    tt = !_ || !s;
  return jsxRuntimeExports.jsxs(EnvironmentContext.Provider, {
    value: et,
    children: [
      o,
      tt &&
        jsxRuntimeExports.jsx("span", {
          id: "__chakra_env",
          hidden: !0,
          ref: $,
        }),
    ],
  });
}
EnvironmentProvider.displayName = "EnvironmentProvider";
var ChakraProvider$1 = (a) => {
    const {
        children: o,
        colorModeManager: s,
        portalZIndex: _,
        resetScope: $,
        resetCSS: et = !0,
        theme: tt = {},
        environment: rt,
        cssVarsRoot: nt,
        disableEnvironment: it,
        disableGlobalStyle: at,
      } = a,
      st = jsxRuntimeExports.jsx(EnvironmentProvider, {
        environment: rt,
        disabled: it,
        children: o,
      });
    return jsxRuntimeExports.jsx(ThemeProvider, {
      theme: tt,
      cssVarsRoot: nt,
      children: jsxRuntimeExports.jsxs(ColorModeProvider, {
        colorModeManager: s,
        options: tt.config,
        children: [
          et
            ? jsxRuntimeExports.jsx(CSSReset, { scope: $ })
            : jsxRuntimeExports.jsx(CSSPolyfill, {}),
          !at && jsxRuntimeExports.jsx(GlobalStyle, {}),
          _
            ? jsxRuntimeExports.jsx(PortalManager, { zIndex: _, children: st })
            : st,
        ],
      }),
    });
  },
  findById = (a, o) => a.find((s) => s.id === o);
function findToast(a, o) {
  const s = getToastPosition(a, o),
    _ = s ? a[s].findIndex(($) => $.id === o) : -1;
  return { position: s, index: _ };
}
function getToastPosition(a, o) {
  for (const [s, _] of Object.entries(a)) if (findById(_, o)) return s;
}
function getToastStyle(a) {
  const o = a.includes("right"),
    s = a.includes("left");
  let _ = "center";
  return (
    o && (_ = "flex-end"),
    s && (_ = "flex-start"),
    { display: "flex", flexDirection: "column", alignItems: _ }
  );
}
function getToastListStyle(a) {
  const s = a === "top" || a === "bottom" ? "0 auto" : void 0,
    _ = a.includes("top") ? "env(safe-area-inset-top, 0px)" : void 0,
    $ = a.includes("bottom") ? "env(safe-area-inset-bottom, 0px)" : void 0,
    et = a.includes("left") ? void 0 : "env(safe-area-inset-right, 0px)",
    tt = a.includes("right") ? void 0 : "env(safe-area-inset-left, 0px)";
  return {
    position: "fixed",
    zIndex: "var(--toast-z-index, 5500)",
    pointerEvents: "none",
    display: "flex",
    flexDirection: "column",
    margin: s,
    top: _,
    bottom: $,
    right: et,
    left: tt,
  };
}
function useCallbackRef$2(a, o = []) {
  const s = reactExports.useRef(a);
  return (
    reactExports.useEffect(() => {
      s.current = a;
    }),
    reactExports.useCallback((..._) => {
      var $;
      return ($ = s.current) == null ? void 0 : $.call(s, ..._);
    }, o)
  );
}
function useTimeout(a, o) {
  const s = useCallbackRef$2(a);
  reactExports.useEffect(() => {
    if (o == null) return;
    let _ = null;
    return (
      (_ = window.setTimeout(() => {
        s();
      }, o)),
      () => {
        _ && window.clearTimeout(_);
      }
    );
  }, [o, s]);
}
function useUpdateEffect(a, o) {
  const s = reactExports.useRef(!1),
    _ = reactExports.useRef(!1);
  reactExports.useEffect(() => {
    if (s.current && _.current) return a();
    _.current = !0;
  }, o),
    reactExports.useEffect(
      () => (
        (s.current = !0),
        () => {
          s.current = !1;
        }
      ),
      []
    );
}
const MotionConfigContext = reactExports.createContext({
    transformPagePoint: (a) => a,
    isStatic: !1,
    reducedMotion: "never",
  }),
  MotionContext = reactExports.createContext({}),
  PresenceContext = reactExports.createContext(null),
  isBrowser = typeof document < "u",
  useIsomorphicLayoutEffect = isBrowser
    ? reactExports.useLayoutEffect
    : reactExports.useEffect,
  LazyContext = reactExports.createContext({ strict: !1 });
function useVisualElement(a, o, s, _) {
  const { visualElement: $ } = reactExports.useContext(MotionContext),
    et = reactExports.useContext(LazyContext),
    tt = reactExports.useContext(PresenceContext),
    rt = reactExports.useContext(MotionConfigContext).reducedMotion,
    nt = reactExports.useRef();
  (_ = _ || et.renderer),
    !nt.current &&
      _ &&
      (nt.current = _(a, {
        visualState: o,
        parent: $,
        props: s,
        presenceContext: tt,
        blockInitialAnimation: tt ? tt.initial === !1 : !1,
        reducedMotionConfig: rt,
      }));
  const it = nt.current;
  return (
    reactExports.useInsertionEffect(() => {
      it && it.update(s, tt);
    }),
    useIsomorphicLayoutEffect(() => {
      it && it.render();
    }),
    reactExports.useEffect(() => {
      it && it.updateFeatures();
    }),
    (window.HandoffAppearAnimations
      ? useIsomorphicLayoutEffect
      : reactExports.useEffect)(() => {
      it && it.animationState && it.animationState.animateChanges();
    }),
    it
  );
}
function isRefObject(a) {
  return (
    typeof a == "object" && Object.prototype.hasOwnProperty.call(a, "current")
  );
}
function useMotionRef(a, o, s) {
  return reactExports.useCallback(
    (_) => {
      _ && a.mount && a.mount(_),
        o && (_ ? o.mount(_) : o.unmount()),
        s &&
          (typeof s == "function" ? s(_) : isRefObject(s) && (s.current = _));
    },
    [o]
  );
}
function isVariantLabel(a) {
  return typeof a == "string" || Array.isArray(a);
}
function isAnimationControls(a) {
  return typeof a == "object" && typeof a.start == "function";
}
const variantPriorityOrder = [
    "animate",
    "whileInView",
    "whileFocus",
    "whileHover",
    "whileTap",
    "whileDrag",
    "exit",
  ],
  variantProps = ["initial", ...variantPriorityOrder];
function isControllingVariants(a) {
  return (
    isAnimationControls(a.animate) ||
    variantProps.some((o) => isVariantLabel(a[o]))
  );
}
function isVariantNode(a) {
  return !!(isControllingVariants(a) || a.variants);
}
function getCurrentTreeVariants(a, o) {
  if (isControllingVariants(a)) {
    const { initial: s, animate: _ } = a;
    return {
      initial: s === !1 || isVariantLabel(s) ? s : void 0,
      animate: isVariantLabel(_) ? _ : void 0,
    };
  }
  return a.inherit !== !1 ? o : {};
}
function useCreateMotionContext(a) {
  const { initial: o, animate: s } = getCurrentTreeVariants(
    a,
    reactExports.useContext(MotionContext)
  );
  return reactExports.useMemo(
    () => ({ initial: o, animate: s }),
    [variantLabelsAsDependency(o), variantLabelsAsDependency(s)]
  );
}
function variantLabelsAsDependency(a) {
  return Array.isArray(a) ? a.join(" ") : a;
}
const featureProps = {
    animation: [
      "animate",
      "variants",
      "whileHover",
      "whileTap",
      "exit",
      "whileInView",
      "whileFocus",
      "whileDrag",
    ],
    exit: ["exit"],
    drag: ["drag", "dragControls"],
    focus: ["whileFocus"],
    hover: ["whileHover", "onHoverStart", "onHoverEnd"],
    tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
    pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
    inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
    layout: ["layout", "layoutId"],
  },
  featureDefinitions = {};
for (const a in featureProps)
  featureDefinitions[a] = {
    isEnabled: (o) => featureProps[a].some((s) => !!o[s]),
  };
function loadFeatures(a) {
  for (const o in a)
    featureDefinitions[o] = { ...featureDefinitions[o], ...a[o] };
}
const LayoutGroupContext = reactExports.createContext({}),
  SwitchLayoutGroupContext = reactExports.createContext({}),
  motionComponentSymbol = Symbol.for("motionComponentSymbol");
function createMotionComponent({
  preloadedFeatures: a,
  createVisualElement: o,
  useRender: s,
  useVisualState: _,
  Component: $,
}) {
  a && loadFeatures(a);
  function et(rt, nt) {
    let it;
    const at = {
        ...reactExports.useContext(MotionConfigContext),
        ...rt,
        layoutId: useLayoutId(rt),
      },
      { isStatic: st } = at,
      ot = useCreateMotionContext(rt),
      dt = _(rt, st);
    if (!st && isBrowser) {
      ot.visualElement = useVisualElement($, dt, at, o);
      const ht = reactExports.useContext(SwitchLayoutGroupContext),
        ft = reactExports.useContext(LazyContext).strict;
      ot.visualElement && (it = ot.visualElement.loadFeatures(at, ft, a, ht));
    }
    return reactExports.createElement(
      MotionContext.Provider,
      { value: ot },
      it && ot.visualElement
        ? reactExports.createElement(it, {
            visualElement: ot.visualElement,
            ...at,
          })
        : null,
      s($, rt, useMotionRef(dt, ot.visualElement, nt), dt, st, ot.visualElement)
    );
  }
  const tt = reactExports.forwardRef(et);
  return (tt[motionComponentSymbol] = $), tt;
}
function useLayoutId({ layoutId: a }) {
  const o = reactExports.useContext(LayoutGroupContext).id;
  return o && a !== void 0 ? o + "-" + a : a;
}
function createMotionProxy(a) {
  function o(_, $ = {}) {
    return createMotionComponent(a(_, $));
  }
  if (typeof Proxy > "u") return o;
  const s = new Map();
  return new Proxy(o, {
    get: (_, $) => (s.has($) || s.set($, o($)), s.get($)),
  });
}
const lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view",
];
function isSVGComponent(a) {
  return typeof a != "string" || a.includes("-")
    ? !1
    : !!(lowercaseSVGElements.indexOf(a) > -1 || /[A-Z]/.test(a));
}
const scaleCorrectors = {};
function addScaleCorrector(a) {
  Object.assign(scaleCorrectors, a);
}
const transformPropOrder = [
    "transformPerspective",
    "x",
    "y",
    "z",
    "translateX",
    "translateY",
    "translateZ",
    "scale",
    "scaleX",
    "scaleY",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "skew",
    "skewX",
    "skewY",
  ],
  transformProps = new Set(transformPropOrder);
function isForcedMotionValue(a, { layout: o, layoutId: s }) {
  return (
    transformProps.has(a) ||
    a.startsWith("origin") ||
    ((o || s !== void 0) && (!!scaleCorrectors[a] || a === "opacity"))
  );
}
const isMotionValue = (a) => !!(a && a.getVelocity),
  translateAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective",
  },
  numTransforms = transformPropOrder.length;
function buildTransform(
  a,
  { enableHardwareAcceleration: o = !0, allowTransformNone: s = !0 },
  _,
  $
) {
  let et = "";
  for (let tt = 0; tt < numTransforms; tt++) {
    const rt = transformPropOrder[tt];
    if (a[rt] !== void 0) {
      const nt = translateAlias[rt] || rt;
      et += `${nt}(${a[rt]}) `;
    }
  }
  return (
    o && !a.z && (et += "translateZ(0)"),
    (et = et.trim()),
    $ ? (et = $(a, _ ? "" : et)) : s && _ && (et = "none"),
    et
  );
}
const checkStringStartsWith = (a) => (o) =>
    typeof o == "string" && o.startsWith(a),
  isCSSVariableName = checkStringStartsWith("--"),
  isCSSVariableToken = checkStringStartsWith("var(--"),
  cssVariableRegex =
    /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g,
  getValueAsType = (a, o) => (o && typeof a == "number" ? o.transform(a) : a),
  clamp = (a, o, s) => Math.min(Math.max(s, a), o),
  number = {
    test: (a) => typeof a == "number",
    parse: parseFloat,
    transform: (a) => a,
  },
  alpha = { ...number, transform: (a) => clamp(0, 1, a) },
  scale = { ...number, default: 1 },
  sanitize = (a) => Math.round(a * 1e5) / 1e5,
  floatRegex = /(-)?([\d]*\.?[\d])+/g,
  colorRegex =
    /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,
  singleColorRegex =
    /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
function isString(a) {
  return typeof a == "string";
}
const createUnitType = (a) => ({
    test: (o) => isString(o) && o.endsWith(a) && o.split(" ").length === 1,
    parse: parseFloat,
    transform: (o) => `${o}${a}`,
  }),
  degrees = createUnitType("deg"),
  percent = createUnitType("%"),
  px$1 = createUnitType("px"),
  vh = createUnitType("vh"),
  vw = createUnitType("vw"),
  progressPercentage = {
    ...percent,
    parse: (a) => percent.parse(a) / 100,
    transform: (a) => percent.transform(a * 100),
  },
  int = { ...number, transform: Math.round },
  numberValueTypes = {
    borderWidth: px$1,
    borderTopWidth: px$1,
    borderRightWidth: px$1,
    borderBottomWidth: px$1,
    borderLeftWidth: px$1,
    borderRadius: px$1,
    radius: px$1,
    borderTopLeftRadius: px$1,
    borderTopRightRadius: px$1,
    borderBottomRightRadius: px$1,
    borderBottomLeftRadius: px$1,
    width: px$1,
    maxWidth: px$1,
    height: px$1,
    maxHeight: px$1,
    size: px$1,
    top: px$1,
    right: px$1,
    bottom: px$1,
    left: px$1,
    padding: px$1,
    paddingTop: px$1,
    paddingRight: px$1,
    paddingBottom: px$1,
    paddingLeft: px$1,
    margin: px$1,
    marginTop: px$1,
    marginRight: px$1,
    marginBottom: px$1,
    marginLeft: px$1,
    rotate: degrees,
    rotateX: degrees,
    rotateY: degrees,
    rotateZ: degrees,
    scale,
    scaleX: scale,
    scaleY: scale,
    scaleZ: scale,
    skew: degrees,
    skewX: degrees,
    skewY: degrees,
    distance: px$1,
    translateX: px$1,
    translateY: px$1,
    translateZ: px$1,
    x: px$1,
    y: px$1,
    z: px$1,
    perspective: px$1,
    transformPerspective: px$1,
    opacity: alpha,
    originX: progressPercentage,
    originY: progressPercentage,
    originZ: px$1,
    zIndex: int,
    fillOpacity: alpha,
    strokeOpacity: alpha,
    numOctaves: int,
  };
function buildHTMLStyles(a, o, s, _) {
  const { style: $, vars: et, transform: tt, transformOrigin: rt } = a;
  let nt = !1,
    it = !1,
    at = !0;
  for (const st in o) {
    const ot = o[st];
    if (isCSSVariableName(st)) {
      et[st] = ot;
      continue;
    }
    const dt = numberValueTypes[st],
      ht = getValueAsType(ot, dt);
    if (transformProps.has(st)) {
      if (((nt = !0), (tt[st] = ht), !at)) continue;
      ot !== (dt.default || 0) && (at = !1);
    } else st.startsWith("origin") ? ((it = !0), (rt[st] = ht)) : ($[st] = ht);
  }
  if (
    (o.transform ||
      (nt || _
        ? ($.transform = buildTransform(a.transform, s, at, _))
        : $.transform && ($.transform = "none")),
    it)
  ) {
    const { originX: st = "50%", originY: ot = "50%", originZ: dt = 0 } = rt;
    $.transformOrigin = `${st} ${ot} ${dt}`;
  }
}
const createHtmlRenderState = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {},
});
function copyRawValuesOnly(a, o, s) {
  for (const _ in o)
    !isMotionValue(o[_]) && !isForcedMotionValue(_, s) && (a[_] = o[_]);
}
function useInitialMotionValues({ transformTemplate: a }, o, s) {
  return reactExports.useMemo(() => {
    const _ = createHtmlRenderState();
    return (
      buildHTMLStyles(_, o, { enableHardwareAcceleration: !s }, a),
      Object.assign({}, _.vars, _.style)
    );
  }, [o]);
}
function useStyle(a, o, s) {
  const _ = a.style || {},
    $ = {};
  return (
    copyRawValuesOnly($, _, a),
    Object.assign($, useInitialMotionValues(a, o, s)),
    a.transformValues ? a.transformValues($) : $
  );
}
function useHTMLProps(a, o, s) {
  const _ = {},
    $ = useStyle(a, o, s);
  return (
    a.drag &&
      a.dragListener !== !1 &&
      ((_.draggable = !1),
      ($.userSelect = $.WebkitUserSelect = $.WebkitTouchCallout = "none"),
      ($.touchAction =
        a.drag === !0 ? "none" : `pan-${a.drag === "x" ? "y" : "x"}`)),
    a.tabIndex === void 0 &&
      (a.onTap || a.onTapStart || a.whileTap) &&
      (_.tabIndex = 0),
    (_.style = $),
    _
  );
}
const validMotionProps = new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "ignoreStrict",
  "viewport",
]);
function isValidMotionProp(a) {
  return (
    a.startsWith("while") ||
    (a.startsWith("drag") && a !== "draggable") ||
    a.startsWith("layout") ||
    a.startsWith("onTap") ||
    a.startsWith("onPan") ||
    validMotionProps.has(a)
  );
}
let shouldForward = (a) => !isValidMotionProp(a);
function loadExternalIsValidProp(a) {
  a &&
    (shouldForward = (o) =>
      o.startsWith("on") ? !isValidMotionProp(o) : a(o));
}
try {
  loadExternalIsValidProp(require("@emotion/is-prop-valid").default);
} catch {}
function filterProps(a, o, s) {
  const _ = {};
  for (const $ in a)
    ($ === "values" && typeof a.values == "object") ||
      ((shouldForward($) ||
        (s === !0 && isValidMotionProp($)) ||
        (!o && !isValidMotionProp($)) ||
        (a.draggable && $.startsWith("onDrag"))) &&
        (_[$] = a[$]));
  return _;
}
function calcOrigin$1(a, o, s) {
  return typeof a == "string" ? a : px$1.transform(o + s * a);
}
function calcSVGTransformOrigin(a, o, s) {
  const _ = calcOrigin$1(o, a.x, a.width),
    $ = calcOrigin$1(s, a.y, a.height);
  return `${_} ${$}`;
}
const dashKeys = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
  camelKeys = { offset: "strokeDashoffset", array: "strokeDasharray" };
function buildSVGPath(a, o, s = 1, _ = 0, $ = !0) {
  a.pathLength = 1;
  const et = $ ? dashKeys : camelKeys;
  a[et.offset] = px$1.transform(-_);
  const tt = px$1.transform(o),
    rt = px$1.transform(s);
  a[et.array] = `${tt} ${rt}`;
}
function buildSVGAttrs(
  a,
  {
    attrX: o,
    attrY: s,
    attrScale: _,
    originX: $,
    originY: et,
    pathLength: tt,
    pathSpacing: rt = 1,
    pathOffset: nt = 0,
    ...it
  },
  at,
  st,
  ot
) {
  if ((buildHTMLStyles(a, it, at, ot), st)) {
    a.style.viewBox && (a.attrs.viewBox = a.style.viewBox);
    return;
  }
  (a.attrs = a.style), (a.style = {});
  const { attrs: dt, style: ht, dimensions: ft } = a;
  dt.transform && (ft && (ht.transform = dt.transform), delete dt.transform),
    ft &&
      ($ !== void 0 || et !== void 0 || ht.transform) &&
      (ht.transformOrigin = calcSVGTransformOrigin(
        ft,
        $ !== void 0 ? $ : 0.5,
        et !== void 0 ? et : 0.5
      )),
    o !== void 0 && (dt.x = o),
    s !== void 0 && (dt.y = s),
    _ !== void 0 && (dt.scale = _),
    tt !== void 0 && buildSVGPath(dt, tt, rt, nt, !1);
}
const createSvgRenderState = () => ({ ...createHtmlRenderState(), attrs: {} }),
  isSVGTag = (a) => typeof a == "string" && a.toLowerCase() === "svg";
function useSVGProps(a, o, s, _) {
  const $ = reactExports.useMemo(() => {
    const et = createSvgRenderState();
    return (
      buildSVGAttrs(
        et,
        o,
        { enableHardwareAcceleration: !1 },
        isSVGTag(_),
        a.transformTemplate
      ),
      { ...et.attrs, style: { ...et.style } }
    );
  }, [o]);
  if (a.style) {
    const et = {};
    copyRawValuesOnly(et, a.style, a), ($.style = { ...et, ...$.style });
  }
  return $;
}
function createUseRender(a = !1) {
  return (s, _, $, { latestValues: et }, tt) => {
    const nt = (isSVGComponent(s) ? useSVGProps : useHTMLProps)(_, et, tt, s),
      at = { ...filterProps(_, typeof s == "string", a), ...nt, ref: $ },
      { children: st } = _,
      ot = reactExports.useMemo(
        () => (isMotionValue(st) ? st.get() : st),
        [st]
      );
    return reactExports.createElement(s, { ...at, children: ot });
  };
}
const camelToDash = (a) => a.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
function renderHTML(a, { style: o, vars: s }, _, $) {
  Object.assign(a.style, o, $ && $.getProjectionStyles(_));
  for (const et in s) a.style.setProperty(et, s[et]);
}
const camelCaseAttributes = new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust",
]);
function renderSVG(a, o, s, _) {
  renderHTML(a, o, void 0, _);
  for (const $ in o.attrs)
    a.setAttribute(camelCaseAttributes.has($) ? $ : camelToDash($), o.attrs[$]);
}
function scrapeMotionValuesFromProps$1(a, o) {
  const { style: s } = a,
    _ = {};
  for (const $ in s)
    (isMotionValue(s[$]) ||
      (o.style && isMotionValue(o.style[$])) ||
      isForcedMotionValue($, a)) &&
      (_[$] = s[$]);
  return _;
}
function scrapeMotionValuesFromProps(a, o) {
  const s = scrapeMotionValuesFromProps$1(a, o);
  for (const _ in a)
    if (isMotionValue(a[_]) || isMotionValue(o[_])) {
      const $ =
        transformPropOrder.indexOf(_) !== -1
          ? "attr" + _.charAt(0).toUpperCase() + _.substring(1)
          : _;
      s[$] = a[_];
    }
  return s;
}
function resolveVariantFromProps(a, o, s, _ = {}, $ = {}) {
  return (
    typeof o == "function" && (o = o(s !== void 0 ? s : a.custom, _, $)),
    typeof o == "string" && (o = a.variants && a.variants[o]),
    typeof o == "function" && (o = o(s !== void 0 ? s : a.custom, _, $)),
    o
  );
}
function useConstant(a) {
  const o = reactExports.useRef(null);
  return o.current === null && (o.current = a()), o.current;
}
const isKeyframesTarget = (a) => Array.isArray(a),
  isCustomValue = (a) => !!(a && typeof a == "object" && a.mix && a.toValue),
  resolveFinalValueInKeyframes = (a) =>
    isKeyframesTarget(a) ? a[a.length - 1] || 0 : a;
function resolveMotionValue(a) {
  const o = isMotionValue(a) ? a.get() : a;
  return isCustomValue(o) ? o.toValue() : o;
}
function makeState(
  { scrapeMotionValuesFromProps: a, createRenderState: o, onMount: s },
  _,
  $,
  et
) {
  const tt = { latestValues: makeLatestValues(_, $, et, a), renderState: o() };
  return s && (tt.mount = (rt) => s(_, rt, tt)), tt;
}
const makeUseVisualState = (a) => (o, s) => {
  const _ = reactExports.useContext(MotionContext),
    $ = reactExports.useContext(PresenceContext),
    et = () => makeState(a, o, _, $);
  return s ? et() : useConstant(et);
};
function makeLatestValues(a, o, s, _) {
  const $ = {},
    et = _(a, {});
  for (const ot in et) $[ot] = resolveMotionValue(et[ot]);
  let { initial: tt, animate: rt } = a;
  const nt = isControllingVariants(a),
    it = isVariantNode(a);
  o &&
    it &&
    !nt &&
    a.inherit !== !1 &&
    (tt === void 0 && (tt = o.initial), rt === void 0 && (rt = o.animate));
  let at = s ? s.initial === !1 : !1;
  at = at || tt === !1;
  const st = at ? rt : tt;
  return (
    st &&
      typeof st != "boolean" &&
      !isAnimationControls(st) &&
      (Array.isArray(st) ? st : [st]).forEach((dt) => {
        const ht = resolveVariantFromProps(a, dt);
        if (!ht) return;
        const { transitionEnd: ft, transition: mt, ...ut } = ht;
        for (const lt in ut) {
          let ct = ut[lt];
          if (Array.isArray(ct)) {
            const pt = at ? ct.length - 1 : 0;
            ct = ct[pt];
          }
          ct !== null && ($[lt] = ct);
        }
        for (const lt in ft) $[lt] = ft[lt];
      }),
    $
  );
}
const svgMotionConfig = {
    useVisualState: makeUseVisualState({
      scrapeMotionValuesFromProps,
      createRenderState: createSvgRenderState,
      onMount: (a, o, { renderState: s, latestValues: _ }) => {
        try {
          s.dimensions =
            typeof o.getBBox == "function"
              ? o.getBBox()
              : o.getBoundingClientRect();
        } catch {
          s.dimensions = { x: 0, y: 0, width: 0, height: 0 };
        }
        buildSVGAttrs(
          s,
          _,
          { enableHardwareAcceleration: !1 },
          isSVGTag(o.tagName),
          a.transformTemplate
        ),
          renderSVG(o, s);
      },
    }),
  },
  htmlMotionConfig = {
    useVisualState: makeUseVisualState({
      scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
      createRenderState: createHtmlRenderState,
    }),
  };
function createDomMotionConfig(a, { forwardMotionProps: o = !1 }, s, _) {
  return {
    ...(isSVGComponent(a) ? svgMotionConfig : htmlMotionConfig),
    preloadedFeatures: s,
    useRender: createUseRender(o),
    createVisualElement: _,
    Component: a,
  };
}
function addDomEvent(a, o, s, _ = { passive: !0 }) {
  return a.addEventListener(o, s, _), () => a.removeEventListener(o, s);
}
const isPrimaryPointer = (a) =>
  a.pointerType === "mouse"
    ? typeof a.button != "number" || a.button <= 0
    : a.isPrimary !== !1;
function extractEventInfo(a, o = "page") {
  return { point: { x: a[o + "X"], y: a[o + "Y"] } };
}
const addPointerInfo = (a) => (o) =>
  isPrimaryPointer(o) && a(o, extractEventInfo(o));
function addPointerEvent(a, o, s, _) {
  return addDomEvent(a, o, addPointerInfo(s), _);
}
const combineFunctions = (a, o) => (s) => o(a(s)),
  pipe = (...a) => a.reduce(combineFunctions);
function createLock(a) {
  let o = null;
  return () => {
    const s = () => {
      o = null;
    };
    return o === null ? ((o = a), s) : !1;
  };
}
const globalHorizontalLock = createLock("dragHorizontal"),
  globalVerticalLock = createLock("dragVertical");
function getGlobalLock(a) {
  let o = !1;
  if (a === "y") o = globalVerticalLock();
  else if (a === "x") o = globalHorizontalLock();
  else {
    const s = globalHorizontalLock(),
      _ = globalVerticalLock();
    s && _
      ? (o = () => {
          s(), _();
        })
      : (s && s(), _ && _());
  }
  return o;
}
function isDragActive() {
  const a = getGlobalLock(!0);
  return a ? (a(), !1) : !0;
}
let Feature$1 = class {
  constructor(o) {
    (this.isMounted = !1), (this.node = o);
  }
  update() {}
};
const noop = (a) => a;
function createRenderStep(a) {
  let o = [],
    s = [],
    _ = 0,
    $ = !1,
    et = !1;
  const tt = new WeakSet(),
    rt = {
      schedule: (nt, it = !1, at = !1) => {
        const st = at && $,
          ot = st ? o : s;
        return (
          it && tt.add(nt),
          ot.indexOf(nt) === -1 && (ot.push(nt), st && $ && (_ = o.length)),
          nt
        );
      },
      cancel: (nt) => {
        const it = s.indexOf(nt);
        it !== -1 && s.splice(it, 1), tt.delete(nt);
      },
      process: (nt) => {
        if ($) {
          et = !0;
          return;
        }
        if ((($ = !0), ([o, s] = [s, o]), (s.length = 0), (_ = o.length), _))
          for (let it = 0; it < _; it++) {
            const at = o[it];
            at(nt), tt.has(at) && (rt.schedule(at), a());
          }
        ($ = !1), et && ((et = !1), rt.process(nt));
      },
    };
  return rt;
}
const stepsOrder = [
    "prepare",
    "read",
    "update",
    "preRender",
    "render",
    "postRender",
  ],
  maxElapsed = 40;
function createRenderBatcher(a, o) {
  let s = !1,
    _ = !0;
  const $ = { delta: 0, timestamp: 0, isProcessing: !1 },
    et = stepsOrder.reduce(
      (st, ot) => ((st[ot] = createRenderStep(() => (s = !0))), st),
      {}
    ),
    tt = (st) => et[st].process($),
    rt = (st) => {
      (s = !1),
        ($.delta = _
          ? 1e3 / 60
          : Math.max(Math.min(st - $.timestamp, maxElapsed), 1)),
        ($.timestamp = st),
        ($.isProcessing = !0),
        stepsOrder.forEach(tt),
        ($.isProcessing = !1),
        s && o && ((_ = !1), a(rt));
    },
    nt = () => {
      (s = !0), (_ = !0), $.isProcessing || a(rt);
    };
  return {
    schedule: stepsOrder.reduce((st, ot) => {
      const dt = et[ot];
      return (
        (st[ot] = (ht, ft = !1, mt = !1) => (
          s || nt(), dt.schedule(ht, ft, mt)
        )),
        st
      );
    }, {}),
    cancel: (st) => stepsOrder.forEach((ot) => et[ot].cancel(st)),
    state: $,
    steps: et,
  };
}
const {
  schedule: frame,
  cancel: cancelFrame,
  state: frameData,
  steps,
} = createRenderBatcher(
  typeof requestAnimationFrame < "u" ? requestAnimationFrame : noop,
  !0
);
function addHoverEvent(a, o) {
  const s = "pointer" + (o ? "enter" : "leave"),
    _ = "onHover" + (o ? "Start" : "End"),
    $ = (et, tt) => {
      if (et.type === "touch" || isDragActive()) return;
      const rt = a.getProps();
      a.animationState &&
        rt.whileHover &&
        a.animationState.setActive("whileHover", o),
        rt[_] && frame.update(() => rt[_](et, tt));
    };
  return addPointerEvent(a.current, s, $, { passive: !a.getProps()[_] });
}
class HoverGesture extends Feature$1 {
  mount() {
    this.unmount = pipe(
      addHoverEvent(this.node, !0),
      addHoverEvent(this.node, !1)
    );
  }
  unmount() {}
}
class FocusGesture extends Feature$1 {
  constructor() {
    super(...arguments), (this.isActive = !1);
  }
  onFocus() {
    let o = !1;
    try {
      o = this.node.current.matches(":focus-visible");
    } catch {
      o = !0;
    }
    !o ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !0),
      (this.isActive = !0));
  }
  onBlur() {
    !this.isActive ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !1),
      (this.isActive = !1));
  }
  mount() {
    this.unmount = pipe(
      addDomEvent(this.node.current, "focus", () => this.onFocus()),
      addDomEvent(this.node.current, "blur", () => this.onBlur())
    );
  }
  unmount() {}
}
const isNodeOrChild = (a, o) =>
  o ? (a === o ? !0 : isNodeOrChild(a, o.parentElement)) : !1;
function fireSyntheticPointerEvent(a, o) {
  if (!o) return;
  const s = new PointerEvent("pointer" + a);
  o(s, extractEventInfo(s));
}
class PressGesture extends Feature$1 {
  constructor() {
    super(...arguments),
      (this.removeStartListeners = noop),
      (this.removeEndListeners = noop),
      (this.removeAccessibleListeners = noop),
      (this.startPointerPress = (o, s) => {
        if ((this.removeEndListeners(), this.isPressing)) return;
        const _ = this.node.getProps(),
          et = addPointerEvent(
            window,
            "pointerup",
            (rt, nt) => {
              if (!this.checkPressEnd()) return;
              const { onTap: it, onTapCancel: at } = this.node.getProps();
              frame.update(() => {
                isNodeOrChild(this.node.current, rt.target)
                  ? it && it(rt, nt)
                  : at && at(rt, nt);
              });
            },
            { passive: !(_.onTap || _.onPointerUp) }
          ),
          tt = addPointerEvent(
            window,
            "pointercancel",
            (rt, nt) => this.cancelPress(rt, nt),
            { passive: !(_.onTapCancel || _.onPointerCancel) }
          );
        (this.removeEndListeners = pipe(et, tt)), this.startPress(o, s);
      }),
      (this.startAccessiblePress = () => {
        const o = (et) => {
            if (et.key !== "Enter" || this.isPressing) return;
            const tt = (rt) => {
              rt.key !== "Enter" ||
                !this.checkPressEnd() ||
                fireSyntheticPointerEvent("up", (nt, it) => {
                  const { onTap: at } = this.node.getProps();
                  at && frame.update(() => at(nt, it));
                });
            };
            this.removeEndListeners(),
              (this.removeEndListeners = addDomEvent(
                this.node.current,
                "keyup",
                tt
              )),
              fireSyntheticPointerEvent("down", (rt, nt) => {
                this.startPress(rt, nt);
              });
          },
          s = addDomEvent(this.node.current, "keydown", o),
          _ = () => {
            this.isPressing &&
              fireSyntheticPointerEvent("cancel", (et, tt) =>
                this.cancelPress(et, tt)
              );
          },
          $ = addDomEvent(this.node.current, "blur", _);
        this.removeAccessibleListeners = pipe(s, $);
      });
  }
  startPress(o, s) {
    this.isPressing = !0;
    const { onTapStart: _, whileTap: $ } = this.node.getProps();
    $ &&
      this.node.animationState &&
      this.node.animationState.setActive("whileTap", !0),
      _ && frame.update(() => _(o, s));
  }
  checkPressEnd() {
    return (
      this.removeEndListeners(),
      (this.isPressing = !1),
      this.node.getProps().whileTap &&
        this.node.animationState &&
        this.node.animationState.setActive("whileTap", !1),
      !isDragActive()
    );
  }
  cancelPress(o, s) {
    if (!this.checkPressEnd()) return;
    const { onTapCancel: _ } = this.node.getProps();
    _ && frame.update(() => _(o, s));
  }
  mount() {
    const o = this.node.getProps(),
      s = addPointerEvent(
        this.node.current,
        "pointerdown",
        this.startPointerPress,
        { passive: !(o.onTapStart || o.onPointerStart) }
      ),
      _ = addDomEvent(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = pipe(s, _);
  }
  unmount() {
    this.removeStartListeners(),
      this.removeEndListeners(),
      this.removeAccessibleListeners();
  }
}
const observerCallbacks = new WeakMap(),
  observers = new WeakMap(),
  fireObserverCallback = (a) => {
    const o = observerCallbacks.get(a.target);
    o && o(a);
  },
  fireAllObserverCallbacks = (a) => {
    a.forEach(fireObserverCallback);
  };
function initIntersectionObserver({ root: a, ...o }) {
  const s = a || document;
  observers.has(s) || observers.set(s, {});
  const _ = observers.get(s),
    $ = JSON.stringify(o);
  return (
    _[$] ||
      (_[$] = new IntersectionObserver(fireAllObserverCallbacks, {
        root: a,
        ...o,
      })),
    _[$]
  );
}
function observeIntersection(a, o, s) {
  const _ = initIntersectionObserver(o);
  return (
    observerCallbacks.set(a, s),
    _.observe(a),
    () => {
      observerCallbacks.delete(a), _.unobserve(a);
    }
  );
}
const thresholdNames = { some: 0, all: 1 };
class InViewFeature extends Feature$1 {
  constructor() {
    super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
  }
  startObserver() {
    this.unmount();
    const { viewport: o = {} } = this.node.getProps(),
      { root: s, margin: _, amount: $ = "some", once: et } = o,
      tt = {
        root: s ? s.current : void 0,
        rootMargin: _,
        threshold: typeof $ == "number" ? $ : thresholdNames[$],
      },
      rt = (nt) => {
        const { isIntersecting: it } = nt;
        if (
          this.isInView === it ||
          ((this.isInView = it), et && !it && this.hasEnteredView)
        )
          return;
        it && (this.hasEnteredView = !0),
          this.node.animationState &&
            this.node.animationState.setActive("whileInView", it);
        const { onViewportEnter: at, onViewportLeave: st } =
            this.node.getProps(),
          ot = it ? at : st;
        ot && ot(nt);
      };
    return observeIntersection(this.node.current, tt, rt);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u") return;
    const { props: o, prevProps: s } = this.node;
    ["amount", "margin", "root"].some(hasViewportOptionChanged(o, s)) &&
      this.startObserver();
  }
  unmount() {}
}
function hasViewportOptionChanged(
  { viewport: a = {} },
  { viewport: o = {} } = {}
) {
  return (s) => a[s] !== o[s];
}
const gestureAnimations = {
  inView: { Feature: InViewFeature },
  tap: { Feature: PressGesture },
  focus: { Feature: FocusGesture },
  hover: { Feature: HoverGesture },
};
function shallowCompare(a, o) {
  if (!Array.isArray(o)) return !1;
  const s = o.length;
  if (s !== a.length) return !1;
  for (let _ = 0; _ < s; _++) if (o[_] !== a[_]) return !1;
  return !0;
}
function getCurrent(a) {
  const o = {};
  return a.values.forEach((s, _) => (o[_] = s.get())), o;
}
function getVelocity$1(a) {
  const o = {};
  return a.values.forEach((s, _) => (o[_] = s.getVelocity())), o;
}
function resolveVariant(a, o, s) {
  const _ = a.getProps();
  return resolveVariantFromProps(
    _,
    o,
    s !== void 0 ? s : _.custom,
    getCurrent(a),
    getVelocity$1(a)
  );
}
const optimizedAppearDataId = "framerAppearId",
  optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);
let warning = noop,
  invariant = noop;
const secondsToMilliseconds = (a) => a * 1e3,
  millisecondsToSeconds = (a) => a / 1e3,
  instantAnimationState = { current: !1 },
  isBezierDefinition = (a) => Array.isArray(a) && typeof a[0] == "number";
function isWaapiSupportedEasing(a) {
  return !!(
    !a ||
    (typeof a == "string" && supportedWaapiEasing[a]) ||
    isBezierDefinition(a) ||
    (Array.isArray(a) && a.every(isWaapiSupportedEasing))
  );
}
const cubicBezierAsString = ([a, o, s, _]) =>
    `cubic-bezier(${a}, ${o}, ${s}, ${_})`,
  supportedWaapiEasing = {
    linear: "linear",
    ease: "ease",
    easeIn: "ease-in",
    easeOut: "ease-out",
    easeInOut: "ease-in-out",
    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),
  };
function mapEasingToNativeEasing(a) {
  if (a)
    return isBezierDefinition(a)
      ? cubicBezierAsString(a)
      : Array.isArray(a)
      ? a.map(mapEasingToNativeEasing)
      : supportedWaapiEasing[a];
}
function animateStyle(
  a,
  o,
  s,
  {
    delay: _ = 0,
    duration: $,
    repeat: et = 0,
    repeatType: tt = "loop",
    ease: rt,
    times: nt,
  } = {}
) {
  const it = { [o]: s };
  nt && (it.offset = nt);
  const at = mapEasingToNativeEasing(rt);
  return (
    Array.isArray(at) && (it.easing = at),
    a.animate(it, {
      delay: _,
      duration: $,
      easing: Array.isArray(at) ? "linear" : at,
      fill: "both",
      iterations: et + 1,
      direction: tt === "reverse" ? "alternate" : "normal",
    })
  );
}
function getFinalKeyframe(a, { repeat: o, repeatType: s = "loop" }) {
  const _ = o && s !== "loop" && o % 2 === 1 ? 0 : a.length - 1;
  return a[_];
}
const calcBezier = (a, o, s) =>
    (((1 - 3 * s + 3 * o) * a + (3 * s - 6 * o)) * a + 3 * o) * a,
  subdivisionPrecision = 1e-7,
  subdivisionMaxIterations = 12;
function binarySubdivide(a, o, s, _, $) {
  let et,
    tt,
    rt = 0;
  do
    (tt = o + (s - o) / 2),
      (et = calcBezier(tt, _, $) - a),
      et > 0 ? (s = tt) : (o = tt);
  while (
    Math.abs(et) > subdivisionPrecision &&
    ++rt < subdivisionMaxIterations
  );
  return tt;
}
function cubicBezier(a, o, s, _) {
  if (a === o && s === _) return noop;
  const $ = (et) => binarySubdivide(et, 0, 1, a, s);
  return (et) => (et === 0 || et === 1 ? et : calcBezier($(et), o, _));
}
const easeIn = cubicBezier(0.42, 0, 1, 1),
  easeOut = cubicBezier(0, 0, 0.58, 1),
  easeInOut = cubicBezier(0.42, 0, 0.58, 1),
  isEasingArray = (a) => Array.isArray(a) && typeof a[0] != "number",
  mirrorEasing = (a) => (o) =>
    o <= 0.5 ? a(2 * o) / 2 : (2 - a(2 * (1 - o))) / 2,
  reverseEasing = (a) => (o) => 1 - a(1 - o),
  circIn = (a) => 1 - Math.sin(Math.acos(a)),
  circOut = reverseEasing(circIn),
  circInOut = mirrorEasing(circOut),
  backOut = cubicBezier(0.33, 1.53, 0.69, 0.99),
  backIn = reverseEasing(backOut),
  backInOut = mirrorEasing(backIn),
  anticipate = (a) =>
    (a *= 2) < 1 ? 0.5 * backIn(a) : 0.5 * (2 - Math.pow(2, -10 * (a - 1))),
  easingLookup = {
    linear: noop,
    easeIn,
    easeInOut,
    easeOut,
    circIn,
    circInOut,
    circOut,
    backIn,
    backInOut,
    backOut,
    anticipate,
  },
  easingDefinitionToFunction = (a) => {
    if (Array.isArray(a)) {
      invariant(a.length === 4);
      const [o, s, _, $] = a;
      return cubicBezier(o, s, _, $);
    } else if (typeof a == "string") return easingLookup[a];
    return a;
  },
  isColorString = (a, o) => (s) =>
    !!(
      (isString(s) && singleColorRegex.test(s) && s.startsWith(a)) ||
      (o && Object.prototype.hasOwnProperty.call(s, o))
    ),
  splitColor = (a, o, s) => (_) => {
    if (!isString(_)) return _;
    const [$, et, tt, rt] = _.match(floatRegex);
    return {
      [a]: parseFloat($),
      [o]: parseFloat(et),
      [s]: parseFloat(tt),
      alpha: rt !== void 0 ? parseFloat(rt) : 1,
    };
  },
  clampRgbUnit = (a) => clamp(0, 255, a),
  rgbUnit = { ...number, transform: (a) => Math.round(clampRgbUnit(a)) },
  rgba = {
    test: isColorString("rgb", "red"),
    parse: splitColor("red", "green", "blue"),
    transform: ({ red: a, green: o, blue: s, alpha: _ = 1 }) =>
      "rgba(" +
      rgbUnit.transform(a) +
      ", " +
      rgbUnit.transform(o) +
      ", " +
      rgbUnit.transform(s) +
      ", " +
      sanitize(alpha.transform(_)) +
      ")",
  };
function parseHex(a) {
  let o = "",
    s = "",
    _ = "",
    $ = "";
  return (
    a.length > 5
      ? ((o = a.substring(1, 3)),
        (s = a.substring(3, 5)),
        (_ = a.substring(5, 7)),
        ($ = a.substring(7, 9)))
      : ((o = a.substring(1, 2)),
        (s = a.substring(2, 3)),
        (_ = a.substring(3, 4)),
        ($ = a.substring(4, 5)),
        (o += o),
        (s += s),
        (_ += _),
        ($ += $)),
    {
      red: parseInt(o, 16),
      green: parseInt(s, 16),
      blue: parseInt(_, 16),
      alpha: $ ? parseInt($, 16) / 255 : 1,
    }
  );
}
const hex = {
    test: isColorString("#"),
    parse: parseHex,
    transform: rgba.transform,
  },
  hsla = {
    test: isColorString("hsl", "hue"),
    parse: splitColor("hue", "saturation", "lightness"),
    transform: ({ hue: a, saturation: o, lightness: s, alpha: _ = 1 }) =>
      "hsla(" +
      Math.round(a) +
      ", " +
      percent.transform(sanitize(o)) +
      ", " +
      percent.transform(sanitize(s)) +
      ", " +
      sanitize(alpha.transform(_)) +
      ")",
  },
  color = {
    test: (a) => rgba.test(a) || hex.test(a) || hsla.test(a),
    parse: (a) =>
      rgba.test(a)
        ? rgba.parse(a)
        : hsla.test(a)
        ? hsla.parse(a)
        : hex.parse(a),
    transform: (a) =>
      isString(a)
        ? a
        : a.hasOwnProperty("red")
        ? rgba.transform(a)
        : hsla.transform(a),
  },
  mix = (a, o, s) => -s * a + s * o + a;
function hueToRgb(a, o, s) {
  return (
    s < 0 && (s += 1),
    s > 1 && (s -= 1),
    s < 1 / 6
      ? a + (o - a) * 6 * s
      : s < 1 / 2
      ? o
      : s < 2 / 3
      ? a + (o - a) * (2 / 3 - s) * 6
      : a
  );
}
function hslaToRgba({ hue: a, saturation: o, lightness: s, alpha: _ }) {
  (a /= 360), (o /= 100), (s /= 100);
  let $ = 0,
    et = 0,
    tt = 0;
  if (!o) $ = et = tt = s;
  else {
    const rt = s < 0.5 ? s * (1 + o) : s + o - s * o,
      nt = 2 * s - rt;
    ($ = hueToRgb(nt, rt, a + 1 / 3)),
      (et = hueToRgb(nt, rt, a)),
      (tt = hueToRgb(nt, rt, a - 1 / 3));
  }
  return {
    red: Math.round($ * 255),
    green: Math.round(et * 255),
    blue: Math.round(tt * 255),
    alpha: _,
  };
}
const mixLinearColor = (a, o, s) => {
    const _ = a * a;
    return Math.sqrt(Math.max(0, s * (o * o - _) + _));
  },
  colorTypes = [hex, rgba, hsla],
  getColorType = (a) => colorTypes.find((o) => o.test(a));
function asRGBA(a) {
  const o = getColorType(a);
  let s = o.parse(a);
  return o === hsla && (s = hslaToRgba(s)), s;
}
const mixColor = (a, o) => {
  const s = asRGBA(a),
    _ = asRGBA(o),
    $ = { ...s };
  return (et) => (
    ($.red = mixLinearColor(s.red, _.red, et)),
    ($.green = mixLinearColor(s.green, _.green, et)),
    ($.blue = mixLinearColor(s.blue, _.blue, et)),
    ($.alpha = mix(s.alpha, _.alpha, et)),
    rgba.transform($)
  );
};
function test(a) {
  var o, s;
  return (
    isNaN(a) &&
    isString(a) &&
    (((o = a.match(floatRegex)) === null || o === void 0 ? void 0 : o.length) ||
      0) +
      (((s = a.match(colorRegex)) === null || s === void 0
        ? void 0
        : s.length) || 0) >
      0
  );
}
const cssVarTokeniser = {
    regex: cssVariableRegex,
    countKey: "Vars",
    token: "${v}",
    parse: noop,
  },
  colorTokeniser = {
    regex: colorRegex,
    countKey: "Colors",
    token: "${c}",
    parse: color.parse,
  },
  numberTokeniser = {
    regex: floatRegex,
    countKey: "Numbers",
    token: "${n}",
    parse: number.parse,
  };
function tokenise(a, { regex: o, countKey: s, token: _, parse: $ }) {
  const et = a.tokenised.match(o);
  et &&
    ((a["num" + s] = et.length),
    (a.tokenised = a.tokenised.replace(o, _)),
    a.values.push(...et.map($)));
}
function analyseComplexValue(a) {
  const o = a.toString(),
    s = {
      value: o,
      tokenised: o,
      values: [],
      numVars: 0,
      numColors: 0,
      numNumbers: 0,
    };
  return (
    s.value.includes("var(--") && tokenise(s, cssVarTokeniser),
    tokenise(s, colorTokeniser),
    tokenise(s, numberTokeniser),
    s
  );
}
function parseComplexValue(a) {
  return analyseComplexValue(a).values;
}
function createTransformer(a) {
  const {
      values: o,
      numColors: s,
      numVars: _,
      tokenised: $,
    } = analyseComplexValue(a),
    et = o.length;
  return (tt) => {
    let rt = $;
    for (let nt = 0; nt < et; nt++)
      nt < _
        ? (rt = rt.replace(cssVarTokeniser.token, tt[nt]))
        : nt < _ + s
        ? (rt = rt.replace(colorTokeniser.token, color.transform(tt[nt])))
        : (rt = rt.replace(numberTokeniser.token, sanitize(tt[nt])));
    return rt;
  };
}
const convertNumbersToZero = (a) => (typeof a == "number" ? 0 : a);
function getAnimatableNone$1(a) {
  const o = parseComplexValue(a);
  return createTransformer(a)(o.map(convertNumbersToZero));
}
const complex = {
    test,
    parse: parseComplexValue,
    createTransformer,
    getAnimatableNone: getAnimatableNone$1,
  },
  mixImmediate = (a, o) => (s) => `${s > 0 ? o : a}`;
function getMixer(a, o) {
  return typeof a == "number"
    ? (s) => mix(a, o, s)
    : color.test(a)
    ? mixColor(a, o)
    : a.startsWith("var(")
    ? mixImmediate(a, o)
    : mixComplex(a, o);
}
const mixArray = (a, o) => {
    const s = [...a],
      _ = s.length,
      $ = a.map((et, tt) => getMixer(et, o[tt]));
    return (et) => {
      for (let tt = 0; tt < _; tt++) s[tt] = $[tt](et);
      return s;
    };
  },
  mixObject = (a, o) => {
    const s = { ...a, ...o },
      _ = {};
    for (const $ in s)
      a[$] !== void 0 && o[$] !== void 0 && (_[$] = getMixer(a[$], o[$]));
    return ($) => {
      for (const et in _) s[et] = _[et]($);
      return s;
    };
  },
  mixComplex = (a, o) => {
    const s = complex.createTransformer(o),
      _ = analyseComplexValue(a),
      $ = analyseComplexValue(o);
    return _.numVars === $.numVars &&
      _.numColors === $.numColors &&
      _.numNumbers >= $.numNumbers
      ? pipe(mixArray(_.values, $.values), s)
      : mixImmediate(a, o);
  },
  progress = (a, o, s) => {
    const _ = o - a;
    return _ === 0 ? 1 : (s - a) / _;
  },
  mixNumber = (a, o) => (s) => mix(a, o, s);
function detectMixerFactory(a) {
  return typeof a == "number"
    ? mixNumber
    : typeof a == "string"
    ? color.test(a)
      ? mixColor
      : mixComplex
    : Array.isArray(a)
    ? mixArray
    : typeof a == "object"
    ? mixObject
    : mixNumber;
}
function createMixers(a, o, s) {
  const _ = [],
    $ = s || detectMixerFactory(a[0]),
    et = a.length - 1;
  for (let tt = 0; tt < et; tt++) {
    let rt = $(a[tt], a[tt + 1]);
    if (o) {
      const nt = Array.isArray(o) ? o[tt] || noop : o;
      rt = pipe(nt, rt);
    }
    _.push(rt);
  }
  return _;
}
function interpolate(a, o, { clamp: s = !0, ease: _, mixer: $ } = {}) {
  const et = a.length;
  if ((invariant(et === o.length), et === 1)) return () => o[0];
  a[0] > a[et - 1] && ((a = [...a].reverse()), (o = [...o].reverse()));
  const tt = createMixers(o, _, $),
    rt = tt.length,
    nt = (it) => {
      let at = 0;
      if (rt > 1) for (; at < a.length - 2 && !(it < a[at + 1]); at++);
      const st = progress(a[at], a[at + 1], it);
      return tt[at](st);
    };
  return s ? (it) => nt(clamp(a[0], a[et - 1], it)) : nt;
}
function fillOffset(a, o) {
  const s = a[a.length - 1];
  for (let _ = 1; _ <= o; _++) {
    const $ = progress(0, o, _);
    a.push(mix(s, 1, $));
  }
}
function defaultOffset(a) {
  const o = [0];
  return fillOffset(o, a.length - 1), o;
}
function convertOffsetToTimes(a, o) {
  return a.map((s) => s * o);
}
function defaultEasing(a, o) {
  return a.map(() => o || easeInOut).splice(0, a.length - 1);
}
function keyframes({
  duration: a = 300,
  keyframes: o,
  times: s,
  ease: _ = "easeInOut",
}) {
  const $ = isEasingArray(_)
      ? _.map(easingDefinitionToFunction)
      : easingDefinitionToFunction(_),
    et = { done: !1, value: o[0] },
    tt = convertOffsetToTimes(
      s && s.length === o.length ? s : defaultOffset(o),
      a
    ),
    rt = interpolate(tt, o, {
      ease: Array.isArray($) ? $ : defaultEasing(o, $),
    });
  return {
    calculatedDuration: a,
    next: (nt) => ((et.value = rt(nt)), (et.done = nt >= a), et),
  };
}
function velocityPerSecond(a, o) {
  return o ? a * (1e3 / o) : 0;
}
const velocitySampleDuration = 5;
function calcGeneratorVelocity(a, o, s) {
  const _ = Math.max(o - velocitySampleDuration, 0);
  return velocityPerSecond(s - a(_), o - _);
}
const safeMin = 0.001,
  minDuration = 0.01,
  maxDuration$1 = 10,
  minDamping = 0.05,
  maxDamping = 1;
function findSpring({
  duration: a = 800,
  bounce: o = 0.25,
  velocity: s = 0,
  mass: _ = 1,
}) {
  let $, et;
  warning(a <= secondsToMilliseconds(maxDuration$1));
  let tt = 1 - o;
  (tt = clamp(minDamping, maxDamping, tt)),
    (a = clamp(minDuration, maxDuration$1, millisecondsToSeconds(a))),
    tt < 1
      ? (($ = (it) => {
          const at = it * tt,
            st = at * a,
            ot = at - s,
            dt = calcAngularFreq(it, tt),
            ht = Math.exp(-st);
          return safeMin - (ot / dt) * ht;
        }),
        (et = (it) => {
          const st = it * tt * a,
            ot = st * s + s,
            dt = Math.pow(tt, 2) * Math.pow(it, 2) * a,
            ht = Math.exp(-st),
            ft = calcAngularFreq(Math.pow(it, 2), tt);
          return ((-$(it) + safeMin > 0 ? -1 : 1) * ((ot - dt) * ht)) / ft;
        }))
      : (($ = (it) => {
          const at = Math.exp(-it * a),
            st = (it - s) * a + 1;
          return -safeMin + at * st;
        }),
        (et = (it) => {
          const at = Math.exp(-it * a),
            st = (s - it) * (a * a);
          return at * st;
        }));
  const rt = 5 / a,
    nt = approximateRoot($, et, rt);
  if (((a = secondsToMilliseconds(a)), isNaN(nt)))
    return { stiffness: 100, damping: 10, duration: a };
  {
    const it = Math.pow(nt, 2) * _;
    return { stiffness: it, damping: tt * 2 * Math.sqrt(_ * it), duration: a };
  }
}
const rootIterations = 12;
function approximateRoot(a, o, s) {
  let _ = s;
  for (let $ = 1; $ < rootIterations; $++) _ = _ - a(_) / o(_);
  return _;
}
function calcAngularFreq(a, o) {
  return a * Math.sqrt(1 - o * o);
}
const durationKeys = ["duration", "bounce"],
  physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(a, o) {
  return o.some((s) => a[s] !== void 0);
}
function getSpringOptions(a) {
  let o = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...a,
  };
  if (!isSpringType(a, physicsKeys) && isSpringType(a, durationKeys)) {
    const s = findSpring(a);
    (o = { ...o, ...s, velocity: 0, mass: 1 }), (o.isResolvedFromDuration = !0);
  }
  return o;
}
function spring({ keyframes: a, restDelta: o, restSpeed: s, ..._ }) {
  const $ = a[0],
    et = a[a.length - 1],
    tt = { done: !1, value: $ },
    {
      stiffness: rt,
      damping: nt,
      mass: it,
      velocity: at,
      duration: st,
      isResolvedFromDuration: ot,
    } = getSpringOptions(_),
    dt = at ? -millisecondsToSeconds(at) : 0,
    ht = nt / (2 * Math.sqrt(rt * it)),
    ft = et - $,
    mt = millisecondsToSeconds(Math.sqrt(rt / it)),
    ut = Math.abs(ft) < 5;
  s || (s = ut ? 0.01 : 2), o || (o = ut ? 0.005 : 0.5);
  let lt;
  if (ht < 1) {
    const ct = calcAngularFreq(mt, ht);
    lt = (pt) => {
      const vt = Math.exp(-ht * mt * pt);
      return (
        et -
        vt *
          (((dt + ht * mt * ft) / ct) * Math.sin(ct * pt) +
            ft * Math.cos(ct * pt))
      );
    };
  } else if (ht === 1)
    lt = (ct) => et - Math.exp(-mt * ct) * (ft + (dt + mt * ft) * ct);
  else {
    const ct = mt * Math.sqrt(ht * ht - 1);
    lt = (pt) => {
      const vt = Math.exp(-ht * mt * pt),
        xt = Math.min(ct * pt, 300);
      return (
        et -
        (vt * ((dt + ht * mt * ft) * Math.sinh(xt) + ct * ft * Math.cosh(xt))) /
          ct
      );
    };
  }
  return {
    calculatedDuration: (ot && st) || null,
    next: (ct) => {
      const pt = lt(ct);
      if (ot) tt.done = ct >= st;
      else {
        let vt = dt;
        ct !== 0 &&
          (ht < 1 ? (vt = calcGeneratorVelocity(lt, ct, pt)) : (vt = 0));
        const xt = Math.abs(vt) <= s,
          bt = Math.abs(et - pt) <= o;
        tt.done = xt && bt;
      }
      return (tt.value = tt.done ? et : pt), tt;
    },
  };
}
function inertia({
  keyframes: a,
  velocity: o = 0,
  power: s = 0.8,
  timeConstant: _ = 325,
  bounceDamping: $ = 10,
  bounceStiffness: et = 500,
  modifyTarget: tt,
  min: rt,
  max: nt,
  restDelta: it = 0.5,
  restSpeed: at,
}) {
  const st = a[0],
    ot = { done: !1, value: st },
    dt = (St) => (rt !== void 0 && St < rt) || (nt !== void 0 && St > nt),
    ht = (St) =>
      rt === void 0
        ? nt
        : nt === void 0 || Math.abs(rt - St) < Math.abs(nt - St)
        ? rt
        : nt;
  let ft = s * o;
  const mt = st + ft,
    ut = tt === void 0 ? mt : tt(mt);
  ut !== mt && (ft = ut - st);
  const lt = (St) => -ft * Math.exp(-St / _),
    ct = (St) => ut + lt(St),
    pt = (St) => {
      const Pt = lt(St),
        Mt = ct(St);
      (ot.done = Math.abs(Pt) <= it), (ot.value = ot.done ? ut : Mt);
    };
  let vt, xt;
  const bt = (St) => {
    dt(ot.value) &&
      ((vt = St),
      (xt = spring({
        keyframes: [ot.value, ht(ot.value)],
        velocity: calcGeneratorVelocity(ct, St, ot.value),
        damping: $,
        stiffness: et,
        restDelta: it,
        restSpeed: at,
      })));
  };
  return (
    bt(0),
    {
      calculatedDuration: null,
      next: (St) => {
        let Pt = !1;
        return (
          !xt && vt === void 0 && ((Pt = !0), pt(St), bt(St)),
          vt !== void 0 && St > vt ? xt.next(St - vt) : (!Pt && pt(St), ot)
        );
      },
    }
  );
}
const frameloopDriver = (a) => {
    const o = ({ timestamp: s }) => a(s);
    return {
      start: () => frame.update(o, !0),
      stop: () => cancelFrame(o),
      now: () =>
        frameData.isProcessing ? frameData.timestamp : performance.now(),
    };
  },
  maxGeneratorDuration = 2e4;
function calcGeneratorDuration(a) {
  let o = 0;
  const s = 50;
  let _ = a.next(o);
  for (; !_.done && o < maxGeneratorDuration; ) (o += s), (_ = a.next(o));
  return o >= maxGeneratorDuration ? 1 / 0 : o;
}
const types = { decay: inertia, inertia, tween: keyframes, keyframes, spring };
function animateValue({
  autoplay: a = !0,
  delay: o = 0,
  driver: s = frameloopDriver,
  keyframes: _,
  type: $ = "keyframes",
  repeat: et = 0,
  repeatDelay: tt = 0,
  repeatType: rt = "loop",
  onPlay: nt,
  onStop: it,
  onComplete: at,
  onUpdate: st,
  ...ot
}) {
  let dt = 1,
    ht = !1,
    ft,
    mt;
  const ut = () => {
    mt = new Promise((_t) => {
      ft = _t;
    });
  };
  ut();
  let lt;
  const ct = types[$] || keyframes;
  let pt;
  ct !== keyframes &&
    typeof _[0] != "number" &&
    ((pt = interpolate([0, 100], _, { clamp: !1 })), (_ = [0, 100]));
  const vt = ct({ ...ot, keyframes: _ });
  let xt;
  rt === "mirror" &&
    (xt = ct({
      ...ot,
      keyframes: [..._].reverse(),
      velocity: -(ot.velocity || 0),
    }));
  let bt = "idle",
    St = null,
    Pt = null,
    Mt = null;
  vt.calculatedDuration === null &&
    et &&
    (vt.calculatedDuration = calcGeneratorDuration(vt));
  const { calculatedDuration: It } = vt;
  let Rt = 1 / 0,
    jt = 1 / 0;
  It !== null && ((Rt = It + tt), (jt = Rt * (et + 1) - tt));
  let Dt = 0;
  const At = (_t) => {
      if (Pt === null) return;
      dt > 0 && (Pt = Math.min(Pt, _t)),
        dt < 0 && (Pt = Math.min(_t - jt / dt, Pt)),
        St !== null ? (Dt = St) : (Dt = Math.round(_t - Pt) * dt);
      const Ft = Dt - o * (dt >= 0 ? 1 : -1),
        Vt = dt >= 0 ? Ft < 0 : Ft > jt;
      (Dt = Math.max(Ft, 0)), bt === "finished" && St === null && (Dt = jt);
      let Lt = Dt,
        Wt = vt;
      if (et) {
        const er = Dt / Rt;
        let Xt = Math.floor(er),
          Yt = er % 1;
        !Yt && er >= 1 && (Yt = 1),
          Yt === 1 && Xt--,
          (Xt = Math.min(Xt, et + 1));
        const nr = !!(Xt % 2);
        nr &&
          (rt === "reverse"
            ? ((Yt = 1 - Yt), tt && (Yt -= tt / Rt))
            : rt === "mirror" && (Wt = xt));
        let Ht = clamp(0, 1, Yt);
        Dt > jt && (Ht = rt === "reverse" && nr ? 1 : 0), (Lt = Ht * Rt);
      }
      const zt = Vt ? { done: !1, value: _[0] } : Wt.next(Lt);
      pt && (zt.value = pt(zt.value));
      let { done: Gt } = zt;
      !Vt && It !== null && (Gt = dt >= 0 ? Dt >= jt : Dt <= 0);
      const Kt = St === null && (bt === "finished" || (bt === "running" && Gt));
      return st && st(zt.value), Kt && gt(), zt;
    },
    Et = () => {
      lt && lt.stop(), (lt = void 0);
    },
    kt = () => {
      (bt = "idle"), Et(), ft(), ut(), (Pt = Mt = null);
    },
    gt = () => {
      (bt = "finished"), at && at(), Et(), ft();
    },
    yt = () => {
      if (ht) return;
      lt || (lt = s(At));
      const _t = lt.now();
      nt && nt(),
        St !== null ? (Pt = _t - St) : (!Pt || bt === "finished") && (Pt = _t),
        bt === "finished" && ut(),
        (Mt = Pt),
        (St = null),
        (bt = "running"),
        lt.start();
    };
  a && yt();
  const wt = {
    then(_t, Ft) {
      return mt.then(_t, Ft);
    },
    get time() {
      return millisecondsToSeconds(Dt);
    },
    set time(_t) {
      (_t = secondsToMilliseconds(_t)),
        (Dt = _t),
        St !== null || !lt || dt === 0 ? (St = _t) : (Pt = lt.now() - _t / dt);
    },
    get duration() {
      const _t =
        vt.calculatedDuration === null
          ? calcGeneratorDuration(vt)
          : vt.calculatedDuration;
      return millisecondsToSeconds(_t);
    },
    get speed() {
      return dt;
    },
    set speed(_t) {
      _t === dt || !lt || ((dt = _t), (wt.time = millisecondsToSeconds(Dt)));
    },
    get state() {
      return bt;
    },
    play: yt,
    pause: () => {
      (bt = "paused"), (St = Dt);
    },
    stop: () => {
      (ht = !0), bt !== "idle" && ((bt = "idle"), it && it(), kt());
    },
    cancel: () => {
      Mt !== null && At(Mt), kt();
    },
    complete: () => {
      bt = "finished";
    },
    sample: (_t) => ((Pt = 0), At(_t)),
  };
  return wt;
}
function memo(a) {
  let o;
  return () => (o === void 0 && (o = a()), o);
}
const supportsWaapi = memo(() =>
    Object.hasOwnProperty.call(Element.prototype, "animate")
  ),
  acceleratedValues = new Set([
    "opacity",
    "clipPath",
    "filter",
    "transform",
    "backgroundColor",
  ]),
  sampleDelta = 10,
  maxDuration = 2e4,
  requiresPregeneratedKeyframes = (a, o) =>
    o.type === "spring" ||
    a === "backgroundColor" ||
    !isWaapiSupportedEasing(o.ease);
function createAcceleratedAnimation(
  a,
  o,
  { onUpdate: s, onComplete: _, ...$ }
) {
  if (
    !(
      supportsWaapi() &&
      acceleratedValues.has(o) &&
      !$.repeatDelay &&
      $.repeatType !== "mirror" &&
      $.damping !== 0 &&
      $.type !== "inertia"
    )
  )
    return !1;
  let tt = !1,
    rt,
    nt;
  const it = () => {
    nt = new Promise((lt) => {
      rt = lt;
    });
  };
  it();
  let { keyframes: at, duration: st = 300, ease: ot, times: dt } = $;
  if (requiresPregeneratedKeyframes(o, $)) {
    const lt = animateValue({ ...$, repeat: 0, delay: 0 });
    let ct = { done: !1, value: at[0] };
    const pt = [];
    let vt = 0;
    for (; !ct.done && vt < maxDuration; )
      (ct = lt.sample(vt)), pt.push(ct.value), (vt += sampleDelta);
    (dt = void 0), (at = pt), (st = vt - sampleDelta), (ot = "linear");
  }
  const ht = animateStyle(a.owner.current, o, at, {
      ...$,
      duration: st,
      ease: ot,
      times: dt,
    }),
    ft = () => ht.cancel(),
    mt = () => {
      frame.update(ft), rt(), it();
    };
  return (
    (ht.onfinish = () => {
      a.set(getFinalKeyframe(at, $)), _ && _(), mt();
    }),
    {
      then(lt, ct) {
        return nt.then(lt, ct);
      },
      attachTimeline(lt) {
        return (ht.timeline = lt), (ht.onfinish = null), noop;
      },
      get time() {
        return millisecondsToSeconds(ht.currentTime || 0);
      },
      set time(lt) {
        ht.currentTime = secondsToMilliseconds(lt);
      },
      get speed() {
        return ht.playbackRate;
      },
      set speed(lt) {
        ht.playbackRate = lt;
      },
      get duration() {
        return millisecondsToSeconds(st);
      },
      play: () => {
        tt || (ht.play(), cancelFrame(ft));
      },
      pause: () => ht.pause(),
      stop: () => {
        if (((tt = !0), ht.playState === "idle")) return;
        const { currentTime: lt } = ht;
        if (lt) {
          const ct = animateValue({ ...$, autoplay: !1 });
          a.setWithVelocity(
            ct.sample(lt - sampleDelta).value,
            ct.sample(lt).value,
            sampleDelta
          );
        }
        mt();
      },
      complete: () => ht.finish(),
      cancel: mt,
    }
  );
}
function createInstantAnimation({
  keyframes: a,
  delay: o,
  onUpdate: s,
  onComplete: _,
}) {
  const $ = () => (
    s && s(a[a.length - 1]),
    _ && _(),
    {
      time: 0,
      speed: 1,
      duration: 0,
      play: noop,
      pause: noop,
      stop: noop,
      then: (et) => (et(), Promise.resolve()),
      cancel: noop,
      complete: noop,
    }
  );
  return o
    ? animateValue({ keyframes: [0, 1], duration: 0, delay: o, onComplete: $ })
    : $();
}
const underDampedSpring = {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10,
  },
  criticallyDampedSpring = (a) => ({
    type: "spring",
    stiffness: 550,
    damping: a === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10,
  }),
  keyframesTransition = { type: "keyframes", duration: 0.8 },
  ease = { type: "keyframes", ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
  getDefaultTransition = (a, { keyframes: o }) =>
    o.length > 2
      ? keyframesTransition
      : transformProps.has(a)
      ? a.startsWith("scale")
        ? criticallyDampedSpring(o[1])
        : underDampedSpring
      : ease,
  isAnimatable = (a, o) =>
    a === "zIndex"
      ? !1
      : !!(
          typeof o == "number" ||
          Array.isArray(o) ||
          (typeof o == "string" &&
            (complex.test(o) || o === "0") &&
            !o.startsWith("url("))
        ),
  maxDefaults = new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(a) {
  const [o, s] = a.slice(0, -1).split("(");
  if (o === "drop-shadow") return a;
  const [_] = s.match(floatRegex) || [];
  if (!_) return a;
  const $ = s.replace(_, "");
  let et = maxDefaults.has(o) ? 1 : 0;
  return _ !== s && (et *= 100), o + "(" + et + $ + ")";
}
const functionRegex = /([a-z-]*)\(.*?\)/g,
  filter = {
    ...complex,
    getAnimatableNone: (a) => {
      const o = a.match(functionRegex);
      return o ? o.map(applyDefaultFilter).join(" ") : a;
    },
  },
  defaultValueTypes = {
    ...numberValueTypes,
    color,
    backgroundColor: color,
    outlineColor: color,
    fill: color,
    stroke: color,
    borderColor: color,
    borderTopColor: color,
    borderRightColor: color,
    borderBottomColor: color,
    borderLeftColor: color,
    filter,
    WebkitFilter: filter,
  },
  getDefaultValueType = (a) => defaultValueTypes[a];
function getAnimatableNone(a, o) {
  let s = getDefaultValueType(a);
  return (
    s !== filter && (s = complex),
    s.getAnimatableNone ? s.getAnimatableNone(o) : void 0
  );
}
const isZeroValueString = (a) => /^0[^.\s]+$/.test(a);
function isNone(a) {
  if (typeof a == "number") return a === 0;
  if (a !== null) return a === "none" || a === "0" || isZeroValueString(a);
}
function getKeyframes(a, o, s, _) {
  const $ = isAnimatable(o, s);
  let et;
  Array.isArray(s) ? (et = [...s]) : (et = [null, s]);
  const tt = _.from !== void 0 ? _.from : a.get();
  let rt;
  const nt = [];
  for (let it = 0; it < et.length; it++)
    et[it] === null && (et[it] = it === 0 ? tt : et[it - 1]),
      isNone(et[it]) && nt.push(it),
      typeof et[it] == "string" &&
        et[it] !== "none" &&
        et[it] !== "0" &&
        (rt = et[it]);
  if ($ && nt.length && rt)
    for (let it = 0; it < nt.length; it++) {
      const at = nt[it];
      et[at] = getAnimatableNone(o, rt);
    }
  return et;
}
function isTransitionDefined({
  when: a,
  delay: o,
  delayChildren: s,
  staggerChildren: _,
  staggerDirection: $,
  repeat: et,
  repeatType: tt,
  repeatDelay: rt,
  from: nt,
  elapsed: it,
  ...at
}) {
  return !!Object.keys(at).length;
}
function getValueTransition(a, o) {
  return a[o] || a.default || a;
}
const animateMotionValue =
  (a, o, s, _ = {}) =>
  ($) => {
    const et = getValueTransition(_, a) || {},
      tt = et.delay || _.delay || 0;
    let { elapsed: rt = 0 } = _;
    rt = rt - secondsToMilliseconds(tt);
    const nt = getKeyframes(o, a, s, et),
      it = nt[0],
      at = nt[nt.length - 1],
      st = isAnimatable(a, it),
      ot = isAnimatable(a, at);
    let dt = {
      keyframes: nt,
      velocity: o.getVelocity(),
      ease: "easeOut",
      ...et,
      delay: -rt,
      onUpdate: (ht) => {
        o.set(ht), et.onUpdate && et.onUpdate(ht);
      },
      onComplete: () => {
        $(), et.onComplete && et.onComplete();
      },
    };
    if (
      (isTransitionDefined(et) ||
        (dt = { ...dt, ...getDefaultTransition(a, dt) }),
      dt.duration && (dt.duration = secondsToMilliseconds(dt.duration)),
      dt.repeatDelay &&
        (dt.repeatDelay = secondsToMilliseconds(dt.repeatDelay)),
      !st || !ot || instantAnimationState.current || et.type === !1)
    )
      return createInstantAnimation(dt);
    if (
      o.owner &&
      o.owner.current instanceof HTMLElement &&
      !o.owner.getProps().onUpdate
    ) {
      const ht = createAcceleratedAnimation(o, a, dt);
      if (ht) return ht;
    }
    return animateValue(dt);
  };
function isWillChangeMotionValue(a) {
  return !!(isMotionValue(a) && a.add);
}
const isNumericalString = (a) => /^\-?\d*\.?\d+$/.test(a);
function addUniqueItem(a, o) {
  a.indexOf(o) === -1 && a.push(o);
}
function removeItem(a, o) {
  const s = a.indexOf(o);
  s > -1 && a.splice(s, 1);
}
class SubscriptionManager {
  constructor() {
    this.subscriptions = [];
  }
  add(o) {
    return (
      addUniqueItem(this.subscriptions, o),
      () => removeItem(this.subscriptions, o)
    );
  }
  notify(o, s, _) {
    const $ = this.subscriptions.length;
    if ($)
      if ($ === 1) this.subscriptions[0](o, s, _);
      else
        for (let et = 0; et < $; et++) {
          const tt = this.subscriptions[et];
          tt && tt(o, s, _);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const isFloat = (a) => !isNaN(parseFloat(a));
class MotionValue {
  constructor(o, s = {}) {
    (this.version = "10.14.0"),
      (this.timeDelta = 0),
      (this.lastUpdated = 0),
      (this.canTrackVelocity = !1),
      (this.events = {}),
      (this.updateAndNotify = (_, $ = !0) => {
        (this.prev = this.current), (this.current = _);
        const { delta: et, timestamp: tt } = frameData;
        this.lastUpdated !== tt &&
          ((this.timeDelta = et),
          (this.lastUpdated = tt),
          frame.postRender(this.scheduleVelocityCheck)),
          this.prev !== this.current &&
            this.events.change &&
            this.events.change.notify(this.current),
          this.events.velocityChange &&
            this.events.velocityChange.notify(this.getVelocity()),
          $ &&
            this.events.renderRequest &&
            this.events.renderRequest.notify(this.current);
      }),
      (this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck)),
      (this.velocityCheck = ({ timestamp: _ }) => {
        _ !== this.lastUpdated &&
          ((this.prev = this.current),
          this.events.velocityChange &&
            this.events.velocityChange.notify(this.getVelocity()));
      }),
      (this.hasAnimated = !1),
      (this.prev = this.current = o),
      (this.canTrackVelocity = isFloat(this.current)),
      (this.owner = s.owner);
  }
  onChange(o) {
    return this.on("change", o);
  }
  on(o, s) {
    this.events[o] || (this.events[o] = new SubscriptionManager());
    const _ = this.events[o].add(s);
    return o === "change"
      ? () => {
          _(),
            frame.read(() => {
              this.events.change.getSize() || this.stop();
            });
        }
      : _;
  }
  clearListeners() {
    for (const o in this.events) this.events[o].clear();
  }
  attach(o, s) {
    (this.passiveEffect = o), (this.stopPassiveEffect = s);
  }
  set(o, s = !0) {
    !s || !this.passiveEffect
      ? this.updateAndNotify(o, s)
      : this.passiveEffect(o, this.updateAndNotify);
  }
  setWithVelocity(o, s, _) {
    this.set(s), (this.prev = o), (this.timeDelta = _);
  }
  jump(o) {
    this.updateAndNotify(o),
      (this.prev = o),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
  get() {
    return this.current;
  }
  getPrevious() {
    return this.prev;
  }
  getVelocity() {
    return this.canTrackVelocity
      ? velocityPerSecond(
          parseFloat(this.current) - parseFloat(this.prev),
          this.timeDelta
        )
      : 0;
  }
  start(o) {
    return (
      this.stop(),
      new Promise((s) => {
        (this.hasAnimated = !0),
          (this.animation = o(s)),
          this.events.animationStart && this.events.animationStart.notify();
      }).then(() => {
        this.events.animationComplete && this.events.animationComplete.notify(),
          this.clearAnimation();
      })
    );
  }
  stop() {
    this.animation &&
      (this.animation.stop(),
      this.events.animationCancel && this.events.animationCancel.notify()),
      this.clearAnimation();
  }
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  destroy() {
    this.clearListeners(),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function motionValue(a, o) {
  return new MotionValue(a, o);
}
const testValueType = (a) => (o) => o.test(a),
  auto = { test: (a) => a === "auto", parse: (a) => a },
  dimensionValueTypes = [number, px$1, percent, degrees, vw, vh, auto],
  findDimensionValueType = (a) => dimensionValueTypes.find(testValueType(a)),
  valueTypes = [...dimensionValueTypes, color, complex],
  findValueType = (a) => valueTypes.find(testValueType(a));
function setMotionValue(a, o, s) {
  a.hasValue(o) ? a.getValue(o).set(s) : a.addValue(o, motionValue(s));
}
function setTarget(a, o) {
  const s = resolveVariant(a, o);
  let {
    transitionEnd: _ = {},
    transition: $ = {},
    ...et
  } = s ? a.makeTargetAnimatable(s, !1) : {};
  et = { ...et, ..._ };
  for (const tt in et) {
    const rt = resolveFinalValueInKeyframes(et[tt]);
    setMotionValue(a, tt, rt);
  }
}
function checkTargetForNewValues(a, o, s) {
  var _, $;
  const et = Object.keys(o).filter((rt) => !a.hasValue(rt)),
    tt = et.length;
  if (tt)
    for (let rt = 0; rt < tt; rt++) {
      const nt = et[rt],
        it = o[nt];
      let at = null;
      Array.isArray(it) && (at = it[0]),
        at === null &&
          (at =
            ($ = (_ = s[nt]) !== null && _ !== void 0 ? _ : a.readValue(nt)) !==
              null && $ !== void 0
              ? $
              : o[nt]),
        at != null &&
          (typeof at == "string" &&
          (isNumericalString(at) || isZeroValueString(at))
            ? (at = parseFloat(at))
            : !findValueType(at) &&
              complex.test(it) &&
              (at = getAnimatableNone(nt, it)),
          a.addValue(nt, motionValue(at, { owner: a })),
          s[nt] === void 0 && (s[nt] = at),
          at !== null && a.setBaseTarget(nt, at));
    }
}
function getOriginFromTransition(a, o) {
  return o ? (o[a] || o.default || o).from : void 0;
}
function getOrigin(a, o, s) {
  const _ = {};
  for (const $ in a) {
    const et = getOriginFromTransition($, o);
    if (et !== void 0) _[$] = et;
    else {
      const tt = s.getValue($);
      tt && (_[$] = tt.get());
    }
  }
  return _;
}
function shouldBlockAnimation({ protectedKeys: a, needsAnimating: o }, s) {
  const _ = a.hasOwnProperty(s) && o[s] !== !0;
  return (o[s] = !1), _;
}
function animateTarget(
  a,
  o,
  { delay: s = 0, transitionOverride: _, type: $ } = {}
) {
  let {
    transition: et = a.getDefaultTransition(),
    transitionEnd: tt,
    ...rt
  } = a.makeTargetAnimatable(o);
  const nt = a.getValue("willChange");
  _ && (et = _);
  const it = [],
    at = $ && a.animationState && a.animationState.getState()[$];
  for (const st in rt) {
    const ot = a.getValue(st),
      dt = rt[st];
    if (!ot || dt === void 0 || (at && shouldBlockAnimation(at, st))) continue;
    const ht = { delay: s, elapsed: 0, ...et };
    if (window.HandoffAppearAnimations && !ot.hasAnimated) {
      const mt = a.getProps()[optimizedAppearDataAttribute];
      mt && (ht.elapsed = window.HandoffAppearAnimations(mt, st, ot, frame));
    }
    ot.start(
      animateMotionValue(
        st,
        ot,
        dt,
        a.shouldReduceMotion && transformProps.has(st) ? { type: !1 } : ht
      )
    );
    const ft = ot.animation;
    isWillChangeMotionValue(nt) && (nt.add(st), ft.then(() => nt.remove(st))),
      it.push(ft);
  }
  return (
    tt &&
      Promise.all(it).then(() => {
        tt && setTarget(a, tt);
      }),
    it
  );
}
function animateVariant(a, o, s = {}) {
  const _ = resolveVariant(a, o, s.custom);
  let { transition: $ = a.getDefaultTransition() || {} } = _ || {};
  s.transitionOverride && ($ = s.transitionOverride);
  const et = _
      ? () => Promise.all(animateTarget(a, _, s))
      : () => Promise.resolve(),
    tt =
      a.variantChildren && a.variantChildren.size
        ? (nt = 0) => {
            const {
              delayChildren: it = 0,
              staggerChildren: at,
              staggerDirection: st,
            } = $;
            return animateChildren(a, o, it + nt, at, st, s);
          }
        : () => Promise.resolve(),
    { when: rt } = $;
  if (rt) {
    const [nt, it] = rt === "beforeChildren" ? [et, tt] : [tt, et];
    return nt().then(() => it());
  } else return Promise.all([et(), tt(s.delay)]);
}
function animateChildren(a, o, s = 0, _ = 0, $ = 1, et) {
  const tt = [],
    rt = (a.variantChildren.size - 1) * _,
    nt = $ === 1 ? (it = 0) => it * _ : (it = 0) => rt - it * _;
  return (
    Array.from(a.variantChildren)
      .sort(sortByTreeOrder)
      .forEach((it, at) => {
        it.notify("AnimationStart", o),
          tt.push(
            animateVariant(it, o, { ...et, delay: s + nt(at) }).then(() =>
              it.notify("AnimationComplete", o)
            )
          );
      }),
    Promise.all(tt)
  );
}
function sortByTreeOrder(a, o) {
  return a.sortNodePosition(o);
}
function animateVisualElement(a, o, s = {}) {
  a.notify("AnimationStart", o);
  let _;
  if (Array.isArray(o)) {
    const $ = o.map((et) => animateVariant(a, et, s));
    _ = Promise.all($);
  } else if (typeof o == "string") _ = animateVariant(a, o, s);
  else {
    const $ = typeof o == "function" ? resolveVariant(a, o, s.custom) : o;
    _ = Promise.all(animateTarget(a, $, s));
  }
  return _.then(() => a.notify("AnimationComplete", o));
}
const reversePriorityOrder = [...variantPriorityOrder].reverse(),
  numAnimationTypes = variantPriorityOrder.length;
function animateList(a) {
  return (o) =>
    Promise.all(
      o.map(({ animation: s, options: _ }) => animateVisualElement(a, s, _))
    );
}
function createAnimationState(a) {
  let o = animateList(a);
  const s = createState();
  let _ = !0;
  const $ = (nt, it) => {
    const at = resolveVariant(a, it);
    if (at) {
      const { transition: st, transitionEnd: ot, ...dt } = at;
      nt = { ...nt, ...dt, ...ot };
    }
    return nt;
  };
  function et(nt) {
    o = nt(a);
  }
  function tt(nt, it) {
    const at = a.getProps(),
      st = a.getVariantContext(!0) || {},
      ot = [],
      dt = new Set();
    let ht = {},
      ft = 1 / 0;
    for (let ut = 0; ut < numAnimationTypes; ut++) {
      const lt = reversePriorityOrder[ut],
        ct = s[lt],
        pt = at[lt] !== void 0 ? at[lt] : st[lt],
        vt = isVariantLabel(pt),
        xt = lt === it ? ct.isActive : null;
      xt === !1 && (ft = ut);
      let bt = pt === st[lt] && pt !== at[lt] && vt;
      if (
        (bt && _ && a.manuallyAnimateOnMount && (bt = !1),
        (ct.protectedKeys = { ...ht }),
        (!ct.isActive && xt === null) ||
          (!pt && !ct.prevProp) ||
          isAnimationControls(pt) ||
          typeof pt == "boolean")
      )
        continue;
      const St = checkVariantsDidChange(ct.prevProp, pt);
      let Pt = St || (lt === it && ct.isActive && !bt && vt) || (ut > ft && vt);
      const Mt = Array.isArray(pt) ? pt : [pt];
      let It = Mt.reduce($, {});
      xt === !1 && (It = {});
      const { prevResolvedValues: Rt = {} } = ct,
        jt = { ...Rt, ...It },
        Dt = (At) => {
          (Pt = !0), dt.delete(At), (ct.needsAnimating[At] = !0);
        };
      for (const At in jt) {
        const Et = It[At],
          kt = Rt[At];
        ht.hasOwnProperty(At) ||
          (Et !== kt
            ? isKeyframesTarget(Et) && isKeyframesTarget(kt)
              ? !shallowCompare(Et, kt) || St
                ? Dt(At)
                : (ct.protectedKeys[At] = !0)
              : Et !== void 0
              ? Dt(At)
              : dt.add(At)
            : Et !== void 0 && dt.has(At)
            ? Dt(At)
            : (ct.protectedKeys[At] = !0));
      }
      (ct.prevProp = pt),
        (ct.prevResolvedValues = It),
        ct.isActive && (ht = { ...ht, ...It }),
        _ && a.blockInitialAnimation && (Pt = !1),
        Pt &&
          !bt &&
          ot.push(
            ...Mt.map((At) => ({ animation: At, options: { type: lt, ...nt } }))
          );
    }
    if (dt.size) {
      const ut = {};
      dt.forEach((lt) => {
        const ct = a.getBaseTarget(lt);
        ct !== void 0 && (ut[lt] = ct);
      }),
        ot.push({ animation: ut });
    }
    let mt = !!ot.length;
    return (
      _ && at.initial === !1 && !a.manuallyAnimateOnMount && (mt = !1),
      (_ = !1),
      mt ? o(ot) : Promise.resolve()
    );
  }
  function rt(nt, it, at) {
    var st;
    if (s[nt].isActive === it) return Promise.resolve();
    (st = a.variantChildren) === null ||
      st === void 0 ||
      st.forEach((dt) => {
        var ht;
        return (ht = dt.animationState) === null || ht === void 0
          ? void 0
          : ht.setActive(nt, it);
      }),
      (s[nt].isActive = it);
    const ot = tt(at, nt);
    for (const dt in s) s[dt].protectedKeys = {};
    return ot;
  }
  return {
    animateChanges: tt,
    setActive: rt,
    setAnimateFunction: et,
    getState: () => s,
  };
}
function checkVariantsDidChange(a, o) {
  return typeof o == "string"
    ? o !== a
    : Array.isArray(o)
    ? !shallowCompare(o, a)
    : !1;
}
function createTypeState(a = !1) {
  return {
    isActive: a,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {},
  };
}
function createState() {
  return {
    animate: createTypeState(!0),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState(),
  };
}
class AnimationFeature extends Feature$1 {
  constructor(o) {
    super(o), o.animationState || (o.animationState = createAnimationState(o));
  }
  updateAnimationControlsSubscription() {
    const { animate: o } = this.node.getProps();
    this.unmount(),
      isAnimationControls(o) && (this.unmount = o.subscribe(this.node));
  }
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: o } = this.node.getProps(),
      { animate: s } = this.node.prevProps || {};
    o !== s && this.updateAnimationControlsSubscription();
  }
  unmount() {}
}
let id$3 = 0;
class ExitAnimationFeature extends Feature$1 {
  constructor() {
    super(...arguments), (this.id = id$3++);
  }
  update() {
    if (!this.node.presenceContext) return;
    const {
        isPresent: o,
        onExitComplete: s,
        custom: _,
      } = this.node.presenceContext,
      { isPresent: $ } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || o === $) return;
    const et = this.node.animationState.setActive("exit", !o, {
      custom: _ ?? this.node.getProps().custom,
    });
    s && !o && et.then(() => s(this.id));
  }
  mount() {
    const { register: o } = this.node.presenceContext || {};
    o && (this.unmount = o(this.id));
  }
  unmount() {}
}
const animations$1 = {
    animation: { Feature: AnimationFeature },
    exit: { Feature: ExitAnimationFeature },
  },
  distance = (a, o) => Math.abs(a - o);
function distance2D(a, o) {
  const s = distance(a.x, o.x),
    _ = distance(a.y, o.y);
  return Math.sqrt(s ** 2 + _ ** 2);
}
class PanSession {
  constructor(o, s, { transformPagePoint: _ } = {}) {
    if (
      ((this.startEvent = null),
      (this.lastMoveEvent = null),
      (this.lastMoveEventInfo = null),
      (this.handlers = {}),
      (this.updatePoint = () => {
        if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
        const it = getPanInfo(this.lastMoveEventInfo, this.history),
          at = this.startEvent !== null,
          st = distance2D(it.offset, { x: 0, y: 0 }) >= 3;
        if (!at && !st) return;
        const { point: ot } = it,
          { timestamp: dt } = frameData;
        this.history.push({ ...ot, timestamp: dt });
        const { onStart: ht, onMove: ft } = this.handlers;
        at ||
          (ht && ht(this.lastMoveEvent, it),
          (this.startEvent = this.lastMoveEvent)),
          ft && ft(this.lastMoveEvent, it);
      }),
      (this.handlePointerMove = (it, at) => {
        (this.lastMoveEvent = it),
          (this.lastMoveEventInfo = transformPoint(
            at,
            this.transformPagePoint
          )),
          frame.update(this.updatePoint, !0);
      }),
      (this.handlePointerUp = (it, at) => {
        if ((this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo)))
          return;
        const { onEnd: st, onSessionEnd: ot } = this.handlers,
          dt = getPanInfo(
            it.type === "pointercancel"
              ? this.lastMoveEventInfo
              : transformPoint(at, this.transformPagePoint),
            this.history
          );
        this.startEvent && st && st(it, dt), ot && ot(it, dt);
      }),
      !isPrimaryPointer(o))
    )
      return;
    (this.handlers = s), (this.transformPagePoint = _);
    const $ = extractEventInfo(o),
      et = transformPoint($, this.transformPagePoint),
      { point: tt } = et,
      { timestamp: rt } = frameData;
    this.history = [{ ...tt, timestamp: rt }];
    const { onSessionStart: nt } = s;
    nt && nt(o, getPanInfo(et, this.history)),
      (this.removeListeners = pipe(
        addPointerEvent(window, "pointermove", this.handlePointerMove),
        addPointerEvent(window, "pointerup", this.handlePointerUp),
        addPointerEvent(window, "pointercancel", this.handlePointerUp)
      ));
  }
  updateHandlers(o) {
    this.handlers = o;
  }
  end() {
    this.removeListeners && this.removeListeners(),
      cancelFrame(this.updatePoint);
  }
}
function transformPoint(a, o) {
  return o ? { point: o(a.point) } : a;
}
function subtractPoint(a, o) {
  return { x: a.x - o.x, y: a.y - o.y };
}
function getPanInfo({ point: a }, o) {
  return {
    point: a,
    delta: subtractPoint(a, lastDevicePoint(o)),
    offset: subtractPoint(a, startDevicePoint(o)),
    velocity: getVelocity(o, 0.1),
  };
}
function startDevicePoint(a) {
  return a[0];
}
function lastDevicePoint(a) {
  return a[a.length - 1];
}
function getVelocity(a, o) {
  if (a.length < 2) return { x: 0, y: 0 };
  let s = a.length - 1,
    _ = null;
  const $ = lastDevicePoint(a);
  for (
    ;
    s >= 0 &&
    ((_ = a[s]), !($.timestamp - _.timestamp > secondsToMilliseconds(o)));

  )
    s--;
  if (!_) return { x: 0, y: 0 };
  const et = millisecondsToSeconds($.timestamp - _.timestamp);
  if (et === 0) return { x: 0, y: 0 };
  const tt = { x: ($.x - _.x) / et, y: ($.y - _.y) / et };
  return tt.x === 1 / 0 && (tt.x = 0), tt.y === 1 / 0 && (tt.y = 0), tt;
}
function calcLength(a) {
  return a.max - a.min;
}
function isNear(a, o = 0, s = 0.01) {
  return Math.abs(a - o) <= s;
}
function calcAxisDelta(a, o, s, _ = 0.5) {
  (a.origin = _),
    (a.originPoint = mix(o.min, o.max, a.origin)),
    (a.scale = calcLength(s) / calcLength(o)),
    (isNear(a.scale, 1, 1e-4) || isNaN(a.scale)) && (a.scale = 1),
    (a.translate = mix(s.min, s.max, a.origin) - a.originPoint),
    (isNear(a.translate) || isNaN(a.translate)) && (a.translate = 0);
}
function calcBoxDelta(a, o, s, _) {
  calcAxisDelta(a.x, o.x, s.x, _ ? _.originX : void 0),
    calcAxisDelta(a.y, o.y, s.y, _ ? _.originY : void 0);
}
function calcRelativeAxis(a, o, s) {
  (a.min = s.min + o.min), (a.max = a.min + calcLength(o));
}
function calcRelativeBox(a, o, s) {
  calcRelativeAxis(a.x, o.x, s.x), calcRelativeAxis(a.y, o.y, s.y);
}
function calcRelativeAxisPosition(a, o, s) {
  (a.min = o.min - s.min), (a.max = a.min + calcLength(o));
}
function calcRelativePosition(a, o, s) {
  calcRelativeAxisPosition(a.x, o.x, s.x),
    calcRelativeAxisPosition(a.y, o.y, s.y);
}
function applyConstraints(a, { min: o, max: s }, _) {
  return (
    o !== void 0 && a < o
      ? (a = _ ? mix(o, a, _.min) : Math.max(a, o))
      : s !== void 0 && a > s && (a = _ ? mix(s, a, _.max) : Math.min(a, s)),
    a
  );
}
function calcRelativeAxisConstraints(a, o, s) {
  return {
    min: o !== void 0 ? a.min + o : void 0,
    max: s !== void 0 ? a.max + s - (a.max - a.min) : void 0,
  };
}
function calcRelativeConstraints(a, { top: o, left: s, bottom: _, right: $ }) {
  return {
    x: calcRelativeAxisConstraints(a.x, s, $),
    y: calcRelativeAxisConstraints(a.y, o, _),
  };
}
function calcViewportAxisConstraints(a, o) {
  let s = o.min - a.min,
    _ = o.max - a.max;
  return o.max - o.min < a.max - a.min && ([s, _] = [_, s]), { min: s, max: _ };
}
function calcViewportConstraints(a, o) {
  return {
    x: calcViewportAxisConstraints(a.x, o.x),
    y: calcViewportAxisConstraints(a.y, o.y),
  };
}
function calcOrigin(a, o) {
  let s = 0.5;
  const _ = calcLength(a),
    $ = calcLength(o);
  return (
    $ > _
      ? (s = progress(o.min, o.max - _, a.min))
      : _ > $ && (s = progress(a.min, a.max - $, o.min)),
    clamp(0, 1, s)
  );
}
function rebaseAxisConstraints(a, o) {
  const s = {};
  return (
    o.min !== void 0 && (s.min = o.min - a.min),
    o.max !== void 0 && (s.max = o.max - a.min),
    s
  );
}
const defaultElastic = 0.35;
function resolveDragElastic(a = defaultElastic) {
  return (
    a === !1 ? (a = 0) : a === !0 && (a = defaultElastic),
    {
      x: resolveAxisElastic(a, "left", "right"),
      y: resolveAxisElastic(a, "top", "bottom"),
    }
  );
}
function resolveAxisElastic(a, o, s) {
  return { min: resolvePointElastic(a, o), max: resolvePointElastic(a, s) };
}
function resolvePointElastic(a, o) {
  return typeof a == "number" ? a : a[o] || 0;
}
const createAxisDelta = () => ({
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0,
  }),
  createDelta = () => ({ x: createAxisDelta(), y: createAxisDelta() }),
  createAxis = () => ({ min: 0, max: 0 }),
  createBox = () => ({ x: createAxis(), y: createAxis() });
function eachAxis(a) {
  return [a("x"), a("y")];
}
function convertBoundingBoxToBox({ top: a, left: o, right: s, bottom: _ }) {
  return { x: { min: o, max: s }, y: { min: a, max: _ } };
}
function convertBoxToBoundingBox({ x: a, y: o }) {
  return { top: o.min, right: a.max, bottom: o.max, left: a.min };
}
function transformBoxPoints(a, o) {
  if (!o) return a;
  const s = o({ x: a.left, y: a.top }),
    _ = o({ x: a.right, y: a.bottom });
  return { top: s.y, left: s.x, bottom: _.y, right: _.x };
}
function isIdentityScale(a) {
  return a === void 0 || a === 1;
}
function hasScale({ scale: a, scaleX: o, scaleY: s }) {
  return !isIdentityScale(a) || !isIdentityScale(o) || !isIdentityScale(s);
}
function hasTransform(a) {
  return (
    hasScale(a) ||
    has2DTranslate(a) ||
    a.z ||
    a.rotate ||
    a.rotateX ||
    a.rotateY
  );
}
function has2DTranslate(a) {
  return is2DTranslate(a.x) || is2DTranslate(a.y);
}
function is2DTranslate(a) {
  return a && a !== "0%";
}
function scalePoint(a, o, s) {
  const _ = a - s,
    $ = o * _;
  return s + $;
}
function applyPointDelta(a, o, s, _, $) {
  return $ !== void 0 && (a = scalePoint(a, $, _)), scalePoint(a, s, _) + o;
}
function applyAxisDelta(a, o = 0, s = 1, _, $) {
  (a.min = applyPointDelta(a.min, o, s, _, $)),
    (a.max = applyPointDelta(a.max, o, s, _, $));
}
function applyBoxDelta(a, { x: o, y: s }) {
  applyAxisDelta(a.x, o.translate, o.scale, o.originPoint),
    applyAxisDelta(a.y, s.translate, s.scale, s.originPoint);
}
function applyTreeDeltas(a, o, s, _ = !1) {
  const $ = s.length;
  if (!$) return;
  o.x = o.y = 1;
  let et, tt;
  for (let rt = 0; rt < $; rt++) {
    (et = s[rt]), (tt = et.projectionDelta);
    const nt = et.instance;
    (nt && nt.style && nt.style.display === "contents") ||
      (_ &&
        et.options.layoutScroll &&
        et.scroll &&
        et !== et.root &&
        transformBox(a, { x: -et.scroll.offset.x, y: -et.scroll.offset.y }),
      tt && ((o.x *= tt.x.scale), (o.y *= tt.y.scale), applyBoxDelta(a, tt)),
      _ && hasTransform(et.latestValues) && transformBox(a, et.latestValues));
  }
  (o.x = snapToDefault(o.x)), (o.y = snapToDefault(o.y));
}
function snapToDefault(a) {
  return Number.isInteger(a) || a > 1.0000000000001 || a < 0.999999999999
    ? a
    : 1;
}
function translateAxis(a, o) {
  (a.min = a.min + o), (a.max = a.max + o);
}
function transformAxis(a, o, [s, _, $]) {
  const et = o[$] !== void 0 ? o[$] : 0.5,
    tt = mix(a.min, a.max, et);
  applyAxisDelta(a, o[s], o[_], tt, o.scale);
}
const xKeys$1 = ["x", "scaleX", "originX"],
  yKeys$1 = ["y", "scaleY", "originY"];
function transformBox(a, o) {
  transformAxis(a.x, o, xKeys$1), transformAxis(a.y, o, yKeys$1);
}
function measureViewportBox(a, o) {
  return convertBoundingBoxToBox(
    transformBoxPoints(a.getBoundingClientRect(), o)
  );
}
function measurePageBox(a, o, s) {
  const _ = measureViewportBox(a, s),
    { scroll: $ } = o;
  return (
    $ && (translateAxis(_.x, $.offset.x), translateAxis(_.y, $.offset.y)), _
  );
}
const elementDragControls = new WeakMap();
class VisualElementDragControls {
  constructor(o) {
    (this.openGlobalLock = null),
      (this.isDragging = !1),
      (this.currentDirection = null),
      (this.originPoint = { x: 0, y: 0 }),
      (this.constraints = !1),
      (this.hasMutatedConstraints = !1),
      (this.elastic = createBox()),
      (this.visualElement = o);
  }
  start(o, { snapToCursor: s = !1 } = {}) {
    const { presenceContext: _ } = this.visualElement;
    if (_ && _.isPresent === !1) return;
    const $ = (nt) => {
        this.stopAnimation(),
          s && this.snapToCursor(extractEventInfo(nt, "page").point);
      },
      et = (nt, it) => {
        const {
          drag: at,
          dragPropagation: st,
          onDragStart: ot,
        } = this.getProps();
        if (
          at &&
          !st &&
          (this.openGlobalLock && this.openGlobalLock(),
          (this.openGlobalLock = getGlobalLock(at)),
          !this.openGlobalLock)
        )
          return;
        (this.isDragging = !0),
          (this.currentDirection = null),
          this.resolveConstraints(),
          this.visualElement.projection &&
            ((this.visualElement.projection.isAnimationBlocked = !0),
            (this.visualElement.projection.target = void 0)),
          eachAxis((ht) => {
            let ft = this.getAxisMotionValue(ht).get() || 0;
            if (percent.test(ft)) {
              const { projection: mt } = this.visualElement;
              if (mt && mt.layout) {
                const ut = mt.layout.layoutBox[ht];
                ut && (ft = calcLength(ut) * (parseFloat(ft) / 100));
              }
            }
            this.originPoint[ht] = ft;
          }),
          ot && frame.update(() => ot(nt, it), !1, !0);
        const { animationState: dt } = this.visualElement;
        dt && dt.setActive("whileDrag", !0);
      },
      tt = (nt, it) => {
        const {
          dragPropagation: at,
          dragDirectionLock: st,
          onDirectionLock: ot,
          onDrag: dt,
        } = this.getProps();
        if (!at && !this.openGlobalLock) return;
        const { offset: ht } = it;
        if (st && this.currentDirection === null) {
          (this.currentDirection = getCurrentDirection(ht)),
            this.currentDirection !== null && ot && ot(this.currentDirection);
          return;
        }
        this.updateAxis("x", it.point, ht),
          this.updateAxis("y", it.point, ht),
          this.visualElement.render(),
          dt && dt(nt, it);
      },
      rt = (nt, it) => this.stop(nt, it);
    this.panSession = new PanSession(
      o,
      { onSessionStart: $, onStart: et, onMove: tt, onSessionEnd: rt },
      { transformPagePoint: this.visualElement.getTransformPagePoint() }
    );
  }
  stop(o, s) {
    const _ = this.isDragging;
    if ((this.cancel(), !_)) return;
    const { velocity: $ } = s;
    this.startAnimation($);
    const { onDragEnd: et } = this.getProps();
    et && frame.update(() => et(o, s));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: o, animationState: s } = this.visualElement;
    o && (o.isAnimationBlocked = !1),
      this.panSession && this.panSession.end(),
      (this.panSession = void 0);
    const { dragPropagation: _ } = this.getProps();
    !_ &&
      this.openGlobalLock &&
      (this.openGlobalLock(), (this.openGlobalLock = null)),
      s && s.setActive("whileDrag", !1);
  }
  updateAxis(o, s, _) {
    const { drag: $ } = this.getProps();
    if (!_ || !shouldDrag(o, $, this.currentDirection)) return;
    const et = this.getAxisMotionValue(o);
    let tt = this.originPoint[o] + _[o];
    this.constraints &&
      this.constraints[o] &&
      (tt = applyConstraints(tt, this.constraints[o], this.elastic[o])),
      et.set(tt);
  }
  resolveConstraints() {
    const { dragConstraints: o, dragElastic: s } = this.getProps(),
      { layout: _ } = this.visualElement.projection || {},
      $ = this.constraints;
    o && isRefObject(o)
      ? this.constraints || (this.constraints = this.resolveRefConstraints())
      : o && _
      ? (this.constraints = calcRelativeConstraints(_.layoutBox, o))
      : (this.constraints = !1),
      (this.elastic = resolveDragElastic(s)),
      $ !== this.constraints &&
        _ &&
        this.constraints &&
        !this.hasMutatedConstraints &&
        eachAxis((et) => {
          this.getAxisMotionValue(et) &&
            (this.constraints[et] = rebaseAxisConstraints(
              _.layoutBox[et],
              this.constraints[et]
            ));
        });
  }
  resolveRefConstraints() {
    const { dragConstraints: o, onMeasureDragConstraints: s } = this.getProps();
    if (!o || !isRefObject(o)) return !1;
    const _ = o.current,
      { projection: $ } = this.visualElement;
    if (!$ || !$.layout) return !1;
    const et = measurePageBox(
      _,
      $.root,
      this.visualElement.getTransformPagePoint()
    );
    let tt = calcViewportConstraints($.layout.layoutBox, et);
    if (s) {
      const rt = s(convertBoxToBoundingBox(tt));
      (this.hasMutatedConstraints = !!rt),
        rt && (tt = convertBoundingBoxToBox(rt));
    }
    return tt;
  }
  startAnimation(o) {
    const {
        drag: s,
        dragMomentum: _,
        dragElastic: $,
        dragTransition: et,
        dragSnapToOrigin: tt,
        onDragTransitionEnd: rt,
      } = this.getProps(),
      nt = this.constraints || {},
      it = eachAxis((at) => {
        if (!shouldDrag(at, s, this.currentDirection)) return;
        let st = (nt && nt[at]) || {};
        tt && (st = { min: 0, max: 0 });
        const ot = $ ? 200 : 1e6,
          dt = $ ? 40 : 1e7,
          ht = {
            type: "inertia",
            velocity: _ ? o[at] : 0,
            bounceStiffness: ot,
            bounceDamping: dt,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...et,
            ...st,
          };
        return this.startAxisValueAnimation(at, ht);
      });
    return Promise.all(it).then(rt);
  }
  startAxisValueAnimation(o, s) {
    const _ = this.getAxisMotionValue(o);
    return _.start(animateMotionValue(o, _, 0, s));
  }
  stopAnimation() {
    eachAxis((o) => this.getAxisMotionValue(o).stop());
  }
  getAxisMotionValue(o) {
    const s = "_drag" + o.toUpperCase(),
      _ = this.visualElement.getProps(),
      $ = _[s];
    return (
      $ ||
      this.visualElement.getValue(o, (_.initial ? _.initial[o] : void 0) || 0)
    );
  }
  snapToCursor(o) {
    eachAxis((s) => {
      const { drag: _ } = this.getProps();
      if (!shouldDrag(s, _, this.currentDirection)) return;
      const { projection: $ } = this.visualElement,
        et = this.getAxisMotionValue(s);
      if ($ && $.layout) {
        const { min: tt, max: rt } = $.layout.layoutBox[s];
        et.set(o[s] - mix(tt, rt, 0.5));
      }
    });
  }
  scalePositionWithinConstraints() {
    if (!this.visualElement.current) return;
    const { drag: o, dragConstraints: s } = this.getProps(),
      { projection: _ } = this.visualElement;
    if (!isRefObject(s) || !_ || !this.constraints) return;
    this.stopAnimation();
    const $ = { x: 0, y: 0 };
    eachAxis((tt) => {
      const rt = this.getAxisMotionValue(tt);
      if (rt) {
        const nt = rt.get();
        $[tt] = calcOrigin({ min: nt, max: nt }, this.constraints[tt]);
      }
    });
    const { transformTemplate: et } = this.visualElement.getProps();
    (this.visualElement.current.style.transform = et ? et({}, "") : "none"),
      _.root && _.root.updateScroll(),
      _.updateLayout(),
      this.resolveConstraints(),
      eachAxis((tt) => {
        if (!shouldDrag(tt, o, null)) return;
        const rt = this.getAxisMotionValue(tt),
          { min: nt, max: it } = this.constraints[tt];
        rt.set(mix(nt, it, $[tt]));
      });
  }
  addListeners() {
    if (!this.visualElement.current) return;
    elementDragControls.set(this.visualElement, this);
    const o = this.visualElement.current,
      s = addPointerEvent(o, "pointerdown", (nt) => {
        const { drag: it, dragListener: at = !0 } = this.getProps();
        it && at && this.start(nt);
      }),
      _ = () => {
        const { dragConstraints: nt } = this.getProps();
        isRefObject(nt) && (this.constraints = this.resolveRefConstraints());
      },
      { projection: $ } = this.visualElement,
      et = $.addEventListener("measure", _);
    $ && !$.layout && ($.root && $.root.updateScroll(), $.updateLayout()), _();
    const tt = addDomEvent(window, "resize", () =>
        this.scalePositionWithinConstraints()
      ),
      rt = $.addEventListener(
        "didUpdate",
        ({ delta: nt, hasLayoutChanged: it }) => {
          this.isDragging &&
            it &&
            (eachAxis((at) => {
              const st = this.getAxisMotionValue(at);
              st &&
                ((this.originPoint[at] += nt[at].translate),
                st.set(st.get() + nt[at].translate));
            }),
            this.visualElement.render());
        }
      );
    return () => {
      tt(), s(), et(), rt && rt();
    };
  }
  getProps() {
    const o = this.visualElement.getProps(),
      {
        drag: s = !1,
        dragDirectionLock: _ = !1,
        dragPropagation: $ = !1,
        dragConstraints: et = !1,
        dragElastic: tt = defaultElastic,
        dragMomentum: rt = !0,
      } = o;
    return {
      ...o,
      drag: s,
      dragDirectionLock: _,
      dragPropagation: $,
      dragConstraints: et,
      dragElastic: tt,
      dragMomentum: rt,
    };
  }
}
function shouldDrag(a, o, s) {
  return (o === !0 || o === a) && (s === null || s === a);
}
function getCurrentDirection(a, o = 10) {
  let s = null;
  return Math.abs(a.y) > o ? (s = "y") : Math.abs(a.x) > o && (s = "x"), s;
}
class DragGesture extends Feature$1 {
  constructor(o) {
    super(o),
      (this.removeGroupControls = noop),
      (this.removeListeners = noop),
      (this.controls = new VisualElementDragControls(o));
  }
  mount() {
    const { dragControls: o } = this.node.getProps();
    o && (this.removeGroupControls = o.subscribe(this.controls)),
      (this.removeListeners = this.controls.addListeners() || noop);
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const asyncHandler = (a) => (o, s) => {
  a && frame.update(() => a(o, s));
};
class PanGesture extends Feature$1 {
  constructor() {
    super(...arguments), (this.removePointerDownListener = noop);
  }
  onPointerDown(o) {
    this.session = new PanSession(o, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
    });
  }
  createPanHandlers() {
    const {
      onPanSessionStart: o,
      onPanStart: s,
      onPan: _,
      onPanEnd: $,
    } = this.node.getProps();
    return {
      onSessionStart: asyncHandler(o),
      onStart: asyncHandler(s),
      onMove: _,
      onEnd: (et, tt) => {
        delete this.session, $ && frame.update(() => $(et, tt));
      },
    };
  }
  mount() {
    this.removePointerDownListener = addPointerEvent(
      this.node.current,
      "pointerdown",
      (o) => this.onPointerDown(o)
    );
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
function usePresence() {
  const a = reactExports.useContext(PresenceContext);
  if (a === null) return [!0, null];
  const { isPresent: o, onExitComplete: s, register: _ } = a,
    $ = reactExports.useId();
  return (
    reactExports.useEffect(() => _($), []),
    !o && s ? [!1, () => s && s($)] : [!0]
  );
}
function useIsPresent() {
  return isPresent(reactExports.useContext(PresenceContext));
}
function isPresent(a) {
  return a === null ? !0 : a.isPresent;
}
const globalProjectionState = {
  hasAnimatedSinceResize: !0,
  hasEverUpdated: !1,
};
function pixelsToPercent(a, o) {
  return o.max === o.min ? 0 : (a / (o.max - o.min)) * 100;
}
const correctBorderRadius = {
    correct: (a, o) => {
      if (!o.target) return a;
      if (typeof a == "string")
        if (px$1.test(a)) a = parseFloat(a);
        else return a;
      const s = pixelsToPercent(a, o.target.x),
        _ = pixelsToPercent(a, o.target.y);
      return `${s}% ${_}%`;
    },
  },
  correctBoxShadow = {
    correct: (a, { treeScale: o, projectionDelta: s }) => {
      const _ = a,
        $ = complex.parse(a);
      if ($.length > 5) return _;
      const et = complex.createTransformer(a),
        tt = typeof $[0] != "number" ? 1 : 0,
        rt = s.x.scale * o.x,
        nt = s.y.scale * o.y;
      ($[0 + tt] /= rt), ($[1 + tt] /= nt);
      const it = mix(rt, nt, 0.5);
      return (
        typeof $[2 + tt] == "number" && ($[2 + tt] /= it),
        typeof $[3 + tt] == "number" && ($[3 + tt] /= it),
        et($)
      );
    },
  };
class MeasureLayoutWithContext extends React.Component {
  componentDidMount() {
    const {
        visualElement: o,
        layoutGroup: s,
        switchLayoutGroup: _,
        layoutId: $,
      } = this.props,
      { projection: et } = o;
    addScaleCorrector(defaultScaleCorrectors),
      et &&
        (s.group && s.group.add(et),
        _ && _.register && $ && _.register(et),
        et.root.didUpdate(),
        et.addEventListener("animationComplete", () => {
          this.safeToRemove();
        }),
        et.setOptions({
          ...et.options,
          onExitComplete: () => this.safeToRemove(),
        })),
      (globalProjectionState.hasEverUpdated = !0);
  }
  getSnapshotBeforeUpdate(o) {
    const {
        layoutDependency: s,
        visualElement: _,
        drag: $,
        isPresent: et,
      } = this.props,
      tt = _.projection;
    return (
      tt &&
        ((tt.isPresent = et),
        $ || o.layoutDependency !== s || s === void 0
          ? tt.willUpdate()
          : this.safeToRemove(),
        o.isPresent !== et &&
          (et
            ? tt.promote()
            : tt.relegate() ||
              frame.postRender(() => {
                const rt = tt.getStack();
                (!rt || !rt.members.length) && this.safeToRemove();
              }))),
      null
    );
  }
  componentDidUpdate() {
    const { projection: o } = this.props.visualElement;
    o &&
      (o.root.didUpdate(),
      queueMicrotask(() => {
        !o.currentAnimation && o.isLead() && this.safeToRemove();
      }));
  }
  componentWillUnmount() {
    const {
        visualElement: o,
        layoutGroup: s,
        switchLayoutGroup: _,
      } = this.props,
      { projection: $ } = o;
    $ &&
      ($.scheduleCheckAfterUnmount(),
      s && s.group && s.group.remove($),
      _ && _.deregister && _.deregister($));
  }
  safeToRemove() {
    const { safeToRemove: o } = this.props;
    o && o();
  }
  render() {
    return null;
  }
}
function MeasureLayout(a) {
  const [o, s] = usePresence(),
    _ = reactExports.useContext(LayoutGroupContext);
  return React.createElement(MeasureLayoutWithContext, {
    ...a,
    layoutGroup: _,
    switchLayoutGroup: reactExports.useContext(SwitchLayoutGroupContext),
    isPresent: o,
    safeToRemove: s,
  });
}
const defaultScaleCorrectors = {
    borderRadius: {
      ...correctBorderRadius,
      applyTo: [
        "borderTopLeftRadius",
        "borderTopRightRadius",
        "borderBottomLeftRadius",
        "borderBottomRightRadius",
      ],
    },
    borderTopLeftRadius: correctBorderRadius,
    borderTopRightRadius: correctBorderRadius,
    borderBottomLeftRadius: correctBorderRadius,
    borderBottomRightRadius: correctBorderRadius,
    boxShadow: correctBoxShadow,
  },
  borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
  numBorders = borders.length,
  asNumber = (a) => (typeof a == "string" ? parseFloat(a) : a),
  isPx = (a) => typeof a == "number" || px$1.test(a);
function mixValues(a, o, s, _, $, et) {
  $
    ? ((a.opacity = mix(
        0,
        s.opacity !== void 0 ? s.opacity : 1,
        easeCrossfadeIn(_)
      )),
      (a.opacityExit = mix(
        o.opacity !== void 0 ? o.opacity : 1,
        0,
        easeCrossfadeOut(_)
      )))
    : et &&
      (a.opacity = mix(
        o.opacity !== void 0 ? o.opacity : 1,
        s.opacity !== void 0 ? s.opacity : 1,
        _
      ));
  for (let tt = 0; tt < numBorders; tt++) {
    const rt = `border${borders[tt]}Radius`;
    let nt = getRadius(o, rt),
      it = getRadius(s, rt);
    if (nt === void 0 && it === void 0) continue;
    nt || (nt = 0),
      it || (it = 0),
      nt === 0 || it === 0 || isPx(nt) === isPx(it)
        ? ((a[rt] = Math.max(mix(asNumber(nt), asNumber(it), _), 0)),
          (percent.test(it) || percent.test(nt)) && (a[rt] += "%"))
        : (a[rt] = it);
  }
  (o.rotate || s.rotate) && (a.rotate = mix(o.rotate || 0, s.rotate || 0, _));
}
function getRadius(a, o) {
  return a[o] !== void 0 ? a[o] : a.borderRadius;
}
const easeCrossfadeIn = compress(0, 0.5, circOut),
  easeCrossfadeOut = compress(0.5, 0.95, noop);
function compress(a, o, s) {
  return (_) => (_ < a ? 0 : _ > o ? 1 : s(progress(a, o, _)));
}
function copyAxisInto(a, o) {
  (a.min = o.min), (a.max = o.max);
}
function copyBoxInto(a, o) {
  copyAxisInto(a.x, o.x), copyAxisInto(a.y, o.y);
}
function removePointDelta(a, o, s, _, $) {
  return (
    (a -= o),
    (a = scalePoint(a, 1 / s, _)),
    $ !== void 0 && (a = scalePoint(a, 1 / $, _)),
    a
  );
}
function removeAxisDelta(a, o = 0, s = 1, _ = 0.5, $, et = a, tt = a) {
  if (
    (percent.test(o) &&
      ((o = parseFloat(o)), (o = mix(tt.min, tt.max, o / 100) - tt.min)),
    typeof o != "number")
  )
    return;
  let rt = mix(et.min, et.max, _);
  a === et && (rt -= o),
    (a.min = removePointDelta(a.min, o, s, rt, $)),
    (a.max = removePointDelta(a.max, o, s, rt, $));
}
function removeAxisTransforms(a, o, [s, _, $], et, tt) {
  removeAxisDelta(a, o[s], o[_], o[$], o.scale, et, tt);
}
const xKeys = ["x", "scaleX", "originX"],
  yKeys = ["y", "scaleY", "originY"];
function removeBoxTransforms(a, o, s, _) {
  removeAxisTransforms(a.x, o, xKeys, s ? s.x : void 0, _ ? _.x : void 0),
    removeAxisTransforms(a.y, o, yKeys, s ? s.y : void 0, _ ? _.y : void 0);
}
function isAxisDeltaZero(a) {
  return a.translate === 0 && a.scale === 1;
}
function isDeltaZero(a) {
  return isAxisDeltaZero(a.x) && isAxisDeltaZero(a.y);
}
function boxEquals(a, o) {
  return (
    a.x.min === o.x.min &&
    a.x.max === o.x.max &&
    a.y.min === o.y.min &&
    a.y.max === o.y.max
  );
}
function boxEqualsRounded(a, o) {
  return (
    Math.round(a.x.min) === Math.round(o.x.min) &&
    Math.round(a.x.max) === Math.round(o.x.max) &&
    Math.round(a.y.min) === Math.round(o.y.min) &&
    Math.round(a.y.max) === Math.round(o.y.max)
  );
}
function aspectRatio(a) {
  return calcLength(a.x) / calcLength(a.y);
}
class NodeStack {
  constructor() {
    this.members = [];
  }
  add(o) {
    addUniqueItem(this.members, o), o.scheduleRender();
  }
  remove(o) {
    if (
      (removeItem(this.members, o),
      o === this.prevLead && (this.prevLead = void 0),
      o === this.lead)
    ) {
      const s = this.members[this.members.length - 1];
      s && this.promote(s);
    }
  }
  relegate(o) {
    const s = this.members.findIndex(($) => o === $);
    if (s === 0) return !1;
    let _;
    for (let $ = s; $ >= 0; $--) {
      const et = this.members[$];
      if (et.isPresent !== !1) {
        _ = et;
        break;
      }
    }
    return _ ? (this.promote(_), !0) : !1;
  }
  promote(o, s) {
    const _ = this.lead;
    if (o !== _ && ((this.prevLead = _), (this.lead = o), o.show(), _)) {
      _.instance && _.scheduleRender(),
        o.scheduleRender(),
        (o.resumeFrom = _),
        s && (o.resumeFrom.preserveOpacity = !0),
        _.snapshot &&
          ((o.snapshot = _.snapshot),
          (o.snapshot.latestValues = _.animationValues || _.latestValues)),
        o.root && o.root.isUpdating && (o.isLayoutDirty = !0);
      const { crossfade: $ } = o.options;
      $ === !1 && _.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((o) => {
      const { options: s, resumingFrom: _ } = o;
      s.onExitComplete && s.onExitComplete(),
        _ && _.options.onExitComplete && _.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((o) => {
      o.instance && o.scheduleRender(!1);
    });
  }
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function buildProjectionTransform(a, o, s) {
  let _ = "";
  const $ = a.x.translate / o.x,
    et = a.y.translate / o.y;
  if (
    (($ || et) && (_ = `translate3d(${$}px, ${et}px, 0) `),
    (o.x !== 1 || o.y !== 1) && (_ += `scale(${1 / o.x}, ${1 / o.y}) `),
    s)
  ) {
    const { rotate: nt, rotateX: it, rotateY: at } = s;
    nt && (_ += `rotate(${nt}deg) `),
      it && (_ += `rotateX(${it}deg) `),
      at && (_ += `rotateY(${at}deg) `);
  }
  const tt = a.x.scale * o.x,
    rt = a.y.scale * o.y;
  return (tt !== 1 || rt !== 1) && (_ += `scale(${tt}, ${rt})`), _ || "none";
}
const compareByDepth = (a, o) => a.depth - o.depth;
class FlatTree {
  constructor() {
    (this.children = []), (this.isDirty = !1);
  }
  add(o) {
    addUniqueItem(this.children, o), (this.isDirty = !0);
  }
  remove(o) {
    removeItem(this.children, o), (this.isDirty = !0);
  }
  forEach(o) {
    this.isDirty && this.children.sort(compareByDepth),
      (this.isDirty = !1),
      this.children.forEach(o);
  }
}
function delay(a, o) {
  const s = performance.now(),
    _ = ({ timestamp: $ }) => {
      const et = $ - s;
      et >= o && (cancelFrame(_), a(et - o));
    };
  return frame.read(_, !0), () => cancelFrame(_);
}
function record(a) {
  window.MotionDebug && window.MotionDebug.record(a);
}
function isSVGElement(a) {
  return a instanceof SVGElement && a.tagName !== "svg";
}
function animateSingleValue(a, o, s) {
  const _ = isMotionValue(a) ? a : motionValue(a);
  return _.start(animateMotionValue("", _, o, s)), _.animation;
}
const transformAxes = ["", "X", "Y", "Z"],
  animationTarget = 1e3;
let id$2 = 0;
const projectionFrameData = {
  type: "projectionFrame",
  totalNodes: 0,
  resolvedTargetDeltas: 0,
  recalculatedProjection: 0,
};
function createProjectionNode({
  attachResizeListener: a,
  defaultParent: o,
  measureScroll: s,
  checkIsScrollRoot: _,
  resetTransform: $,
}) {
  return class {
    constructor(tt = {}, rt = o == null ? void 0 : o()) {
      (this.id = id$2++),
        (this.animationId = 0),
        (this.children = new Set()),
        (this.options = {}),
        (this.isTreeAnimating = !1),
        (this.isAnimationBlocked = !1),
        (this.isLayoutDirty = !1),
        (this.isProjectionDirty = !1),
        (this.isSharedProjectionDirty = !1),
        (this.isTransformDirty = !1),
        (this.updateManuallyBlocked = !1),
        (this.updateBlockedByResize = !1),
        (this.isUpdating = !1),
        (this.isSVG = !1),
        (this.needsReset = !1),
        (this.shouldResetTransform = !1),
        (this.treeScale = { x: 1, y: 1 }),
        (this.eventHandlers = new Map()),
        (this.hasTreeAnimated = !1),
        (this.updateScheduled = !1),
        (this.checkUpdateFailed = () => {
          this.isUpdating && ((this.isUpdating = !1), this.clearAllSnapshots());
        }),
        (this.updateProjection = () => {
          (projectionFrameData.totalNodes =
            projectionFrameData.resolvedTargetDeltas =
            projectionFrameData.recalculatedProjection =
              0),
            this.nodes.forEach(propagateDirtyNodes),
            this.nodes.forEach(resolveTargetDelta),
            this.nodes.forEach(calcProjection),
            this.nodes.forEach(cleanDirtyNodes),
            record(projectionFrameData);
        }),
        (this.hasProjected = !1),
        (this.isVisible = !0),
        (this.animationProgress = 0),
        (this.sharedNodes = new Map()),
        (this.latestValues = tt),
        (this.root = rt ? rt.root || rt : this),
        (this.path = rt ? [...rt.path, rt] : []),
        (this.parent = rt),
        (this.depth = rt ? rt.depth + 1 : 0);
      for (let nt = 0; nt < this.path.length; nt++)
        this.path[nt].shouldResetTransform = !0;
      this.root === this && (this.nodes = new FlatTree());
    }
    addEventListener(tt, rt) {
      return (
        this.eventHandlers.has(tt) ||
          this.eventHandlers.set(tt, new SubscriptionManager()),
        this.eventHandlers.get(tt).add(rt)
      );
    }
    notifyListeners(tt, ...rt) {
      const nt = this.eventHandlers.get(tt);
      nt && nt.notify(...rt);
    }
    hasListeners(tt) {
      return this.eventHandlers.has(tt);
    }
    mount(tt, rt = this.root.hasTreeAnimated) {
      if (this.instance) return;
      (this.isSVG = isSVGElement(tt)), (this.instance = tt);
      const { layoutId: nt, layout: it, visualElement: at } = this.options;
      if (
        (at && !at.current && at.mount(tt),
        this.root.nodes.add(this),
        this.parent && this.parent.children.add(this),
        rt && (it || nt) && (this.isLayoutDirty = !0),
        a)
      ) {
        let st;
        const ot = () => (this.root.updateBlockedByResize = !1);
        a(tt, () => {
          (this.root.updateBlockedByResize = !0),
            st && st(),
            (st = delay(ot, 250)),
            globalProjectionState.hasAnimatedSinceResize &&
              ((globalProjectionState.hasAnimatedSinceResize = !1),
              this.nodes.forEach(finishAnimation));
        });
      }
      nt && this.root.registerSharedNode(nt, this),
        this.options.animate !== !1 &&
          at &&
          (nt || it) &&
          this.addEventListener(
            "didUpdate",
            ({
              delta: st,
              hasLayoutChanged: ot,
              hasRelativeTargetChanged: dt,
              layout: ht,
            }) => {
              if (this.isTreeAnimationBlocked()) {
                (this.target = void 0), (this.relativeTarget = void 0);
                return;
              }
              const ft =
                  this.options.transition ||
                  at.getDefaultTransition() ||
                  defaultLayoutTransition,
                { onLayoutAnimationStart: mt, onLayoutAnimationComplete: ut } =
                  at.getProps(),
                lt =
                  !this.targetLayout ||
                  !boxEqualsRounded(this.targetLayout, ht) ||
                  dt,
                ct = !ot && dt;
              if (
                this.options.layoutRoot ||
                (this.resumeFrom && this.resumeFrom.instance) ||
                ct ||
                (ot && (lt || !this.currentAnimation))
              ) {
                this.resumeFrom &&
                  ((this.resumingFrom = this.resumeFrom),
                  (this.resumingFrom.resumingFrom = void 0)),
                  this.setAnimationOrigin(st, ct);
                const pt = {
                  ...getValueTransition(ft, "layout"),
                  onPlay: mt,
                  onComplete: ut,
                };
                (at.shouldReduceMotion || this.options.layoutRoot) &&
                  ((pt.delay = 0), (pt.type = !1)),
                  this.startAnimation(pt);
              } else
                ot || finishAnimation(this),
                  this.isLead() &&
                    this.options.onExitComplete &&
                    this.options.onExitComplete();
              this.targetLayout = ht;
            }
          );
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const tt = this.getStack();
      tt && tt.remove(this),
        this.parent && this.parent.children.delete(this),
        (this.instance = void 0),
        cancelFrame(this.updateProjection);
    }
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return (
        this.isAnimationBlocked ||
        (this.parent && this.parent.isTreeAnimationBlocked()) ||
        !1
      );
    }
    startUpdate() {
      this.isUpdateBlocked() ||
        ((this.isUpdating = !0),
        this.nodes && this.nodes.forEach(resetRotation),
        this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: tt } = this.options;
      return tt && tt.getProps().transformTemplate;
    }
    willUpdate(tt = !0) {
      if (((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (
        (!this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
      )
        return;
      this.isLayoutDirty = !0;
      for (let at = 0; at < this.path.length; at++) {
        const st = this.path[at];
        (st.shouldResetTransform = !0),
          st.updateScroll("snapshot"),
          st.options.layoutRoot && st.willUpdate(!1);
      }
      const { layoutId: rt, layout: nt } = this.options;
      if (rt === void 0 && !nt) return;
      const it = this.getTransformTemplate();
      (this.prevTransformTemplateValue = it
        ? it(this.latestValues, "")
        : void 0),
        this.updateSnapshot(),
        tt && this.notifyListeners("willUpdate");
    }
    update() {
      if (((this.updateScheduled = !1), this.isUpdateBlocked())) {
        this.unblockUpdate(),
          this.clearAllSnapshots(),
          this.nodes.forEach(clearMeasurements);
        return;
      }
      this.isUpdating || this.nodes.forEach(clearIsLayoutDirty),
        (this.isUpdating = !1),
        this.nodes.forEach(resetTransformStyle),
        this.nodes.forEach(updateLayout),
        this.nodes.forEach(notifyLayoutUpdate),
        this.clearAllSnapshots();
      const rt = performance.now();
      (frameData.delta = clamp(0, 1e3 / 60, rt - frameData.timestamp)),
        (frameData.timestamp = rt),
        (frameData.isProcessing = !0),
        steps.update.process(frameData),
        steps.preRender.process(frameData),
        steps.render.process(frameData),
        (frameData.isProcessing = !1);
    }
    didUpdate() {
      this.updateScheduled ||
        ((this.updateScheduled = !0), queueMicrotask(() => this.update()));
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot),
        this.sharedNodes.forEach(removeLeadSnapshots);
    }
    scheduleUpdateProjection() {
      frame.preRender(this.updateProjection, !1, !0);
    }
    scheduleCheckAfterUnmount() {
      frame.postRender(() => {
        this.isLayoutDirty
          ? this.root.didUpdate()
          : this.root.checkUpdateFailed();
      });
    }
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (
        !this.instance ||
        (this.updateScroll(),
        !(this.options.alwaysMeasureLayout && this.isLead()) &&
          !this.isLayoutDirty)
      )
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let nt = 0; nt < this.path.length; nt++)
          this.path[nt].updateScroll();
      const tt = this.layout;
      (this.layout = this.measure(!1)),
        (this.layoutCorrected = createBox()),
        (this.isLayoutDirty = !1),
        (this.projectionDelta = void 0),
        this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: rt } = this.options;
      rt &&
        rt.notify(
          "LayoutMeasure",
          this.layout.layoutBox,
          tt ? tt.layoutBox : void 0
        );
    }
    updateScroll(tt = "measure") {
      let rt = !!(this.options.layoutScroll && this.instance);
      this.scroll &&
        this.scroll.animationId === this.root.animationId &&
        this.scroll.phase === tt &&
        (rt = !1),
        rt &&
          (this.scroll = {
            animationId: this.root.animationId,
            phase: tt,
            isRoot: _(this.instance),
            offset: s(this.instance),
          });
    }
    resetTransform() {
      if (!$) return;
      const tt = this.isLayoutDirty || this.shouldResetTransform,
        rt = this.projectionDelta && !isDeltaZero(this.projectionDelta),
        nt = this.getTransformTemplate(),
        it = nt ? nt(this.latestValues, "") : void 0,
        at = it !== this.prevTransformTemplateValue;
      tt &&
        (rt || hasTransform(this.latestValues) || at) &&
        ($(this.instance, it),
        (this.shouldResetTransform = !1),
        this.scheduleRender());
    }
    measure(tt = !0) {
      const rt = this.measurePageBox();
      let nt = this.removeElementScroll(rt);
      return (
        tt && (nt = this.removeTransform(nt)),
        roundBox(nt),
        {
          animationId: this.root.animationId,
          measuredBox: rt,
          layoutBox: nt,
          latestValues: {},
          source: this.id,
        }
      );
    }
    measurePageBox() {
      const { visualElement: tt } = this.options;
      if (!tt) return createBox();
      const rt = tt.measureViewportBox(),
        { scroll: nt } = this.root;
      return (
        nt &&
          (translateAxis(rt.x, nt.offset.x), translateAxis(rt.y, nt.offset.y)),
        rt
      );
    }
    removeElementScroll(tt) {
      const rt = createBox();
      copyBoxInto(rt, tt);
      for (let nt = 0; nt < this.path.length; nt++) {
        const it = this.path[nt],
          { scroll: at, options: st } = it;
        if (it !== this.root && at && st.layoutScroll) {
          if (at.isRoot) {
            copyBoxInto(rt, tt);
            const { scroll: ot } = this.root;
            ot &&
              (translateAxis(rt.x, -ot.offset.x),
              translateAxis(rt.y, -ot.offset.y));
          }
          translateAxis(rt.x, at.offset.x), translateAxis(rt.y, at.offset.y);
        }
      }
      return rt;
    }
    applyTransform(tt, rt = !1) {
      const nt = createBox();
      copyBoxInto(nt, tt);
      for (let it = 0; it < this.path.length; it++) {
        const at = this.path[it];
        !rt &&
          at.options.layoutScroll &&
          at.scroll &&
          at !== at.root &&
          transformBox(nt, { x: -at.scroll.offset.x, y: -at.scroll.offset.y }),
          hasTransform(at.latestValues) && transformBox(nt, at.latestValues);
      }
      return (
        hasTransform(this.latestValues) && transformBox(nt, this.latestValues),
        nt
      );
    }
    removeTransform(tt) {
      const rt = createBox();
      copyBoxInto(rt, tt);
      for (let nt = 0; nt < this.path.length; nt++) {
        const it = this.path[nt];
        if (!it.instance || !hasTransform(it.latestValues)) continue;
        hasScale(it.latestValues) && it.updateSnapshot();
        const at = createBox(),
          st = it.measurePageBox();
        copyBoxInto(at, st),
          removeBoxTransforms(
            rt,
            it.latestValues,
            it.snapshot ? it.snapshot.layoutBox : void 0,
            at
          );
      }
      return (
        hasTransform(this.latestValues) &&
          removeBoxTransforms(rt, this.latestValues),
        rt
      );
    }
    setTargetDelta(tt) {
      (this.targetDelta = tt),
        this.root.scheduleUpdateProjection(),
        (this.isProjectionDirty = !0);
    }
    setOptions(tt) {
      this.options = {
        ...this.options,
        ...tt,
        crossfade: tt.crossfade !== void 0 ? tt.crossfade : !0,
      };
    }
    clearMeasurements() {
      (this.scroll = void 0),
        (this.layout = void 0),
        (this.snapshot = void 0),
        (this.prevTransformTemplateValue = void 0),
        (this.targetDelta = void 0),
        (this.target = void 0),
        (this.isLayoutDirty = !1);
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent &&
        this.relativeParent.resolvedRelativeTargetAt !== frameData.timestamp &&
        this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(tt = !1) {
      var rt;
      const nt = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = nt.isProjectionDirty),
        this.isTransformDirty || (this.isTransformDirty = nt.isTransformDirty),
        this.isSharedProjectionDirty ||
          (this.isSharedProjectionDirty = nt.isSharedProjectionDirty);
      const it = !!this.resumingFrom || this !== nt;
      if (
        !(
          tt ||
          (it && this.isSharedProjectionDirty) ||
          this.isProjectionDirty ||
          (!((rt = this.parent) === null || rt === void 0) &&
            rt.isProjectionDirty) ||
          this.attemptToResolveRelativeTarget
        )
      )
        return;
      const { layout: st, layoutId: ot } = this.options;
      if (!(!this.layout || !(st || ot))) {
        if (
          ((this.resolvedRelativeTargetAt = frameData.timestamp),
          !this.targetDelta && !this.relativeTarget)
        ) {
          const dt = this.getClosestProjectingParent();
          dt && dt.layout && this.animationProgress !== 1
            ? ((this.relativeParent = dt),
              this.forceRelativeParentToResolveTarget(),
              (this.relativeTarget = createBox()),
              (this.relativeTargetOrigin = createBox()),
              calcRelativePosition(
                this.relativeTargetOrigin,
                this.layout.layoutBox,
                dt.layout.layoutBox
              ),
              copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))
            : (this.relativeParent = this.relativeTarget = void 0);
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (
            (this.target ||
              ((this.target = createBox()),
              (this.targetWithTransforms = createBox())),
            this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.relativeParent &&
            this.relativeParent.target
              ? (this.forceRelativeParentToResolveTarget(),
                calcRelativeBox(
                  this.target,
                  this.relativeTarget,
                  this.relativeParent.target
                ))
              : this.targetDelta
              ? (this.resumingFrom
                  ? (this.target = this.applyTransform(this.layout.layoutBox))
                  : copyBoxInto(this.target, this.layout.layoutBox),
                applyBoxDelta(this.target, this.targetDelta))
              : copyBoxInto(this.target, this.layout.layoutBox),
            this.attemptToResolveRelativeTarget)
          ) {
            this.attemptToResolveRelativeTarget = !1;
            const dt = this.getClosestProjectingParent();
            dt &&
            !!dt.resumingFrom == !!this.resumingFrom &&
            !dt.options.layoutScroll &&
            dt.target &&
            this.animationProgress !== 1
              ? ((this.relativeParent = dt),
                this.forceRelativeParentToResolveTarget(),
                (this.relativeTarget = createBox()),
                (this.relativeTargetOrigin = createBox()),
                calcRelativePosition(
                  this.relativeTargetOrigin,
                  this.target,
                  dt.target
                ),
                copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))
              : (this.relativeParent = this.relativeTarget = void 0);
          }
          projectionFrameData.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (
        !(
          !this.parent ||
          hasScale(this.parent.latestValues) ||
          has2DTranslate(this.parent.latestValues)
        )
      )
        return this.parent.isProjecting()
          ? this.parent
          : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!(
        (this.relativeTarget || this.targetDelta || this.options.layoutRoot) &&
        this.layout
      );
    }
    calcProjection() {
      var tt;
      const rt = this.getLead(),
        nt = !!this.resumingFrom || this !== rt;
      let it = !0;
      if (
        ((this.isProjectionDirty ||
          (!((tt = this.parent) === null || tt === void 0) &&
            tt.isProjectionDirty)) &&
          (it = !1),
        nt &&
          (this.isSharedProjectionDirty || this.isTransformDirty) &&
          (it = !1),
        this.resolvedRelativeTargetAt === frameData.timestamp && (it = !1),
        it)
      )
        return;
      const { layout: at, layoutId: st } = this.options;
      if (
        ((this.isTreeAnimating = !!(
          (this.parent && this.parent.isTreeAnimating) ||
          this.currentAnimation ||
          this.pendingAnimation
        )),
        this.isTreeAnimating ||
          (this.targetDelta = this.relativeTarget = void 0),
        !this.layout || !(at || st))
      )
        return;
      copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
      const ot = this.treeScale.x,
        dt = this.treeScale.y;
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, nt),
        rt.layout &&
          !rt.target &&
          (this.treeScale.x !== 1 || this.treeScale.y !== 1) &&
          (rt.target = rt.layout.layoutBox);
      const { target: ht } = rt;
      if (!ht) {
        this.projectionTransform &&
          ((this.projectionDelta = createDelta()),
          (this.projectionTransform = "none"),
          this.scheduleRender());
        return;
      }
      this.projectionDelta ||
        ((this.projectionDelta = createDelta()),
        (this.projectionDeltaWithTransform = createDelta()));
      const ft = this.projectionTransform;
      calcBoxDelta(
        this.projectionDelta,
        this.layoutCorrected,
        ht,
        this.latestValues
      ),
        (this.projectionTransform = buildProjectionTransform(
          this.projectionDelta,
          this.treeScale
        )),
        (this.projectionTransform !== ft ||
          this.treeScale.x !== ot ||
          this.treeScale.y !== dt) &&
          ((this.hasProjected = !0),
          this.scheduleRender(),
          this.notifyListeners("projectionUpdate", ht)),
        projectionFrameData.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(tt = !0) {
      if ((this.options.scheduleRender && this.options.scheduleRender(), tt)) {
        const rt = this.getStack();
        rt && rt.scheduleRender();
      }
      this.resumingFrom &&
        !this.resumingFrom.instance &&
        (this.resumingFrom = void 0);
    }
    setAnimationOrigin(tt, rt = !1) {
      const nt = this.snapshot,
        it = nt ? nt.latestValues : {},
        at = { ...this.latestValues },
        st = createDelta();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) &&
        (this.relativeTarget = this.relativeTargetOrigin = void 0),
        (this.attemptToResolveRelativeTarget = !rt);
      const ot = createBox(),
        dt = nt ? nt.source : void 0,
        ht = this.layout ? this.layout.source : void 0,
        ft = dt !== ht,
        mt = this.getStack(),
        ut = !mt || mt.members.length <= 1,
        lt = !!(
          ft &&
          !ut &&
          this.options.crossfade === !0 &&
          !this.path.some(hasOpacityCrossfade)
        );
      this.animationProgress = 0;
      let ct;
      (this.mixTargetDelta = (pt) => {
        const vt = pt / 1e3;
        mixAxisDelta(st.x, tt.x, vt),
          mixAxisDelta(st.y, tt.y, vt),
          this.setTargetDelta(st),
          this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.layout &&
            this.relativeParent &&
            this.relativeParent.layout &&
            (calcRelativePosition(
              ot,
              this.layout.layoutBox,
              this.relativeParent.layout.layoutBox
            ),
            mixBox(this.relativeTarget, this.relativeTargetOrigin, ot, vt),
            ct &&
              boxEquals(this.relativeTarget, ct) &&
              (this.isProjectionDirty = !1),
            ct || (ct = createBox()),
            copyBoxInto(ct, this.relativeTarget)),
          ft &&
            ((this.animationValues = at),
            mixValues(at, it, this.latestValues, vt, lt, ut)),
          this.root.scheduleUpdateProjection(),
          this.scheduleRender(),
          (this.animationProgress = vt);
      }),
        this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(tt) {
      this.notifyListeners("animationStart"),
        this.currentAnimation && this.currentAnimation.stop(),
        this.resumingFrom &&
          this.resumingFrom.currentAnimation &&
          this.resumingFrom.currentAnimation.stop(),
        this.pendingAnimation &&
          (cancelFrame(this.pendingAnimation),
          (this.pendingAnimation = void 0)),
        (this.pendingAnimation = frame.update(() => {
          (globalProjectionState.hasAnimatedSinceResize = !0),
            (this.currentAnimation = animateSingleValue(0, animationTarget, {
              ...tt,
              onUpdate: (rt) => {
                this.mixTargetDelta(rt), tt.onUpdate && tt.onUpdate(rt);
              },
              onComplete: () => {
                tt.onComplete && tt.onComplete(), this.completeAnimation();
              },
            })),
            this.resumingFrom &&
              (this.resumingFrom.currentAnimation = this.currentAnimation),
            (this.pendingAnimation = void 0);
        }));
    }
    completeAnimation() {
      this.resumingFrom &&
        ((this.resumingFrom.currentAnimation = void 0),
        (this.resumingFrom.preserveOpacity = void 0));
      const tt = this.getStack();
      tt && tt.exitAnimationComplete(),
        (this.resumingFrom =
          this.currentAnimation =
          this.animationValues =
            void 0),
        this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation &&
        (this.mixTargetDelta && this.mixTargetDelta(animationTarget),
        this.currentAnimation.stop()),
        this.completeAnimation();
    }
    applyTransformsToTarget() {
      const tt = this.getLead();
      let {
        targetWithTransforms: rt,
        target: nt,
        layout: it,
        latestValues: at,
      } = tt;
      if (!(!rt || !nt || !it)) {
        if (
          this !== tt &&
          this.layout &&
          it &&
          shouldAnimatePositionOnly(
            this.options.animationType,
            this.layout.layoutBox,
            it.layoutBox
          )
        ) {
          nt = this.target || createBox();
          const st = calcLength(this.layout.layoutBox.x);
          (nt.x.min = tt.target.x.min), (nt.x.max = nt.x.min + st);
          const ot = calcLength(this.layout.layoutBox.y);
          (nt.y.min = tt.target.y.min), (nt.y.max = nt.y.min + ot);
        }
        copyBoxInto(rt, nt),
          transformBox(rt, at),
          calcBoxDelta(
            this.projectionDeltaWithTransform,
            this.layoutCorrected,
            rt,
            at
          );
      }
    }
    registerSharedNode(tt, rt) {
      this.sharedNodes.has(tt) || this.sharedNodes.set(tt, new NodeStack()),
        this.sharedNodes.get(tt).add(rt);
      const it = rt.options.initialPromotionConfig;
      rt.promote({
        transition: it ? it.transition : void 0,
        preserveFollowOpacity:
          it && it.shouldPreserveFollowOpacity
            ? it.shouldPreserveFollowOpacity(rt)
            : void 0,
      });
    }
    isLead() {
      const tt = this.getStack();
      return tt ? tt.lead === this : !0;
    }
    getLead() {
      var tt;
      const { layoutId: rt } = this.options;
      return rt
        ? ((tt = this.getStack()) === null || tt === void 0
            ? void 0
            : tt.lead) || this
        : this;
    }
    getPrevLead() {
      var tt;
      const { layoutId: rt } = this.options;
      return rt
        ? (tt = this.getStack()) === null || tt === void 0
          ? void 0
          : tt.prevLead
        : void 0;
    }
    getStack() {
      const { layoutId: tt } = this.options;
      if (tt) return this.root.sharedNodes.get(tt);
    }
    promote({
      needsReset: tt,
      transition: rt,
      preserveFollowOpacity: nt,
    } = {}) {
      const it = this.getStack();
      it && it.promote(this, nt),
        tt && ((this.projectionDelta = void 0), (this.needsReset = !0)),
        rt && this.setOptions({ transition: rt });
    }
    relegate() {
      const tt = this.getStack();
      return tt ? tt.relegate(this) : !1;
    }
    resetRotation() {
      const { visualElement: tt } = this.options;
      if (!tt) return;
      let rt = !1;
      const { latestValues: nt } = tt;
      if (
        ((nt.rotate || nt.rotateX || nt.rotateY || nt.rotateZ) && (rt = !0),
        !rt)
      )
        return;
      const it = {};
      for (let at = 0; at < transformAxes.length; at++) {
        const st = "rotate" + transformAxes[at];
        nt[st] && ((it[st] = nt[st]), tt.setStaticValue(st, 0));
      }
      tt.render();
      for (const at in it) tt.setStaticValue(at, it[at]);
      tt.scheduleRender();
    }
    getProjectionStyles(tt = {}) {
      var rt, nt;
      const it = {};
      if (!this.instance || this.isSVG) return it;
      if (this.isVisible) it.visibility = "";
      else return { visibility: "hidden" };
      const at = this.getTransformTemplate();
      if (this.needsReset)
        return (
          (this.needsReset = !1),
          (it.opacity = ""),
          (it.pointerEvents = resolveMotionValue(tt.pointerEvents) || ""),
          (it.transform = at ? at(this.latestValues, "") : "none"),
          it
        );
      const st = this.getLead();
      if (!this.projectionDelta || !this.layout || !st.target) {
        const ft = {};
        return (
          this.options.layoutId &&
            ((ft.opacity =
              this.latestValues.opacity !== void 0
                ? this.latestValues.opacity
                : 1),
            (ft.pointerEvents = resolveMotionValue(tt.pointerEvents) || "")),
          this.hasProjected &&
            !hasTransform(this.latestValues) &&
            ((ft.transform = at ? at({}, "") : "none"),
            (this.hasProjected = !1)),
          ft
        );
      }
      const ot = st.animationValues || st.latestValues;
      this.applyTransformsToTarget(),
        (it.transform = buildProjectionTransform(
          this.projectionDeltaWithTransform,
          this.treeScale,
          ot
        )),
        at && (it.transform = at(ot, it.transform));
      const { x: dt, y: ht } = this.projectionDelta;
      (it.transformOrigin = `${dt.origin * 100}% ${ht.origin * 100}% 0`),
        st.animationValues
          ? (it.opacity =
              st === this
                ? (nt =
                    (rt = ot.opacity) !== null && rt !== void 0
                      ? rt
                      : this.latestValues.opacity) !== null && nt !== void 0
                  ? nt
                  : 1
                : this.preserveOpacity
                ? this.latestValues.opacity
                : ot.opacityExit)
          : (it.opacity =
              st === this
                ? ot.opacity !== void 0
                  ? ot.opacity
                  : ""
                : ot.opacityExit !== void 0
                ? ot.opacityExit
                : 0);
      for (const ft in scaleCorrectors) {
        if (ot[ft] === void 0) continue;
        const { correct: mt, applyTo: ut } = scaleCorrectors[ft],
          lt = it.transform === "none" ? ot[ft] : mt(ot[ft], st);
        if (ut) {
          const ct = ut.length;
          for (let pt = 0; pt < ct; pt++) it[ut[pt]] = lt;
        } else it[ft] = lt;
      }
      return (
        this.options.layoutId &&
          (it.pointerEvents =
            st === this ? resolveMotionValue(tt.pointerEvents) || "" : "none"),
        it
      );
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    resetTree() {
      this.root.nodes.forEach((tt) => {
        var rt;
        return (rt = tt.currentAnimation) === null || rt === void 0
          ? void 0
          : rt.stop();
      }),
        this.root.nodes.forEach(clearMeasurements),
        this.root.sharedNodes.clear();
    }
  };
}
function updateLayout(a) {
  a.updateLayout();
}
function notifyLayoutUpdate(a) {
  var o;
  const s =
    ((o = a.resumeFrom) === null || o === void 0 ? void 0 : o.snapshot) ||
    a.snapshot;
  if (a.isLead() && a.layout && s && a.hasListeners("didUpdate")) {
    const { layoutBox: _, measuredBox: $ } = a.layout,
      { animationType: et } = a.options,
      tt = s.source !== a.layout.source;
    et === "size"
      ? eachAxis((st) => {
          const ot = tt ? s.measuredBox[st] : s.layoutBox[st],
            dt = calcLength(ot);
          (ot.min = _[st].min), (ot.max = ot.min + dt);
        })
      : shouldAnimatePositionOnly(et, s.layoutBox, _) &&
        eachAxis((st) => {
          const ot = tt ? s.measuredBox[st] : s.layoutBox[st],
            dt = calcLength(_[st]);
          (ot.max = ot.min + dt),
            a.relativeTarget &&
              !a.currentAnimation &&
              ((a.isProjectionDirty = !0),
              (a.relativeTarget[st].max = a.relativeTarget[st].min + dt));
        });
    const rt = createDelta();
    calcBoxDelta(rt, _, s.layoutBox);
    const nt = createDelta();
    tt
      ? calcBoxDelta(nt, a.applyTransform($, !0), s.measuredBox)
      : calcBoxDelta(nt, _, s.layoutBox);
    const it = !isDeltaZero(rt);
    let at = !1;
    if (!a.resumeFrom) {
      const st = a.getClosestProjectingParent();
      if (st && !st.resumeFrom) {
        const { snapshot: ot, layout: dt } = st;
        if (ot && dt) {
          const ht = createBox();
          calcRelativePosition(ht, s.layoutBox, ot.layoutBox);
          const ft = createBox();
          calcRelativePosition(ft, _, dt.layoutBox),
            boxEqualsRounded(ht, ft) || (at = !0),
            st.options.layoutRoot &&
              ((a.relativeTarget = ft),
              (a.relativeTargetOrigin = ht),
              (a.relativeParent = st));
        }
      }
    }
    a.notifyListeners("didUpdate", {
      layout: _,
      snapshot: s,
      delta: nt,
      layoutDelta: rt,
      hasLayoutChanged: it,
      hasRelativeTargetChanged: at,
    });
  } else if (a.isLead()) {
    const { onExitComplete: _ } = a.options;
    _ && _();
  }
  a.options.transition = void 0;
}
function propagateDirtyNodes(a) {
  projectionFrameData.totalNodes++,
    a.parent &&
      (a.isProjecting() || (a.isProjectionDirty = a.parent.isProjectionDirty),
      a.isSharedProjectionDirty ||
        (a.isSharedProjectionDirty = !!(
          a.isProjectionDirty ||
          a.parent.isProjectionDirty ||
          a.parent.isSharedProjectionDirty
        )),
      a.isTransformDirty || (a.isTransformDirty = a.parent.isTransformDirty));
}
function cleanDirtyNodes(a) {
  a.isProjectionDirty = a.isSharedProjectionDirty = a.isTransformDirty = !1;
}
function clearSnapshot(a) {
  a.clearSnapshot();
}
function clearMeasurements(a) {
  a.clearMeasurements();
}
function clearIsLayoutDirty(a) {
  a.isLayoutDirty = !1;
}
function resetTransformStyle(a) {
  const { visualElement: o } = a.options;
  o && o.getProps().onBeforeLayoutMeasure && o.notify("BeforeLayoutMeasure"),
    a.resetTransform();
}
function finishAnimation(a) {
  a.finishAnimation(),
    (a.targetDelta = a.relativeTarget = a.target = void 0),
    (a.isProjectionDirty = !0);
}
function resolveTargetDelta(a) {
  a.resolveTargetDelta();
}
function calcProjection(a) {
  a.calcProjection();
}
function resetRotation(a) {
  a.resetRotation();
}
function removeLeadSnapshots(a) {
  a.removeLeadSnapshot();
}
function mixAxisDelta(a, o, s) {
  (a.translate = mix(o.translate, 0, s)),
    (a.scale = mix(o.scale, 1, s)),
    (a.origin = o.origin),
    (a.originPoint = o.originPoint);
}
function mixAxis(a, o, s, _) {
  (a.min = mix(o.min, s.min, _)), (a.max = mix(o.max, s.max, _));
}
function mixBox(a, o, s, _) {
  mixAxis(a.x, o.x, s.x, _), mixAxis(a.y, o.y, s.y, _);
}
function hasOpacityCrossfade(a) {
  return a.animationValues && a.animationValues.opacityExit !== void 0;
}
const defaultLayoutTransition = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
  userAgentContains = (a) =>
    typeof navigator < "u" && navigator.userAgent.toLowerCase().includes(a),
  roundPoint =
    userAgentContains("applewebkit/") && !userAgentContains("chrome/")
      ? Math.round
      : noop;
function roundAxis(a) {
  (a.min = roundPoint(a.min)), (a.max = roundPoint(a.max));
}
function roundBox(a) {
  roundAxis(a.x), roundAxis(a.y);
}
function shouldAnimatePositionOnly(a, o, s) {
  return (
    a === "position" ||
    (a === "preserve-aspect" && !isNear(aspectRatio(o), aspectRatio(s), 0.2))
  );
}
const DocumentProjectionNode = createProjectionNode({
    attachResizeListener: (a, o) => addDomEvent(a, "resize", o),
    measureScroll: () => ({
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop,
    }),
    checkIsScrollRoot: () => !0,
  }),
  rootProjectionNode = { current: void 0 },
  HTMLProjectionNode = createProjectionNode({
    measureScroll: (a) => ({ x: a.scrollLeft, y: a.scrollTop }),
    defaultParent: () => {
      if (!rootProjectionNode.current) {
        const a = new DocumentProjectionNode({});
        a.mount(window),
          a.setOptions({ layoutScroll: !0 }),
          (rootProjectionNode.current = a);
      }
      return rootProjectionNode.current;
    },
    resetTransform: (a, o) => {
      a.style.transform = o !== void 0 ? o : "none";
    },
    checkIsScrollRoot: (a) => window.getComputedStyle(a).position === "fixed",
  }),
  drag = {
    pan: { Feature: PanGesture },
    drag: {
      Feature: DragGesture,
      ProjectionNode: HTMLProjectionNode,
      MeasureLayout,
    },
  },
  splitCSSVariableRegex =
    /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(a) {
  const o = splitCSSVariableRegex.exec(a);
  if (!o) return [,];
  const [, s, _] = o;
  return [s, _];
}
function getVariableValue(a, o, s = 1) {
  const [_, $] = parseCSSVariable(a);
  if (!_) return;
  const et = window.getComputedStyle(o).getPropertyValue(_);
  return et
    ? et.trim()
    : isCSSVariableToken($)
    ? getVariableValue($, o, s + 1)
    : $;
}
function resolveCSSVariables(a, { ...o }, s) {
  const _ = a.current;
  if (!(_ instanceof Element)) return { target: o, transitionEnd: s };
  s && (s = { ...s }),
    a.values.forEach(($) => {
      const et = $.get();
      if (!isCSSVariableToken(et)) return;
      const tt = getVariableValue(et, _);
      tt && $.set(tt);
    });
  for (const $ in o) {
    const et = o[$];
    if (!isCSSVariableToken(et)) continue;
    const tt = getVariableValue(et, _);
    tt && ((o[$] = tt), s || (s = {}), s[$] === void 0 && (s[$] = et));
  }
  return { target: o, transitionEnd: s };
}
const positionalKeys = new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "x",
    "y",
    "translateX",
    "translateY",
  ]),
  isPositionalKey = (a) => positionalKeys.has(a),
  hasPositionalKey = (a) => Object.keys(a).some(isPositionalKey),
  isNumOrPxType = (a) => a === number || a === px$1,
  getPosFromMatrix = (a, o) => parseFloat(a.split(", ")[o]),
  getTranslateFromMatrix =
    (a, o) =>
    (s, { transform: _ }) => {
      if (_ === "none" || !_) return 0;
      const $ = _.match(/^matrix3d\((.+)\)$/);
      if ($) return getPosFromMatrix($[1], o);
      {
        const et = _.match(/^matrix\((.+)\)$/);
        return et ? getPosFromMatrix(et[1], a) : 0;
      }
    },
  transformKeys = new Set(["x", "y", "z"]),
  nonTranslationalTransformKeys = transformPropOrder.filter(
    (a) => !transformKeys.has(a)
  );
function removeNonTranslationalTransform(a) {
  const o = [];
  return (
    nonTranslationalTransformKeys.forEach((s) => {
      const _ = a.getValue(s);
      _ !== void 0 &&
        (o.push([s, _.get()]), _.set(s.startsWith("scale") ? 1 : 0));
    }),
    o.length && a.render(),
    o
  );
}
const positionalValues = {
  width: ({ x: a }, { paddingLeft: o = "0", paddingRight: s = "0" }) =>
    a.max - a.min - parseFloat(o) - parseFloat(s),
  height: ({ y: a }, { paddingTop: o = "0", paddingBottom: s = "0" }) =>
    a.max - a.min - parseFloat(o) - parseFloat(s),
  top: (a, { top: o }) => parseFloat(o),
  left: (a, { left: o }) => parseFloat(o),
  bottom: ({ y: a }, { top: o }) => parseFloat(o) + (a.max - a.min),
  right: ({ x: a }, { left: o }) => parseFloat(o) + (a.max - a.min),
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14),
};
positionalValues.translateX = positionalValues.x;
positionalValues.translateY = positionalValues.y;
const convertChangedValueTypes = (a, o, s) => {
    const _ = o.measureViewportBox(),
      $ = o.current,
      et = getComputedStyle($),
      { display: tt } = et,
      rt = {};
    tt === "none" && o.setStaticValue("display", a.display || "block"),
      s.forEach((it) => {
        rt[it] = positionalValues[it](_, et);
      }),
      o.render();
    const nt = o.measureViewportBox();
    return (
      s.forEach((it) => {
        const at = o.getValue(it);
        at && at.jump(rt[it]), (a[it] = positionalValues[it](nt, et));
      }),
      a
    );
  },
  checkAndConvertChangedValueTypes = (a, o, s = {}, _ = {}) => {
    (o = { ...o }), (_ = { ..._ });
    const $ = Object.keys(o).filter(isPositionalKey);
    let et = [],
      tt = !1;
    const rt = [];
    if (
      ($.forEach((nt) => {
        const it = a.getValue(nt);
        if (!a.hasValue(nt)) return;
        let at = s[nt],
          st = findDimensionValueType(at);
        const ot = o[nt];
        let dt;
        if (isKeyframesTarget(ot)) {
          const ht = ot.length,
            ft = ot[0] === null ? 1 : 0;
          (at = ot[ft]), (st = findDimensionValueType(at));
          for (let mt = ft; mt < ht && ot[mt] !== null; mt++)
            dt
              ? invariant(findDimensionValueType(ot[mt]) === dt)
              : (dt = findDimensionValueType(ot[mt]));
        } else dt = findDimensionValueType(ot);
        if (st !== dt)
          if (isNumOrPxType(st) && isNumOrPxType(dt)) {
            const ht = it.get();
            typeof ht == "string" && it.set(parseFloat(ht)),
              typeof ot == "string"
                ? (o[nt] = parseFloat(ot))
                : Array.isArray(ot) &&
                  dt === px$1 &&
                  (o[nt] = ot.map(parseFloat));
          } else
            st != null &&
            st.transform &&
            dt != null &&
            dt.transform &&
            (at === 0 || ot === 0)
              ? at === 0
                ? it.set(dt.transform(at))
                : (o[nt] = st.transform(ot))
              : (tt || ((et = removeNonTranslationalTransform(a)), (tt = !0)),
                rt.push(nt),
                (_[nt] = _[nt] !== void 0 ? _[nt] : o[nt]),
                it.jump(ot));
      }),
      rt.length)
    ) {
      const nt = rt.indexOf("height") >= 0 ? window.pageYOffset : null,
        it = convertChangedValueTypes(o, a, rt);
      return (
        et.length &&
          et.forEach(([at, st]) => {
            a.getValue(at).set(st);
          }),
        a.render(),
        isBrowser && nt !== null && window.scrollTo({ top: nt }),
        { target: it, transitionEnd: _ }
      );
    } else return { target: o, transitionEnd: _ };
  };
function unitConversion(a, o, s, _) {
  return hasPositionalKey(o)
    ? checkAndConvertChangedValueTypes(a, o, s, _)
    : { target: o, transitionEnd: _ };
}
const parseDomVariant = (a, o, s, _) => {
    const $ = resolveCSSVariables(a, o, _);
    return (o = $.target), (_ = $.transitionEnd), unitConversion(a, o, s, _);
  },
  prefersReducedMotion = { current: null },
  hasReducedMotionListener = { current: !1 };
function initPrefersReducedMotion() {
  if (((hasReducedMotionListener.current = !0), !!isBrowser))
    if (window.matchMedia) {
      const a = window.matchMedia("(prefers-reduced-motion)"),
        o = () => (prefersReducedMotion.current = a.matches);
      a.addListener(o), o();
    } else prefersReducedMotion.current = !1;
}
function updateMotionValuesFromProps(a, o, s) {
  const { willChange: _ } = o;
  for (const $ in o) {
    const et = o[$],
      tt = s[$];
    if (isMotionValue(et))
      a.addValue($, et), isWillChangeMotionValue(_) && _.add($);
    else if (isMotionValue(tt))
      a.addValue($, motionValue(et, { owner: a })),
        isWillChangeMotionValue(_) && _.remove($);
    else if (tt !== et)
      if (a.hasValue($)) {
        const rt = a.getValue($);
        !rt.hasAnimated && rt.set(et);
      } else {
        const rt = a.getStaticValue($);
        a.addValue($, motionValue(rt !== void 0 ? rt : et, { owner: a }));
      }
  }
  for (const $ in s) o[$] === void 0 && a.removeValue($);
  return o;
}
const visualElementStore = new WeakMap(),
  featureNames = Object.keys(featureDefinitions),
  numFeatures = featureNames.length,
  propEventHandlers = [
    "AnimationStart",
    "AnimationComplete",
    "Update",
    "BeforeLayoutMeasure",
    "LayoutMeasure",
    "LayoutAnimationStart",
    "LayoutAnimationComplete",
  ],
  numVariantProps = variantProps.length;
class VisualElement {
  constructor(
    {
      parent: o,
      props: s,
      presenceContext: _,
      reducedMotionConfig: $,
      visualState: et,
    },
    tt = {}
  ) {
    (this.current = null),
      (this.children = new Set()),
      (this.isVariantNode = !1),
      (this.isControllingVariants = !1),
      (this.shouldReduceMotion = null),
      (this.values = new Map()),
      (this.features = {}),
      (this.valueSubscriptions = new Map()),
      (this.prevMotionValues = {}),
      (this.events = {}),
      (this.propEventSubscriptions = {}),
      (this.notifyUpdate = () => this.notify("Update", this.latestValues)),
      (this.render = () => {
        this.current &&
          (this.triggerBuild(),
          this.renderInstance(
            this.current,
            this.renderState,
            this.props.style,
            this.projection
          ));
      }),
      (this.scheduleRender = () => frame.render(this.render, !1, !0));
    const { latestValues: rt, renderState: nt } = et;
    (this.latestValues = rt),
      (this.baseTarget = { ...rt }),
      (this.initialValues = s.initial ? { ...rt } : {}),
      (this.renderState = nt),
      (this.parent = o),
      (this.props = s),
      (this.presenceContext = _),
      (this.depth = o ? o.depth + 1 : 0),
      (this.reducedMotionConfig = $),
      (this.options = tt),
      (this.isControllingVariants = isControllingVariants(s)),
      (this.isVariantNode = isVariantNode(s)),
      this.isVariantNode && (this.variantChildren = new Set()),
      (this.manuallyAnimateOnMount = !!(o && o.current));
    const { willChange: it, ...at } = this.scrapeMotionValuesFromProps(s, {});
    for (const st in at) {
      const ot = at[st];
      rt[st] !== void 0 &&
        isMotionValue(ot) &&
        (ot.set(rt[st], !1), isWillChangeMotionValue(it) && it.add(st));
    }
  }
  scrapeMotionValuesFromProps(o, s) {
    return {};
  }
  mount(o) {
    (this.current = o),
      visualElementStore.set(o, this),
      this.projection && !this.projection.instance && this.projection.mount(o),
      this.parent &&
        this.isVariantNode &&
        !this.isControllingVariants &&
        (this.removeFromVariantTree = this.parent.addVariantChild(this)),
      this.values.forEach((s, _) => this.bindToMotionValue(_, s)),
      hasReducedMotionListener.current || initPrefersReducedMotion(),
      (this.shouldReduceMotion =
        this.reducedMotionConfig === "never"
          ? !1
          : this.reducedMotionConfig === "always"
          ? !0
          : prefersReducedMotion.current),
      this.parent && this.parent.children.add(this),
      this.update(this.props, this.presenceContext);
  }
  unmount() {
    visualElementStore.delete(this.current),
      this.projection && this.projection.unmount(),
      cancelFrame(this.notifyUpdate),
      cancelFrame(this.render),
      this.valueSubscriptions.forEach((o) => o()),
      this.removeFromVariantTree && this.removeFromVariantTree(),
      this.parent && this.parent.children.delete(this);
    for (const o in this.events) this.events[o].clear();
    for (const o in this.features) this.features[o].unmount();
    this.current = null;
  }
  bindToMotionValue(o, s) {
    const _ = transformProps.has(o),
      $ = s.on("change", (tt) => {
        (this.latestValues[o] = tt),
          this.props.onUpdate && frame.update(this.notifyUpdate, !1, !0),
          _ && this.projection && (this.projection.isTransformDirty = !0);
      }),
      et = s.on("renderRequest", this.scheduleRender);
    this.valueSubscriptions.set(o, () => {
      $(), et();
    });
  }
  sortNodePosition(o) {
    return !this.current ||
      !this.sortInstanceNodePosition ||
      this.type !== o.type
      ? 0
      : this.sortInstanceNodePosition(this.current, o.current);
  }
  loadFeatures({ children: o, ...s }, _, $, et) {
    let tt, rt;
    for (let nt = 0; nt < numFeatures; nt++) {
      const it = featureNames[nt],
        {
          isEnabled: at,
          Feature: st,
          ProjectionNode: ot,
          MeasureLayout: dt,
        } = featureDefinitions[it];
      ot && (tt = ot),
        at(s) &&
          (!this.features[it] && st && (this.features[it] = new st(this)),
          dt && (rt = dt));
    }
    if (!this.projection && tt) {
      this.projection = new tt(
        this.latestValues,
        this.parent && this.parent.projection
      );
      const {
        layoutId: nt,
        layout: it,
        drag: at,
        dragConstraints: st,
        layoutScroll: ot,
        layoutRoot: dt,
      } = s;
      this.projection.setOptions({
        layoutId: nt,
        layout: it,
        alwaysMeasureLayout: !!at || (st && isRefObject(st)),
        visualElement: this,
        scheduleRender: () => this.scheduleRender(),
        animationType: typeof it == "string" ? it : "both",
        initialPromotionConfig: et,
        layoutScroll: ot,
        layoutRoot: dt,
      });
    }
    return rt;
  }
  updateFeatures() {
    for (const o in this.features) {
      const s = this.features[o];
      s.isMounted ? s.update() : (s.mount(), (s.isMounted = !0));
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.options, this.props);
  }
  measureViewportBox() {
    return this.current
      ? this.measureInstanceViewportBox(this.current, this.props)
      : createBox();
  }
  getStaticValue(o) {
    return this.latestValues[o];
  }
  setStaticValue(o, s) {
    this.latestValues[o] = s;
  }
  makeTargetAnimatable(o, s = !0) {
    return this.makeTargetAnimatableFromInstance(o, this.props, s);
  }
  update(o, s) {
    (o.transformTemplate || this.props.transformTemplate) &&
      this.scheduleRender(),
      (this.prevProps = this.props),
      (this.props = o),
      (this.prevPresenceContext = this.presenceContext),
      (this.presenceContext = s);
    for (let _ = 0; _ < propEventHandlers.length; _++) {
      const $ = propEventHandlers[_];
      this.propEventSubscriptions[$] &&
        (this.propEventSubscriptions[$](),
        delete this.propEventSubscriptions[$]);
      const et = o["on" + $];
      et && (this.propEventSubscriptions[$] = this.on($, et));
    }
    (this.prevMotionValues = updateMotionValuesFromProps(
      this,
      this.scrapeMotionValuesFromProps(o, this.prevProps),
      this.prevMotionValues
    )),
      this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  getVariant(o) {
    return this.props.variants ? this.props.variants[o] : void 0;
  }
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode
      ? this
      : this.parent
      ? this.parent.getClosestVariantNode()
      : void 0;
  }
  getVariantContext(o = !1) {
    if (o) return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      const _ = this.parent ? this.parent.getVariantContext() || {} : {};
      return (
        this.props.initial !== void 0 && (_.initial = this.props.initial), _
      );
    }
    const s = {};
    for (let _ = 0; _ < numVariantProps; _++) {
      const $ = variantProps[_],
        et = this.props[$];
      (isVariantLabel(et) || et === !1) && (s[$] = et);
    }
    return s;
  }
  addVariantChild(o) {
    const s = this.getClosestVariantNode();
    if (s)
      return (
        s.variantChildren && s.variantChildren.add(o),
        () => s.variantChildren.delete(o)
      );
  }
  addValue(o, s) {
    s !== this.values.get(o) &&
      (this.removeValue(o), this.bindToMotionValue(o, s)),
      this.values.set(o, s),
      (this.latestValues[o] = s.get());
  }
  removeValue(o) {
    this.values.delete(o);
    const s = this.valueSubscriptions.get(o);
    s && (s(), this.valueSubscriptions.delete(o)),
      delete this.latestValues[o],
      this.removeValueFromRenderState(o, this.renderState);
  }
  hasValue(o) {
    return this.values.has(o);
  }
  getValue(o, s) {
    if (this.props.values && this.props.values[o]) return this.props.values[o];
    let _ = this.values.get(o);
    return (
      _ === void 0 &&
        s !== void 0 &&
        ((_ = motionValue(s, { owner: this })), this.addValue(o, _)),
      _
    );
  }
  readValue(o) {
    var s;
    return this.latestValues[o] !== void 0 || !this.current
      ? this.latestValues[o]
      : (s = this.getBaseTargetFromProps(this.props, o)) !== null &&
        s !== void 0
      ? s
      : this.readValueFromInstance(this.current, o, this.options);
  }
  setBaseTarget(o, s) {
    this.baseTarget[o] = s;
  }
  getBaseTarget(o) {
    var s;
    const { initial: _ } = this.props,
      $ =
        typeof _ == "string" || typeof _ == "object"
          ? (s = resolveVariantFromProps(this.props, _)) === null ||
            s === void 0
            ? void 0
            : s[o]
          : void 0;
    if (_ && $ !== void 0) return $;
    const et = this.getBaseTargetFromProps(this.props, o);
    return et !== void 0 && !isMotionValue(et)
      ? et
      : this.initialValues[o] !== void 0 && $ === void 0
      ? void 0
      : this.baseTarget[o];
  }
  on(o, s) {
    return (
      this.events[o] || (this.events[o] = new SubscriptionManager()),
      this.events[o].add(s)
    );
  }
  notify(o, ...s) {
    this.events[o] && this.events[o].notify(...s);
  }
}
class DOMVisualElement extends VisualElement {
  sortInstanceNodePosition(o, s) {
    return o.compareDocumentPosition(s) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(o, s) {
    return o.style ? o.style[s] : void 0;
  }
  removeValueFromRenderState(o, { vars: s, style: _ }) {
    delete s[o], delete _[o];
  }
  makeTargetAnimatableFromInstance(
    { transition: o, transitionEnd: s, ..._ },
    { transformValues: $ },
    et
  ) {
    let tt = getOrigin(_, o || {}, this);
    if (($ && (s && (s = $(s)), _ && (_ = $(_)), tt && (tt = $(tt))), et)) {
      checkTargetForNewValues(this, _, tt);
      const rt = parseDomVariant(this, _, tt, s);
      (s = rt.transitionEnd), (_ = rt.target);
    }
    return { transition: o, transitionEnd: s, ..._ };
  }
}
function getComputedStyle$1(a) {
  return window.getComputedStyle(a);
}
class HTMLVisualElement extends DOMVisualElement {
  readValueFromInstance(o, s) {
    if (transformProps.has(s)) {
      const _ = getDefaultValueType(s);
      return (_ && _.default) || 0;
    } else {
      const _ = getComputedStyle$1(o),
        $ = (isCSSVariableName(s) ? _.getPropertyValue(s) : _[s]) || 0;
      return typeof $ == "string" ? $.trim() : $;
    }
  }
  measureInstanceViewportBox(o, { transformPagePoint: s }) {
    return measureViewportBox(o, s);
  }
  build(o, s, _, $) {
    buildHTMLStyles(o, s, _, $.transformTemplate);
  }
  scrapeMotionValuesFromProps(o, s) {
    return scrapeMotionValuesFromProps$1(o, s);
  }
  handleChildMotionValue() {
    this.childSubscription &&
      (this.childSubscription(), delete this.childSubscription);
    const { children: o } = this.props;
    isMotionValue(o) &&
      (this.childSubscription = o.on("change", (s) => {
        this.current && (this.current.textContent = `${s}`);
      }));
  }
  renderInstance(o, s, _, $) {
    renderHTML(o, s, _, $);
  }
}
class SVGVisualElement extends DOMVisualElement {
  constructor() {
    super(...arguments), (this.isSVGTag = !1);
  }
  getBaseTargetFromProps(o, s) {
    return o[s];
  }
  readValueFromInstance(o, s) {
    if (transformProps.has(s)) {
      const _ = getDefaultValueType(s);
      return (_ && _.default) || 0;
    }
    return (
      (s = camelCaseAttributes.has(s) ? s : camelToDash(s)), o.getAttribute(s)
    );
  }
  measureInstanceViewportBox() {
    return createBox();
  }
  scrapeMotionValuesFromProps(o, s) {
    return scrapeMotionValuesFromProps(o, s);
  }
  build(o, s, _, $) {
    buildSVGAttrs(o, s, _, this.isSVGTag, $.transformTemplate);
  }
  renderInstance(o, s, _, $) {
    renderSVG(o, s, _, $);
  }
  mount(o) {
    (this.isSVGTag = isSVGTag(o.tagName)), super.mount(o);
  }
}
const createDomVisualElement = (a, o) =>
    isSVGComponent(a)
      ? new SVGVisualElement(o, { enableHardwareAcceleration: !1 })
      : new HTMLVisualElement(o, { enableHardwareAcceleration: !0 }),
  layout = { layout: { ProjectionNode: HTMLProjectionNode, MeasureLayout } },
  preloadedFeatures = {
    ...animations$1,
    ...gestureAnimations,
    ...drag,
    ...layout,
  },
  motion = createMotionProxy((a, o) =>
    createDomMotionConfig(a, o, preloadedFeatures, createDomVisualElement)
  );
function useIsMounted() {
  const a = reactExports.useRef(!1);
  return (
    useIsomorphicLayoutEffect(
      () => (
        (a.current = !0),
        () => {
          a.current = !1;
        }
      ),
      []
    ),
    a
  );
}
function useForceUpdate() {
  const a = useIsMounted(),
    [o, s] = reactExports.useState(0),
    _ = reactExports.useCallback(() => {
      a.current && s(o + 1);
    }, [o]);
  return [reactExports.useCallback(() => frame.postRender(_), [_]), o];
}
class PopChildMeasure extends reactExports.Component {
  getSnapshotBeforeUpdate(o) {
    const s = this.props.childRef.current;
    if (s && o.isPresent && !this.props.isPresent) {
      const _ = this.props.sizeRef.current;
      (_.height = s.offsetHeight || 0),
        (_.width = s.offsetWidth || 0),
        (_.top = s.offsetTop),
        (_.left = s.offsetLeft);
    }
    return null;
  }
  componentDidUpdate() {}
  render() {
    return this.props.children;
  }
}
function PopChild({ children: a, isPresent: o }) {
  const s = reactExports.useId(),
    _ = reactExports.useRef(null),
    $ = reactExports.useRef({ width: 0, height: 0, top: 0, left: 0 });
  return (
    reactExports.useInsertionEffect(() => {
      const { width: et, height: tt, top: rt, left: nt } = $.current;
      if (o || !_.current || !et || !tt) return;
      _.current.dataset.motionPopId = s;
      const it = document.createElement("style");
      return (
        document.head.appendChild(it),
        it.sheet &&
          it.sheet.insertRule(`
          [data-motion-pop-id="${s}"] {
            position: absolute !important;
            width: ${et}px !important;
            height: ${tt}px !important;
            top: ${rt}px !important;
            left: ${nt}px !important;
          }
        `),
        () => {
          document.head.removeChild(it);
        }
      );
    }, [o]),
    reactExports.createElement(
      PopChildMeasure,
      { isPresent: o, childRef: _, sizeRef: $ },
      reactExports.cloneElement(a, { ref: _ })
    )
  );
}
const PresenceChild = ({
  children: a,
  initial: o,
  isPresent: s,
  onExitComplete: _,
  custom: $,
  presenceAffectsLayout: et,
  mode: tt,
}) => {
  const rt = useConstant(newChildrenMap),
    nt = reactExports.useId(),
    it = reactExports.useMemo(
      () => ({
        id: nt,
        initial: o,
        isPresent: s,
        custom: $,
        onExitComplete: (at) => {
          rt.set(at, !0);
          for (const st of rt.values()) if (!st) return;
          _ && _();
        },
        register: (at) => (rt.set(at, !1), () => rt.delete(at)),
      }),
      et ? void 0 : [s]
    );
  return (
    reactExports.useMemo(() => {
      rt.forEach((at, st) => rt.set(st, !1));
    }, [s]),
    reactExports.useEffect(() => {
      !s && !rt.size && _ && _();
    }, [s]),
    tt === "popLayout" &&
      (a = reactExports.createElement(PopChild, { isPresent: s }, a)),
    reactExports.createElement(PresenceContext.Provider, { value: it }, a)
  );
};
function newChildrenMap() {
  return new Map();
}
function useUnmountEffect(a) {
  return reactExports.useEffect(() => () => a(), []);
}
const getChildKey = (a) => a.key || "";
function updateChildLookup(a, o) {
  a.forEach((s) => {
    const _ = getChildKey(s);
    o.set(_, s);
  });
}
function onlyElements(a) {
  const o = [];
  return (
    reactExports.Children.forEach(a, (s) => {
      reactExports.isValidElement(s) && o.push(s);
    }),
    o
  );
}
const AnimatePresence = ({
  children: a,
  custom: o,
  initial: s = !0,
  onExitComplete: _,
  exitBeforeEnter: $,
  presenceAffectsLayout: et = !0,
  mode: tt = "sync",
}) => {
  const rt =
      reactExports.useContext(LayoutGroupContext).forceRender ||
      useForceUpdate()[0],
    nt = useIsMounted(),
    it = onlyElements(a);
  let at = it;
  const st = reactExports.useRef(new Map()).current,
    ot = reactExports.useRef(at),
    dt = reactExports.useRef(new Map()).current,
    ht = reactExports.useRef(!0);
  if (
    (useIsomorphicLayoutEffect(() => {
      (ht.current = !1), updateChildLookup(it, dt), (ot.current = at);
    }),
    useUnmountEffect(() => {
      (ht.current = !0), dt.clear(), st.clear();
    }),
    ht.current)
  )
    return reactExports.createElement(
      reactExports.Fragment,
      null,
      at.map((lt) =>
        reactExports.createElement(
          PresenceChild,
          {
            key: getChildKey(lt),
            isPresent: !0,
            initial: s ? void 0 : !1,
            presenceAffectsLayout: et,
            mode: tt,
          },
          lt
        )
      )
    );
  at = [...at];
  const ft = ot.current.map(getChildKey),
    mt = it.map(getChildKey),
    ut = ft.length;
  for (let lt = 0; lt < ut; lt++) {
    const ct = ft[lt];
    mt.indexOf(ct) === -1 && !st.has(ct) && st.set(ct, void 0);
  }
  return (
    tt === "wait" && st.size && (at = []),
    st.forEach((lt, ct) => {
      if (mt.indexOf(ct) !== -1) return;
      const pt = dt.get(ct);
      if (!pt) return;
      const vt = ft.indexOf(ct);
      let xt = lt;
      if (!xt) {
        const bt = () => {
          dt.delete(ct), st.delete(ct);
          const St = ot.current.findIndex((Pt) => Pt.key === ct);
          if ((ot.current.splice(St, 1), !st.size)) {
            if (((ot.current = it), nt.current === !1)) return;
            rt(), _ && _();
          }
        };
        (xt = reactExports.createElement(
          PresenceChild,
          {
            key: getChildKey(pt),
            isPresent: !1,
            onExitComplete: bt,
            custom: o,
            presenceAffectsLayout: et,
            mode: tt,
          },
          pt
        )),
          st.set(ct, xt);
      }
      at.splice(vt, 0, xt);
    }),
    (at = at.map((lt) => {
      const ct = lt.key;
      return st.has(ct)
        ? lt
        : reactExports.createElement(
            PresenceChild,
            {
              key: getChildKey(lt),
              isPresent: !0,
              presenceAffectsLayout: et,
              mode: tt,
            },
            lt
          );
    })),
    reactExports.createElement(
      reactExports.Fragment,
      null,
      st.size ? at : at.map((lt) => reactExports.cloneElement(lt))
    )
  );
};
var toastMotionVariants = {
    initial: (a) => {
      const { position: o } = a,
        s = ["top", "bottom"].includes(o) ? "y" : "x";
      let _ = ["top-right", "bottom-right"].includes(o) ? 1 : -1;
      return o === "bottom" && (_ = 1), { opacity: 0, [s]: _ * 24 };
    },
    animate: {
      opacity: 1,
      y: 0,
      x: 0,
      scale: 1,
      transition: { duration: 0.4, ease: [0.4, 0, 0.2, 1] },
    },
    exit: {
      opacity: 0,
      scale: 0.85,
      transition: { duration: 0.2, ease: [0.4, 0, 1, 1] },
    },
  },
  ToastComponent = reactExports.memo((a) => {
    const {
        id: o,
        message: s,
        onCloseComplete: _,
        onRequestRemove: $,
        requestClose: et = !1,
        position: tt = "bottom",
        duration: rt = 5e3,
        containerStyle: nt,
        motionVariants: it = toastMotionVariants,
        toastSpacing: at = "0.5rem",
      } = a,
      [st, ot] = reactExports.useState(rt),
      dt = useIsPresent();
    useUpdateEffect(() => {
      dt || _ == null || _();
    }, [dt]),
      useUpdateEffect(() => {
        ot(rt);
      }, [rt]);
    const ht = () => ot(null),
      ft = () => ot(rt),
      mt = () => {
        dt && $();
      };
    reactExports.useEffect(() => {
      dt && et && $();
    }, [dt, et, $]),
      useTimeout(mt, st);
    const ut = reactExports.useMemo(
        () => ({
          pointerEvents: "auto",
          maxWidth: 560,
          minWidth: 300,
          margin: at,
          ...nt,
        }),
        [nt, at]
      ),
      lt = reactExports.useMemo(() => getToastStyle(tt), [tt]);
    return jsxRuntimeExports.jsx(motion.div, {
      layout: !0,
      className: "chakra-toast",
      variants: it,
      initial: "initial",
      animate: "animate",
      exit: "exit",
      onHoverStart: ht,
      onHoverEnd: ft,
      custom: { position: tt },
      style: lt,
      children: jsxRuntimeExports.jsx(chakra.div, {
        role: "status",
        "aria-atomic": "true",
        className: "chakra-toast__inner",
        __css: ut,
        children: runIfFn$2(s, { id: o, onClose: mt }),
      }),
    });
  });
ToastComponent.displayName = "ToastComponent";
var fallbackIcon = {
    path: jsxRuntimeExports.jsxs("g", {
      stroke: "currentColor",
      strokeWidth: "1.5",
      children: [
        jsxRuntimeExports.jsx("path", {
          strokeLinecap: "round",
          fill: "none",
          d: "M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25",
        }),
        jsxRuntimeExports.jsx("path", {
          fill: "currentColor",
          strokeLinecap: "round",
          d: "M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0",
        }),
        jsxRuntimeExports.jsx("circle", {
          fill: "none",
          strokeMiterlimit: "10",
          cx: "12",
          cy: "12",
          r: "11.25",
        }),
      ],
    }),
    viewBox: "0 0 24 24",
  },
  Icon = forwardRef((a, o) => {
    const {
        as: s,
        viewBox: _,
        color: $ = "currentColor",
        focusable: et = !1,
        children: tt,
        className: rt,
        __css: nt,
        ...it
      } = a,
      at = cx("chakra-icon", rt),
      st = useStyleConfig("Icon", a),
      ot = {
        w: "1em",
        h: "1em",
        display: "inline-block",
        lineHeight: "1em",
        flexShrink: 0,
        color: $,
        ...nt,
        ...st,
      },
      dt = { ref: o, focusable: et, className: at, __css: ot },
      ht = _ ?? fallbackIcon.viewBox;
    if (s && typeof s != "string")
      return jsxRuntimeExports.jsx(chakra.svg, { as: s, ...dt, ...it });
    const ft = tt ?? fallbackIcon.path;
    return jsxRuntimeExports.jsx(chakra.svg, {
      verticalAlign: "middle",
      viewBox: ht,
      ...dt,
      ...it,
      children: ft,
    });
  });
Icon.displayName = "Icon";
function CheckIcon$1(a) {
  return jsxRuntimeExports.jsx(Icon, {
    viewBox: "0 0 24 24",
    ...a,
    children: jsxRuntimeExports.jsx("path", {
      fill: "currentColor",
      d: "M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z",
    }),
  });
}
function InfoIcon(a) {
  return jsxRuntimeExports.jsx(Icon, {
    viewBox: "0 0 24 24",
    ...a,
    children: jsxRuntimeExports.jsx("path", {
      fill: "currentColor",
      d: "M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z",
    }),
  });
}
function WarningIcon(a) {
  return jsxRuntimeExports.jsx(Icon, {
    viewBox: "0 0 24 24",
    ...a,
    children: jsxRuntimeExports.jsx("path", {
      fill: "currentColor",
      d: "M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z",
    }),
  });
}
var spin = keyframes$1({
    "0%": { transform: "rotate(0deg)" },
    "100%": { transform: "rotate(360deg)" },
  }),
  Spinner = forwardRef((a, o) => {
    const s = useStyleConfig("Spinner", a),
      {
        label: _ = "Loading...",
        thickness: $ = "2px",
        speed: et = "0.45s",
        emptyColor: tt = "transparent",
        className: rt,
        ...nt
      } = omitThemingProps(a),
      it = cx("chakra-spinner", rt),
      at = {
        display: "inline-block",
        borderColor: "currentColor",
        borderStyle: "solid",
        borderRadius: "99999px",
        borderWidth: $,
        borderBottomColor: tt,
        borderLeftColor: tt,
        animation: `${spin} ${et} linear infinite`,
        ...s,
      };
    return jsxRuntimeExports.jsx(chakra.div, {
      ref: o,
      __css: at,
      className: it,
      ...nt,
      children:
        _ && jsxRuntimeExports.jsx(chakra.span, { srOnly: !0, children: _ }),
    });
  });
Spinner.displayName = "Spinner";
var [AlertProvider, useAlertContext] = createContext$1({
    name: "AlertContext",
    hookName: "useAlertContext",
    providerName: "<Alert />",
  }),
  [AlertStylesProvider, useAlertStyles] = createContext$1({
    name: "AlertStylesContext",
    hookName: "useAlertStyles",
    providerName: "<Alert />",
  }),
  STATUSES = {
    info: { icon: InfoIcon, colorScheme: "blue" },
    warning: { icon: WarningIcon, colorScheme: "orange" },
    success: { icon: CheckIcon$1, colorScheme: "green" },
    error: { icon: WarningIcon, colorScheme: "red" },
    loading: { icon: Spinner, colorScheme: "blue" },
  };
function getStatusColorScheme(a) {
  return STATUSES[a].colorScheme;
}
function getStatusIcon(a) {
  return STATUSES[a].icon;
}
var AlertDescription = forwardRef(function (o, s) {
  const _ = useAlertStyles(),
    { status: $ } = useAlertContext(),
    et = { display: "inline", ..._.description };
  return jsxRuntimeExports.jsx(chakra.div, {
    ref: s,
    "data-status": $,
    ...o,
    className: cx("chakra-alert__desc", o.className),
    __css: et,
  });
});
AlertDescription.displayName = "AlertDescription";
function AlertIcon(a) {
  const { status: o } = useAlertContext(),
    s = getStatusIcon(o),
    _ = useAlertStyles(),
    $ = o === "loading" ? _.spinner : _.icon;
  return jsxRuntimeExports.jsx(chakra.span, {
    display: "inherit",
    "data-status": o,
    ...a,
    className: cx("chakra-alert__icon", a.className),
    __css: $,
    children: a.children || jsxRuntimeExports.jsx(s, { h: "100%", w: "100%" }),
  });
}
AlertIcon.displayName = "AlertIcon";
var AlertTitle = forwardRef(function (o, s) {
  const _ = useAlertStyles(),
    { status: $ } = useAlertContext();
  return jsxRuntimeExports.jsx(chakra.div, {
    ref: s,
    "data-status": $,
    ...o,
    className: cx("chakra-alert__title", o.className),
    __css: _.title,
  });
});
AlertTitle.displayName = "AlertTitle";
var Alert = forwardRef(function (o, s) {
  var _;
  const { status: $ = "info", addRole: et = !0, ...tt } = omitThemingProps(o),
    rt = (_ = o.colorScheme) != null ? _ : getStatusColorScheme($),
    nt = useMultiStyleConfig("Alert", { ...o, colorScheme: rt }),
    it = {
      width: "100%",
      display: "flex",
      alignItems: "center",
      position: "relative",
      overflow: "hidden",
      ...nt.container,
    };
  return jsxRuntimeExports.jsx(AlertProvider, {
    value: { status: $ },
    children: jsxRuntimeExports.jsx(AlertStylesProvider, {
      value: nt,
      children: jsxRuntimeExports.jsx(chakra.div, {
        "data-status": $,
        role: et ? "alert" : void 0,
        ref: s,
        ...tt,
        className: cx("chakra-alert", o.className),
        __css: it,
      }),
    }),
  });
});
Alert.displayName = "Alert";
function CloseIcon(a) {
  return jsxRuntimeExports.jsx(Icon, {
    focusable: "false",
    "aria-hidden": !0,
    ...a,
    children: jsxRuntimeExports.jsx("path", {
      fill: "currentColor",
      d: "M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z",
    }),
  });
}
var CloseButton = forwardRef(function (o, s) {
  const _ = useStyleConfig("CloseButton", o),
    { children: $, isDisabled: et, __css: tt, ...rt } = omitThemingProps(o),
    nt = {
      outline: 0,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      flexShrink: 0,
    };
  return jsxRuntimeExports.jsx(chakra.button, {
    type: "button",
    "aria-label": "Close",
    ref: s,
    disabled: et,
    __css: { ...nt, ..._, ...tt },
    ...rt,
    children:
      $ || jsxRuntimeExports.jsx(CloseIcon, { width: "1em", height: "1em" }),
  });
});
CloseButton.displayName = "CloseButton";
var initialState = {
    top: [],
    "top-left": [],
    "top-right": [],
    "bottom-left": [],
    bottom: [],
    "bottom-right": [],
  },
  toastStore = createStore(initialState);
function createStore(a) {
  let o = a;
  const s = new Set(),
    _ = ($) => {
      (o = $(o)), s.forEach((et) => et());
    };
  return {
    getState: () => o,
    subscribe: ($) => (
      s.add($),
      () => {
        _(() => a), s.delete($);
      }
    ),
    removeToast: ($, et) => {
      _((tt) => ({ ...tt, [et]: tt[et].filter((rt) => rt.id != $) }));
    },
    notify: ($, et) => {
      const tt = createToast($, et),
        { position: rt, id: nt } = tt;
      return (
        _((it) => {
          var at, st;
          const dt = rt.includes("top")
            ? [tt, ...((at = it[rt]) != null ? at : [])]
            : [...((st = it[rt]) != null ? st : []), tt];
          return { ...it, [rt]: dt };
        }),
        nt
      );
    },
    update: ($, et) => {
      $ &&
        _((tt) => {
          const rt = { ...tt },
            { position: nt, index: it } = findToast(rt, $);
          return (
            nt &&
              it !== -1 &&
              (rt[nt][it] = {
                ...rt[nt][it],
                ...et,
                message: createRenderToast(et),
              }),
            rt
          );
        });
    },
    closeAll: ({ positions: $ } = {}) => {
      _((et) =>
        (
          $ ?? [
            "bottom",
            "bottom-right",
            "bottom-left",
            "top",
            "top-left",
            "top-right",
          ]
        ).reduce(
          (nt, it) => (
            (nt[it] = et[it].map((at) => ({ ...at, requestClose: !0 }))), nt
          ),
          { ...et }
        )
      );
    },
    close: ($) => {
      _((et) => {
        const tt = getToastPosition(et, $);
        return tt
          ? {
              ...et,
              [tt]: et[tt].map((rt) =>
                rt.id == $ ? { ...rt, requestClose: !0 } : rt
              ),
            }
          : et;
      });
    },
    isActive: ($) => !!findToast(toastStore.getState(), $).position,
  };
}
var counter = 0;
function createToast(a, o = {}) {
  var s, _;
  counter += 1;
  const $ = (s = o.id) != null ? s : counter,
    et = (_ = o.position) != null ? _ : "bottom";
  return {
    id: $,
    message: a,
    position: et,
    duration: o.duration,
    onCloseComplete: o.onCloseComplete,
    onRequestRemove: () => toastStore.removeToast(String($), et),
    status: o.status,
    requestClose: !1,
    containerStyle: o.containerStyle,
  };
}
var Toast = (a) => {
  const {
      status: o,
      variant: s = "solid",
      id: _,
      title: $,
      isClosable: et,
      onClose: tt,
      description: rt,
      colorScheme: nt,
      icon: it,
    } = a,
    at = _
      ? {
          root: `toast-${_}`,
          title: `toast-${_}-title`,
          description: `toast-${_}-description`,
        }
      : void 0;
  return jsxRuntimeExports.jsxs(Alert, {
    addRole: !1,
    status: o,
    variant: s,
    id: at == null ? void 0 : at.root,
    alignItems: "start",
    borderRadius: "md",
    boxShadow: "lg",
    paddingEnd: 8,
    textAlign: "start",
    width: "auto",
    colorScheme: nt,
    children: [
      jsxRuntimeExports.jsx(AlertIcon, { children: it }),
      jsxRuntimeExports.jsxs(chakra.div, {
        flex: "1",
        maxWidth: "100%",
        children: [
          $ &&
            jsxRuntimeExports.jsx(AlertTitle, {
              id: at == null ? void 0 : at.title,
              children: $,
            }),
          rt &&
            jsxRuntimeExports.jsx(AlertDescription, {
              id: at == null ? void 0 : at.description,
              display: "block",
              children: rt,
            }),
        ],
      }),
      et &&
        jsxRuntimeExports.jsx(CloseButton, {
          size: "sm",
          onClick: tt,
          position: "absolute",
          insetEnd: 1,
          top: 1,
        }),
    ],
  });
};
function createRenderToast(a = {}) {
  const { render: o, toastComponent: s = Toast } = a;
  return ($) =>
    typeof o == "function"
      ? o({ ...$, ...a })
      : jsxRuntimeExports.jsx(s, { ...$, ...a });
}
var [ToastOptionProvider, useToastOptionContext] = createContext$1({
    name: "ToastOptionsContext",
    strict: !1,
  }),
  ToastProvider = (a) => {
    const o = reactExports.useSyncExternalStore(
        toastStore.subscribe,
        toastStore.getState,
        toastStore.getState
      ),
      { motionVariants: s, component: _ = ToastComponent, portalProps: $ } = a,
      tt = Object.keys(o).map((rt) => {
        const nt = o[rt];
        return jsxRuntimeExports.jsx(
          "div",
          {
            role: "region",
            "aria-live": "polite",
            "aria-label": "Notifications",
            id: `chakra-toast-manager-${rt}`,
            style: getToastListStyle(rt),
            children: jsxRuntimeExports.jsx(AnimatePresence, {
              initial: !1,
              children: nt.map((it) =>
                jsxRuntimeExports.jsx(_, { motionVariants: s, ...it }, it.id)
              ),
            }),
          },
          rt
        );
      });
    return jsxRuntimeExports.jsx(Portal, { ...$, children: tt });
  },
  createChakraProvider = (a) =>
    function ({ children: s, theme: _ = a, toastOptions: $, ...et }) {
      return jsxRuntimeExports.jsxs(ChakraProvider$1, {
        theme: _,
        ...et,
        children: [
          jsxRuntimeExports.jsx(ToastOptionProvider, {
            value: $ == null ? void 0 : $.defaultOptions,
            children: s,
          }),
          jsxRuntimeExports.jsx(ToastProvider, { ...$ }),
        ],
      });
    },
  ChakraProvider = createChakraProvider(theme);
function assignRef$1(a, o) {
  if (a != null) {
    if (typeof a == "function") {
      a(o);
      return;
    }
    try {
      a.current = o;
    } catch {
      throw new Error(`Cannot assign value '${o}' to ref '${a}'`);
    }
  }
}
function mergeRefs(...a) {
  return (o) => {
    a.forEach((s) => {
      assignRef$1(s, o);
    });
  };
}
function useMergeRefs$1(...a) {
  return reactExports.useMemo(() => mergeRefs(...a), a);
}
var TRANSITION_EASINGS = {
    ease: [0.25, 0.1, 0.25, 1],
    easeIn: [0.4, 0, 1, 1],
    easeOut: [0, 0, 0.2, 1],
    easeInOut: [0.4, 0, 0.2, 1],
  },
  TRANSITION_VARIANTS = {
    scale: { enter: { scale: 1 }, exit: { scale: 0.95 } },
    fade: { enter: { opacity: 1 }, exit: { opacity: 0 } },
    pushLeft: { enter: { x: "100%" }, exit: { x: "-30%" } },
    pushRight: { enter: { x: "-100%" }, exit: { x: "30%" } },
    pushUp: { enter: { y: "100%" }, exit: { y: "-30%" } },
    pushDown: { enter: { y: "-100%" }, exit: { y: "30%" } },
    slideLeft: {
      position: { left: 0, top: 0, bottom: 0, width: "100%" },
      enter: { x: 0, y: 0 },
      exit: { x: "-100%", y: 0 },
    },
    slideRight: {
      position: { right: 0, top: 0, bottom: 0, width: "100%" },
      enter: { x: 0, y: 0 },
      exit: { x: "100%", y: 0 },
    },
    slideUp: {
      position: { top: 0, left: 0, right: 0, maxWidth: "100vw" },
      enter: { x: 0, y: 0 },
      exit: { x: 0, y: "-100%" },
    },
    slideDown: {
      position: { bottom: 0, left: 0, right: 0, maxWidth: "100vw" },
      enter: { x: 0, y: 0 },
      exit: { x: 0, y: "100%" },
    },
  };
function getSlideTransition(a) {
  var o;
  switch ((o = a == null ? void 0 : a.direction) != null ? o : "right") {
    case "right":
      return TRANSITION_VARIANTS.slideRight;
    case "left":
      return TRANSITION_VARIANTS.slideLeft;
    case "bottom":
      return TRANSITION_VARIANTS.slideDown;
    case "top":
      return TRANSITION_VARIANTS.slideUp;
    default:
      return TRANSITION_VARIANTS.slideRight;
  }
}
var withDelay = {
    enter: (a, o) => ({
      ...a,
      delay: typeof o == "number" ? o : o == null ? void 0 : o.enter,
    }),
    exit: (a, o) => ({
      ...a,
      delay: typeof o == "number" ? o : o == null ? void 0 : o.exit,
    }),
  },
  defaultTransition = {
    exit: { duration: 0.15, ease: TRANSITION_EASINGS.easeInOut },
    enter: { type: "spring", damping: 25, stiffness: 180 },
  },
  variants = {
    exit: ({ direction: a, transition: o, transitionEnd: s, delay: _ }) => {
      var $;
      const { exit: et } = getSlideTransition({ direction: a });
      return {
        ...et,
        transition:
          ($ = o == null ? void 0 : o.exit) != null
            ? $
            : withDelay.exit(defaultTransition.exit, _),
        transitionEnd: s == null ? void 0 : s.exit,
      };
    },
    enter: ({ direction: a, transitionEnd: o, transition: s, delay: _ }) => {
      var $;
      const { enter: et } = getSlideTransition({ direction: a });
      return {
        ...et,
        transition:
          ($ = s == null ? void 0 : s.enter) != null
            ? $
            : withDelay.enter(defaultTransition.enter, _),
        transitionEnd: o == null ? void 0 : o.enter,
      };
    },
  },
  Slide = reactExports.forwardRef(function (o, s) {
    const {
        direction: _ = "right",
        style: $,
        unmountOnExit: et,
        in: tt,
        className: rt,
        transition: nt,
        transitionEnd: it,
        delay: at,
        motionProps: st,
        ...ot
      } = o,
      dt = getSlideTransition({ direction: _ }),
      ht = Object.assign({ position: "fixed" }, dt.position, $),
      ft = et ? tt && et : !0,
      mt = tt || et ? "enter" : "exit",
      ut = { transitionEnd: it, transition: nt, direction: _, delay: at };
    return jsxRuntimeExports.jsx(AnimatePresence, {
      custom: ut,
      children:
        ft &&
        jsxRuntimeExports.jsx(motion.div, {
          ...ot,
          ref: s,
          initial: "exit",
          className: cx("chakra-slide", rt),
          animate: mt,
          exit: "exit",
          custom: ut,
          variants,
          style: ht,
          ...st,
        }),
    });
  });
Slide.displayName = "Slide";
var NativeImage = forwardRef(function (o, s) {
  const { htmlWidth: _, htmlHeight: $, alt: et, ...tt } = o;
  return jsxRuntimeExports.jsx("img", {
    width: _,
    height: $,
    ref: s,
    alt: et,
    ...tt,
  });
});
NativeImage.displayName = "NativeImage";
function useImage(a) {
  const {
      loading: o,
      src: s,
      srcSet: _,
      onLoad: $,
      onError: et,
      crossOrigin: tt,
      sizes: rt,
      ignoreFallback: nt,
    } = a,
    [it, at] = reactExports.useState("pending");
  reactExports.useEffect(() => {
    at(s ? "loading" : "pending");
  }, [s]);
  const st = reactExports.useRef(),
    ot = reactExports.useCallback(() => {
      if (!s) return;
      dt();
      const ht = new Image();
      (ht.src = s),
        tt && (ht.crossOrigin = tt),
        _ && (ht.srcset = _),
        rt && (ht.sizes = rt),
        o && (ht.loading = o),
        (ht.onload = (ft) => {
          dt(), at("loaded"), $ == null || $(ft);
        }),
        (ht.onerror = (ft) => {
          dt(), at("failed"), et == null || et(ft);
        }),
        (st.current = ht);
    }, [s, tt, _, rt, $, et, o]),
    dt = () => {
      st.current &&
        ((st.current.onload = null),
        (st.current.onerror = null),
        (st.current = null));
    };
  return (
    useSafeLayoutEffect$1(() => {
      if (!nt)
        return (
          it === "loading" && ot(),
          () => {
            dt();
          }
        );
    }, [it, ot, nt]),
    nt ? "loaded" : it
  );
}
var shouldShowFallbackImage = (a, o) =>
  (a !== "loaded" && o === "beforeLoadOrError") ||
  (a === "failed" && o === "onError");
function omit$1(a, o = []) {
  const s = Object.assign({}, a);
  for (const _ of o) _ in s && delete s[_];
  return s;
}
var Image$1 = forwardRef(function (o, s) {
  const {
      fallbackSrc: _,
      fallback: $,
      src: et,
      srcSet: tt,
      align: rt,
      fit: nt,
      loading: it,
      ignoreFallback: at,
      crossOrigin: st,
      fallbackStrategy: ot = "beforeLoadOrError",
      referrerPolicy: dt,
      ...ht
    } = o,
    ft = _ !== void 0 || $ !== void 0,
    mt = it != null || at || !ft,
    ut = useImage({ ...o, crossOrigin: st, ignoreFallback: mt }),
    lt = shouldShowFallbackImage(ut, ot),
    ct = {
      ref: s,
      objectFit: nt,
      objectPosition: rt,
      ...(mt ? ht : omit$1(ht, ["onError", "onLoad"])),
    };
  return lt
    ? $ ||
        jsxRuntimeExports.jsx(chakra.img, {
          as: NativeImage,
          className: "chakra-image__placeholder",
          src: _,
          ...ct,
        })
    : jsxRuntimeExports.jsx(chakra.img, {
        as: NativeImage,
        src: et,
        srcSet: tt,
        crossOrigin: st,
        loading: it,
        referrerPolicy: dt,
        className: "chakra-image",
        ...ct,
      });
});
Image$1.displayName = "Image";
function getValidChildren(a) {
  return reactExports.Children.toArray(a).filter((o) =>
    reactExports.isValidElement(o)
  );
}
var [ButtonGroupProvider, useButtonGroup] = createContext$1({
  strict: !1,
  name: "ButtonGroupContext",
});
function useButtonType(a) {
  const [o, s] = reactExports.useState(!a);
  return {
    ref: reactExports.useCallback((et) => {
      et && s(et.tagName === "BUTTON");
    }, []),
    type: o ? "button" : void 0,
  };
}
function ButtonIcon(a) {
  const { children: o, className: s, ..._ } = a,
    $ = reactExports.isValidElement(o)
      ? reactExports.cloneElement(o, { "aria-hidden": !0, focusable: !1 })
      : o,
    et = cx("chakra-button__icon", s);
  return jsxRuntimeExports.jsx(chakra.span, {
    display: "inline-flex",
    alignSelf: "center",
    flexShrink: 0,
    ..._,
    className: et,
    children: $,
  });
}
ButtonIcon.displayName = "ButtonIcon";
function ButtonSpinner(a) {
  const {
      label: o,
      placement: s,
      spacing: _ = "0.5rem",
      children: $ = jsxRuntimeExports.jsx(Spinner, {
        color: "currentColor",
        width: "1em",
        height: "1em",
      }),
      className: et,
      __css: tt,
      ...rt
    } = a,
    nt = cx("chakra-button__spinner", et),
    it = s === "start" ? "marginEnd" : "marginStart",
    at = reactExports.useMemo(
      () => ({
        display: "flex",
        alignItems: "center",
        position: o ? "relative" : "absolute",
        [it]: o ? _ : 0,
        fontSize: "1em",
        lineHeight: "normal",
        ...tt,
      }),
      [tt, o, it, _]
    );
  return jsxRuntimeExports.jsx(chakra.div, {
    className: nt,
    ...rt,
    __css: at,
    children: $,
  });
}
ButtonSpinner.displayName = "ButtonSpinner";
var Button = forwardRef((a, o) => {
  const s = useButtonGroup(),
    _ = useStyleConfig("Button", { ...s, ...a }),
    {
      isDisabled: $ = s == null ? void 0 : s.isDisabled,
      isLoading: et,
      isActive: tt,
      children: rt,
      leftIcon: nt,
      rightIcon: it,
      loadingText: at,
      iconSpacing: st = "0.5rem",
      type: ot,
      spinner: dt,
      spinnerPlacement: ht = "start",
      className: ft,
      as: mt,
      ...ut
    } = omitThemingProps(a),
    lt = reactExports.useMemo(() => {
      const xt = { ...(_ == null ? void 0 : _._focus), zIndex: 1 };
      return {
        display: "inline-flex",
        appearance: "none",
        alignItems: "center",
        justifyContent: "center",
        userSelect: "none",
        position: "relative",
        whiteSpace: "nowrap",
        verticalAlign: "middle",
        outline: "none",
        ..._,
        ...(!!s && { _focus: xt }),
      };
    }, [_, s]),
    { ref: ct, type: pt } = useButtonType(mt),
    vt = { rightIcon: it, leftIcon: nt, iconSpacing: st, children: rt };
  return jsxRuntimeExports.jsxs(chakra.button, {
    ref: useMergeRefs$1(o, ct),
    as: mt,
    type: ot ?? pt,
    "data-active": dataAttr(tt),
    "data-loading": dataAttr(et),
    __css: lt,
    className: cx("chakra-button", ft),
    ...ut,
    disabled: $ || et,
    children: [
      et &&
        ht === "start" &&
        jsxRuntimeExports.jsx(ButtonSpinner, {
          className: "chakra-button__spinner--start",
          label: at,
          placement: "start",
          spacing: st,
          children: dt,
        }),
      et
        ? at ||
          jsxRuntimeExports.jsx(chakra.span, {
            opacity: 0,
            children: jsxRuntimeExports.jsx(ButtonContent, { ...vt }),
          })
        : jsxRuntimeExports.jsx(ButtonContent, { ...vt }),
      et &&
        ht === "end" &&
        jsxRuntimeExports.jsx(ButtonSpinner, {
          className: "chakra-button__spinner--end",
          label: at,
          placement: "end",
          spacing: st,
          children: dt,
        }),
    ],
  });
});
Button.displayName = "Button";
function ButtonContent(a) {
  const { leftIcon: o, rightIcon: s, children: _, iconSpacing: $ } = a;
  return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
      o && jsxRuntimeExports.jsx(ButtonIcon, { marginEnd: $, children: o }),
      _,
      s && jsxRuntimeExports.jsx(ButtonIcon, { marginStart: $, children: s }),
    ],
  });
}
var IconButton = forwardRef((a, o) => {
  const { icon: s, children: _, isRound: $, "aria-label": et, ...tt } = a,
    rt = s || _,
    nt = reactExports.isValidElement(rt)
      ? reactExports.cloneElement(rt, { "aria-hidden": !0, focusable: !1 })
      : null;
  return jsxRuntimeExports.jsx(Button, {
    padding: "0",
    borderRadius: $ ? "full" : void 0,
    ref: o,
    "aria-label": et,
    ...tt,
    children: nt,
  });
});
IconButton.displayName = "IconButton";
var [CheckboxGroupProvider, useCheckboxGroupContext] = createContext$1({
  name: "CheckboxGroupContext",
  strict: !1,
});
function useInitialAnimationState(a) {
  const [o, s] = reactExports.useState(a),
    [_, $] = reactExports.useState(!1);
  return a !== o && ($(!0), s(a)), _;
}
function CheckIcon(a) {
  return jsxRuntimeExports.jsx(chakra.svg, {
    width: "1.2em",
    viewBox: "0 0 12 10",
    style: {
      fill: "none",
      strokeWidth: 2,
      stroke: "currentColor",
      strokeDasharray: 16,
    },
    ...a,
    children: jsxRuntimeExports.jsx("polyline", {
      points: "1.5 6 4.5 9 10.5 1",
    }),
  });
}
function IndeterminateIcon(a) {
  return jsxRuntimeExports.jsx(chakra.svg, {
    width: "1.2em",
    viewBox: "0 0 24 24",
    style: { stroke: "currentColor", strokeWidth: 4 },
    ...a,
    children: jsxRuntimeExports.jsx("line", {
      x1: "21",
      x2: "3",
      y1: "12",
      y2: "12",
    }),
  });
}
function CheckboxIcon(a) {
  const { isIndeterminate: o, isChecked: s, ..._ } = a,
    $ = o ? IndeterminateIcon : CheckIcon;
  return s || o
    ? jsxRuntimeExports.jsx(chakra.div, {
        style: {
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          height: "100%",
        },
        children: jsxRuntimeExports.jsx($, { ..._ }),
      })
    : null;
}
var [FormControlStylesProvider, useFormControlStyles] = createContext$1({
    name: "FormControlStylesContext",
    errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormControl />" `,
  }),
  [FormControlProvider, useFormControlContext] = createContext$1({
    strict: !1,
    name: "FormControlContext",
  });
function useFormControlProvider(a) {
  const {
      id: o,
      isRequired: s,
      isInvalid: _,
      isDisabled: $,
      isReadOnly: et,
      ...tt
    } = a,
    rt = reactExports.useId(),
    nt = o || `field-${rt}`,
    it = `${nt}-label`,
    at = `${nt}-feedback`,
    st = `${nt}-helptext`,
    [ot, dt] = reactExports.useState(!1),
    [ht, ft] = reactExports.useState(!1),
    [mt, ut] = reactExports.useState(!1),
    lt = reactExports.useCallback(
      (bt = {}, St = null) => ({
        id: st,
        ...bt,
        ref: mergeRefs(St, (Pt) => {
          Pt && ft(!0);
        }),
      }),
      [st]
    ),
    ct = reactExports.useCallback(
      (bt = {}, St = null) => ({
        ...bt,
        ref: St,
        "data-focus": dataAttr(mt),
        "data-disabled": dataAttr($),
        "data-invalid": dataAttr(_),
        "data-readonly": dataAttr(et),
        id: bt.id !== void 0 ? bt.id : it,
        htmlFor: bt.htmlFor !== void 0 ? bt.htmlFor : nt,
      }),
      [nt, $, mt, _, et, it]
    ),
    pt = reactExports.useCallback(
      (bt = {}, St = null) => ({
        id: at,
        ...bt,
        ref: mergeRefs(St, (Pt) => {
          Pt && dt(!0);
        }),
        "aria-live": "polite",
      }),
      [at]
    ),
    vt = reactExports.useCallback(
      (bt = {}, St = null) => ({ ...bt, ...tt, ref: St, role: "group" }),
      [tt]
    ),
    xt = reactExports.useCallback(
      (bt = {}, St = null) => ({
        ...bt,
        ref: St,
        role: "presentation",
        "aria-hidden": !0,
        children: bt.children || "*",
      }),
      []
    );
  return {
    isRequired: !!s,
    isInvalid: !!_,
    isReadOnly: !!et,
    isDisabled: !!$,
    isFocused: !!mt,
    onFocus: () => ut(!0),
    onBlur: () => ut(!1),
    hasFeedbackText: ot,
    setHasFeedbackText: dt,
    hasHelpText: ht,
    setHasHelpText: ft,
    id: nt,
    labelId: it,
    feedbackId: at,
    helpTextId: st,
    htmlProps: tt,
    getHelpTextProps: lt,
    getErrorMessageProps: pt,
    getRootProps: vt,
    getLabelProps: ct,
    getRequiredIndicatorProps: xt,
  };
}
var FormControl = forwardRef(function (o, s) {
  const _ = useMultiStyleConfig("Form", o),
    $ = omitThemingProps(o),
    { getRootProps: et, htmlProps: tt, ...rt } = useFormControlProvider($),
    nt = cx("chakra-form-control", o.className);
  return jsxRuntimeExports.jsx(FormControlProvider, {
    value: rt,
    children: jsxRuntimeExports.jsx(FormControlStylesProvider, {
      value: _,
      children: jsxRuntimeExports.jsx(chakra.div, {
        ...et({}, s),
        className: nt,
        __css: _.container,
      }),
    }),
  });
});
FormControl.displayName = "FormControl";
var FormHelperText = forwardRef(function (o, s) {
  const _ = useFormControlContext(),
    $ = useFormControlStyles(),
    et = cx("chakra-form__helper-text", o.className);
  return jsxRuntimeExports.jsx(chakra.div, {
    ...(_ == null ? void 0 : _.getHelpTextProps(o, s)),
    __css: $.helperText,
    className: et,
  });
});
FormHelperText.displayName = "FormHelperText";
var FormLabel = forwardRef(function (o, s) {
  var _;
  const $ = useStyleConfig("FormLabel", o),
    et = omitThemingProps(o),
    {
      className: tt,
      children: rt,
      requiredIndicator: nt = jsxRuntimeExports.jsx(RequiredIndicator, {}),
      optionalIndicator: it = null,
      ...at
    } = et,
    st = useFormControlContext(),
    ot =
      (_ = st == null ? void 0 : st.getLabelProps(at, s)) != null
        ? _
        : { ref: s, ...at };
  return jsxRuntimeExports.jsxs(chakra.label, {
    ...ot,
    className: cx("chakra-form__label", et.className),
    __css: { display: "block", textAlign: "start", ...$ },
    children: [rt, st != null && st.isRequired ? nt : it],
  });
});
FormLabel.displayName = "FormLabel";
var RequiredIndicator = forwardRef(function (o, s) {
  const _ = useFormControlContext(),
    $ = useFormControlStyles();
  if (!(_ != null && _.isRequired)) return null;
  const et = cx("chakra-form__required-indicator", o.className);
  return jsxRuntimeExports.jsx(chakra.span, {
    ...(_ == null ? void 0 : _.getRequiredIndicatorProps(o, s)),
    __css: $.requiredIndicator,
    className: et,
  });
});
RequiredIndicator.displayName = "RequiredIndicator";
function useFormControl(a) {
  const {
    isDisabled: o,
    isInvalid: s,
    isReadOnly: _,
    isRequired: $,
    ...et
  } = useFormControlProps(a);
  return {
    ...et,
    disabled: o,
    readOnly: _,
    required: $,
    "aria-invalid": ariaAttr(s),
    "aria-required": ariaAttr($),
    "aria-readonly": ariaAttr(_),
  };
}
function useFormControlProps(a) {
  var o, s, _;
  const $ = useFormControlContext(),
    {
      id: et,
      disabled: tt,
      readOnly: rt,
      required: nt,
      isRequired: it,
      isInvalid: at,
      isReadOnly: st,
      isDisabled: ot,
      onFocus: dt,
      onBlur: ht,
      ...ft
    } = a,
    mt = a["aria-describedby"] ? [a["aria-describedby"]] : [];
  return (
    $ != null &&
      $.hasFeedbackText &&
      $ != null &&
      $.isInvalid &&
      mt.push($.feedbackId),
    $ != null && $.hasHelpText && mt.push($.helpTextId),
    {
      ...ft,
      "aria-describedby": mt.join(" ") || void 0,
      id: et ?? ($ == null ? void 0 : $.id),
      isDisabled:
        (o = tt ?? ot) != null ? o : $ == null ? void 0 : $.isDisabled,
      isReadOnly:
        (s = rt ?? st) != null ? s : $ == null ? void 0 : $.isReadOnly,
      isRequired:
        (_ = nt ?? it) != null ? _ : $ == null ? void 0 : $.isRequired,
      isInvalid: at ?? ($ == null ? void 0 : $.isInvalid),
      onFocus: callAllHandlers$1($ == null ? void 0 : $.onFocus, dt),
      onBlur: callAllHandlers$1($ == null ? void 0 : $.onBlur, ht),
    }
  );
}
var visuallyHiddenStyle = {
  border: "0",
  clip: "rect(0, 0, 0, 0)",
  height: "1px",
  width: "1px",
  margin: "-1px",
  padding: "0",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute",
};
const isDom = () => typeof document < "u";
let hasSetup = !1,
  modality = null,
  hasEventBeforeFocus = !1,
  hasBlurredWindowRecently = !1;
const handlers = new Set();
function trigger(a, o) {
  handlers.forEach((s) => s(a, o));
}
const isMac =
  typeof window < "u" && window.navigator != null
    ? /^Mac/.test(window.navigator.platform)
    : !1;
function isValidKey(a) {
  return !(
    a.metaKey ||
    (!isMac && a.altKey) ||
    a.ctrlKey ||
    a.key === "Control" ||
    a.key === "Shift" ||
    a.key === "Meta"
  );
}
function onKeyboardEvent(a) {
  (hasEventBeforeFocus = !0),
    isValidKey(a) && ((modality = "keyboard"), trigger("keyboard", a));
}
function onPointerEvent(a) {
  if (
    ((modality = "pointer"), a.type === "mousedown" || a.type === "pointerdown")
  ) {
    hasEventBeforeFocus = !0;
    const o = a.composedPath ? a.composedPath()[0] : a.target;
    let s = !1;
    try {
      s = o.matches(":focus-visible");
    } catch {}
    if (s) return;
    trigger("pointer", a);
  }
}
function isVirtualClick(a) {
  return a.mozInputSource === 0 && a.isTrusted
    ? !0
    : a.detail === 0 && !a.pointerType;
}
function onClickEvent(a) {
  isVirtualClick(a) && ((hasEventBeforeFocus = !0), (modality = "virtual"));
}
function onWindowFocus(a) {
  a.target === window ||
    a.target === document ||
    (!hasEventBeforeFocus &&
      !hasBlurredWindowRecently &&
      ((modality = "virtual"), trigger("virtual", a)),
    (hasEventBeforeFocus = !1),
    (hasBlurredWindowRecently = !1));
}
function onWindowBlur$1() {
  (hasEventBeforeFocus = !1), (hasBlurredWindowRecently = !0);
}
function isFocusVisible() {
  return modality !== "pointer";
}
function setupGlobalFocusEvents() {
  if (!isDom() || hasSetup) return;
  const { focus: a } = HTMLElement.prototype;
  (HTMLElement.prototype.focus = function (...s) {
    (hasEventBeforeFocus = !0), a.apply(this, s);
  }),
    document.addEventListener("keydown", onKeyboardEvent, !0),
    document.addEventListener("keyup", onKeyboardEvent, !0),
    document.addEventListener("click", onClickEvent, !0),
    window.addEventListener("focus", onWindowFocus, !0),
    window.addEventListener("blur", onWindowBlur$1, !1),
    typeof PointerEvent < "u"
      ? (document.addEventListener("pointerdown", onPointerEvent, !0),
        document.addEventListener("pointermove", onPointerEvent, !0),
        document.addEventListener("pointerup", onPointerEvent, !0))
      : (document.addEventListener("mousedown", onPointerEvent, !0),
        document.addEventListener("mousemove", onPointerEvent, !0),
        document.addEventListener("mouseup", onPointerEvent, !0)),
    (hasSetup = !0);
}
function trackFocusVisible(a) {
  setupGlobalFocusEvents(), a(isFocusVisible());
  const o = () => a(isFocusVisible());
  return (
    handlers.add(o),
    () => {
      handlers.delete(o);
    }
  );
}
function omit(a, o = []) {
  const s = Object.assign({}, a);
  for (const _ of o) _ in s && delete s[_];
  return s;
}
function useCheckbox(a = {}) {
  const o = useFormControlProps(a),
    {
      isDisabled: s,
      isReadOnly: _,
      isRequired: $,
      isInvalid: et,
      id: tt,
      onBlur: rt,
      onFocus: nt,
      "aria-describedby": it,
    } = o,
    {
      defaultChecked: at,
      isChecked: st,
      isFocusable: ot,
      onChange: dt,
      isIndeterminate: ht,
      name: ft,
      value: mt,
      tabIndex: ut = void 0,
      "aria-label": lt,
      "aria-labelledby": ct,
      "aria-invalid": pt,
      ...vt
    } = a,
    xt = omit(vt, [
      "isDisabled",
      "isReadOnly",
      "isRequired",
      "isInvalid",
      "id",
      "onBlur",
      "onFocus",
      "aria-describedby",
    ]),
    bt = useCallbackRef$2(dt),
    St = useCallbackRef$2(rt),
    Pt = useCallbackRef$2(nt),
    [Mt, It] = reactExports.useState(!1),
    [Rt, jt] = reactExports.useState(!1),
    [Dt, At] = reactExports.useState(!1),
    [Et, kt] = reactExports.useState(!1);
  reactExports.useEffect(() => trackFocusVisible(It), []);
  const gt = reactExports.useRef(null),
    [yt, wt] = reactExports.useState(!0),
    [_t, Ft] = reactExports.useState(!!at),
    Vt = st !== void 0,
    Lt = Vt ? st : _t,
    Wt = reactExports.useCallback(
      (Nt) => {
        if (_ || s) {
          Nt.preventDefault();
          return;
        }
        Vt || Ft(Lt ? Nt.target.checked : ht ? !0 : Nt.target.checked),
          bt == null || bt(Nt);
      },
      [_, s, Lt, Vt, ht, bt]
    );
  useSafeLayoutEffect$1(() => {
    gt.current && (gt.current.indeterminate = !!ht);
  }, [ht]),
    useUpdateEffect(() => {
      s && jt(!1);
    }, [s, jt]),
    useSafeLayoutEffect$1(() => {
      const Nt = gt.current;
      if (!(Nt != null && Nt.form)) return;
      const tr = () => {
        Ft(!!at);
      };
      return (
        Nt.form.addEventListener("reset", tr),
        () => {
          var rr;
          return (rr = Nt.form) == null
            ? void 0
            : rr.removeEventListener("reset", tr);
        }
      );
    }, []);
  const zt = s && !ot,
    Gt = reactExports.useCallback(
      (Nt) => {
        Nt.key === " " && kt(!0);
      },
      [kt]
    ),
    Kt = reactExports.useCallback(
      (Nt) => {
        Nt.key === " " && kt(!1);
      },
      [kt]
    );
  useSafeLayoutEffect$1(() => {
    if (!gt.current) return;
    gt.current.checked !== Lt && Ft(gt.current.checked);
  }, [gt.current]);
  const er = reactExports.useCallback(
      (Nt = {}, tr = null) => {
        const rr = (or) => {
          Rt && or.preventDefault(), kt(!0);
        };
        return {
          ...Nt,
          ref: tr,
          "data-active": dataAttr(Et),
          "data-hover": dataAttr(Dt),
          "data-checked": dataAttr(Lt),
          "data-focus": dataAttr(Rt),
          "data-focus-visible": dataAttr(Rt && Mt),
          "data-indeterminate": dataAttr(ht),
          "data-disabled": dataAttr(s),
          "data-invalid": dataAttr(et),
          "data-readonly": dataAttr(_),
          "aria-hidden": !0,
          onMouseDown: callAllHandlers$1(Nt.onMouseDown, rr),
          onMouseUp: callAllHandlers$1(Nt.onMouseUp, () => kt(!1)),
          onMouseEnter: callAllHandlers$1(Nt.onMouseEnter, () => At(!0)),
          onMouseLeave: callAllHandlers$1(Nt.onMouseLeave, () => At(!1)),
        };
      },
      [Et, Lt, s, Rt, Mt, Dt, ht, et, _]
    ),
    Xt = reactExports.useCallback(
      (Nt = {}, tr = null) => ({
        ...Nt,
        ref: tr,
        "data-active": dataAttr(Et),
        "data-hover": dataAttr(Dt),
        "data-checked": dataAttr(Lt),
        "data-focus": dataAttr(Rt),
        "data-focus-visible": dataAttr(Rt && Mt),
        "data-indeterminate": dataAttr(ht),
        "data-disabled": dataAttr(s),
        "data-invalid": dataAttr(et),
        "data-readonly": dataAttr(_),
      }),
      [Et, Lt, s, Rt, Mt, Dt, ht, et, _]
    ),
    Yt = reactExports.useCallback(
      (Nt = {}, tr = null) => ({
        ...xt,
        ...Nt,
        ref: mergeRefs(tr, (rr) => {
          rr && wt(rr.tagName === "LABEL");
        }),
        onClick: callAllHandlers$1(Nt.onClick, () => {
          var rr;
          yt ||
            ((rr = gt.current) == null || rr.click(),
            requestAnimationFrame(() => {
              var or;
              (or = gt.current) == null || or.focus({ preventScroll: !0 });
            }));
        }),
        "data-disabled": dataAttr(s),
        "data-checked": dataAttr(Lt),
        "data-invalid": dataAttr(et),
      }),
      [xt, s, Lt, et, yt]
    ),
    nr = reactExports.useCallback(
      (Nt = {}, tr = null) => ({
        ...Nt,
        ref: mergeRefs(gt, tr),
        type: "checkbox",
        name: ft,
        value: mt,
        id: tt,
        tabIndex: ut,
        onChange: callAllHandlers$1(Nt.onChange, Wt),
        onBlur: callAllHandlers$1(Nt.onBlur, St, () => jt(!1)),
        onFocus: callAllHandlers$1(Nt.onFocus, Pt, () => jt(!0)),
        onKeyDown: callAllHandlers$1(Nt.onKeyDown, Gt),
        onKeyUp: callAllHandlers$1(Nt.onKeyUp, Kt),
        required: $,
        checked: Lt,
        disabled: zt,
        readOnly: _,
        "aria-label": lt,
        "aria-labelledby": ct,
        "aria-invalid": pt ? !!pt : et,
        "aria-describedby": it,
        "aria-disabled": s,
        style: visuallyHiddenStyle,
      }),
      [ft, mt, tt, Wt, St, Pt, Gt, Kt, $, Lt, zt, _, lt, ct, pt, et, it, s, ut]
    ),
    Ht = reactExports.useCallback(
      (Nt = {}, tr = null) => ({
        ...Nt,
        ref: tr,
        onMouseDown: callAllHandlers$1(Nt.onMouseDown, stopEvent),
        "data-disabled": dataAttr(s),
        "data-checked": dataAttr(Lt),
        "data-invalid": dataAttr(et),
      }),
      [Lt, s, et]
    );
  return {
    state: {
      isInvalid: et,
      isFocused: Rt,
      isChecked: Lt,
      isActive: Et,
      isHovered: Dt,
      isIndeterminate: ht,
      isDisabled: s,
      isReadOnly: _,
      isRequired: $,
    },
    getRootProps: Yt,
    getCheckboxProps: er,
    getIndicatorProps: Xt,
    getInputProps: nr,
    getLabelProps: Ht,
    htmlProps: xt,
  };
}
function stopEvent(a) {
  a.preventDefault(), a.stopPropagation();
}
var controlStyles = {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    verticalAlign: "top",
    userSelect: "none",
    flexShrink: 0,
  },
  rootStyles = {
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    position: "relative",
  },
  checkAnim = keyframes$1({
    from: { opacity: 0, strokeDashoffset: 16, transform: "scale(0.95)" },
    to: { opacity: 1, strokeDashoffset: 0, transform: "scale(1)" },
  }),
  indeterminateOpacityAnim = keyframes$1({
    from: { opacity: 0 },
    to: { opacity: 1 },
  }),
  indeterminateScaleAnim = keyframes$1({
    from: { transform: "scaleX(0.65)" },
    to: { transform: "scaleX(1)" },
  }),
  Checkbox = forwardRef(function (o, s) {
    const _ = useCheckboxGroupContext(),
      $ = { ..._, ...o },
      et = useMultiStyleConfig("Checkbox", $),
      tt = omitThemingProps(o),
      {
        spacing: rt = "0.5rem",
        className: nt,
        children: it,
        iconColor: at,
        iconSize: st,
        icon: ot = jsxRuntimeExports.jsx(CheckboxIcon, {}),
        isChecked: dt,
        isDisabled: ht = _ == null ? void 0 : _.isDisabled,
        onChange: ft,
        inputProps: mt,
        ...ut
      } = tt;
    let lt = dt;
    _ != null && _.value && tt.value && (lt = _.value.includes(tt.value));
    let ct = ft;
    _ != null && _.onChange && tt.value && (ct = callAll(_.onChange, ft));
    const {
        state: pt,
        getInputProps: vt,
        getCheckboxProps: xt,
        getLabelProps: bt,
        getRootProps: St,
      } = useCheckbox({ ...ut, isDisabled: ht, isChecked: lt, onChange: ct }),
      Pt = useInitialAnimationState(pt.isChecked),
      Mt = reactExports.useMemo(
        () => ({
          animation: Pt
            ? pt.isIndeterminate
              ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`
              : `${checkAnim} 200ms linear`
            : void 0,
          fontSize: st,
          color: at,
          ...et.icon,
        }),
        [at, st, Pt, pt.isIndeterminate, et.icon]
      ),
      It = reactExports.cloneElement(ot, {
        __css: Mt,
        isIndeterminate: pt.isIndeterminate,
        isChecked: pt.isChecked,
      });
    return jsxRuntimeExports.jsxs(chakra.label, {
      __css: { ...rootStyles, ...et.container },
      className: cx("chakra-checkbox", nt),
      ...St(),
      children: [
        jsxRuntimeExports.jsx("input", {
          className: "chakra-checkbox__input",
          ...vt(mt, s),
        }),
        jsxRuntimeExports.jsx(chakra.span, {
          __css: { ...controlStyles, ...et.control },
          className: "chakra-checkbox__control",
          ...xt(),
          children: It,
        }),
        it &&
          jsxRuntimeExports.jsx(chakra.span, {
            className: "chakra-checkbox__label",
            ...bt(),
            __css: { marginStart: rt, ...et.label },
            children: it,
          }),
      ],
    });
  });
Checkbox.displayName = "Checkbox";
function _objectWithoutPropertiesLoose(a, o) {
  if (a == null) return {};
  var s = {},
    _ = Object.keys(a),
    $,
    et;
  for (et = 0; et < _.length; et++)
    ($ = _[et]), !(o.indexOf($) >= 0) && (s[$] = a[$]);
  return s;
}
var propTypes = { exports: {} },
  ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  ReactPropTypesSecret_1 = ReactPropTypesSecret$1,
  ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function () {
  function a(_, $, et, tt, rt, nt) {
    if (nt !== ReactPropTypesSecret) {
      var it = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
      );
      throw ((it.name = "Invariant Violation"), it);
    }
  }
  a.isRequired = a;
  function o() {
    return a;
  }
  var s = {
    array: a,
    bigint: a,
    bool: a,
    func: a,
    number: a,
    object: a,
    string: a,
    symbol: a,
    any: a,
    arrayOf: o,
    element: a,
    elementType: a,
    instanceOf: o,
    node: a,
    objectOf: o,
    oneOf: o,
    oneOfType: o,
    shape: o,
    exact: o,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction,
  };
  return (s.PropTypes = s), s;
};
propTypes.exports = factoryWithThrowingShims();
var propTypesExports = propTypes.exports,
  FOCUS_GROUP = "data-focus-lock",
  FOCUS_DISABLED = "data-focus-lock-disabled",
  FOCUS_ALLOW = "data-no-focus-lock",
  FOCUS_AUTO = "data-autofocus-inside",
  FOCUS_NO_AUTOFOCUS = "data-no-autofocus";
function assignRef(a, o) {
  return typeof a == "function" ? a(o) : a && (a.current = o), a;
}
function useCallbackRef$1(a, o) {
  var s = reactExports.useState(function () {
    return {
      value: a,
      callback: o,
      facade: {
        get current() {
          return s.value;
        },
        set current(_) {
          var $ = s.value;
          $ !== _ && ((s.value = _), s.callback(_, $));
        },
      },
    };
  })[0];
  return (s.callback = o), s.facade;
}
function useMergeRefs(a, o) {
  return useCallbackRef$1(o || null, function (s) {
    return a.forEach(function (_) {
      return assignRef(_, s);
    });
  });
}
var hiddenGuard = {
    width: "1px",
    height: "0px",
    padding: 0,
    overflow: "hidden",
    position: "fixed",
    top: "1px",
    left: "1px",
  },
  __assign$1 = function () {
    return (
      (__assign$1 =
        Object.assign ||
        function (o) {
          for (var s, _ = 1, $ = arguments.length; _ < $; _++) {
            s = arguments[_];
            for (var et in s)
              Object.prototype.hasOwnProperty.call(s, et) && (o[et] = s[et]);
          }
          return o;
        }),
      __assign$1.apply(this, arguments)
    );
  };
function __rest$1(a, o) {
  var s = {};
  for (var _ in a)
    Object.prototype.hasOwnProperty.call(a, _) &&
      o.indexOf(_) < 0 &&
      (s[_] = a[_]);
  if (a != null && typeof Object.getOwnPropertySymbols == "function")
    for (var $ = 0, _ = Object.getOwnPropertySymbols(a); $ < _.length; $++)
      o.indexOf(_[$]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(a, _[$]) &&
        (s[_[$]] = a[_[$]]);
  return s;
}
function __spreadArray(a, o, s) {
  if (s || arguments.length === 2)
    for (var _ = 0, $ = o.length, et; _ < $; _++)
      (et || !(_ in o)) &&
        (et || (et = Array.prototype.slice.call(o, 0, _)), (et[_] = o[_]));
  return a.concat(et || Array.prototype.slice.call(o));
}
typeof SuppressedError == "function" && SuppressedError;
function ItoI(a) {
  return a;
}
function innerCreateMedium(a, o) {
  o === void 0 && (o = ItoI);
  var s = [],
    _ = !1,
    $ = {
      read: function () {
        if (_)
          throw new Error(
            "Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`."
          );
        return s.length ? s[s.length - 1] : a;
      },
      useMedium: function (et) {
        var tt = o(et, _);
        return (
          s.push(tt),
          function () {
            s = s.filter(function (rt) {
              return rt !== tt;
            });
          }
        );
      },
      assignSyncMedium: function (et) {
        for (_ = !0; s.length; ) {
          var tt = s;
          (s = []), tt.forEach(et);
        }
        s = {
          push: function (rt) {
            return et(rt);
          },
          filter: function () {
            return s;
          },
        };
      },
      assignMedium: function (et) {
        _ = !0;
        var tt = [];
        if (s.length) {
          var rt = s;
          (s = []), rt.forEach(et), (tt = s);
        }
        var nt = function () {
            var at = tt;
            (tt = []), at.forEach(et);
          },
          it = function () {
            return Promise.resolve().then(nt);
          };
        it(),
          (s = {
            push: function (at) {
              tt.push(at), it();
            },
            filter: function (at) {
              return (tt = tt.filter(at)), s;
            },
          });
      },
    };
  return $;
}
function createMedium(a, o) {
  return o === void 0 && (o = ItoI), innerCreateMedium(a, o);
}
function createSidecarMedium(a) {
  a === void 0 && (a = {});
  var o = innerCreateMedium(null);
  return (o.options = __assign$1({ async: !0, ssr: !1 }, a)), o;
}
var SideCar$1 = function (a) {
  var o = a.sideCar,
    s = __rest$1(a, ["sideCar"]);
  if (!o)
    throw new Error(
      "Sidecar: please provide `sideCar` property to import the right car"
    );
  var _ = o.read();
  if (!_) throw new Error("Sidecar medium not found");
  return reactExports.createElement(_, __assign$1({}, s));
};
SideCar$1.isSideCarExport = !0;
function exportSidecar(a, o) {
  return a.useMedium(o), SideCar$1;
}
var mediumFocus = createMedium({}, function (a) {
    var o = a.target,
      s = a.currentTarget;
    return { target: o, currentTarget: s };
  }),
  mediumBlur = createMedium(),
  mediumEffect = createMedium(),
  mediumSidecar = createSidecarMedium({ async: !0 }),
  emptyArray = [],
  FocusLock$2 = reactExports.forwardRef(function (o, s) {
    var _,
      $ = reactExports.useState(),
      et = $[0],
      tt = $[1],
      rt = reactExports.useRef(),
      nt = reactExports.useRef(!1),
      it = reactExports.useRef(null),
      at = o.children,
      st = o.disabled,
      ot = o.noFocusGuards,
      dt = o.persistentFocus,
      ht = o.crossFrame,
      ft = o.autoFocus;
    o.allowTextSelection;
    var mt = o.group,
      ut = o.className,
      lt = o.whiteList,
      ct = o.hasPositiveIndices,
      pt = o.shards,
      vt = pt === void 0 ? emptyArray : pt,
      xt = o.as,
      bt = xt === void 0 ? "div" : xt,
      St = o.lockProps,
      Pt = St === void 0 ? {} : St,
      Mt = o.sideCar,
      It = o.returnFocus,
      Rt = o.focusOptions,
      jt = o.onActivation,
      Dt = o.onDeactivation,
      At = reactExports.useState({}),
      Et = At[0],
      kt = reactExports.useCallback(
        function () {
          (it.current = it.current || (document && document.activeElement)),
            rt.current && jt && jt(rt.current),
            (nt.current = !0);
        },
        [jt]
      ),
      gt = reactExports.useCallback(
        function () {
          (nt.current = !1), Dt && Dt(rt.current);
        },
        [Dt]
      );
    reactExports.useEffect(function () {
      st || (it.current = null);
    }, []);
    var yt = reactExports.useCallback(
        function (Gt) {
          var Kt = it.current;
          if (Kt && Kt.focus) {
            var er = typeof It == "function" ? It(Kt) : It;
            if (er) {
              var Xt = typeof er == "object" ? er : void 0;
              (it.current = null),
                Gt
                  ? Promise.resolve().then(function () {
                      return Kt.focus(Xt);
                    })
                  : Kt.focus(Xt);
            }
          }
        },
        [It]
      ),
      wt = reactExports.useCallback(function (Gt) {
        nt.current && mediumFocus.useMedium(Gt);
      }, []),
      _t = mediumBlur.useMedium,
      Ft = reactExports.useCallback(function (Gt) {
        rt.current !== Gt && ((rt.current = Gt), tt(Gt));
      }, []),
      Vt = _extends$1(
        ((_ = {}),
        (_[FOCUS_DISABLED] = st && "disabled"),
        (_[FOCUS_GROUP] = mt),
        _),
        Pt
      ),
      Lt = ot !== !0,
      Wt = Lt && ot !== "tail",
      zt = useMergeRefs([s, Ft]);
    return reactExports.createElement(
      reactExports.Fragment,
      null,
      Lt && [
        reactExports.createElement("div", {
          key: "guard-first",
          "data-focus-guard": !0,
          tabIndex: st ? -1 : 0,
          style: hiddenGuard,
        }),
        ct
          ? reactExports.createElement("div", {
              key: "guard-nearest",
              "data-focus-guard": !0,
              tabIndex: st ? -1 : 1,
              style: hiddenGuard,
            })
          : null,
      ],
      !st &&
        reactExports.createElement(Mt, {
          id: Et,
          sideCar: mediumSidecar,
          observed: et,
          disabled: st,
          persistentFocus: dt,
          crossFrame: ht,
          autoFocus: ft,
          whiteList: lt,
          shards: vt,
          onActivation: kt,
          onDeactivation: gt,
          returnFocus: yt,
          focusOptions: Rt,
        }),
      reactExports.createElement(
        bt,
        _extends$1({ ref: zt }, Vt, { className: ut, onBlur: _t, onFocus: wt }),
        at
      ),
      Wt &&
        reactExports.createElement("div", {
          "data-focus-guard": !0,
          tabIndex: st ? -1 : 0,
          style: hiddenGuard,
        })
    );
  });
FocusLock$2.propTypes = {};
FocusLock$2.defaultProps = {
  children: void 0,
  disabled: !1,
  returnFocus: !1,
  focusOptions: void 0,
  noFocusGuards: !1,
  autoFocus: !0,
  persistentFocus: !1,
  crossFrame: !0,
  hasPositiveIndices: void 0,
  allowTextSelection: void 0,
  group: void 0,
  className: void 0,
  whiteList: void 0,
  shards: void 0,
  as: "div",
  lockProps: {},
  onActivation: void 0,
  onDeactivation: void 0,
};
const FocusLockUI = FocusLock$2;
function _setPrototypeOf$1(a, o) {
  return (
    (_setPrototypeOf$1 = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (_, $) {
          return (_.__proto__ = $), _;
        }),
    _setPrototypeOf$1(a, o)
  );
}
function _inheritsLoose(a, o) {
  (a.prototype = Object.create(o.prototype)),
    (a.prototype.constructor = a),
    _setPrototypeOf$1(a, o);
}
function _typeof$2(a) {
  "@babel/helpers - typeof";
  return (
    (_typeof$2 =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (o) {
            return typeof o;
          }
        : function (o) {
            return o &&
              typeof Symbol == "function" &&
              o.constructor === Symbol &&
              o !== Symbol.prototype
              ? "symbol"
              : typeof o;
          }),
    _typeof$2(a)
  );
}
function _toPrimitive$1(a, o) {
  if (_typeof$2(a) !== "object" || a === null) return a;
  var s = a[Symbol.toPrimitive];
  if (s !== void 0) {
    var _ = s.call(a, o || "default");
    if (_typeof$2(_) !== "object") return _;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (o === "string" ? String : Number)(a);
}
function _toPropertyKey(a) {
  var o = _toPrimitive$1(a, "string");
  return _typeof$2(o) === "symbol" ? o : String(o);
}
function _defineProperty$1(a, o, s) {
  return (
    (o = _toPropertyKey(o)),
    o in a
      ? Object.defineProperty(a, o, {
          value: s,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (a[o] = s),
    a
  );
}
function withSideEffect(a, o) {
  function s(_) {
    return _.displayName || _.name || "Component";
  }
  return function ($) {
    var et = [],
      tt;
    function rt() {
      (tt = a(
        et.map(function (it) {
          return it.props;
        })
      )),
        o(tt);
    }
    var nt = (function (it) {
      _inheritsLoose(at, it);
      function at() {
        return it.apply(this, arguments) || this;
      }
      at.peek = function () {
        return tt;
      };
      var st = at.prototype;
      return (
        (st.componentDidMount = function () {
          et.push(this), rt();
        }),
        (st.componentDidUpdate = function () {
          rt();
        }),
        (st.componentWillUnmount = function () {
          var dt = et.indexOf(this);
          et.splice(dt, 1), rt();
        }),
        (st.render = function () {
          return React.createElement($, this.props);
        }),
        at
      );
    })(reactExports.PureComponent);
    return _defineProperty$1(nt, "displayName", "SideEffect(" + s($) + ")"), nt;
  };
}
var toArray = function (a) {
    for (var o = Array(a.length), s = 0; s < a.length; ++s) o[s] = a[s];
    return o;
  },
  asArray = function (a) {
    return Array.isArray(a) ? a : [a];
  },
  getFirst = function (a) {
    return Array.isArray(a) ? a[0] : a;
  },
  isElementHidden = function (a) {
    if (a.nodeType !== Node.ELEMENT_NODE) return !1;
    var o = window.getComputedStyle(a, null);
    return !o || !o.getPropertyValue
      ? !1
      : o.getPropertyValue("display") === "none" ||
          o.getPropertyValue("visibility") === "hidden";
  },
  getParentNode = function (a) {
    return a.parentNode && a.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE
      ? a.parentNode.host
      : a.parentNode;
  },
  isTopNode = function (a) {
    return a === document || (a && a.nodeType === Node.DOCUMENT_NODE);
  },
  isVisibleUncached = function (a, o) {
    return !a || isTopNode(a) || (!isElementHidden(a) && o(getParentNode(a)));
  },
  isVisibleCached = function (a, o) {
    var s = a.get(o);
    if (s !== void 0) return s;
    var _ = isVisibleUncached(o, isVisibleCached.bind(void 0, a));
    return a.set(o, _), _;
  },
  isAutoFocusAllowedUncached = function (a, o) {
    return a && !isTopNode(a)
      ? isAutoFocusAllowed(a)
        ? o(getParentNode(a))
        : !1
      : !0;
  },
  isAutoFocusAllowedCached = function (a, o) {
    var s = a.get(o);
    if (s !== void 0) return s;
    var _ = isAutoFocusAllowedUncached(
      o,
      isAutoFocusAllowedCached.bind(void 0, a)
    );
    return a.set(o, _), _;
  },
  getDataset = function (a) {
    return a.dataset;
  },
  isHTMLButtonElement = function (a) {
    return a.tagName === "BUTTON";
  },
  isHTMLInputElement = function (a) {
    return a.tagName === "INPUT";
  },
  isRadioElement = function (a) {
    return isHTMLInputElement(a) && a.type === "radio";
  },
  notHiddenInput = function (a) {
    return !(
      (isHTMLInputElement(a) || isHTMLButtonElement(a)) &&
      (a.type === "hidden" || a.disabled)
    );
  },
  isAutoFocusAllowed = function (a) {
    var o = a.getAttribute(FOCUS_NO_AUTOFOCUS);
    return ![!0, "true", ""].includes(o);
  },
  isGuard = function (a) {
    var o;
    return !!(
      a &&
      !((o = getDataset(a)) === null || o === void 0) &&
      o.focusGuard
    );
  },
  isNotAGuard = function (a) {
    return !isGuard(a);
  },
  isDefined = function (a) {
    return !!a;
  },
  tabSort = function (a, o) {
    var s = a.tabIndex - o.tabIndex,
      _ = a.index - o.index;
    if (s) {
      if (!a.tabIndex) return 1;
      if (!o.tabIndex) return -1;
    }
    return s || _;
  },
  orderByTabIndex = function (a, o, s) {
    return toArray(a)
      .map(function (_, $) {
        return {
          node: _,
          index: $,
          tabIndex:
            s && _.tabIndex === -1
              ? (_.dataset || {}).focusGuard
                ? 0
                : -1
              : _.tabIndex,
        };
      })
      .filter(function (_) {
        return !o || _.tabIndex >= 0;
      })
      .sort(tabSort);
  },
  tabbables = [
    "button:enabled",
    "select:enabled",
    "textarea:enabled",
    "input:enabled",
    "a[href]",
    "area[href]",
    "summary",
    "iframe",
    "object",
    "embed",
    "audio[controls]",
    "video[controls]",
    "[tabindex]",
    "[contenteditable]",
    "[autofocus]",
  ],
  queryTabbables = tabbables.join(","),
  queryGuardTabbables = "".concat(queryTabbables, ", [data-focus-guard]"),
  getFocusablesWithShadowDom = function (a, o) {
    return toArray((a.shadowRoot || a).children).reduce(function (s, _) {
      return s.concat(
        _.matches(o ? queryGuardTabbables : queryTabbables) ? [_] : [],
        getFocusablesWithShadowDom(_)
      );
    }, []);
  },
  getFocusablesWithIFrame = function (a, o) {
    var s;
    return a instanceof HTMLIFrameElement &&
      !((s = a.contentDocument) === null || s === void 0) &&
      s.body
      ? getFocusables([a.contentDocument.body], o)
      : [a];
  },
  getFocusables = function (a, o) {
    return a.reduce(function (s, _) {
      var $,
        et = getFocusablesWithShadowDom(_, o),
        tt = ($ = []).concat.apply(
          $,
          et.map(function (rt) {
            return getFocusablesWithIFrame(rt, o);
          })
        );
      return s.concat(
        tt,
        _.parentNode
          ? toArray(_.parentNode.querySelectorAll(queryTabbables)).filter(
              function (rt) {
                return rt === _;
              }
            )
          : []
      );
    }, []);
  },
  getParentAutofocusables = function (a) {
    var o = a.querySelectorAll("[".concat(FOCUS_AUTO, "]"));
    return toArray(o)
      .map(function (s) {
        return getFocusables([s]);
      })
      .reduce(function (s, _) {
        return s.concat(_);
      }, []);
  },
  filterFocusable = function (a, o) {
    return toArray(a)
      .filter(function (s) {
        return isVisibleCached(o, s);
      })
      .filter(function (s) {
        return notHiddenInput(s);
      });
  },
  filterAutoFocusable = function (a, o) {
    return (
      o === void 0 && (o = new Map()),
      toArray(a).filter(function (s) {
        return isAutoFocusAllowedCached(o, s);
      })
    );
  },
  getTabbableNodes = function (a, o, s) {
    return orderByTabIndex(filterFocusable(getFocusables(a, s), o), !0, s);
  },
  getAllTabbableNodes = function (a, o) {
    return orderByTabIndex(filterFocusable(getFocusables(a), o), !1);
  },
  parentAutofocusables = function (a, o) {
    return filterFocusable(getParentAutofocusables(a), o);
  },
  contains = function (a, o) {
    return a.shadowRoot
      ? contains(a.shadowRoot, o)
      : Object.getPrototypeOf(a).contains !== void 0 &&
        Object.getPrototypeOf(a).contains.call(a, o)
      ? !0
      : toArray(a.children).some(function (s) {
          var _;
          if (s instanceof HTMLIFrameElement) {
            var $ =
              (_ = s.contentDocument) === null || _ === void 0
                ? void 0
                : _.body;
            return $ ? contains($, o) : !1;
          }
          return contains(s, o);
        });
  },
  filterNested = function (a) {
    for (var o = new Set(), s = a.length, _ = 0; _ < s; _ += 1)
      for (var $ = _ + 1; $ < s; $ += 1) {
        var et = a[_].compareDocumentPosition(a[$]);
        (et & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0 && o.add($),
          (et & Node.DOCUMENT_POSITION_CONTAINS) > 0 && o.add(_);
      }
    return a.filter(function (tt, rt) {
      return !o.has(rt);
    });
  },
  getTopParent = function (a) {
    return a.parentNode ? getTopParent(a.parentNode) : a;
  },
  getAllAffectedNodes = function (a) {
    var o = asArray(a);
    return o.filter(Boolean).reduce(function (s, _) {
      var $ = _.getAttribute(FOCUS_GROUP);
      return (
        s.push.apply(
          s,
          $
            ? filterNested(
                toArray(
                  getTopParent(_).querySelectorAll(
                    "["
                      .concat(FOCUS_GROUP, '="')
                      .concat($, '"]:not([')
                      .concat(FOCUS_DISABLED, '="disabled"])')
                  )
                )
              )
            : [_]
        ),
        s
      );
    }, []);
  },
  safeProbe = function (a) {
    try {
      return a();
    } catch {
      return;
    }
  },
  getActiveElement = function (a) {
    if ((a === void 0 && (a = document), !(!a || !a.activeElement))) {
      var o = a.activeElement;
      return o.shadowRoot
        ? getActiveElement(o.shadowRoot)
        : o instanceof HTMLIFrameElement &&
          safeProbe(function () {
            return o.contentWindow.document;
          })
        ? getActiveElement(o.contentWindow.document)
        : o;
    }
  },
  focusInFrame = function (a, o) {
    return a === o;
  },
  focusInsideIframe = function (a, o) {
    return !!toArray(a.querySelectorAll("iframe")).some(function (s) {
      return focusInFrame(s, o);
    });
  },
  focusInside = function (a, o) {
    return (
      o === void 0 && (o = getActiveElement(getFirst(a).ownerDocument)),
      !o || (o.dataset && o.dataset.focusGuard)
        ? !1
        : getAllAffectedNodes(a).some(function (s) {
            return contains(s, o) || focusInsideIframe(s, o);
          })
    );
  },
  focusIsHidden = function (a) {
    a === void 0 && (a = document);
    var o = getActiveElement(a);
    return o
      ? toArray(a.querySelectorAll("[".concat(FOCUS_ALLOW, "]"))).some(
          function (s) {
            return contains(s, o);
          }
        )
      : !1;
  },
  findSelectedRadio = function (a, o) {
    return (
      o
        .filter(isRadioElement)
        .filter(function (s) {
          return s.name === a.name;
        })
        .filter(function (s) {
          return s.checked;
        })[0] || a
    );
  },
  correctNode = function (a, o) {
    return isRadioElement(a) && a.name ? findSelectedRadio(a, o) : a;
  },
  correctNodes = function (a) {
    var o = new Set();
    return (
      a.forEach(function (s) {
        return o.add(correctNode(s, a));
      }),
      a.filter(function (s) {
        return o.has(s);
      })
    );
  },
  pickFirstFocus = function (a) {
    return a[0] && a.length > 1 ? correctNode(a[0], a) : a[0];
  },
  pickFocusable = function (a, o) {
    return a.length > 1 ? a.indexOf(correctNode(a[o], a)) : o;
  },
  NEW_FOCUS = "NEW_FOCUS",
  newFocus = function (a, o, s, _) {
    var $ = a.length,
      et = a[0],
      tt = a[$ - 1],
      rt = isGuard(s);
    if (!(s && a.indexOf(s) >= 0)) {
      var nt = s !== void 0 ? o.indexOf(s) : -1,
        it = _ ? o.indexOf(_) : nt,
        at = _ ? a.indexOf(_) : -1,
        st = nt - it,
        ot = o.indexOf(et),
        dt = o.indexOf(tt),
        ht = correctNodes(o),
        ft = s !== void 0 ? ht.indexOf(s) : -1,
        mt = ft - (_ ? ht.indexOf(_) : nt),
        ut = pickFocusable(a, 0),
        lt = pickFocusable(a, $ - 1);
      if (nt === -1 || at === -1) return NEW_FOCUS;
      if (!st && at >= 0) return at;
      if (nt <= ot && rt && Math.abs(st) > 1) return lt;
      if (nt >= dt && rt && Math.abs(st) > 1) return ut;
      if (st && Math.abs(mt) > 1) return at;
      if (nt <= ot) return lt;
      if (nt > dt) return ut;
      if (st) return Math.abs(st) > 1 ? at : ($ + at + st) % $;
    }
  },
  findAutoFocused = function (a) {
    return function (o) {
      var s,
        _ = (s = getDataset(o)) === null || s === void 0 ? void 0 : s.autofocus;
      return (
        o.autofocus || (_ !== void 0 && _ !== "false") || a.indexOf(o) >= 0
      );
    };
  },
  pickAutofocus = function (a, o, s) {
    var _ = a.map(function (et) {
        var tt = et.node;
        return tt;
      }),
      $ = filterAutoFocusable(_.filter(findAutoFocused(s)));
    return $ && $.length
      ? pickFirstFocus($)
      : pickFirstFocus(filterAutoFocusable(o));
  },
  getParents = function (a, o) {
    return (
      o === void 0 && (o = []),
      o.push(a),
      a.parentNode && getParents(a.parentNode.host || a.parentNode, o),
      o
    );
  },
  getCommonParent = function (a, o) {
    for (
      var s = getParents(a), _ = getParents(o), $ = 0;
      $ < s.length;
      $ += 1
    ) {
      var et = s[$];
      if (_.indexOf(et) >= 0) return et;
    }
    return !1;
  },
  getTopCommonParent = function (a, o, s) {
    var _ = asArray(a),
      $ = asArray(o),
      et = _[0],
      tt = !1;
    return (
      $.filter(Boolean).forEach(function (rt) {
        (tt = getCommonParent(tt || rt, rt) || tt),
          s.filter(Boolean).forEach(function (nt) {
            var it = getCommonParent(et, nt);
            it &&
              (!tt || contains(it, tt)
                ? (tt = it)
                : (tt = getCommonParent(it, tt)));
          });
      }),
      tt
    );
  },
  allParentAutofocusables = function (a, o) {
    return a.reduce(function (s, _) {
      return s.concat(parentAutofocusables(_, o));
    }, []);
  },
  reorderNodes = function (a, o) {
    var s = new Map();
    return (
      o.forEach(function (_) {
        return s.set(_.node, _);
      }),
      a
        .map(function (_) {
          return s.get(_);
        })
        .filter(isDefined)
    );
  },
  getFocusMerge = function (a, o) {
    var s = getActiveElement(
        asArray(a).length > 0 ? document : getFirst(a).ownerDocument
      ),
      _ = getAllAffectedNodes(a).filter(isNotAGuard),
      $ = getTopCommonParent(s || a, a, _),
      et = new Map(),
      tt = getAllTabbableNodes(_, et),
      rt = getTabbableNodes(_, et).filter(function (dt) {
        var ht = dt.node;
        return isNotAGuard(ht);
      });
    if (!(!rt[0] && ((rt = tt), !rt[0]))) {
      var nt = getAllTabbableNodes([$], et).map(function (dt) {
          var ht = dt.node;
          return ht;
        }),
        it = reorderNodes(nt, rt),
        at = it.map(function (dt) {
          var ht = dt.node;
          return ht;
        }),
        st = newFocus(at, nt, s, o);
      if (st === NEW_FOCUS) {
        var ot = pickAutofocus(tt, at, allParentAutofocusables(_, et));
        if (ot) return { node: ot };
        console.warn("focus-lock: cannot find any node to move focus into");
        return;
      }
      return st === void 0 ? st : it[st];
    }
  },
  getFocusabledIn = function (a) {
    var o = getAllAffectedNodes(a).filter(isNotAGuard),
      s = getTopCommonParent(a, a, o),
      _ = new Map(),
      $ = getTabbableNodes([s], _, !0),
      et = getTabbableNodes(o, _)
        .filter(function (tt) {
          var rt = tt.node;
          return isNotAGuard(rt);
        })
        .map(function (tt) {
          var rt = tt.node;
          return rt;
        });
    return $.map(function (tt) {
      var rt = tt.node,
        nt = tt.index;
      return {
        node: rt,
        index: nt,
        lockItem: et.indexOf(rt) >= 0,
        guard: isGuard(rt),
      };
    });
  },
  focusOn = function (a, o) {
    "focus" in a && a.focus(o),
      "contentWindow" in a && a.contentWindow && a.contentWindow.focus();
  },
  guardCount = 0,
  lockDisabled = !1,
  setFocus = function (a, o, s) {
    s === void 0 && (s = {});
    var _ = getFocusMerge(a, o);
    if (!lockDisabled && _) {
      if (guardCount > 2) {
        console.error(
          "FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting"
        ),
          (lockDisabled = !0),
          setTimeout(function () {
            lockDisabled = !1;
          }, 1);
        return;
      }
      guardCount++, focusOn(_.node, s.focusOptions), guardCount--;
    }
  };
function deferAction(a) {
  setTimeout(a, 1);
}
var focusOnBody = function () {
    return document && document.activeElement === document.body;
  },
  isFreeFocus = function () {
    return focusOnBody() || focusIsHidden();
  },
  lastActiveTrap = null,
  lastActiveFocus = null,
  lastPortaledElement = null,
  focusWasOutsideWindow = !1,
  defaultWhitelist = function () {
    return !0;
  },
  focusWhitelisted = function (o) {
    return (lastActiveTrap.whiteList || defaultWhitelist)(o);
  },
  recordPortal = function (o, s) {
    lastPortaledElement = { observerNode: o, portaledElement: s };
  },
  focusIsPortaledPair = function (o) {
    return lastPortaledElement && lastPortaledElement.portaledElement === o;
  };
function autoGuard(a, o, s, _) {
  var $ = null,
    et = a;
  do {
    var tt = _[et];
    if (tt.guard) tt.node.dataset.focusAutoGuard && ($ = tt);
    else if (tt.lockItem) {
      if (et !== a) return;
      $ = null;
    } else break;
  } while ((et += s) !== o);
  $ && ($.node.tabIndex = 0);
}
var extractRef$1 = function (o) {
    return o && "current" in o ? o.current : o;
  },
  focusWasOutside = function (o) {
    return o ? !!focusWasOutsideWindow : focusWasOutsideWindow === "meanwhile";
  },
  checkInHost = function a(o, s, _) {
    return (
      s &&
      ((s.host === o && (!s.activeElement || _.contains(s.activeElement))) ||
        (s.parentNode && a(o, s.parentNode, _)))
    );
  },
  withinHost = function (o, s) {
    return s.some(function (_) {
      return checkInHost(o, _, _);
    });
  },
  activateTrap = function () {
    var o = !1;
    if (lastActiveTrap) {
      var s = lastActiveTrap,
        _ = s.observed,
        $ = s.persistentFocus,
        et = s.autoFocus,
        tt = s.shards,
        rt = s.crossFrame,
        nt = s.focusOptions,
        it = _ || (lastPortaledElement && lastPortaledElement.portaledElement),
        at = document && document.activeElement;
      if (it) {
        var st = [it].concat(tt.map(extractRef$1).filter(Boolean));
        if (
          ((!at || focusWhitelisted(at)) &&
            ($ ||
              focusWasOutside(rt) ||
              !isFreeFocus() ||
              (!lastActiveFocus && et)) &&
            (it &&
              !(
                focusInside(st) ||
                (at && withinHost(at, st)) ||
                focusIsPortaledPair(at)
              ) &&
              (document && !lastActiveFocus && at && !et
                ? (at.blur && at.blur(), document.body.focus())
                : ((o = setFocus(st, lastActiveFocus, { focusOptions: nt })),
                  (lastPortaledElement = {}))),
            (focusWasOutsideWindow = !1),
            (lastActiveFocus = document && document.activeElement)),
          document)
        ) {
          var ot = document && document.activeElement,
            dt = getFocusabledIn(st),
            ht = dt
              .map(function (ft) {
                var mt = ft.node;
                return mt;
              })
              .indexOf(ot);
          ht > -1 &&
            (dt
              .filter(function (ft) {
                var mt = ft.guard,
                  ut = ft.node;
                return mt && ut.dataset.focusAutoGuard;
              })
              .forEach(function (ft) {
                var mt = ft.node;
                return mt.removeAttribute("tabIndex");
              }),
            autoGuard(ht, dt.length, 1, dt),
            autoGuard(ht, -1, -1, dt));
        }
      }
    }
    return o;
  },
  onTrap = function (o) {
    activateTrap() && o && (o.stopPropagation(), o.preventDefault());
  },
  onBlur = function () {
    return deferAction(activateTrap);
  },
  onFocus = function (o) {
    var s = o.target,
      _ = o.currentTarget;
    _.contains(s) || recordPortal(_, s);
  },
  FocusWatcher = function () {
    return null;
  },
  onWindowBlur = function () {
    (focusWasOutsideWindow = "just"),
      deferAction(function () {
        focusWasOutsideWindow = "meanwhile";
      });
  },
  attachHandler = function () {
    document.addEventListener("focusin", onTrap),
      document.addEventListener("focusout", onBlur),
      window.addEventListener("blur", onWindowBlur);
  },
  detachHandler = function () {
    document.removeEventListener("focusin", onTrap),
      document.removeEventListener("focusout", onBlur),
      window.removeEventListener("blur", onWindowBlur);
  };
function reducePropsToState(a) {
  return a.filter(function (o) {
    var s = o.disabled;
    return !s;
  });
}
function handleStateChangeOnClient(a) {
  var o = a.slice(-1)[0];
  o && !lastActiveTrap && attachHandler();
  var s = lastActiveTrap,
    _ = s && o && o.id === s.id;
  (lastActiveTrap = o),
    s &&
      !_ &&
      (s.onDeactivation(),
      a.filter(function ($) {
        var et = $.id;
        return et === s.id;
      }).length || s.returnFocus(!o)),
    o
      ? ((lastActiveFocus = null),
        (!_ || s.observed !== o.observed) && o.onActivation(),
        activateTrap(),
        deferAction(activateTrap))
      : (detachHandler(), (lastActiveFocus = null));
}
mediumFocus.assignSyncMedium(onFocus);
mediumBlur.assignMedium(onBlur);
mediumEffect.assignMedium(function (a) {
  return a({ moveFocusInside: setFocus, focusInside });
});
const FocusTrap$1 = withSideEffect(
  reducePropsToState,
  handleStateChangeOnClient
)(FocusWatcher);
var FocusLockCombination = reactExports.forwardRef(function (o, s) {
    return reactExports.createElement(
      FocusLockUI,
      _extends$1({ sideCar: FocusTrap$1, ref: s }, o)
    );
  }),
  _ref = FocusLockUI.propTypes || {};
_ref.sideCar;
_objectWithoutPropertiesLoose(_ref, ["sideCar"]);
FocusLockCombination.propTypes = {};
const FocusLock$1 = FocusLockCombination;
function isElement(a) {
  return (
    a != null &&
    typeof a == "object" &&
    "nodeType" in a &&
    a.nodeType === Node.ELEMENT_NODE
  );
}
function isHTMLElement(a) {
  var o;
  if (!isElement(a)) return !1;
  const s = (o = a.ownerDocument.defaultView) != null ? o : window;
  return a instanceof s.HTMLElement;
}
var hasTabIndex = (a) => a.hasAttribute("tabindex");
function isDisabled(a) {
  return !!a.getAttribute("disabled") || !!a.getAttribute("aria-disabled");
}
function isHidden(a) {
  return a.parentElement && isHidden(a.parentElement) ? !0 : a.hidden;
}
function isContentEditable(a) {
  const o = a.getAttribute("contenteditable");
  return o !== "false" && o != null;
}
function isFocusable(a) {
  if (!isHTMLElement(a) || isHidden(a) || isDisabled(a)) return !1;
  const { localName: o } = a;
  if (["input", "select", "textarea", "button"].indexOf(o) >= 0) return !0;
  const _ = {
    a: () => a.hasAttribute("href"),
    audio: () => a.hasAttribute("controls"),
    video: () => a.hasAttribute("controls"),
  };
  return o in _ ? _[o]() : isContentEditable(a) ? !0 : hasTabIndex(a);
}
var focusableElList = [
    "input:not(:disabled):not([disabled])",
    "select:not(:disabled):not([disabled])",
    "textarea:not(:disabled):not([disabled])",
    "embed",
    "iframe",
    "object",
    "a[href]",
    "area[href]",
    "button:not(:disabled):not([disabled])",
    "[tabindex]",
    "audio[controls]",
    "video[controls]",
    "*[tabindex]:not([aria-disabled])",
    "*[contenteditable]",
  ],
  focusableElSelector = focusableElList.join(),
  isVisible = (a) => a.offsetWidth > 0 && a.offsetHeight > 0;
function getAllFocusable(a) {
  const o = Array.from(a.querySelectorAll(focusableElSelector));
  return o.unshift(a), o.filter((s) => isFocusable(s) && isVisible(s));
}
var _a,
  FocusTrap = (_a = FocusLock$1.default) != null ? _a : FocusLock$1,
  FocusLock = (a) => {
    const {
        initialFocusRef: o,
        finalFocusRef: s,
        contentRef: _,
        restoreFocus: $,
        children: et,
        isDisabled: tt,
        autoFocus: rt,
        persistentFocus: nt,
        lockFocusAcrossFrames: it,
      } = a,
      at = reactExports.useCallback(() => {
        o != null && o.current
          ? o.current.focus()
          : _ != null &&
            _.current &&
            getAllFocusable(_.current).length === 0 &&
            requestAnimationFrame(() => {
              var ht;
              (ht = _.current) == null || ht.focus();
            });
      }, [o, _]),
      st = reactExports.useCallback(() => {
        var dt;
        (dt = s == null ? void 0 : s.current) == null || dt.focus();
      }, [s]),
      ot = $ && !s;
    return jsxRuntimeExports.jsx(FocusTrap, {
      crossFrame: it,
      persistentFocus: nt,
      autoFocus: rt,
      disabled: tt,
      onActivation: at,
      onDeactivation: st,
      returnFocus: ot,
      children: et,
    });
  };
FocusLock.displayName = "FocusLock";
var useSafeLayoutEffect = isBrowser$1
  ? reactExports.useLayoutEffect
  : reactExports.useEffect;
function useCallbackRef(a, o = []) {
  const s = reactExports.useRef(a);
  return (
    useSafeLayoutEffect(() => {
      s.current = a;
    }),
    reactExports.useCallback((..._) => {
      var $;
      return ($ = s.current) == null ? void 0 : $.call(s, ..._);
    }, o)
  );
}
function useId(a, o) {
  const s = reactExports.useId();
  return reactExports.useMemo(
    () => a || [o, s].filter(Boolean).join("-"),
    [a, o, s]
  );
}
function useControllableProp(a, o) {
  const s = a !== void 0;
  return [s, s && typeof a < "u" ? a : o];
}
function useDisclosure(a = {}) {
  const { onClose: o, onOpen: s, isOpen: _, id: $ } = a,
    et = useCallbackRef(s),
    tt = useCallbackRef(o),
    [rt, nt] = reactExports.useState(a.defaultIsOpen || !1),
    [it, at] = useControllableProp(_, rt),
    st = useId($, "disclosure"),
    ot = reactExports.useCallback(() => {
      it || nt(!1), tt == null || tt();
    }, [it, tt]),
    dt = reactExports.useCallback(() => {
      it || nt(!0), et == null || et();
    }, [it, et]),
    ht = reactExports.useCallback(() => {
      (at ? ot : dt)();
    }, [at, dt, ot]);
  return {
    isOpen: !!at,
    onOpen: dt,
    onClose: ot,
    onToggle: ht,
    isControlled: it,
    getButtonProps: (ft = {}) => ({
      ...ft,
      "aria-expanded": at,
      "aria-controls": st,
      onClick: callAllHandlers(ft.onClick, ht),
    }),
    getDisclosureProps: (ft = {}) => ({ ...ft, hidden: !at, id: st }),
  };
}
var Input = forwardRef(function (o, s) {
  const { htmlSize: _, ...$ } = o,
    et = useMultiStyleConfig("Input", $),
    tt = omitThemingProps($),
    rt = useFormControl(tt),
    nt = cx("chakra-input", o.className);
  return jsxRuntimeExports.jsx(chakra.input, {
    size: _,
    ...rt,
    __css: et.field,
    ref: s,
    className: nt,
  });
});
Input.displayName = "Input";
Input.id = "Input";
var Grid = forwardRef(function (o, s) {
  const {
      templateAreas: _,
      gap: $,
      rowGap: et,
      columnGap: tt,
      column: rt,
      row: nt,
      autoFlow: it,
      autoRows: at,
      templateRows: st,
      autoColumns: ot,
      templateColumns: dt,
      ...ht
    } = o,
    ft = {
      display: "grid",
      gridTemplateAreas: _,
      gridGap: $,
      gridRowGap: et,
      gridColumnGap: tt,
      gridAutoColumns: ot,
      gridColumn: rt,
      gridRow: nt,
      gridAutoFlow: it,
      gridAutoRows: at,
      gridTemplateRows: st,
      gridTemplateColumns: dt,
    };
  return jsxRuntimeExports.jsx(chakra.div, { ref: s, __css: ft, ...ht });
});
Grid.displayName = "Grid";
function mapResponsive(a, o) {
  return Array.isArray(a)
    ? a.map((s) => (s === null ? null : o(s)))
    : isObject$4(a)
    ? Object.keys(a).reduce((s, _) => ((s[_] = o(a[_])), s), {})
    : a != null
    ? o(a)
    : null;
}
var SimpleGrid = forwardRef(function (o, s) {
  const {
      columns: _,
      spacingX: $,
      spacingY: et,
      spacing: tt,
      minChildWidth: rt,
      ...nt
    } = o,
    it = useTheme(),
    at = rt ? widthToColumns(rt, it) : countToColumns(_);
  return jsxRuntimeExports.jsx(Grid, {
    ref: s,
    gap: tt,
    columnGap: $,
    rowGap: et,
    templateColumns: at,
    ...nt,
  });
});
SimpleGrid.displayName = "SimpleGrid";
function toPx(a) {
  return typeof a == "number" ? `${a}px` : a;
}
function widthToColumns(a, o) {
  return mapResponsive(a, (s) => {
    const _ = getToken("sizes", s, toPx(s))(o);
    return s === null ? null : `repeat(auto-fit, minmax(${_}, 1fr))`;
  });
}
function countToColumns(a) {
  return mapResponsive(a, (o) =>
    o === null ? null : `repeat(${o}, minmax(0, 1fr))`
  );
}
var Text = forwardRef(function (o, s) {
  const _ = useStyleConfig("Text", o),
    {
      className: $,
      align: et,
      decoration: tt,
      casing: rt,
      ...nt
    } = omitThemingProps(o),
    it = compact({
      textAlign: o.align,
      textDecoration: o.decoration,
      textTransform: o.casing,
    });
  return jsxRuntimeExports.jsx(chakra.p, {
    ref: s,
    className: cx("chakra-text", o.className),
    ...it,
    ...nt,
    __css: _,
  });
});
Text.displayName = "Text";
var Wrap = forwardRef(function (o, s) {
  const {
      spacing: _ = "0.5rem",
      spacingX: $,
      spacingY: et,
      children: tt,
      justify: rt,
      direction: nt,
      align: it,
      className: at,
      shouldWrapChildren: st,
      ...ot
    } = o,
    dt = reactExports.useMemo(
      () =>
        st
          ? reactExports.Children.map(tt, (ht, ft) =>
              jsxRuntimeExports.jsx(WrapItem, { children: ht }, ft)
            )
          : tt,
      [tt, st]
    );
  return jsxRuntimeExports.jsx(chakra.div, {
    ref: s,
    className: cx("chakra-wrap", at),
    ...ot,
    children: jsxRuntimeExports.jsx(chakra.ul, {
      className: "chakra-wrap__list",
      __css: {
        display: "flex",
        flexWrap: "wrap",
        justifyContent: rt,
        alignItems: it,
        flexDirection: nt,
        listStyleType: "none",
        gap: _,
        columnGap: $,
        rowGap: et,
        padding: "0",
      },
      children: dt,
    }),
  });
});
Wrap.displayName = "Wrap";
var WrapItem = forwardRef(function (o, s) {
  const { className: _, ...$ } = o;
  return jsxRuntimeExports.jsx(chakra.li, {
    ref: s,
    __css: { display: "flex", alignItems: "flex-start" },
    className: cx("chakra-wrap__listitem", _),
    ...$,
  });
});
WrapItem.displayName = "WrapItem";
var StackDivider = (a) =>
  jsxRuntimeExports.jsx(chakra.div, {
    className: "chakra-stack__divider",
    ...a,
    __css: {
      ...a.__css,
      borderWidth: 0,
      alignSelf: "stretch",
      borderColor: "inherit",
      width: "auto",
      height: "auto",
    },
  });
StackDivider.displayName = "StackDivider";
var StackItem = (a) =>
  jsxRuntimeExports.jsx(chakra.div, {
    className: "chakra-stack__item",
    ...a,
    __css: {
      display: "inline-block",
      flex: "0 0 auto",
      minWidth: 0,
      ...a.__css,
    },
  });
StackItem.displayName = "StackItem";
function getDividerStyles(a) {
  const { spacing: o, direction: s } = a,
    _ = {
      column: { my: o, mx: 0, borderLeftWidth: 0, borderBottomWidth: "1px" },
      "column-reverse": {
        my: o,
        mx: 0,
        borderLeftWidth: 0,
        borderBottomWidth: "1px",
      },
      row: { mx: o, my: 0, borderLeftWidth: "1px", borderBottomWidth: 0 },
      "row-reverse": {
        mx: o,
        my: 0,
        borderLeftWidth: "1px",
        borderBottomWidth: 0,
      },
    };
  return { "&": mapResponsive(s, ($) => _[$]) };
}
var Stack = forwardRef((a, o) => {
  const {
      isInline: s,
      direction: _,
      align: $,
      justify: et,
      spacing: tt = "0.5rem",
      wrap: rt,
      children: nt,
      divider: it,
      className: at,
      shouldWrapChildren: st,
      ...ot
    } = a,
    dt = s ? "row" : _ ?? "column",
    ht = reactExports.useMemo(
      () => getDividerStyles({ spacing: tt, direction: dt }),
      [tt, dt]
    ),
    ft = !!it,
    mt = !st && !ft,
    ut = reactExports.useMemo(() => {
      const ct = getValidChildren(nt);
      return mt
        ? ct
        : ct.map((pt, vt) => {
            const xt = typeof pt.key < "u" ? pt.key : vt,
              bt = vt + 1 === ct.length,
              Pt = st
                ? jsxRuntimeExports.jsx(StackItem, { children: pt }, xt)
                : pt;
            if (!ft) return Pt;
            const Mt = reactExports.cloneElement(it, { __css: ht }),
              It = bt ? null : Mt;
            return jsxRuntimeExports.jsxs(
              reactExports.Fragment,
              { children: [Pt, It] },
              xt
            );
          });
    }, [it, ht, ft, mt, st, nt]),
    lt = cx("chakra-stack", at);
  return jsxRuntimeExports.jsx(chakra.div, {
    ref: o,
    display: "flex",
    alignItems: $,
    justifyContent: et,
    flexDirection: dt,
    flexWrap: rt,
    gap: ft ? void 0 : tt,
    className: lt,
    ...ot,
    children: ut,
  });
});
Stack.displayName = "Stack";
var VStack = forwardRef((a, o) =>
  jsxRuntimeExports.jsx(Stack, {
    align: "center",
    ...a,
    direction: "column",
    ref: o,
  })
);
VStack.displayName = "VStack";
var HStack = forwardRef((a, o) =>
  jsxRuntimeExports.jsx(Stack, {
    align: "center",
    ...a,
    direction: "row",
    ref: o,
  })
);
HStack.displayName = "HStack";
var Heading = forwardRef(function (o, s) {
  const _ = useStyleConfig("Heading", o),
    { className: $, ...et } = omitThemingProps(o);
  return jsxRuntimeExports.jsx(chakra.h2, {
    ref: s,
    className: cx("chakra-heading", o.className),
    ...et,
    __css: _,
  });
});
Heading.displayName = "Heading";
var Box = chakra("div");
Box.displayName = "Box";
var Square = forwardRef(function (o, s) {
  const { size: _, centerContent: $ = !0, ...et } = o,
    tt = $
      ? { display: "flex", alignItems: "center", justifyContent: "center" }
      : {};
  return jsxRuntimeExports.jsx(Box, {
    ref: s,
    boxSize: _,
    __css: { ...tt, flexShrink: 0, flexGrow: 0 },
    ...et,
  });
});
Square.displayName = "Square";
var Circle = forwardRef(function (o, s) {
  const { size: _, ...$ } = o;
  return jsxRuntimeExports.jsx(Square, {
    size: _,
    ref: s,
    borderRadius: "9999px",
    ...$,
  });
});
Circle.displayName = "Circle";
var Container = forwardRef(function (o, s) {
  const { className: _, centerContent: $, ...et } = omitThemingProps(o),
    tt = useStyleConfig("Container", o);
  return jsxRuntimeExports.jsx(chakra.div, {
    ref: s,
    className: cx("chakra-container", _),
    ...et,
    __css: {
      ...tt,
      ...($ && {
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
      }),
    },
  });
});
Container.displayName = "Container";
var Divider = forwardRef(function (o, s) {
  const {
      borderLeftWidth: _,
      borderBottomWidth: $,
      borderTopWidth: et,
      borderRightWidth: tt,
      borderWidth: rt,
      borderStyle: nt,
      borderColor: it,
      ...at
    } = useStyleConfig("Divider", o),
    {
      className: st,
      orientation: ot = "horizontal",
      __css: dt,
      ...ht
    } = omitThemingProps(o),
    ft = {
      vertical: { borderLeftWidth: _ || tt || rt || "1px", height: "100%" },
      horizontal: { borderBottomWidth: $ || et || rt || "1px", width: "100%" },
    };
  return jsxRuntimeExports.jsx(chakra.hr, {
    ref: s,
    "aria-orientation": ot,
    ...ht,
    __css: {
      ...at,
      border: "0",
      borderColor: it,
      borderStyle: nt,
      ...ft[ot],
      ...dt,
    },
    className: cx("chakra-divider", st),
  });
});
Divider.displayName = "Divider";
var Flex = forwardRef(function (o, s) {
  const {
      direction: _,
      align: $,
      justify: et,
      wrap: tt,
      basis: rt,
      grow: nt,
      shrink: it,
      ...at
    } = o,
    st = {
      display: "flex",
      flexDirection: _,
      alignItems: $,
      justifyContent: et,
      flexWrap: tt,
      flexBasis: rt,
      flexGrow: nt,
      flexShrink: it,
    };
  return jsxRuntimeExports.jsx(chakra.div, { ref: s, __css: st, ...at });
});
Flex.displayName = "Flex";
var __defProp = Object.defineProperty,
  __defNormalProp = (a, o, s) =>
    o in a
      ? __defProp(a, o, {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: s,
        })
      : (a[o] = s),
  __publicField = (a, o, s) => (
    __defNormalProp(a, typeof o != "symbol" ? o + "" : o, s), s
  ),
  ModalManager = class {
    constructor() {
      __publicField(this, "modals"), (this.modals = new Map());
    }
    add(a) {
      return this.modals.set(a, this.modals.size + 1), this.modals.size;
    }
    remove(a) {
      this.modals.delete(a);
    }
    isTopModal(a) {
      return a ? this.modals.get(a) === this.modals.size : !1;
    }
  },
  modalManager = new ModalManager();
function useModalManager(a, o) {
  const [s, _] = reactExports.useState(0);
  return (
    reactExports.useEffect(() => {
      const $ = a.current;
      if ($) {
        if (o) {
          const et = modalManager.add($);
          _(et);
        }
        return () => {
          modalManager.remove($), _(0);
        };
      }
    }, [o, a]),
    s
  );
}
var getDefaultParent = function (a) {
    if (typeof document > "u") return null;
    var o = Array.isArray(a) ? a[0] : a;
    return o.ownerDocument.body;
  },
  counterMap = new WeakMap(),
  uncontrolledNodes = new WeakMap(),
  markerMap = {},
  lockCount = 0,
  unwrapHost = function (a) {
    return a && (a.host || unwrapHost(a.parentNode));
  },
  correctTargets = function (a, o) {
    return o
      .map(function (s) {
        if (a.contains(s)) return s;
        var _ = unwrapHost(s);
        return _ && a.contains(_)
          ? _
          : (console.error(
              "aria-hidden",
              s,
              "in not contained inside",
              a,
              ". Doing nothing"
            ),
            null);
      })
      .filter(function (s) {
        return !!s;
      });
  },
  applyAttributeToOthers = function (a, o, s, _) {
    var $ = correctTargets(o, Array.isArray(a) ? a : [a]);
    markerMap[s] || (markerMap[s] = new WeakMap());
    var et = markerMap[s],
      tt = [],
      rt = new Set(),
      nt = new Set($),
      it = function (st) {
        !st || rt.has(st) || (rt.add(st), it(st.parentNode));
      };
    $.forEach(it);
    var at = function (st) {
      !st ||
        nt.has(st) ||
        Array.prototype.forEach.call(st.children, function (ot) {
          if (rt.has(ot)) at(ot);
          else {
            var dt = ot.getAttribute(_),
              ht = dt !== null && dt !== "false",
              ft = (counterMap.get(ot) || 0) + 1,
              mt = (et.get(ot) || 0) + 1;
            counterMap.set(ot, ft),
              et.set(ot, mt),
              tt.push(ot),
              ft === 1 && ht && uncontrolledNodes.set(ot, !0),
              mt === 1 && ot.setAttribute(s, "true"),
              ht || ot.setAttribute(_, "true");
          }
        });
    };
    return (
      at(o),
      rt.clear(),
      lockCount++,
      function () {
        tt.forEach(function (st) {
          var ot = counterMap.get(st) - 1,
            dt = et.get(st) - 1;
          counterMap.set(st, ot),
            et.set(st, dt),
            ot ||
              (uncontrolledNodes.has(st) || st.removeAttribute(_),
              uncontrolledNodes.delete(st)),
            dt || st.removeAttribute(s);
        }),
          lockCount--,
          lockCount ||
            ((counterMap = new WeakMap()),
            (counterMap = new WeakMap()),
            (uncontrolledNodes = new WeakMap()),
            (markerMap = {}));
      }
    );
  },
  hideOthers = function (a, o, s) {
    s === void 0 && (s = "data-aria-hidden");
    var _ = Array.from(Array.isArray(a) ? a : [a]),
      $ = o || getDefaultParent(a);
    return $
      ? (_.push.apply(_, Array.from($.querySelectorAll("[aria-live]"))),
        applyAttributeToOthers(_, $, s, "aria-hidden"))
      : function () {
          return null;
        };
  };
function useModal(a) {
  const {
      isOpen: o,
      onClose: s,
      id: _,
      closeOnOverlayClick: $ = !0,
      closeOnEsc: et = !0,
      useInert: tt = !0,
      onOverlayClick: rt,
      onEsc: nt,
    } = a,
    it = reactExports.useRef(null),
    at = reactExports.useRef(null),
    [st, ot, dt] = useIds(
      _,
      "chakra-modal",
      "chakra-modal--header",
      "chakra-modal--body"
    );
  useAriaHidden(it, o && tt);
  const ht = useModalManager(it, o),
    ft = reactExports.useRef(null),
    mt = reactExports.useCallback((Pt) => {
      ft.current = Pt.target;
    }, []),
    ut = reactExports.useCallback(
      (Pt) => {
        Pt.key === "Escape" &&
          (Pt.stopPropagation(), et && (s == null || s()), nt == null || nt());
      },
      [et, s, nt]
    ),
    [lt, ct] = reactExports.useState(!1),
    [pt, vt] = reactExports.useState(!1),
    xt = reactExports.useCallback(
      (Pt = {}, Mt = null) => ({
        role: "dialog",
        ...Pt,
        ref: mergeRefs(Mt, it),
        id: st,
        tabIndex: -1,
        "aria-modal": !0,
        "aria-labelledby": lt ? ot : void 0,
        "aria-describedby": pt ? dt : void 0,
        onClick: callAllHandlers$1(Pt.onClick, (It) => It.stopPropagation()),
      }),
      [dt, pt, st, ot, lt]
    ),
    bt = reactExports.useCallback(
      (Pt) => {
        Pt.stopPropagation(),
          ft.current === Pt.target &&
            modalManager.isTopModal(it.current) &&
            ($ && (s == null || s()), rt == null || rt());
      },
      [s, $, rt]
    ),
    St = reactExports.useCallback(
      (Pt = {}, Mt = null) => ({
        ...Pt,
        ref: mergeRefs(Mt, at),
        onClick: callAllHandlers$1(Pt.onClick, bt),
        onKeyDown: callAllHandlers$1(Pt.onKeyDown, ut),
        onMouseDown: callAllHandlers$1(Pt.onMouseDown, mt),
      }),
      [ut, mt, bt]
    );
  return {
    isOpen: o,
    onClose: s,
    headerId: ot,
    bodyId: dt,
    setBodyMounted: vt,
    setHeaderMounted: ct,
    dialogRef: it,
    overlayRef: at,
    getDialogProps: xt,
    getDialogContainerProps: St,
    index: ht,
  };
}
function useAriaHidden(a, o) {
  const s = a.current;
  reactExports.useEffect(() => {
    if (!(!a.current || !o)) return hideOthers(a.current);
  }, [o, a, s]);
}
function useIds(a, ...o) {
  const s = reactExports.useId(),
    _ = a || s;
  return reactExports.useMemo(() => o.map(($) => `${$}-${_}`), [_, o]);
}
var [ModalStylesProvider, useModalStyles] = createContext$1({
    name: "ModalStylesContext",
    errorMessage: `useModalStyles returned is 'undefined'. Seems you forgot to wrap the components in "<Modal />" `,
  }),
  [ModalContextProvider, useModalContext] = createContext$1({
    strict: !0,
    name: "ModalContext",
    errorMessage:
      "useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`",
  }),
  Modal = (a) => {
    const o = {
        scrollBehavior: "outside",
        autoFocus: !0,
        trapFocus: !0,
        returnFocusOnClose: !0,
        blockScrollOnMount: !0,
        allowPinchZoom: !1,
        motionPreset: "scale",
        lockFocusAcrossFrames: !0,
        ...a,
      },
      {
        portalProps: s,
        children: _,
        autoFocus: $,
        trapFocus: et,
        initialFocusRef: tt,
        finalFocusRef: rt,
        returnFocusOnClose: nt,
        blockScrollOnMount: it,
        allowPinchZoom: at,
        preserveScrollBarGap: st,
        motionPreset: ot,
        lockFocusAcrossFrames: dt,
        onCloseComplete: ht,
      } = o,
      ft = useMultiStyleConfig("Modal", o),
      ut = {
        ...useModal(o),
        autoFocus: $,
        trapFocus: et,
        initialFocusRef: tt,
        finalFocusRef: rt,
        returnFocusOnClose: nt,
        blockScrollOnMount: it,
        allowPinchZoom: at,
        preserveScrollBarGap: st,
        motionPreset: ot,
        lockFocusAcrossFrames: dt,
      };
    return jsxRuntimeExports.jsx(ModalContextProvider, {
      value: ut,
      children: jsxRuntimeExports.jsx(ModalStylesProvider, {
        value: ft,
        children: jsxRuntimeExports.jsx(AnimatePresence, {
          onExitComplete: ht,
          children:
            ut.isOpen && jsxRuntimeExports.jsx(Portal, { ...s, children: _ }),
        }),
      }),
    });
  };
Modal.displayName = "Modal";
var zeroRightClassName = "right-scroll-bar-position",
  fullWidthClassName = "width-before-scroll-bar",
  noScrollbarsClassName = "with-scroll-bars-hidden",
  removedBarSizeVariable = "--removed-body-scroll-bar-size",
  effectCar = createSidecarMedium(),
  nothing = function () {},
  RemoveScroll$1 = reactExports.forwardRef(function (a, o) {
    var s = reactExports.useRef(null),
      _ = reactExports.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing,
      }),
      $ = _[0],
      et = _[1],
      tt = a.forwardProps,
      rt = a.children,
      nt = a.className,
      it = a.removeScrollBar,
      at = a.enabled,
      st = a.shards,
      ot = a.sideCar,
      dt = a.noIsolation,
      ht = a.inert,
      ft = a.allowPinchZoom,
      mt = a.as,
      ut = mt === void 0 ? "div" : mt,
      lt = a.gapMode,
      ct = __rest$1(a, [
        "forwardProps",
        "children",
        "className",
        "removeScrollBar",
        "enabled",
        "shards",
        "sideCar",
        "noIsolation",
        "inert",
        "allowPinchZoom",
        "as",
        "gapMode",
      ]),
      pt = ot,
      vt = useMergeRefs([s, o]),
      xt = __assign$1(__assign$1({}, ct), $);
    return reactExports.createElement(
      reactExports.Fragment,
      null,
      at &&
        reactExports.createElement(pt, {
          sideCar: effectCar,
          removeScrollBar: it,
          shards: st,
          noIsolation: dt,
          inert: ht,
          setCallbacks: et,
          allowPinchZoom: !!ft,
          lockRef: s,
          gapMode: lt,
        }),
      tt
        ? reactExports.cloneElement(
            reactExports.Children.only(rt),
            __assign$1(__assign$1({}, xt), { ref: vt })
          )
        : reactExports.createElement(
            ut,
            __assign$1({}, xt, { className: nt, ref: vt }),
            rt
          )
    );
  });
RemoveScroll$1.defaultProps = { enabled: !0, removeScrollBar: !0, inert: !1 };
RemoveScroll$1.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName,
};
var currentNonce,
  getNonce = function () {
    if (currentNonce) return currentNonce;
    if (typeof __webpack_nonce__ < "u") return __webpack_nonce__;
  };
function makeStyleTag() {
  if (!document) return null;
  var a = document.createElement("style");
  a.type = "text/css";
  var o = getNonce();
  return o && a.setAttribute("nonce", o), a;
}
function injectStyles(a, o) {
  a.styleSheet
    ? (a.styleSheet.cssText = o)
    : a.appendChild(document.createTextNode(o));
}
function insertStyleTag(a) {
  var o = document.head || document.getElementsByTagName("head")[0];
  o.appendChild(a);
}
var stylesheetSingleton = function () {
    var a = 0,
      o = null;
    return {
      add: function (s) {
        a == 0 &&
          (o = makeStyleTag()) &&
          (injectStyles(o, s), insertStyleTag(o)),
          a++;
      },
      remove: function () {
        a--,
          !a && o && (o.parentNode && o.parentNode.removeChild(o), (o = null));
      },
    };
  },
  styleHookSingleton = function () {
    var a = stylesheetSingleton();
    return function (o, s) {
      reactExports.useEffect(
        function () {
          return (
            a.add(o),
            function () {
              a.remove();
            }
          );
        },
        [o && s]
      );
    };
  },
  styleSingleton = function () {
    var a = styleHookSingleton(),
      o = function (s) {
        var _ = s.styles,
          $ = s.dynamic;
        return a(_, $), null;
      };
    return o;
  },
  zeroGap = { left: 0, top: 0, right: 0, gap: 0 },
  parse = function (a) {
    return parseInt(a || "", 10) || 0;
  },
  getOffset = function (a) {
    var o = window.getComputedStyle(document.body),
      s = o[a === "padding" ? "paddingLeft" : "marginLeft"],
      _ = o[a === "padding" ? "paddingTop" : "marginTop"],
      $ = o[a === "padding" ? "paddingRight" : "marginRight"];
    return [parse(s), parse(_), parse($)];
  },
  getGapWidth = function (a) {
    if ((a === void 0 && (a = "margin"), typeof window > "u")) return zeroGap;
    var o = getOffset(a),
      s = document.documentElement.clientWidth,
      _ = window.innerWidth;
    return {
      left: o[0],
      top: o[1],
      right: o[2],
      gap: Math.max(0, _ - s + o[2] - o[0]),
    };
  },
  Style = styleSingleton(),
  getStyles = function (a, o, s, _) {
    var $ = a.left,
      et = a.top,
      tt = a.right,
      rt = a.gap;
    return (
      s === void 0 && (s = "margin"),
      `
  .`
        .concat(
          noScrollbarsClassName,
          ` {
   overflow: hidden `
        )
        .concat(
          _,
          `;
   padding-right: `
        )
        .concat(rt, "px ")
        .concat(
          _,
          `;
  }
  body {
    overflow: hidden `
        )
        .concat(
          _,
          `;
    overscroll-behavior: contain;
    `
        )
        .concat(
          [
            o && "position: relative ".concat(_, ";"),
            s === "margin" &&
              `
    padding-left: `
                .concat(
                  $,
                  `px;
    padding-top: `
                )
                .concat(
                  et,
                  `px;
    padding-right: `
                )
                .concat(
                  tt,
                  `px;
    margin-left:0;
    margin-top:0;
    margin-right: `
                )
                .concat(rt, "px ")
                .concat(
                  _,
                  `;
    `
                ),
            s === "padding" &&
              "padding-right: ".concat(rt, "px ").concat(_, ";"),
          ]
            .filter(Boolean)
            .join(""),
          `
  }
  
  .`
        )
        .concat(
          zeroRightClassName,
          ` {
    right: `
        )
        .concat(rt, "px ")
        .concat(
          _,
          `;
  }
  
  .`
        )
        .concat(
          fullWidthClassName,
          ` {
    margin-right: `
        )
        .concat(rt, "px ")
        .concat(
          _,
          `;
  }
  
  .`
        )
        .concat(zeroRightClassName, " .")
        .concat(
          zeroRightClassName,
          ` {
    right: 0 `
        )
        .concat(
          _,
          `;
  }
  
  .`
        )
        .concat(fullWidthClassName, " .")
        .concat(
          fullWidthClassName,
          ` {
    margin-right: 0 `
        )
        .concat(
          _,
          `;
  }
  
  body {
    `
        )
        .concat(removedBarSizeVariable, ": ")
        .concat(
          rt,
          `px;
  }
`
        )
    );
  },
  RemoveScrollBar = function (a) {
    var o = a.noRelative,
      s = a.noImportant,
      _ = a.gapMode,
      $ = _ === void 0 ? "margin" : _,
      et = reactExports.useMemo(
        function () {
          return getGapWidth($);
        },
        [$]
      );
    return reactExports.createElement(Style, {
      styles: getStyles(et, !o, $, s ? "" : "!important"),
    });
  },
  passiveSupported = !1;
if (typeof window < "u")
  try {
    var options = Object.defineProperty({}, "passive", {
      get: function () {
        return (passiveSupported = !0), !0;
      },
    });
    window.addEventListener("test", options, options),
      window.removeEventListener("test", options, options);
  } catch {
    passiveSupported = !1;
  }
var nonPassive = passiveSupported ? { passive: !1 } : !1,
  alwaysContainsScroll = function (a) {
    return a.tagName === "TEXTAREA";
  },
  elementCanBeScrolled = function (a, o) {
    var s = window.getComputedStyle(a);
    return (
      s[o] !== "hidden" &&
      !(
        s.overflowY === s.overflowX &&
        !alwaysContainsScroll(a) &&
        s[o] === "visible"
      )
    );
  },
  elementCouldBeVScrolled = function (a) {
    return elementCanBeScrolled(a, "overflowY");
  },
  elementCouldBeHScrolled = function (a) {
    return elementCanBeScrolled(a, "overflowX");
  },
  locationCouldBeScrolled = function (a, o) {
    var s = o.ownerDocument,
      _ = o;
    do {
      typeof ShadowRoot < "u" && _ instanceof ShadowRoot && (_ = _.host);
      var $ = elementCouldBeScrolled(a, _);
      if ($) {
        var et = getScrollVariables(a, _),
          tt = et[1],
          rt = et[2];
        if (tt > rt) return !0;
      }
      _ = _.parentNode;
    } while (_ && _ !== s.body);
    return !1;
  },
  getVScrollVariables = function (a) {
    var o = a.scrollTop,
      s = a.scrollHeight,
      _ = a.clientHeight;
    return [o, s, _];
  },
  getHScrollVariables = function (a) {
    var o = a.scrollLeft,
      s = a.scrollWidth,
      _ = a.clientWidth;
    return [o, s, _];
  },
  elementCouldBeScrolled = function (a, o) {
    return a === "v" ? elementCouldBeVScrolled(o) : elementCouldBeHScrolled(o);
  },
  getScrollVariables = function (a, o) {
    return a === "v" ? getVScrollVariables(o) : getHScrollVariables(o);
  },
  getDirectionFactor = function (a, o) {
    return a === "h" && o === "rtl" ? -1 : 1;
  },
  handleScroll = function (a, o, s, _, $) {
    var et = getDirectionFactor(a, window.getComputedStyle(o).direction),
      tt = et * _,
      rt = s.target,
      nt = o.contains(rt),
      it = !1,
      at = tt > 0,
      st = 0,
      ot = 0;
    do {
      var dt = getScrollVariables(a, rt),
        ht = dt[0],
        ft = dt[1],
        mt = dt[2],
        ut = ft - mt - et * ht;
      (ht || ut) && elementCouldBeScrolled(a, rt) && ((st += ut), (ot += ht)),
        (rt = rt.parentNode);
    } while (
      (!nt && rt !== document.body) ||
      (nt && (o.contains(rt) || o === rt))
    );
    return (
      ((at && (($ && st === 0) || (!$ && tt > st))) ||
        (!at && (($ && ot === 0) || (!$ && -tt > ot)))) &&
        (it = !0),
      it
    );
  },
  getTouchXY = function (a) {
    return "changedTouches" in a
      ? [a.changedTouches[0].clientX, a.changedTouches[0].clientY]
      : [0, 0];
  },
  getDeltaXY = function (a) {
    return [a.deltaX, a.deltaY];
  },
  extractRef = function (a) {
    return a && "current" in a ? a.current : a;
  },
  deltaCompare = function (a, o) {
    return a[0] === o[0] && a[1] === o[1];
  },
  generateStyle = function (a) {
    return `
  .block-interactivity-`
      .concat(
        a,
        ` {pointer-events: none;}
  .allow-interactivity-`
      )
      .concat(
        a,
        ` {pointer-events: all;}
`
      );
  },
  idCounter = 0,
  lockStack = [];
function RemoveScrollSideCar(a) {
  var o = reactExports.useRef([]),
    s = reactExports.useRef([0, 0]),
    _ = reactExports.useRef(),
    $ = reactExports.useState(idCounter++)[0],
    et = reactExports.useState(styleSingleton)[0],
    tt = reactExports.useRef(a);
  reactExports.useEffect(
    function () {
      tt.current = a;
    },
    [a]
  ),
    reactExports.useEffect(
      function () {
        if (a.inert) {
          document.body.classList.add("block-interactivity-".concat($));
          var ft = __spreadArray(
            [a.lockRef.current],
            (a.shards || []).map(extractRef),
            !0
          ).filter(Boolean);
          return (
            ft.forEach(function (mt) {
              return mt.classList.add("allow-interactivity-".concat($));
            }),
            function () {
              document.body.classList.remove("block-interactivity-".concat($)),
                ft.forEach(function (mt) {
                  return mt.classList.remove("allow-interactivity-".concat($));
                });
            }
          );
        }
      },
      [a.inert, a.lockRef.current, a.shards]
    );
  var rt = reactExports.useCallback(function (ft, mt) {
      if ("touches" in ft && ft.touches.length === 2)
        return !tt.current.allowPinchZoom;
      var ut = getTouchXY(ft),
        lt = s.current,
        ct = "deltaX" in ft ? ft.deltaX : lt[0] - ut[0],
        pt = "deltaY" in ft ? ft.deltaY : lt[1] - ut[1],
        vt,
        xt = ft.target,
        bt = Math.abs(ct) > Math.abs(pt) ? "h" : "v";
      if ("touches" in ft && bt === "h" && xt.type === "range") return !1;
      var St = locationCouldBeScrolled(bt, xt);
      if (!St) return !0;
      if (
        (St
          ? (vt = bt)
          : ((vt = bt === "v" ? "h" : "v"),
            (St = locationCouldBeScrolled(bt, xt))),
        !St)
      )
        return !1;
      if (
        (!_.current && "changedTouches" in ft && (ct || pt) && (_.current = vt),
        !vt)
      )
        return !0;
      var Pt = _.current || vt;
      return handleScroll(Pt, mt, ft, Pt === "h" ? ct : pt, !0);
    }, []),
    nt = reactExports.useCallback(function (ft) {
      var mt = ft;
      if (!(!lockStack.length || lockStack[lockStack.length - 1] !== et)) {
        var ut = "deltaY" in mt ? getDeltaXY(mt) : getTouchXY(mt),
          lt = o.current.filter(function (vt) {
            return (
              vt.name === mt.type &&
              vt.target === mt.target &&
              deltaCompare(vt.delta, ut)
            );
          })[0];
        if (lt && lt.should) {
          mt.cancelable && mt.preventDefault();
          return;
        }
        if (!lt) {
          var ct = (tt.current.shards || [])
              .map(extractRef)
              .filter(Boolean)
              .filter(function (vt) {
                return vt.contains(mt.target);
              }),
            pt = ct.length > 0 ? rt(mt, ct[0]) : !tt.current.noIsolation;
          pt && mt.cancelable && mt.preventDefault();
        }
      }
    }, []),
    it = reactExports.useCallback(function (ft, mt, ut, lt) {
      var ct = { name: ft, delta: mt, target: ut, should: lt };
      o.current.push(ct),
        setTimeout(function () {
          o.current = o.current.filter(function (pt) {
            return pt !== ct;
          });
        }, 1);
    }, []),
    at = reactExports.useCallback(function (ft) {
      (s.current = getTouchXY(ft)), (_.current = void 0);
    }, []),
    st = reactExports.useCallback(function (ft) {
      it(ft.type, getDeltaXY(ft), ft.target, rt(ft, a.lockRef.current));
    }, []),
    ot = reactExports.useCallback(function (ft) {
      it(ft.type, getTouchXY(ft), ft.target, rt(ft, a.lockRef.current));
    }, []);
  reactExports.useEffect(function () {
    return (
      lockStack.push(et),
      a.setCallbacks({
        onScrollCapture: st,
        onWheelCapture: st,
        onTouchMoveCapture: ot,
      }),
      document.addEventListener("wheel", nt, nonPassive),
      document.addEventListener("touchmove", nt, nonPassive),
      document.addEventListener("touchstart", at, nonPassive),
      function () {
        (lockStack = lockStack.filter(function (ft) {
          return ft !== et;
        })),
          document.removeEventListener("wheel", nt, nonPassive),
          document.removeEventListener("touchmove", nt, nonPassive),
          document.removeEventListener("touchstart", at, nonPassive);
      }
    );
  }, []);
  var dt = a.removeScrollBar,
    ht = a.inert;
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    ht ? reactExports.createElement(et, { styles: generateStyle($) }) : null,
    dt
      ? reactExports.createElement(RemoveScrollBar, { gapMode: a.gapMode })
      : null
  );
}
const SideCar = exportSidecar(effectCar, RemoveScrollSideCar);
var ReactRemoveScroll = reactExports.forwardRef(function (a, o) {
  return reactExports.createElement(
    RemoveScroll$1,
    __assign$1({}, a, { ref: o, sideCar: SideCar })
  );
});
ReactRemoveScroll.classNames = RemoveScroll$1.classNames;
const RemoveScroll = ReactRemoveScroll;
function ModalFocusScope(a) {
  const {
      autoFocus: o,
      trapFocus: s,
      dialogRef: _,
      initialFocusRef: $,
      blockScrollOnMount: et,
      allowPinchZoom: tt,
      finalFocusRef: rt,
      returnFocusOnClose: nt,
      preserveScrollBarGap: it,
      lockFocusAcrossFrames: at,
      isOpen: st,
    } = useModalContext(),
    [ot, dt] = usePresence();
  reactExports.useEffect(() => {
    !ot && dt && setTimeout(dt);
  }, [ot, dt]);
  const ht = useModalManager(_, st);
  return jsxRuntimeExports.jsx(FocusLock, {
    autoFocus: o,
    isDisabled: !s,
    initialFocusRef: $,
    finalFocusRef: rt,
    restoreFocus: nt,
    contentRef: _,
    lockFocusAcrossFrames: at,
    children: jsxRuntimeExports.jsx(RemoveScroll, {
      removeScrollBar: !it,
      allowPinchZoom: tt,
      enabled: ht === 1 && et,
      forwardProps: !0,
      children: a.children,
    }),
  });
}
var [DrawerContextProvider, useDrawerContext] = createContext$1(),
  placementMap = {
    start: { ltr: "left", rtl: "right" },
    end: { ltr: "right", rtl: "left" },
  };
function getDrawerPlacement(a, o) {
  var s, _;
  if (a)
    return (_ = (s = placementMap[a]) == null ? void 0 : s[o]) != null ? _ : a;
}
function Drawer(a) {
  var o;
  const {
      isOpen: s,
      onClose: _,
      placement: $ = "right",
      children: et,
      ...tt
    } = a,
    rt = useTheme(),
    nt = (o = rt.components) == null ? void 0 : o.Drawer,
    it = getDrawerPlacement($, rt.direction);
  return jsxRuntimeExports.jsx(DrawerContextProvider, {
    value: { placement: it },
    children: jsxRuntimeExports.jsx(Modal, {
      isOpen: s,
      onClose: _,
      styleConfig: nt,
      ...tt,
      children: et,
    }),
  });
}
var MotionDiv = chakra(Slide),
  DrawerContent = forwardRef((a, o) => {
    const {
        className: s,
        children: _,
        motionProps: $,
        containerProps: et,
        ...tt
      } = a,
      {
        getDialogProps: rt,
        getDialogContainerProps: nt,
        isOpen: it,
      } = useModalContext(),
      at = rt(tt, o),
      st = nt(et),
      ot = cx("chakra-modal__content", s),
      dt = useModalStyles(),
      ht = {
        display: "flex",
        flexDirection: "column",
        position: "relative",
        width: "100%",
        outline: 0,
        ...dt.dialog,
      },
      ft = {
        display: "flex",
        width: "100vw",
        height: "$100vh",
        position: "fixed",
        left: 0,
        top: 0,
        ...dt.dialogContainer,
      },
      { placement: mt } = useDrawerContext();
    return jsxRuntimeExports.jsx(ModalFocusScope, {
      children: jsxRuntimeExports.jsx(chakra.div, {
        ...st,
        className: "chakra-modal__content-container",
        __css: ft,
        children: jsxRuntimeExports.jsx(MotionDiv, {
          motionProps: $,
          direction: mt,
          in: it,
          className: ot,
          ...at,
          __css: ht,
          children: _,
        }),
      }),
    });
  });
DrawerContent.displayName = "DrawerContent";
var [TagStylesProvider, useTagStyles] = createContext$1({
    name: "TagStylesContext",
    errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in "<Tag />" `,
  }),
  Tag = forwardRef((a, o) => {
    const s = useMultiStyleConfig("Tag", a),
      _ = omitThemingProps(a),
      $ = {
        display: "inline-flex",
        verticalAlign: "top",
        alignItems: "center",
        maxWidth: "100%",
        ...s.container,
      };
    return jsxRuntimeExports.jsx(TagStylesProvider, {
      value: s,
      children: jsxRuntimeExports.jsx(chakra.span, { ref: o, ..._, __css: $ }),
    });
  });
Tag.displayName = "Tag";
var TagLabel = forwardRef((a, o) => {
  const s = useTagStyles();
  return jsxRuntimeExports.jsx(chakra.span, {
    ref: o,
    noOfLines: 1,
    ...a,
    __css: s.label,
  });
});
TagLabel.displayName = "TagLabel";
var TagLeftIcon = forwardRef((a, o) =>
  jsxRuntimeExports.jsx(Icon, {
    ref: o,
    verticalAlign: "top",
    marginEnd: "0.5rem",
    ...a,
  })
);
TagLeftIcon.displayName = "TagLeftIcon";
var TagRightIcon = forwardRef((a, o) =>
  jsxRuntimeExports.jsx(Icon, {
    ref: o,
    verticalAlign: "top",
    marginStart: "0.5rem",
    ...a,
  })
);
TagRightIcon.displayName = "TagRightIcon";
var TagCloseIcon = (a) =>
  jsxRuntimeExports.jsx(Icon, {
    verticalAlign: "inherit",
    viewBox: "0 0 512 512",
    ...a,
    children: jsxRuntimeExports.jsx("path", {
      fill: "currentColor",
      d: "M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z",
    }),
  });
TagCloseIcon.displayName = "TagCloseIcon";
var TagCloseButton = forwardRef((a, o) => {
  const { isDisabled: s, children: _, ...$ } = a,
    tt = {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      outline: "0",
      ...useTagStyles().closeButton,
    };
  return jsxRuntimeExports.jsx(chakra.button, {
    ref: o,
    "aria-label": "close",
    ...$,
    type: "button",
    disabled: s,
    __css: tt,
    children: _ || jsxRuntimeExports.jsx(TagCloseIcon, {}),
  });
});
TagCloseButton.displayName = "TagCloseButton";
var dist = {},
  _extends = {},
  _global = { exports: {} },
  global$5 = (_global.exports =
    typeof window < "u" && window.Math == Math
      ? window
      : typeof self < "u" && self.Math == Math
      ? self
      : Function("return this")());
typeof __g == "number" && (__g = global$5);
var _globalExports = _global.exports,
  _core = { exports: {} },
  core$4 = (_core.exports = { version: "2.6.12" });
typeof __e == "number" && (__e = core$4);
var _coreExports = _core.exports,
  _aFunction = function (a) {
    if (typeof a != "function") throw TypeError(a + " is not a function!");
    return a;
  },
  aFunction = _aFunction,
  _ctx = function (a, o, s) {
    if ((aFunction(a), o === void 0)) return a;
    switch (s) {
      case 1:
        return function (_) {
          return a.call(o, _);
        };
      case 2:
        return function (_, $) {
          return a.call(o, _, $);
        };
      case 3:
        return function (_, $, et) {
          return a.call(o, _, $, et);
        };
    }
    return function () {
      return a.apply(o, arguments);
    };
  },
  _objectDp = {},
  _isObject = function (a) {
    return typeof a == "object" ? a !== null : typeof a == "function";
  },
  isObject$3 = _isObject,
  _anObject = function (a) {
    if (!isObject$3(a)) throw TypeError(a + " is not an object!");
    return a;
  },
  _fails = function (a) {
    try {
      return !!a();
    } catch {
      return !0;
    }
  },
  _descriptors,
  hasRequired_descriptors;
function require_descriptors() {
  return (
    hasRequired_descriptors ||
      ((hasRequired_descriptors = 1),
      (_descriptors = !_fails(function () {
        return (
          Object.defineProperty({}, "a", {
            get: function () {
              return 7;
            },
          }).a != 7
        );
      }))),
    _descriptors
  );
}
var _domCreate, hasRequired_domCreate;
function require_domCreate() {
  if (hasRequired_domCreate) return _domCreate;
  hasRequired_domCreate = 1;
  var a = _isObject,
    o = _globalExports.document,
    s = a(o) && a(o.createElement);
  return (
    (_domCreate = function (_) {
      return s ? o.createElement(_) : {};
    }),
    _domCreate
  );
}
var _ie8DomDefine, hasRequired_ie8DomDefine;
function require_ie8DomDefine() {
  return (
    hasRequired_ie8DomDefine ||
      ((hasRequired_ie8DomDefine = 1),
      (_ie8DomDefine =
        !require_descriptors() &&
        !_fails(function () {
          return (
            Object.defineProperty(require_domCreate()("div"), "a", {
              get: function () {
                return 7;
              },
            }).a != 7
          );
        }))),
    _ie8DomDefine
  );
}
var isObject$2 = _isObject,
  _toPrimitive = function (a, o) {
    if (!isObject$2(a)) return a;
    var s, _;
    if (
      (o &&
        typeof (s = a.toString) == "function" &&
        !isObject$2((_ = s.call(a)))) ||
      (typeof (s = a.valueOf) == "function" && !isObject$2((_ = s.call(a)))) ||
      (!o &&
        typeof (s = a.toString) == "function" &&
        !isObject$2((_ = s.call(a))))
    )
      return _;
    throw TypeError("Can't convert object to primitive value");
  },
  hasRequired_objectDp;
function require_objectDp() {
  if (hasRequired_objectDp) return _objectDp;
  hasRequired_objectDp = 1;
  var a = _anObject,
    o = require_ie8DomDefine(),
    s = _toPrimitive,
    _ = Object.defineProperty;
  return (
    (_objectDp.f = require_descriptors()
      ? Object.defineProperty
      : function (et, tt, rt) {
          if ((a(et), (tt = s(tt, !0)), a(rt), o))
            try {
              return _(et, tt, rt);
            } catch {}
          if ("get" in rt || "set" in rt)
            throw TypeError("Accessors not supported!");
          return "value" in rt && (et[tt] = rt.value), et;
        }),
    _objectDp
  );
}
var _propertyDesc = function (a, o) {
    return {
      enumerable: !(a & 1),
      configurable: !(a & 2),
      writable: !(a & 4),
      value: o,
    };
  },
  dP$2 = require_objectDp(),
  createDesc$2 = _propertyDesc,
  _hide = require_descriptors()
    ? function (a, o, s) {
        return dP$2.f(a, o, createDesc$2(1, s));
      }
    : function (a, o, s) {
        return (a[o] = s), a;
      },
  hasOwnProperty = {}.hasOwnProperty,
  _has = function (a, o) {
    return hasOwnProperty.call(a, o);
  },
  global$4 = _globalExports,
  core$3 = _coreExports,
  ctx = _ctx,
  hide$2 = _hide,
  has$6 = _has,
  PROTOTYPE$2 = "prototype",
  $export$7 = function (a, o, s) {
    var _ = a & $export$7.F,
      $ = a & $export$7.G,
      et = a & $export$7.S,
      tt = a & $export$7.P,
      rt = a & $export$7.B,
      nt = a & $export$7.W,
      it = $ ? core$3 : core$3[o] || (core$3[o] = {}),
      at = it[PROTOTYPE$2],
      st = $ ? global$4 : et ? global$4[o] : (global$4[o] || {})[PROTOTYPE$2],
      ot,
      dt,
      ht;
    $ && (s = o);
    for (ot in s)
      (dt = !_ && st && st[ot] !== void 0),
        !(dt && has$6(it, ot)) &&
          ((ht = dt ? st[ot] : s[ot]),
          (it[ot] =
            $ && typeof st[ot] != "function"
              ? s[ot]
              : rt && dt
              ? ctx(ht, global$4)
              : nt && st[ot] == ht
              ? (function (ft) {
                  var mt = function (ut, lt, ct) {
                    if (this instanceof ft) {
                      switch (arguments.length) {
                        case 0:
                          return new ft();
                        case 1:
                          return new ft(ut);
                        case 2:
                          return new ft(ut, lt);
                      }
                      return new ft(ut, lt, ct);
                    }
                    return ft.apply(this, arguments);
                  };
                  return (mt[PROTOTYPE$2] = ft[PROTOTYPE$2]), mt;
                })(ht)
              : tt && typeof ht == "function"
              ? ctx(Function.call, ht)
              : ht),
          tt &&
            (((it.virtual || (it.virtual = {}))[ot] = ht),
            a & $export$7.R && at && !at[ot] && hide$2(at, ot, ht)));
  };
$export$7.F = 1;
$export$7.G = 2;
$export$7.S = 4;
$export$7.P = 8;
$export$7.B = 16;
$export$7.W = 32;
$export$7.U = 64;
$export$7.R = 128;
var _export = $export$7,
  toString$1 = {}.toString,
  _cof = function (a) {
    return toString$1.call(a).slice(8, -1);
  },
  _iobject,
  hasRequired_iobject;
function require_iobject() {
  if (hasRequired_iobject) return _iobject;
  hasRequired_iobject = 1;
  var a = _cof;
  return (
    (_iobject = Object("z").propertyIsEnumerable(0)
      ? Object
      : function (o) {
          return a(o) == "String" ? o.split("") : Object(o);
        }),
    _iobject
  );
}
var _defined = function (a) {
    if (a == null) throw TypeError("Can't call method on  " + a);
    return a;
  },
  IObject = require_iobject(),
  defined$2 = _defined,
  _toIobject = function (a) {
    return IObject(defined$2(a));
  },
  ceil = Math.ceil,
  floor = Math.floor,
  _toInteger = function (a) {
    return isNaN((a = +a)) ? 0 : (a > 0 ? floor : ceil)(a);
  },
  toInteger$2 = _toInteger,
  min$1 = Math.min,
  _toLength = function (a) {
    return a > 0 ? min$1(toInteger$2(a), 9007199254740991) : 0;
  },
  toInteger$1 = _toInteger,
  max = Math.max,
  min = Math.min,
  _toAbsoluteIndex = function (a, o) {
    return (a = toInteger$1(a)), a < 0 ? max(a + o, 0) : min(a, o);
  },
  toIObject$5 = _toIobject,
  toLength = _toLength,
  toAbsoluteIndex = _toAbsoluteIndex,
  _arrayIncludes = function (a) {
    return function (o, s, _) {
      var $ = toIObject$5(o),
        et = toLength($.length),
        tt = toAbsoluteIndex(_, et),
        rt;
      if (a && s != s) {
        for (; et > tt; ) if (((rt = $[tt++]), rt != rt)) return !0;
      } else
        for (; et > tt; tt++)
          if ((a || tt in $) && $[tt] === s) return a || tt || 0;
      return !a && -1;
    };
  },
  _shared = { exports: {} },
  _library = !0,
  core$2 = _coreExports,
  global$3 = _globalExports,
  SHARED = "__core-js_shared__",
  store$1 = global$3[SHARED] || (global$3[SHARED] = {});
(_shared.exports = function (a, o) {
  return store$1[a] || (store$1[a] = o !== void 0 ? o : {});
})("versions", []).push({
  version: core$2.version,
  mode: "pure",
  copyright: "© 2020 Denis Pushkarev (zloirock.ru)",
});
var _sharedExports = _shared.exports,
  id$1 = 0,
  px = Math.random(),
  _uid = function (a) {
    return "Symbol(".concat(
      a === void 0 ? "" : a,
      ")_",
      (++id$1 + px).toString(36)
    );
  },
  shared$1 = _sharedExports("keys"),
  uid$2 = _uid,
  _sharedKey = function (a) {
    return shared$1[a] || (shared$1[a] = uid$2(a));
  },
  has$5 = _has,
  toIObject$4 = _toIobject,
  arrayIndexOf = _arrayIncludes(!1),
  IE_PROTO$2 = _sharedKey("IE_PROTO"),
  _objectKeysInternal = function (a, o) {
    var s = toIObject$4(a),
      _ = 0,
      $ = [],
      et;
    for (et in s) et != IE_PROTO$2 && has$5(s, et) && $.push(et);
    for (; o.length > _; )
      has$5(s, (et = o[_++])) && (~arrayIndexOf($, et) || $.push(et));
    return $;
  },
  _enumBugKeys =
    "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
      ","
    ),
  $keys$2 = _objectKeysInternal,
  enumBugKeys$1 = _enumBugKeys,
  _objectKeys =
    Object.keys ||
    function (o) {
      return $keys$2(o, enumBugKeys$1);
    },
  _objectGops = {};
_objectGops.f = Object.getOwnPropertySymbols;
var _objectPie = {},
  hasRequired_objectPie;
function require_objectPie() {
  return (
    hasRequired_objectPie ||
      ((hasRequired_objectPie = 1), (_objectPie.f = {}.propertyIsEnumerable)),
    _objectPie
  );
}
var defined$1 = _defined,
  _toObject = function (a) {
    return Object(defined$1(a));
  },
  _objectAssign,
  hasRequired_objectAssign;
function require_objectAssign() {
  if (hasRequired_objectAssign) return _objectAssign;
  hasRequired_objectAssign = 1;
  var a = require_descriptors(),
    o = _objectKeys,
    s = _objectGops,
    _ = require_objectPie(),
    $ = _toObject,
    et = require_iobject(),
    tt = Object.assign;
  return (
    (_objectAssign =
      !tt ||
      _fails(function () {
        var rt = {},
          nt = {},
          it = Symbol(),
          at = "abcdefghijklmnopqrst";
        return (
          (rt[it] = 7),
          at.split("").forEach(function (st) {
            nt[st] = st;
          }),
          tt({}, rt)[it] != 7 || Object.keys(tt({}, nt)).join("") != at
        );
      })
        ? function (nt, it) {
            for (
              var at = $(nt), st = arguments.length, ot = 1, dt = s.f, ht = _.f;
              st > ot;

            )
              for (
                var ft = et(arguments[ot++]),
                  mt = dt ? o(ft).concat(dt(ft)) : o(ft),
                  ut = mt.length,
                  lt = 0,
                  ct;
                ut > lt;

              )
                (ct = mt[lt++]), (!a || ht.call(ft, ct)) && (at[ct] = ft[ct]);
            return at;
          }
        : tt),
    _objectAssign
  );
}
var $export$6 = _export;
$export$6($export$6.S + $export$6.F, "Object", {
  assign: require_objectAssign(),
});
var assign$1 = _coreExports.Object.assign,
  assign = { default: assign$1, __esModule: !0 };
_extends.__esModule = !0;
var _assign = assign,
  _assign2 = _interopRequireDefault$5(_assign);
function _interopRequireDefault$5(a) {
  return a && a.__esModule ? a : { default: a };
}
_extends.default =
  _assign2.default ||
  function (a) {
    for (var o = 1; o < arguments.length; o++) {
      var s = arguments[o];
      for (var _ in s)
        Object.prototype.hasOwnProperty.call(s, _) && (a[_] = s[_]);
    }
    return a;
  };
var has$4 = _has,
  toObject$2 = _toObject,
  IE_PROTO$1 = _sharedKey("IE_PROTO"),
  ObjectProto$1 = Object.prototype,
  _objectGpo =
    Object.getPrototypeOf ||
    function (a) {
      return (
        (a = toObject$2(a)),
        has$4(a, IE_PROTO$1)
          ? a[IE_PROTO$1]
          : typeof a.constructor == "function" && a instanceof a.constructor
          ? a.constructor.prototype
          : a instanceof Object
          ? ObjectProto$1
          : null
      );
    },
  $export$5 = _export,
  core$1 = _coreExports,
  fails = _fails,
  _objectSap = function (a, o) {
    var s = (core$1.Object || {})[a] || Object[a],
      _ = {};
    (_[a] = o(s)),
      $export$5(
        $export$5.S +
          $export$5.F *
            fails(function () {
              s(1);
            }),
        "Object",
        _
      );
  },
  toObject$1 = _toObject,
  $getPrototypeOf = _objectGpo;
_objectSap("getPrototypeOf", function () {
  return function (o) {
    return $getPrototypeOf(toObject$1(o));
  };
});
var getPrototypeOf$2 = _coreExports.Object.getPrototypeOf,
  getPrototypeOf$1 = { default: getPrototypeOf$2, __esModule: !0 },
  classCallCheck = {};
classCallCheck.__esModule = !0;
classCallCheck.default = function (a, o) {
  if (!(a instanceof o))
    throw new TypeError("Cannot call a class as a function");
};
var createClass = {},
  $export$4 = _export;
$export$4($export$4.S + $export$4.F * !require_descriptors(), "Object", {
  defineProperty: require_objectDp().f,
});
var $Object$1 = _coreExports.Object,
  defineProperty$2 = function (o, s, _) {
    return $Object$1.defineProperty(o, s, _);
  },
  defineProperty$1 = { default: defineProperty$2, __esModule: !0 };
createClass.__esModule = !0;
var _defineProperty = defineProperty$1,
  _defineProperty2 = _interopRequireDefault$4(_defineProperty);
function _interopRequireDefault$4(a) {
  return a && a.__esModule ? a : { default: a };
}
createClass.default = (function () {
  function a(o, s) {
    for (var _ = 0; _ < s.length; _++) {
      var $ = s[_];
      ($.enumerable = $.enumerable || !1),
        ($.configurable = !0),
        "value" in $ && ($.writable = !0),
        (0, _defineProperty2.default)(o, $.key, $);
    }
  }
  return function (o, s, _) {
    return s && a(o.prototype, s), _ && a(o, _), o;
  };
})();
var possibleConstructorReturn = {},
  _typeof$1 = {},
  toInteger = _toInteger,
  defined = _defined,
  _stringAt = function (a) {
    return function (o, s) {
      var _ = String(defined(o)),
        $ = toInteger(s),
        et = _.length,
        tt,
        rt;
      return $ < 0 || $ >= et
        ? a
          ? ""
          : void 0
        : ((tt = _.charCodeAt($)),
          tt < 55296 ||
          tt > 56319 ||
          $ + 1 === et ||
          (rt = _.charCodeAt($ + 1)) < 56320 ||
          rt > 57343
            ? a
              ? _.charAt($)
              : tt
            : a
            ? _.slice($, $ + 2)
            : ((tt - 55296) << 10) + (rt - 56320) + 65536);
    };
  },
  _redefine = _hide,
  _iterators = {},
  dP$1 = require_objectDp(),
  anObject$2 = _anObject,
  getKeys$1 = _objectKeys,
  _objectDps = require_descriptors()
    ? Object.defineProperties
    : function (o, s) {
        anObject$2(o);
        for (var _ = getKeys$1(s), $ = _.length, et = 0, tt; $ > et; )
          dP$1.f(o, (tt = _[et++]), s[tt]);
        return o;
      },
  _html,
  hasRequired_html;
function require_html() {
  if (hasRequired_html) return _html;
  hasRequired_html = 1;
  var a = _globalExports.document;
  return (_html = a && a.documentElement), _html;
}
var anObject$1 = _anObject,
  dPs = _objectDps,
  enumBugKeys = _enumBugKeys,
  IE_PROTO = _sharedKey("IE_PROTO"),
  Empty = function () {},
  PROTOTYPE$1 = "prototype",
  createDict = function () {
    var a = require_domCreate()("iframe"),
      o = enumBugKeys.length,
      s = "<",
      _ = ">",
      $;
    for (
      a.style.display = "none",
        require_html().appendChild(a),
        a.src = "javascript:",
        $ = a.contentWindow.document,
        $.open(),
        $.write(s + "script" + _ + "document.F=Object" + s + "/script" + _),
        $.close(),
        createDict = $.F;
      o--;

    )
      delete createDict[PROTOTYPE$1][enumBugKeys[o]];
    return createDict();
  },
  _objectCreate =
    Object.create ||
    function (o, s) {
      var _;
      return (
        o !== null
          ? ((Empty[PROTOTYPE$1] = anObject$1(o)),
            (_ = new Empty()),
            (Empty[PROTOTYPE$1] = null),
            (_[IE_PROTO] = o))
          : (_ = createDict()),
        s === void 0 ? _ : dPs(_, s)
      );
    },
  _wks = { exports: {} },
  store = _sharedExports("wks"),
  uid$1 = _uid,
  Symbol$1 = _globalExports.Symbol,
  USE_SYMBOL = typeof Symbol$1 == "function",
  $exports = (_wks.exports = function (a) {
    return (
      store[a] ||
      (store[a] =
        (USE_SYMBOL && Symbol$1[a]) ||
        (USE_SYMBOL ? Symbol$1 : uid$1)("Symbol." + a))
    );
  });
$exports.store = store;
var _wksExports = _wks.exports,
  def = require_objectDp().f,
  has$3 = _has,
  TAG = _wksExports("toStringTag"),
  _setToStringTag = function (a, o, s) {
    a &&
      !has$3((a = s ? a : a.prototype), TAG) &&
      def(a, TAG, { configurable: !0, value: o });
  },
  create$2 = _objectCreate,
  descriptor = _propertyDesc,
  setToStringTag$2 = _setToStringTag,
  IteratorPrototype = {};
_hide(IteratorPrototype, _wksExports("iterator"), function () {
  return this;
});
var _iterCreate = function (a, o, s) {
    (a.prototype = create$2(IteratorPrototype, { next: descriptor(1, s) })),
      setToStringTag$2(a, o + " Iterator");
  },
  $export$3 = _export,
  redefine$1 = _redefine,
  hide$1 = _hide,
  Iterators$2 = _iterators,
  $iterCreate = _iterCreate,
  setToStringTag$1 = _setToStringTag,
  getPrototypeOf = _objectGpo,
  ITERATOR = _wksExports("iterator"),
  BUGGY = !([].keys && "next" in [].keys()),
  FF_ITERATOR = "@@iterator",
  KEYS = "keys",
  VALUES = "values",
  returnThis = function () {
    return this;
  },
  _iterDefine = function (a, o, s, _, $, et, tt) {
    $iterCreate(s, o, _);
    var rt = function (ct) {
        if (!BUGGY && ct in st) return st[ct];
        switch (ct) {
          case KEYS:
            return function () {
              return new s(this, ct);
            };
          case VALUES:
            return function () {
              return new s(this, ct);
            };
        }
        return function () {
          return new s(this, ct);
        };
      },
      nt = o + " Iterator",
      it = $ == VALUES,
      at = !1,
      st = a.prototype,
      ot = st[ITERATOR] || st[FF_ITERATOR] || ($ && st[$]),
      dt = ot || rt($),
      ht = $ ? (it ? rt("entries") : dt) : void 0,
      ft = (o == "Array" && st.entries) || ot,
      mt,
      ut,
      lt;
    if (
      (ft &&
        ((lt = getPrototypeOf(ft.call(new a()))),
        lt !== Object.prototype && lt.next && setToStringTag$1(lt, nt, !0)),
      it &&
        ot &&
        ot.name !== VALUES &&
        ((at = !0),
        (dt = function () {
          return ot.call(this);
        })),
      tt && (BUGGY || at || !st[ITERATOR]) && hide$1(st, ITERATOR, dt),
      (Iterators$2[o] = dt),
      (Iterators$2[nt] = returnThis),
      $)
    )
      if (
        ((mt = {
          values: it ? dt : rt(VALUES),
          keys: et ? dt : rt(KEYS),
          entries: ht,
        }),
        tt)
      )
        for (ut in mt) ut in st || redefine$1(st, ut, mt[ut]);
      else $export$3($export$3.P + $export$3.F * (BUGGY || at), o, mt);
    return mt;
  },
  $at = _stringAt(!0);
_iterDefine(
  String,
  "String",
  function (a) {
    (this._t = String(a)), (this._i = 0);
  },
  function () {
    var a = this._t,
      o = this._i,
      s;
    return o >= a.length
      ? { value: void 0, done: !0 }
      : ((s = $at(a, o)), (this._i += s.length), { value: s, done: !1 });
  }
);
var _iterStep = function (a, o) {
    return { value: o, done: !!a };
  },
  step = _iterStep,
  Iterators$1 = _iterators,
  toIObject$3 = _toIobject;
_iterDefine(
  Array,
  "Array",
  function (a, o) {
    (this._t = toIObject$3(a)), (this._i = 0), (this._k = o);
  },
  function () {
    var a = this._t,
      o = this._k,
      s = this._i++;
    return !a || s >= a.length
      ? ((this._t = void 0), step(1))
      : o == "keys"
      ? step(0, s)
      : o == "values"
      ? step(0, a[s])
      : step(0, [s, a[s]]);
  },
  "values"
);
Iterators$1.Arguments = Iterators$1.Array;
var global$2 = _globalExports,
  hide = _hide,
  Iterators = _iterators,
  TO_STRING_TAG = _wksExports("toStringTag"),
  DOMIterables =
    "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(
      ","
    );
for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i],
    Collection = global$2[NAME],
    proto = Collection && Collection.prototype;
  proto && !proto[TO_STRING_TAG] && hide(proto, TO_STRING_TAG, NAME),
    (Iterators[NAME] = Iterators.Array);
}
var _wksExt = {};
_wksExt.f = _wksExports;
var iterator$1 = _wksExt.f("iterator"),
  iterator = { default: iterator$1, __esModule: !0 },
  _meta = { exports: {} },
  META$1 = _uid("meta"),
  isObject$1 = _isObject,
  has$2 = _has,
  setDesc = require_objectDp().f,
  id = 0,
  isExtensible =
    Object.isExtensible ||
    function () {
      return !0;
    },
  FREEZE = !_fails(function () {
    return isExtensible(Object.preventExtensions({}));
  }),
  setMeta = function (a) {
    setDesc(a, META$1, { value: { i: "O" + ++id, w: {} } });
  },
  fastKey = function (a, o) {
    if (!isObject$1(a))
      return typeof a == "symbol" ? a : (typeof a == "string" ? "S" : "P") + a;
    if (!has$2(a, META$1)) {
      if (!isExtensible(a)) return "F";
      if (!o) return "E";
      setMeta(a);
    }
    return a[META$1].i;
  },
  getWeak = function (a, o) {
    if (!has$2(a, META$1)) {
      if (!isExtensible(a)) return !0;
      if (!o) return !1;
      setMeta(a);
    }
    return a[META$1].w;
  },
  onFreeze = function (a) {
    return (
      FREEZE &&
        meta$1.NEED &&
        isExtensible(a) &&
        !has$2(a, META$1) &&
        setMeta(a),
      a
    );
  },
  meta$1 = (_meta.exports = {
    KEY: META$1,
    NEED: !1,
    fastKey,
    getWeak,
    onFreeze,
  }),
  _metaExports = _meta.exports,
  core = _coreExports,
  wksExt$1 = _wksExt,
  defineProperty = require_objectDp().f,
  _wksDefine = function (a) {
    var o = core.Symbol || (core.Symbol = {});
    a.charAt(0) != "_" &&
      !(a in o) &&
      defineProperty(o, a, { value: wksExt$1.f(a) });
  },
  getKeys = _objectKeys,
  gOPS = _objectGops,
  pIE$1 = require_objectPie(),
  _enumKeys = function (a) {
    var o = getKeys(a),
      s = gOPS.f;
    if (s)
      for (var _ = s(a), $ = pIE$1.f, et = 0, tt; _.length > et; )
        $.call(a, (tt = _[et++])) && o.push(tt);
    return o;
  },
  cof = _cof,
  _isArray =
    Array.isArray ||
    function (o) {
      return cof(o) == "Array";
    },
  _objectGopnExt = {},
  _objectGopn = {},
  $keys$1 = _objectKeysInternal,
  hiddenKeys = _enumBugKeys.concat("length", "prototype");
_objectGopn.f =
  Object.getOwnPropertyNames ||
  function (o) {
    return $keys$1(o, hiddenKeys);
  };
var toIObject$2 = _toIobject,
  gOPN$1 = _objectGopn.f,
  toString = {}.toString,
  windowNames =
    typeof window == "object" && window && Object.getOwnPropertyNames
      ? Object.getOwnPropertyNames(window)
      : [],
  getWindowNames = function (a) {
    try {
      return gOPN$1(a);
    } catch {
      return windowNames.slice();
    }
  };
_objectGopnExt.f = function (o) {
  return windowNames && toString.call(o) == "[object Window]"
    ? getWindowNames(o)
    : gOPN$1(toIObject$2(o));
};
var _objectGopd = {},
  pIE = require_objectPie(),
  createDesc$1 = _propertyDesc,
  toIObject$1 = _toIobject,
  toPrimitive$1 = _toPrimitive,
  has$1 = _has,
  IE8_DOM_DEFINE = require_ie8DomDefine(),
  gOPD$1 = Object.getOwnPropertyDescriptor;
_objectGopd.f = require_descriptors()
  ? gOPD$1
  : function (o, s) {
      if (((o = toIObject$1(o)), (s = toPrimitive$1(s, !0)), IE8_DOM_DEFINE))
        try {
          return gOPD$1(o, s);
        } catch {}
      if (has$1(o, s)) return createDesc$1(!pIE.f.call(o, s), o[s]);
    };
var global$1 = _globalExports,
  has = _has,
  DESCRIPTORS = require_descriptors(),
  $export$2 = _export,
  redefine = _redefine,
  META = _metaExports.KEY,
  $fails = _fails,
  shared = _sharedExports,
  setToStringTag = _setToStringTag,
  uid = _uid,
  wks = _wksExports,
  wksExt = _wksExt,
  wksDefine = _wksDefine,
  enumKeys = _enumKeys,
  isArray = _isArray,
  anObject = _anObject,
  isObject = _isObject,
  toObject = _toObject,
  toIObject = _toIobject,
  toPrimitive = _toPrimitive,
  createDesc = _propertyDesc,
  _create$1 = _objectCreate,
  gOPNExt = _objectGopnExt,
  $GOPD = _objectGopd,
  $GOPS = _objectGops,
  $DP = require_objectDp(),
  $keys = _objectKeys,
  gOPD = $GOPD.f,
  dP = $DP.f,
  gOPN = gOPNExt.f,
  $Symbol = global$1.Symbol,
  $JSON = global$1.JSON,
  _stringify = $JSON && $JSON.stringify,
  PROTOTYPE = "prototype",
  HIDDEN = wks("_hidden"),
  TO_PRIMITIVE = wks("toPrimitive"),
  isEnum = {}.propertyIsEnumerable,
  SymbolRegistry = shared("symbol-registry"),
  AllSymbols = shared("symbols"),
  OPSymbols = shared("op-symbols"),
  ObjectProto = Object[PROTOTYPE],
  USE_NATIVE = typeof $Symbol == "function" && !!$GOPS.f,
  QObject = global$1.QObject,
  setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild,
  setSymbolDesc =
    DESCRIPTORS &&
    $fails(function () {
      return (
        _create$1(
          dP({}, "a", {
            get: function () {
              return dP(this, "a", { value: 7 }).a;
            },
          })
        ).a != 7
      );
    })
      ? function (a, o, s) {
          var _ = gOPD(ObjectProto, o);
          _ && delete ObjectProto[o],
            dP(a, o, s),
            _ && a !== ObjectProto && dP(ObjectProto, o, _);
        }
      : dP,
  wrap = function (a) {
    var o = (AllSymbols[a] = _create$1($Symbol[PROTOTYPE]));
    return (o._k = a), o;
  },
  isSymbol =
    USE_NATIVE && typeof $Symbol.iterator == "symbol"
      ? function (a) {
          return typeof a == "symbol";
        }
      : function (a) {
          return a instanceof $Symbol;
        },
  $defineProperty = function (o, s, _) {
    return (
      o === ObjectProto && $defineProperty(OPSymbols, s, _),
      anObject(o),
      (s = toPrimitive(s, !0)),
      anObject(_),
      has(AllSymbols, s)
        ? (_.enumerable
            ? (has(o, HIDDEN) && o[HIDDEN][s] && (o[HIDDEN][s] = !1),
              (_ = _create$1(_, { enumerable: createDesc(0, !1) })))
            : (has(o, HIDDEN) || dP(o, HIDDEN, createDesc(1, {})),
              (o[HIDDEN][s] = !0)),
          setSymbolDesc(o, s, _))
        : dP(o, s, _)
    );
  },
  $defineProperties = function (o, s) {
    anObject(o);
    for (
      var _ = enumKeys((s = toIObject(s))), $ = 0, et = _.length, tt;
      et > $;

    )
      $defineProperty(o, (tt = _[$++]), s[tt]);
    return o;
  },
  $create = function (o, s) {
    return s === void 0 ? _create$1(o) : $defineProperties(_create$1(o), s);
  },
  $propertyIsEnumerable = function (o) {
    var s = isEnum.call(this, (o = toPrimitive(o, !0)));
    return this === ObjectProto && has(AllSymbols, o) && !has(OPSymbols, o)
      ? !1
      : s ||
        !has(this, o) ||
        !has(AllSymbols, o) ||
        (has(this, HIDDEN) && this[HIDDEN][o])
      ? s
      : !0;
  },
  $getOwnPropertyDescriptor = function (o, s) {
    if (
      ((o = toIObject(o)),
      (s = toPrimitive(s, !0)),
      !(o === ObjectProto && has(AllSymbols, s) && !has(OPSymbols, s)))
    ) {
      var _ = gOPD(o, s);
      return (
        _ &&
          has(AllSymbols, s) &&
          !(has(o, HIDDEN) && o[HIDDEN][s]) &&
          (_.enumerable = !0),
        _
      );
    }
  },
  $getOwnPropertyNames = function (o) {
    for (var s = gOPN(toIObject(o)), _ = [], $ = 0, et; s.length > $; )
      !has(AllSymbols, (et = s[$++])) &&
        et != HIDDEN &&
        et != META &&
        _.push(et);
    return _;
  },
  $getOwnPropertySymbols = function (o) {
    for (
      var s = o === ObjectProto,
        _ = gOPN(s ? OPSymbols : toIObject(o)),
        $ = [],
        et = 0,
        tt;
      _.length > et;

    )
      has(AllSymbols, (tt = _[et++])) &&
        (!s || has(ObjectProto, tt)) &&
        $.push(AllSymbols[tt]);
    return $;
  };
USE_NATIVE ||
  (($Symbol = function () {
    if (this instanceof $Symbol)
      throw TypeError("Symbol is not a constructor!");
    var o = uid(arguments.length > 0 ? arguments[0] : void 0),
      s = function (_) {
        this === ObjectProto && s.call(OPSymbols, _),
          has(this, HIDDEN) && has(this[HIDDEN], o) && (this[HIDDEN][o] = !1),
          setSymbolDesc(this, o, createDesc(1, _));
      };
    return (
      DESCRIPTORS &&
        setter &&
        setSymbolDesc(ObjectProto, o, { configurable: !0, set: s }),
      wrap(o)
    );
  }),
  redefine($Symbol[PROTOTYPE], "toString", function () {
    return this._k;
  }),
  ($GOPD.f = $getOwnPropertyDescriptor),
  ($DP.f = $defineProperty),
  (_objectGopn.f = gOPNExt.f = $getOwnPropertyNames),
  (require_objectPie().f = $propertyIsEnumerable),
  ($GOPS.f = $getOwnPropertySymbols),
  DESCRIPTORS &&
    !_library &&
    redefine(ObjectProto, "propertyIsEnumerable", $propertyIsEnumerable),
  (wksExt.f = function (a) {
    return wrap(wks(a));
  }));
$export$2($export$2.G + $export$2.W + $export$2.F * !USE_NATIVE, {
  Symbol: $Symbol,
});
for (
  var es6Symbols =
      "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(
        ","
      ),
    j = 0;
  es6Symbols.length > j;

)
  wks(es6Symbols[j++]);
for (
  var wellKnownSymbols = $keys(wks.store), k = 0;
  wellKnownSymbols.length > k;

)
  wksDefine(wellKnownSymbols[k++]);
$export$2($export$2.S + $export$2.F * !USE_NATIVE, "Symbol", {
  for: function (a) {
    return has(SymbolRegistry, (a += ""))
      ? SymbolRegistry[a]
      : (SymbolRegistry[a] = $Symbol(a));
  },
  keyFor: function (o) {
    if (!isSymbol(o)) throw TypeError(o + " is not a symbol!");
    for (var s in SymbolRegistry) if (SymbolRegistry[s] === o) return s;
  },
  useSetter: function () {
    setter = !0;
  },
  useSimple: function () {
    setter = !1;
  },
});
$export$2($export$2.S + $export$2.F * !USE_NATIVE, "Object", {
  create: $create,
  defineProperty: $defineProperty,
  defineProperties: $defineProperties,
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  getOwnPropertyNames: $getOwnPropertyNames,
  getOwnPropertySymbols: $getOwnPropertySymbols,
});
var FAILS_ON_PRIMITIVES = $fails(function () {
  $GOPS.f(1);
});
$export$2($export$2.S + $export$2.F * FAILS_ON_PRIMITIVES, "Object", {
  getOwnPropertySymbols: function (o) {
    return $GOPS.f(toObject(o));
  },
});
$JSON &&
  $export$2(
    $export$2.S +
      $export$2.F *
        (!USE_NATIVE ||
          $fails(function () {
            var a = $Symbol();
            return (
              _stringify([a]) != "[null]" ||
              _stringify({ a }) != "{}" ||
              _stringify(Object(a)) != "{}"
            );
          })),
    "JSON",
    {
      stringify: function (o) {
        for (var s = [o], _ = 1, $, et; arguments.length > _; )
          s.push(arguments[_++]);
        if (((et = $ = s[1]), !((!isObject($) && o === void 0) || isSymbol(o))))
          return (
            isArray($) ||
              ($ = function (tt, rt) {
                if (
                  (typeof et == "function" && (rt = et.call(this, tt, rt)),
                  !isSymbol(rt))
                )
                  return rt;
              }),
            (s[1] = $),
            _stringify.apply($JSON, s)
          );
      },
    }
  );
$Symbol[PROTOTYPE][TO_PRIMITIVE] ||
  _hide($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
setToStringTag($Symbol, "Symbol");
setToStringTag(Math, "Math", !0);
setToStringTag(global$1.JSON, "JSON", !0);
_wksDefine("asyncIterator");
_wksDefine("observable");
var symbol$1 = _coreExports.Symbol,
  symbol = { default: symbol$1, __esModule: !0 };
_typeof$1.__esModule = !0;
var _iterator = iterator,
  _iterator2 = _interopRequireDefault$3(_iterator),
  _symbol = symbol,
  _symbol2 = _interopRequireDefault$3(_symbol),
  _typeof =
    typeof _symbol2.default == "function" &&
    typeof _iterator2.default == "symbol"
      ? function (a) {
          return typeof a;
        }
      : function (a) {
          return a &&
            typeof _symbol2.default == "function" &&
            a.constructor === _symbol2.default &&
            a !== _symbol2.default.prototype
            ? "symbol"
            : typeof a;
        };
function _interopRequireDefault$3(a) {
  return a && a.__esModule ? a : { default: a };
}
_typeof$1.default =
  typeof _symbol2.default == "function" &&
  _typeof(_iterator2.default) === "symbol"
    ? function (a) {
        return typeof a > "u" ? "undefined" : _typeof(a);
      }
    : function (a) {
        return a &&
          typeof _symbol2.default == "function" &&
          a.constructor === _symbol2.default &&
          a !== _symbol2.default.prototype
          ? "symbol"
          : typeof a > "u"
          ? "undefined"
          : _typeof(a);
      };
possibleConstructorReturn.__esModule = !0;
var _typeof2$1 = _typeof$1,
  _typeof3$1 = _interopRequireDefault$2(_typeof2$1);
function _interopRequireDefault$2(a) {
  return a && a.__esModule ? a : { default: a };
}
possibleConstructorReturn.default = function (a, o) {
  if (!a)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return o &&
    ((typeof o > "u" ? "undefined" : (0, _typeof3$1.default)(o)) === "object" ||
      typeof o == "function")
    ? o
    : a;
};
var inherits = {},
  _setProto,
  hasRequired_setProto;
function require_setProto() {
  if (hasRequired_setProto) return _setProto;
  hasRequired_setProto = 1;
  var a = _isObject,
    o = _anObject,
    s = function (_, $) {
      if ((o(_), !a($) && $ !== null))
        throw TypeError($ + ": can't set as prototype!");
    };
  return (
    (_setProto = {
      set:
        Object.setPrototypeOf ||
        ("__proto__" in {}
          ? (function (_, $, et) {
              try {
                (et = _ctx(
                  Function.call,
                  _objectGopd.f(Object.prototype, "__proto__").set,
                  2
                )),
                  et(_, []),
                  ($ = !(_ instanceof Array));
              } catch {
                $ = !0;
              }
              return function (rt, nt) {
                return s(rt, nt), $ ? (rt.__proto__ = nt) : et(rt, nt), rt;
              };
            })({}, !1)
          : void 0),
      check: s,
    }),
    _setProto
  );
}
var $export$1 = _export;
$export$1($export$1.S, "Object", { setPrototypeOf: require_setProto().set });
var setPrototypeOf$1 = _coreExports.Object.setPrototypeOf,
  setPrototypeOf = { default: setPrototypeOf$1, __esModule: !0 },
  $export = _export;
$export($export.S, "Object", { create: _objectCreate });
var $Object = _coreExports.Object,
  create$1 = function (o, s) {
    return $Object.create(o, s);
  },
  create = { default: create$1, __esModule: !0 };
inherits.__esModule = !0;
var _setPrototypeOf = setPrototypeOf,
  _setPrototypeOf2 = _interopRequireDefault$1(_setPrototypeOf),
  _create = create,
  _create2 = _interopRequireDefault$1(_create),
  _typeof2 = _typeof$1,
  _typeof3 = _interopRequireDefault$1(_typeof2);
function _interopRequireDefault$1(a) {
  return a && a.__esModule ? a : { default: a };
}
inherits.default = function (a, o) {
  if (typeof o != "function" && o !== null)
    throw new TypeError(
      "Super expression must either be null or a function, not " +
        (typeof o > "u" ? "undefined" : (0, _typeof3.default)(o))
    );
  (a.prototype = (0, _create2.default)(o && o.prototype, {
    constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 },
  })),
    o &&
      (_setPrototypeOf2.default
        ? (0, _setPrototypeOf2.default)(a, o)
        : (a.__proto__ = o));
};
var lottie = { exports: {} };
(function (module, exports) {
  typeof navigator < "u" &&
    (function (a, o) {
      module.exports = o();
    })(commonjsGlobal, function () {
      var svgNS = "http://www.w3.org/2000/svg",
        locationHref = "",
        _useWebWorker = !1,
        initialDefaultFrame = -999999,
        setWebWorker = function (o) {
          _useWebWorker = !!o;
        },
        getWebWorker = function () {
          return _useWebWorker;
        },
        setLocationHref = function (o) {
          locationHref = o;
        },
        getLocationHref = function () {
          return locationHref;
        };
      function createTag(a) {
        return document.createElement(a);
      }
      function extendPrototype(a, o) {
        var s,
          _ = a.length,
          $;
        for (s = 0; s < _; s += 1) {
          $ = a[s].prototype;
          for (var et in $)
            Object.prototype.hasOwnProperty.call($, et) &&
              (o.prototype[et] = $[et]);
        }
      }
      function getDescriptor(a, o) {
        return Object.getOwnPropertyDescriptor(a, o);
      }
      function createProxyFunction(a) {
        function o() {}
        return (o.prototype = a), o;
      }
      var audioControllerFactory = (function () {
          function a(o) {
            (this.audios = []),
              (this.audioFactory = o),
              (this._volume = 1),
              (this._isMuted = !1);
          }
          return (
            (a.prototype = {
              addAudio: function (s) {
                this.audios.push(s);
              },
              pause: function () {
                var s,
                  _ = this.audios.length;
                for (s = 0; s < _; s += 1) this.audios[s].pause();
              },
              resume: function () {
                var s,
                  _ = this.audios.length;
                for (s = 0; s < _; s += 1) this.audios[s].resume();
              },
              setRate: function (s) {
                var _,
                  $ = this.audios.length;
                for (_ = 0; _ < $; _ += 1) this.audios[_].setRate(s);
              },
              createAudio: function (s) {
                return this.audioFactory
                  ? this.audioFactory(s)
                  : window.Howl
                  ? new window.Howl({ src: [s] })
                  : {
                      isPlaying: !1,
                      play: function () {
                        this.isPlaying = !0;
                      },
                      seek: function () {
                        this.isPlaying = !1;
                      },
                      playing: function () {},
                      rate: function () {},
                      setVolume: function () {},
                    };
              },
              setAudioFactory: function (s) {
                this.audioFactory = s;
              },
              setVolume: function (s) {
                (this._volume = s), this._updateVolume();
              },
              mute: function () {
                (this._isMuted = !0), this._updateVolume();
              },
              unmute: function () {
                (this._isMuted = !1), this._updateVolume();
              },
              getVolume: function () {
                return this._volume;
              },
              _updateVolume: function () {
                var s,
                  _ = this.audios.length;
                for (s = 0; s < _; s += 1)
                  this.audios[s].volume(this._volume * (this._isMuted ? 0 : 1));
              },
            }),
            function () {
              return new a();
            }
          );
        })(),
        createTypedArray = (function () {
          function a(s, _) {
            var $ = 0,
              et = [],
              tt;
            switch (s) {
              case "int16":
              case "uint8c":
                tt = 1;
                break;
              default:
                tt = 1.1;
                break;
            }
            for ($ = 0; $ < _; $ += 1) et.push(tt);
            return et;
          }
          function o(s, _) {
            return s === "float32"
              ? new Float32Array(_)
              : s === "int16"
              ? new Int16Array(_)
              : s === "uint8c"
              ? new Uint8ClampedArray(_)
              : a(s, _);
          }
          return typeof Uint8ClampedArray == "function" &&
            typeof Float32Array == "function"
            ? o
            : a;
        })();
      function createSizedArray(a) {
        return Array.apply(null, { length: a });
      }
      function _typeof$6(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$6 = function (s) {
                return typeof s;
              })
            : (_typeof$6 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$6(a)
        );
      }
      var subframeEnabled = !0,
        expressionsPlugin = null,
        expressionsInterfaces = null,
        idPrefix$1 = "",
        isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
        bmPow = Math.pow,
        bmSqrt = Math.sqrt,
        bmFloor = Math.floor,
        bmMax = Math.max,
        bmMin = Math.min,
        BMMath = {};
      (function () {
        var a = [
            "abs",
            "acos",
            "acosh",
            "asin",
            "asinh",
            "atan",
            "atanh",
            "atan2",
            "ceil",
            "cbrt",
            "expm1",
            "clz32",
            "cos",
            "cosh",
            "exp",
            "floor",
            "fround",
            "hypot",
            "imul",
            "log",
            "log1p",
            "log2",
            "log10",
            "max",
            "min",
            "pow",
            "random",
            "round",
            "sign",
            "sin",
            "sinh",
            "sqrt",
            "tan",
            "tanh",
            "trunc",
            "E",
            "LN10",
            "LN2",
            "LOG10E",
            "LOG2E",
            "PI",
            "SQRT1_2",
            "SQRT2",
          ],
          o,
          s = a.length;
        for (o = 0; o < s; o += 1) BMMath[a[o]] = Math[a[o]];
      })(),
        (BMMath.random = Math.random),
        (BMMath.abs = function (a) {
          var o = _typeof$6(a);
          if (o === "object" && a.length) {
            var s = createSizedArray(a.length),
              _,
              $ = a.length;
            for (_ = 0; _ < $; _ += 1) s[_] = Math.abs(a[_]);
            return s;
          }
          return Math.abs(a);
        });
      var defaultCurveSegments = 150,
        degToRads = Math.PI / 180,
        roundCorner = 0.5519;
      function styleDiv(a) {
        (a.style.position = "absolute"),
          (a.style.top = 0),
          (a.style.left = 0),
          (a.style.display = "block"),
          (a.style.transformOrigin = "0 0"),
          (a.style.webkitTransformOrigin = "0 0"),
          (a.style.backfaceVisibility = "visible"),
          (a.style.webkitBackfaceVisibility = "visible"),
          (a.style.transformStyle = "preserve-3d"),
          (a.style.webkitTransformStyle = "preserve-3d"),
          (a.style.mozTransformStyle = "preserve-3d");
      }
      function BMEnterFrameEvent(a, o, s, _) {
        (this.type = a),
          (this.currentTime = o),
          (this.totalTime = s),
          (this.direction = _ < 0 ? -1 : 1);
      }
      function BMCompleteEvent(a, o) {
        (this.type = a), (this.direction = o < 0 ? -1 : 1);
      }
      function BMCompleteLoopEvent(a, o, s, _) {
        (this.type = a),
          (this.currentLoop = s),
          (this.totalLoops = o),
          (this.direction = _ < 0 ? -1 : 1);
      }
      function BMSegmentStartEvent(a, o, s) {
        (this.type = a), (this.firstFrame = o), (this.totalFrames = s);
      }
      function BMDestroyEvent(a, o) {
        (this.type = a), (this.target = o);
      }
      function BMRenderFrameErrorEvent(a, o) {
        (this.type = "renderFrameError"),
          (this.nativeError = a),
          (this.currentTime = o);
      }
      function BMConfigErrorEvent(a) {
        (this.type = "configError"), (this.nativeError = a);
      }
      var createElementID = (function () {
        var a = 0;
        return function () {
          return (a += 1), idPrefix$1 + "__lottie_element_" + a;
        };
      })();
      function HSVtoRGB(a, o, s) {
        var _, $, et, tt, rt, nt, it, at;
        switch (
          ((tt = Math.floor(a * 6)),
          (rt = a * 6 - tt),
          (nt = s * (1 - o)),
          (it = s * (1 - rt * o)),
          (at = s * (1 - (1 - rt) * o)),
          tt % 6)
        ) {
          case 0:
            (_ = s), ($ = at), (et = nt);
            break;
          case 1:
            (_ = it), ($ = s), (et = nt);
            break;
          case 2:
            (_ = nt), ($ = s), (et = at);
            break;
          case 3:
            (_ = nt), ($ = it), (et = s);
            break;
          case 4:
            (_ = at), ($ = nt), (et = s);
            break;
          case 5:
            (_ = s), ($ = nt), (et = it);
            break;
        }
        return [_, $, et];
      }
      function RGBtoHSV(a, o, s) {
        var _ = Math.max(a, o, s),
          $ = Math.min(a, o, s),
          et = _ - $,
          tt,
          rt = _ === 0 ? 0 : et / _,
          nt = _ / 255;
        switch (_) {
          case $:
            tt = 0;
            break;
          case a:
            (tt = o - s + et * (o < s ? 6 : 0)), (tt /= 6 * et);
            break;
          case o:
            (tt = s - a + et * 2), (tt /= 6 * et);
            break;
          case s:
            (tt = a - o + et * 4), (tt /= 6 * et);
            break;
        }
        return [tt, rt, nt];
      }
      function addSaturationToRGB(a, o) {
        var s = RGBtoHSV(a[0] * 255, a[1] * 255, a[2] * 255);
        return (
          (s[1] += o),
          s[1] > 1 ? (s[1] = 1) : s[1] <= 0 && (s[1] = 0),
          HSVtoRGB(s[0], s[1], s[2])
        );
      }
      function addBrightnessToRGB(a, o) {
        var s = RGBtoHSV(a[0] * 255, a[1] * 255, a[2] * 255);
        return (
          (s[2] += o),
          s[2] > 1 ? (s[2] = 1) : s[2] < 0 && (s[2] = 0),
          HSVtoRGB(s[0], s[1], s[2])
        );
      }
      function addHueToRGB(a, o) {
        var s = RGBtoHSV(a[0] * 255, a[1] * 255, a[2] * 255);
        return (
          (s[0] += o / 360),
          s[0] > 1 ? (s[0] -= 1) : s[0] < 0 && (s[0] += 1),
          HSVtoRGB(s[0], s[1], s[2])
        );
      }
      var rgbToHex = (function () {
          var a = [],
            o,
            s;
          for (o = 0; o < 256; o += 1)
            (s = o.toString(16)), (a[o] = s.length === 1 ? "0" + s : s);
          return function (_, $, et) {
            return (
              _ < 0 && (_ = 0),
              $ < 0 && ($ = 0),
              et < 0 && (et = 0),
              "#" + a[_] + a[$] + a[et]
            );
          };
        })(),
        setSubframeEnabled = function (o) {
          subframeEnabled = !!o;
        },
        getSubframeEnabled = function () {
          return subframeEnabled;
        },
        setExpressionsPlugin = function (o) {
          expressionsPlugin = o;
        },
        getExpressionsPlugin = function () {
          return expressionsPlugin;
        },
        setExpressionInterfaces = function (o) {
          expressionsInterfaces = o;
        },
        getExpressionInterfaces = function () {
          return expressionsInterfaces;
        },
        setDefaultCurveSegments = function (o) {
          defaultCurveSegments = o;
        },
        getDefaultCurveSegments = function () {
          return defaultCurveSegments;
        },
        setIdPrefix = function (o) {
          idPrefix$1 = o;
        };
      function createNS(a) {
        return document.createElementNS(svgNS, a);
      }
      function _typeof$5(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$5 = function (s) {
                return typeof s;
              })
            : (_typeof$5 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$5(a)
        );
      }
      var dataManager = (function () {
          var a = 1,
            o = [],
            s,
            _,
            $ = {
              onmessage: function () {},
              postMessage: function (dt) {
                s({ data: dt });
              },
            },
            et = {
              postMessage: function (dt) {
                $.onmessage({ data: dt });
              },
            };
          function tt(ot) {
            if (window.Worker && window.Blob && getWebWorker()) {
              var dt = new Blob(
                  ["var _workerSelf = self; self.onmessage = ", ot.toString()],
                  { type: "text/javascript" }
                ),
                ht = URL.createObjectURL(dt);
              return new Worker(ht);
            }
            return (s = ot), $;
          }
          function rt() {
            _ ||
              ((_ = tt(function (dt) {
                function ht() {
                  function mt(At, Et) {
                    var kt,
                      gt,
                      yt = At.length,
                      wt,
                      _t,
                      Ft,
                      Vt;
                    for (gt = 0; gt < yt; gt += 1)
                      if (((kt = At[gt]), "ks" in kt && !kt.completed)) {
                        if (((kt.completed = !0), kt.hasMask)) {
                          var Lt = kt.masksProperties;
                          for (_t = Lt.length, wt = 0; wt < _t; wt += 1)
                            if (Lt[wt].pt.k.i) vt(Lt[wt].pt.k);
                            else
                              for (
                                Vt = Lt[wt].pt.k.length, Ft = 0;
                                Ft < Vt;
                                Ft += 1
                              )
                                Lt[wt].pt.k[Ft].s && vt(Lt[wt].pt.k[Ft].s[0]),
                                  Lt[wt].pt.k[Ft].e && vt(Lt[wt].pt.k[Ft].e[0]);
                        }
                        kt.ty === 0
                          ? ((kt.layers = ct(kt.refId, Et)), mt(kt.layers, Et))
                          : kt.ty === 4
                          ? pt(kt.shapes)
                          : kt.ty === 5 && jt(kt);
                      }
                  }
                  function ut(At, Et) {
                    if (At) {
                      var kt = 0,
                        gt = At.length;
                      for (kt = 0; kt < gt; kt += 1)
                        At[kt].t === 1 &&
                          ((At[kt].data.layers = ct(At[kt].data.refId, Et)),
                          mt(At[kt].data.layers, Et));
                    }
                  }
                  function lt(At, Et) {
                    for (var kt = 0, gt = Et.length; kt < gt; ) {
                      if (Et[kt].id === At) return Et[kt];
                      kt += 1;
                    }
                    return null;
                  }
                  function ct(At, Et) {
                    var kt = lt(At, Et);
                    return kt
                      ? kt.layers.__used
                        ? JSON.parse(JSON.stringify(kt.layers))
                        : ((kt.layers.__used = !0), kt.layers)
                      : null;
                  }
                  function pt(At) {
                    var Et,
                      kt = At.length,
                      gt,
                      yt;
                    for (Et = kt - 1; Et >= 0; Et -= 1)
                      if (At[Et].ty === "sh")
                        if (At[Et].ks.k.i) vt(At[Et].ks.k);
                        else
                          for (
                            yt = At[Et].ks.k.length, gt = 0;
                            gt < yt;
                            gt += 1
                          )
                            At[Et].ks.k[gt].s && vt(At[Et].ks.k[gt].s[0]),
                              At[Et].ks.k[gt].e && vt(At[Et].ks.k[gt].e[0]);
                      else At[Et].ty === "gr" && pt(At[Et].it);
                  }
                  function vt(At) {
                    var Et,
                      kt = At.i.length;
                    for (Et = 0; Et < kt; Et += 1)
                      (At.i[Et][0] += At.v[Et][0]),
                        (At.i[Et][1] += At.v[Et][1]),
                        (At.o[Et][0] += At.v[Et][0]),
                        (At.o[Et][1] += At.v[Et][1]);
                  }
                  function xt(At, Et) {
                    var kt = Et ? Et.split(".") : [100, 100, 100];
                    return At[0] > kt[0]
                      ? !0
                      : kt[0] > At[0]
                      ? !1
                      : At[1] > kt[1]
                      ? !0
                      : kt[1] > At[1]
                      ? !1
                      : At[2] > kt[2]
                      ? !0
                      : kt[2] > At[2]
                      ? !1
                      : null;
                  }
                  var bt = (function () {
                      var At = [4, 4, 14];
                      function Et(gt) {
                        var yt = gt.t.d;
                        gt.t.d = { k: [{ s: yt, t: 0 }] };
                      }
                      function kt(gt) {
                        var yt,
                          wt = gt.length;
                        for (yt = 0; yt < wt; yt += 1)
                          gt[yt].ty === 5 && Et(gt[yt]);
                      }
                      return function (gt) {
                        if (xt(At, gt.v) && (kt(gt.layers), gt.assets)) {
                          var yt,
                            wt = gt.assets.length;
                          for (yt = 0; yt < wt; yt += 1)
                            gt.assets[yt].layers && kt(gt.assets[yt].layers);
                        }
                      };
                    })(),
                    St = (function () {
                      var At = [4, 7, 99];
                      return function (Et) {
                        if (Et.chars && !xt(At, Et.v)) {
                          var kt,
                            gt = Et.chars.length;
                          for (kt = 0; kt < gt; kt += 1) {
                            var yt = Et.chars[kt];
                            yt.data &&
                              yt.data.shapes &&
                              (pt(yt.data.shapes),
                              (yt.data.ip = 0),
                              (yt.data.op = 99999),
                              (yt.data.st = 0),
                              (yt.data.sr = 1),
                              (yt.data.ks = {
                                p: { k: [0, 0], a: 0 },
                                s: { k: [100, 100], a: 0 },
                                a: { k: [0, 0], a: 0 },
                                r: { k: 0, a: 0 },
                                o: { k: 100, a: 0 },
                              }),
                              Et.chars[kt].t ||
                                (yt.data.shapes.push({ ty: "no" }),
                                yt.data.shapes[0].it.push({
                                  p: { k: [0, 0], a: 0 },
                                  s: { k: [100, 100], a: 0 },
                                  a: { k: [0, 0], a: 0 },
                                  r: { k: 0, a: 0 },
                                  o: { k: 100, a: 0 },
                                  sk: { k: 0, a: 0 },
                                  sa: { k: 0, a: 0 },
                                  ty: "tr",
                                })));
                          }
                        }
                      };
                    })(),
                    Pt = (function () {
                      var At = [5, 7, 15];
                      function Et(gt) {
                        var yt = gt.t.p;
                        typeof yt.a == "number" && (yt.a = { a: 0, k: yt.a }),
                          typeof yt.p == "number" && (yt.p = { a: 0, k: yt.p }),
                          typeof yt.r == "number" && (yt.r = { a: 0, k: yt.r });
                      }
                      function kt(gt) {
                        var yt,
                          wt = gt.length;
                        for (yt = 0; yt < wt; yt += 1)
                          gt[yt].ty === 5 && Et(gt[yt]);
                      }
                      return function (gt) {
                        if (xt(At, gt.v) && (kt(gt.layers), gt.assets)) {
                          var yt,
                            wt = gt.assets.length;
                          for (yt = 0; yt < wt; yt += 1)
                            gt.assets[yt].layers && kt(gt.assets[yt].layers);
                        }
                      };
                    })(),
                    Mt = (function () {
                      var At = [4, 1, 9];
                      function Et(gt) {
                        var yt,
                          wt = gt.length,
                          _t,
                          Ft;
                        for (yt = 0; yt < wt; yt += 1)
                          if (gt[yt].ty === "gr") Et(gt[yt].it);
                          else if (gt[yt].ty === "fl" || gt[yt].ty === "st")
                            if (gt[yt].c.k && gt[yt].c.k[0].i)
                              for (
                                Ft = gt[yt].c.k.length, _t = 0;
                                _t < Ft;
                                _t += 1
                              )
                                gt[yt].c.k[_t].s &&
                                  ((gt[yt].c.k[_t].s[0] /= 255),
                                  (gt[yt].c.k[_t].s[1] /= 255),
                                  (gt[yt].c.k[_t].s[2] /= 255),
                                  (gt[yt].c.k[_t].s[3] /= 255)),
                                  gt[yt].c.k[_t].e &&
                                    ((gt[yt].c.k[_t].e[0] /= 255),
                                    (gt[yt].c.k[_t].e[1] /= 255),
                                    (gt[yt].c.k[_t].e[2] /= 255),
                                    (gt[yt].c.k[_t].e[3] /= 255));
                            else
                              (gt[yt].c.k[0] /= 255),
                                (gt[yt].c.k[1] /= 255),
                                (gt[yt].c.k[2] /= 255),
                                (gt[yt].c.k[3] /= 255);
                      }
                      function kt(gt) {
                        var yt,
                          wt = gt.length;
                        for (yt = 0; yt < wt; yt += 1)
                          gt[yt].ty === 4 && Et(gt[yt].shapes);
                      }
                      return function (gt) {
                        if (xt(At, gt.v) && (kt(gt.layers), gt.assets)) {
                          var yt,
                            wt = gt.assets.length;
                          for (yt = 0; yt < wt; yt += 1)
                            gt.assets[yt].layers && kt(gt.assets[yt].layers);
                        }
                      };
                    })(),
                    It = (function () {
                      var At = [4, 4, 18];
                      function Et(gt) {
                        var yt,
                          wt = gt.length,
                          _t,
                          Ft;
                        for (yt = wt - 1; yt >= 0; yt -= 1)
                          if (gt[yt].ty === "sh")
                            if (gt[yt].ks.k.i) gt[yt].ks.k.c = gt[yt].closed;
                            else
                              for (
                                Ft = gt[yt].ks.k.length, _t = 0;
                                _t < Ft;
                                _t += 1
                              )
                                gt[yt].ks.k[_t].s &&
                                  (gt[yt].ks.k[_t].s[0].c = gt[yt].closed),
                                  gt[yt].ks.k[_t].e &&
                                    (gt[yt].ks.k[_t].e[0].c = gt[yt].closed);
                          else gt[yt].ty === "gr" && Et(gt[yt].it);
                      }
                      function kt(gt) {
                        var yt,
                          wt,
                          _t = gt.length,
                          Ft,
                          Vt,
                          Lt,
                          Wt;
                        for (wt = 0; wt < _t; wt += 1) {
                          if (((yt = gt[wt]), yt.hasMask)) {
                            var zt = yt.masksProperties;
                            for (Vt = zt.length, Ft = 0; Ft < Vt; Ft += 1)
                              if (zt[Ft].pt.k.i) zt[Ft].pt.k.c = zt[Ft].cl;
                              else
                                for (
                                  Wt = zt[Ft].pt.k.length, Lt = 0;
                                  Lt < Wt;
                                  Lt += 1
                                )
                                  zt[Ft].pt.k[Lt].s &&
                                    (zt[Ft].pt.k[Lt].s[0].c = zt[Ft].cl),
                                    zt[Ft].pt.k[Lt].e &&
                                      (zt[Ft].pt.k[Lt].e[0].c = zt[Ft].cl);
                          }
                          yt.ty === 4 && Et(yt.shapes);
                        }
                      }
                      return function (gt) {
                        if (xt(At, gt.v) && (kt(gt.layers), gt.assets)) {
                          var yt,
                            wt = gt.assets.length;
                          for (yt = 0; yt < wt; yt += 1)
                            gt.assets[yt].layers && kt(gt.assets[yt].layers);
                        }
                      };
                    })();
                  function Rt(At) {
                    At.__complete ||
                      (Mt(At),
                      bt(At),
                      St(At),
                      Pt(At),
                      It(At),
                      mt(At.layers, At.assets),
                      ut(At.chars, At.assets),
                      (At.__complete = !0));
                  }
                  function jt(At) {
                    At.t.a.length === 0 && "m" in At.t.p;
                  }
                  var Dt = {};
                  return (
                    (Dt.completeData = Rt),
                    (Dt.checkColors = Mt),
                    (Dt.checkChars = St),
                    (Dt.checkPathProperties = Pt),
                    (Dt.checkShapes = It),
                    (Dt.completeLayers = mt),
                    Dt
                  );
                }
                if (
                  (et.dataManager || (et.dataManager = ht()),
                  et.assetLoader ||
                    (et.assetLoader = (function () {
                      function mt(lt) {
                        var ct = lt.getResponseHeader("content-type");
                        return (ct &&
                          lt.responseType === "json" &&
                          ct.indexOf("json") !== -1) ||
                          (lt.response && _typeof$5(lt.response) === "object")
                          ? lt.response
                          : lt.response && typeof lt.response == "string"
                          ? JSON.parse(lt.response)
                          : lt.responseText
                          ? JSON.parse(lt.responseText)
                          : null;
                      }
                      function ut(lt, ct, pt, vt) {
                        var xt,
                          bt = new XMLHttpRequest();
                        try {
                          bt.responseType = "json";
                        } catch {}
                        bt.onreadystatechange = function () {
                          if (bt.readyState === 4)
                            if (bt.status === 200) (xt = mt(bt)), pt(xt);
                            else
                              try {
                                (xt = mt(bt)), pt(xt);
                              } catch (St) {
                                vt && vt(St);
                              }
                        };
                        try {
                          bt.open(["G", "E", "T"].join(""), lt, !0);
                        } catch {
                          bt.open(["G", "E", "T"].join(""), ct + "/" + lt, !0);
                        }
                        bt.send();
                      }
                      return { load: ut };
                    })()),
                  dt.data.type === "loadAnimation")
                )
                  et.assetLoader.load(
                    dt.data.path,
                    dt.data.fullPath,
                    function (mt) {
                      et.dataManager.completeData(mt),
                        et.postMessage({
                          id: dt.data.id,
                          payload: mt,
                          status: "success",
                        });
                    },
                    function () {
                      et.postMessage({ id: dt.data.id, status: "error" });
                    }
                  );
                else if (dt.data.type === "complete") {
                  var ft = dt.data.animation;
                  et.dataManager.completeData(ft),
                    et.postMessage({
                      id: dt.data.id,
                      payload: ft,
                      status: "success",
                    });
                } else
                  dt.data.type === "loadData" &&
                    et.assetLoader.load(
                      dt.data.path,
                      dt.data.fullPath,
                      function (mt) {
                        et.postMessage({
                          id: dt.data.id,
                          payload: mt,
                          status: "success",
                        });
                      },
                      function () {
                        et.postMessage({ id: dt.data.id, status: "error" });
                      }
                    );
              })),
              (_.onmessage = function (ot) {
                var dt = ot.data,
                  ht = dt.id,
                  ft = o[ht];
                (o[ht] = null),
                  dt.status === "success"
                    ? ft.onComplete(dt.payload)
                    : ft.onError && ft.onError();
              }));
          }
          function nt(ot, dt) {
            a += 1;
            var ht = "processId_" + a;
            return (o[ht] = { onComplete: ot, onError: dt }), ht;
          }
          function it(ot, dt, ht) {
            rt();
            var ft = nt(dt, ht);
            _.postMessage({
              type: "loadAnimation",
              path: ot,
              fullPath: window.location.origin + window.location.pathname,
              id: ft,
            });
          }
          function at(ot, dt, ht) {
            rt();
            var ft = nt(dt, ht);
            _.postMessage({
              type: "loadData",
              path: ot,
              fullPath: window.location.origin + window.location.pathname,
              id: ft,
            });
          }
          function st(ot, dt, ht) {
            rt();
            var ft = nt(dt, ht);
            _.postMessage({ type: "complete", animation: ot, id: ft });
          }
          return { loadAnimation: it, loadData: at, completeAnimation: st };
        })(),
        ImagePreloader = (function () {
          var a = (function () {
            var ut = createTag("canvas");
            (ut.width = 1), (ut.height = 1);
            var lt = ut.getContext("2d");
            return (
              (lt.fillStyle = "rgba(0,0,0,0)"), lt.fillRect(0, 0, 1, 1), ut
            );
          })();
          function o() {
            (this.loadedAssets += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function s() {
            (this.loadedFootagesCount += 1),
              this.loadedAssets === this.totalImages &&
                this.loadedFootagesCount === this.totalFootages &&
                this.imagesLoadedCb &&
                this.imagesLoadedCb(null);
          }
          function _(ut, lt, ct) {
            var pt = "";
            if (ut.e) pt = ut.p;
            else if (lt) {
              var vt = ut.p;
              vt.indexOf("images/") !== -1 && (vt = vt.split("/")[1]),
                (pt = lt + vt);
            } else (pt = ct), (pt += ut.u ? ut.u : ""), (pt += ut.p);
            return pt;
          }
          function $(ut) {
            var lt = 0,
              ct = setInterval(
                function () {
                  var pt = ut.getBBox();
                  (pt.width || lt > 500) &&
                    (this._imageLoaded(), clearInterval(ct)),
                    (lt += 1);
                }.bind(this),
                50
              );
          }
          function et(ut) {
            var lt = _(ut, this.assetsPath, this.path),
              ct = createNS("image");
            isSafari
              ? this.testImageLoaded(ct)
              : ct.addEventListener("load", this._imageLoaded, !1),
              ct.addEventListener(
                "error",
                function () {
                  (pt.img = a), this._imageLoaded();
                }.bind(this),
                !1
              ),
              ct.setAttributeNS("http://www.w3.org/1999/xlink", "href", lt),
              this._elementHelper.append
                ? this._elementHelper.append(ct)
                : this._elementHelper.appendChild(ct);
            var pt = { img: ct, assetData: ut };
            return pt;
          }
          function tt(ut) {
            var lt = _(ut, this.assetsPath, this.path),
              ct = createTag("img");
            (ct.crossOrigin = "anonymous"),
              ct.addEventListener("load", this._imageLoaded, !1),
              ct.addEventListener(
                "error",
                function () {
                  (pt.img = a), this._imageLoaded();
                }.bind(this),
                !1
              ),
              (ct.src = lt);
            var pt = { img: ct, assetData: ut };
            return pt;
          }
          function rt(ut) {
            var lt = { assetData: ut },
              ct = _(ut, this.assetsPath, this.path);
            return (
              dataManager.loadData(
                ct,
                function (pt) {
                  (lt.img = pt), this._footageLoaded();
                }.bind(this),
                function () {
                  (lt.img = {}), this._footageLoaded();
                }.bind(this)
              ),
              lt
            );
          }
          function nt(ut, lt) {
            this.imagesLoadedCb = lt;
            var ct,
              pt = ut.length;
            for (ct = 0; ct < pt; ct += 1)
              ut[ct].layers ||
                (!ut[ct].t || ut[ct].t === "seq"
                  ? ((this.totalImages += 1),
                    this.images.push(this._createImageData(ut[ct])))
                  : ut[ct].t === 3 &&
                    ((this.totalFootages += 1),
                    this.images.push(this.createFootageData(ut[ct]))));
          }
          function it(ut) {
            this.path = ut || "";
          }
          function at(ut) {
            this.assetsPath = ut || "";
          }
          function st(ut) {
            for (var lt = 0, ct = this.images.length; lt < ct; ) {
              if (this.images[lt].assetData === ut) return this.images[lt].img;
              lt += 1;
            }
            return null;
          }
          function ot() {
            (this.imagesLoadedCb = null), (this.images.length = 0);
          }
          function dt() {
            return this.totalImages === this.loadedAssets;
          }
          function ht() {
            return this.totalFootages === this.loadedFootagesCount;
          }
          function ft(ut, lt) {
            ut === "svg"
              ? ((this._elementHelper = lt),
                (this._createImageData = this.createImageData.bind(this)))
              : (this._createImageData = this.createImgData.bind(this));
          }
          function mt() {
            (this._imageLoaded = o.bind(this)),
              (this._footageLoaded = s.bind(this)),
              (this.testImageLoaded = $.bind(this)),
              (this.createFootageData = rt.bind(this)),
              (this.assetsPath = ""),
              (this.path = ""),
              (this.totalImages = 0),
              (this.totalFootages = 0),
              (this.loadedAssets = 0),
              (this.loadedFootagesCount = 0),
              (this.imagesLoadedCb = null),
              (this.images = []);
          }
          return (
            (mt.prototype = {
              loadAssets: nt,
              setAssetsPath: at,
              setPath: it,
              loadedImages: dt,
              loadedFootages: ht,
              destroy: ot,
              getAsset: st,
              createImgData: tt,
              createImageData: et,
              imageLoaded: o,
              footageLoaded: s,
              setCacheType: ft,
            }),
            mt
          );
        })();
      function BaseEvent() {}
      BaseEvent.prototype = {
        triggerEvent: function (o, s) {
          if (this._cbs[o])
            for (var _ = this._cbs[o], $ = 0; $ < _.length; $ += 1) _[$](s);
        },
        addEventListener: function (o, s) {
          return (
            this._cbs[o] || (this._cbs[o] = []),
            this._cbs[o].push(s),
            function () {
              this.removeEventListener(o, s);
            }.bind(this)
          );
        },
        removeEventListener: function (o, s) {
          if (!s) this._cbs[o] = null;
          else if (this._cbs[o]) {
            for (var _ = 0, $ = this._cbs[o].length; _ < $; )
              this._cbs[o][_] === s &&
                (this._cbs[o].splice(_, 1), (_ -= 1), ($ -= 1)),
                (_ += 1);
            this._cbs[o].length || (this._cbs[o] = null);
          }
        },
      };
      var markerParser = (function () {
          function a(o) {
            for (
              var s = o.split(`\r
`),
                _ = {},
                $,
                et = 0,
                tt = 0;
              tt < s.length;
              tt += 1
            )
              ($ = s[tt].split(":")),
                $.length === 2 && ((_[$[0]] = $[1].trim()), (et += 1));
            if (et === 0) throw new Error();
            return _;
          }
          return function (o) {
            for (var s = [], _ = 0; _ < o.length; _ += 1) {
              var $ = o[_],
                et = { time: $.tm, duration: $.dr };
              try {
                et.payload = JSON.parse(o[_].cm);
              } catch {
                try {
                  et.payload = a(o[_].cm);
                } catch {
                  et.payload = { name: o[_].cm };
                }
              }
              s.push(et);
            }
            return s;
          };
        })(),
        ProjectInterface = (function () {
          function a(o) {
            this.compositions.push(o);
          }
          return function () {
            function o(s) {
              for (var _ = 0, $ = this.compositions.length; _ < $; ) {
                if (
                  this.compositions[_].data &&
                  this.compositions[_].data.nm === s
                )
                  return (
                    this.compositions[_].prepareFrame &&
                      this.compositions[_].data.xt &&
                      this.compositions[_].prepareFrame(this.currentFrame),
                    this.compositions[_].compInterface
                  );
                _ += 1;
              }
              return null;
            }
            return (
              (o.compositions = []),
              (o.currentFrame = 0),
              (o.registerComposition = a),
              o
            );
          };
        })(),
        renderers = {},
        registerRenderer = function (o, s) {
          renderers[o] = s;
        };
      function getRenderer(a) {
        return renderers[a];
      }
      function getRegisteredRenderer() {
        if (renderers.canvas) return "canvas";
        for (var a in renderers) if (renderers[a]) return a;
        return "";
      }
      function _typeof$4(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$4 = function (s) {
                return typeof s;
              })
            : (_typeof$4 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$4(a)
        );
      }
      var AnimationItem = function () {
        (this._cbs = []),
          (this.name = ""),
          (this.path = ""),
          (this.isLoaded = !1),
          (this.currentFrame = 0),
          (this.currentRawFrame = 0),
          (this.firstFrame = 0),
          (this.totalFrames = 0),
          (this.frameRate = 0),
          (this.frameMult = 0),
          (this.playSpeed = 1),
          (this.playDirection = 1),
          (this.playCount = 0),
          (this.animationData = {}),
          (this.assets = []),
          (this.isPaused = !0),
          (this.autoplay = !1),
          (this.loop = !0),
          (this.renderer = null),
          (this.animationID = createElementID()),
          (this.assetsPath = ""),
          (this.timeCompleted = 0),
          (this.segmentPos = 0),
          (this.isSubframeEnabled = getSubframeEnabled()),
          (this.segments = []),
          (this._idle = !0),
          (this._completedLoop = !1),
          (this.projectInterface = ProjectInterface()),
          (this.imagePreloader = new ImagePreloader()),
          (this.audioController = audioControllerFactory()),
          (this.markers = []),
          (this.configAnimation = this.configAnimation.bind(this)),
          (this.onSetupError = this.onSetupError.bind(this)),
          (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
          (this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0)),
          (this.expressionsPlugin = getExpressionsPlugin());
      };
      extendPrototype([BaseEvent], AnimationItem),
        (AnimationItem.prototype.setParams = function (a) {
          (a.wrapper || a.container) &&
            (this.wrapper = a.wrapper || a.container);
          var o = "svg";
          a.animType ? (o = a.animType) : a.renderer && (o = a.renderer);
          var s = getRenderer(o);
          (this.renderer = new s(this, a.rendererSettings)),
            this.imagePreloader.setCacheType(o, this.renderer.globalData.defs),
            this.renderer.setProjectInterface(this.projectInterface),
            (this.animType = o),
            a.loop === "" ||
            a.loop === null ||
            a.loop === void 0 ||
            a.loop === !0
              ? (this.loop = !0)
              : a.loop === !1
              ? (this.loop = !1)
              : (this.loop = parseInt(a.loop, 10)),
            (this.autoplay = "autoplay" in a ? a.autoplay : !0),
            (this.name = a.name ? a.name : ""),
            (this.autoloadSegments = Object.prototype.hasOwnProperty.call(
              a,
              "autoloadSegments"
            )
              ? a.autoloadSegments
              : !0),
            (this.assetsPath = a.assetsPath),
            (this.initialSegment = a.initialSegment),
            a.audioFactory &&
              this.audioController.setAudioFactory(a.audioFactory),
            a.animationData
              ? this.setupAnimation(a.animationData)
              : a.path &&
                (a.path.lastIndexOf("\\") !== -1
                  ? (this.path = a.path.substr(0, a.path.lastIndexOf("\\") + 1))
                  : (this.path = a.path.substr(0, a.path.lastIndexOf("/") + 1)),
                (this.fileName = a.path.substr(a.path.lastIndexOf("/") + 1)),
                (this.fileName = this.fileName.substr(
                  0,
                  this.fileName.lastIndexOf(".json")
                )),
                dataManager.loadAnimation(
                  a.path,
                  this.configAnimation,
                  this.onSetupError
                ));
        }),
        (AnimationItem.prototype.onSetupError = function () {
          this.trigger("data_failed");
        }),
        (AnimationItem.prototype.setupAnimation = function (a) {
          dataManager.completeAnimation(a, this.configAnimation);
        }),
        (AnimationItem.prototype.setData = function (a, o) {
          o && _typeof$4(o) !== "object" && (o = JSON.parse(o));
          var s = { wrapper: a, animationData: o },
            _ = a.attributes;
          (s.path = _.getNamedItem("data-animation-path")
            ? _.getNamedItem("data-animation-path").value
            : _.getNamedItem("data-bm-path")
            ? _.getNamedItem("data-bm-path").value
            : _.getNamedItem("bm-path")
            ? _.getNamedItem("bm-path").value
            : ""),
            (s.animType = _.getNamedItem("data-anim-type")
              ? _.getNamedItem("data-anim-type").value
              : _.getNamedItem("data-bm-type")
              ? _.getNamedItem("data-bm-type").value
              : _.getNamedItem("bm-type")
              ? _.getNamedItem("bm-type").value
              : _.getNamedItem("data-bm-renderer")
              ? _.getNamedItem("data-bm-renderer").value
              : _.getNamedItem("bm-renderer")
              ? _.getNamedItem("bm-renderer").value
              : getRegisteredRenderer() || "canvas");
          var $ = _.getNamedItem("data-anim-loop")
            ? _.getNamedItem("data-anim-loop").value
            : _.getNamedItem("data-bm-loop")
            ? _.getNamedItem("data-bm-loop").value
            : _.getNamedItem("bm-loop")
            ? _.getNamedItem("bm-loop").value
            : "";
          $ === "false"
            ? (s.loop = !1)
            : $ === "true"
            ? (s.loop = !0)
            : $ !== "" && (s.loop = parseInt($, 10));
          var et = _.getNamedItem("data-anim-autoplay")
            ? _.getNamedItem("data-anim-autoplay").value
            : _.getNamedItem("data-bm-autoplay")
            ? _.getNamedItem("data-bm-autoplay").value
            : _.getNamedItem("bm-autoplay")
            ? _.getNamedItem("bm-autoplay").value
            : !0;
          (s.autoplay = et !== "false"),
            (s.name = _.getNamedItem("data-name")
              ? _.getNamedItem("data-name").value
              : _.getNamedItem("data-bm-name")
              ? _.getNamedItem("data-bm-name").value
              : _.getNamedItem("bm-name")
              ? _.getNamedItem("bm-name").value
              : "");
          var tt = _.getNamedItem("data-anim-prerender")
            ? _.getNamedItem("data-anim-prerender").value
            : _.getNamedItem("data-bm-prerender")
            ? _.getNamedItem("data-bm-prerender").value
            : _.getNamedItem("bm-prerender")
            ? _.getNamedItem("bm-prerender").value
            : "";
          tt === "false" && (s.prerender = !1),
            s.path ? this.setParams(s) : this.trigger("destroy");
        }),
        (AnimationItem.prototype.includeLayers = function (a) {
          a.op > this.animationData.op &&
            ((this.animationData.op = a.op),
            (this.totalFrames = Math.floor(a.op - this.animationData.ip)));
          var o = this.animationData.layers,
            s,
            _ = o.length,
            $ = a.layers,
            et,
            tt = $.length;
          for (et = 0; et < tt; et += 1)
            for (s = 0; s < _; ) {
              if (o[s].id === $[et].id) {
                o[s] = $[et];
                break;
              }
              s += 1;
            }
          if (
            ((a.chars || a.fonts) &&
              (this.renderer.globalData.fontManager.addChars(a.chars),
              this.renderer.globalData.fontManager.addFonts(
                a.fonts,
                this.renderer.globalData.defs
              )),
            a.assets)
          )
            for (_ = a.assets.length, s = 0; s < _; s += 1)
              this.animationData.assets.push(a.assets[s]);
          (this.animationData.__complete = !1),
            dataManager.completeAnimation(
              this.animationData,
              this.onSegmentComplete
            );
        }),
        (AnimationItem.prototype.onSegmentComplete = function (a) {
          this.animationData = a;
          var o = getExpressionsPlugin();
          o && o.initExpressions(this), this.loadNextSegment();
        }),
        (AnimationItem.prototype.loadNextSegment = function () {
          var a = this.animationData.segments;
          if (!a || a.length === 0 || !this.autoloadSegments) {
            this.trigger("data_ready"), (this.timeCompleted = this.totalFrames);
            return;
          }
          var o = a.shift();
          this.timeCompleted = o.time * this.frameRate;
          var s = this.path + this.fileName + "_" + this.segmentPos + ".json";
          (this.segmentPos += 1),
            dataManager.loadData(
              s,
              this.includeLayers.bind(this),
              function () {
                this.trigger("data_failed");
              }.bind(this)
            );
        }),
        (AnimationItem.prototype.loadSegments = function () {
          var a = this.animationData.segments;
          a || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
        }),
        (AnimationItem.prototype.imagesLoaded = function () {
          this.trigger("loaded_images"), this.checkLoaded();
        }),
        (AnimationItem.prototype.preloadImages = function () {
          this.imagePreloader.setAssetsPath(this.assetsPath),
            this.imagePreloader.setPath(this.path),
            this.imagePreloader.loadAssets(
              this.animationData.assets,
              this.imagesLoaded.bind(this)
            );
        }),
        (AnimationItem.prototype.configAnimation = function (a) {
          if (this.renderer)
            try {
              (this.animationData = a),
                this.initialSegment
                  ? ((this.totalFrames = Math.floor(
                      this.initialSegment[1] - this.initialSegment[0]
                    )),
                    (this.firstFrame = Math.round(this.initialSegment[0])))
                  : ((this.totalFrames = Math.floor(
                      this.animationData.op - this.animationData.ip
                    )),
                    (this.firstFrame = Math.round(this.animationData.ip))),
                this.renderer.configAnimation(a),
                a.assets || (a.assets = []),
                (this.assets = this.animationData.assets),
                (this.frameRate = this.animationData.fr),
                (this.frameMult = this.animationData.fr / 1e3),
                this.renderer.searchExtraCompositions(a.assets),
                (this.markers = markerParser(a.markers || [])),
                this.trigger("config_ready"),
                this.preloadImages(),
                this.loadSegments(),
                this.updaFrameModifier(),
                this.waitForFontsLoaded(),
                this.isPaused && this.audioController.pause();
            } catch (o) {
              this.triggerConfigError(o);
            }
        }),
        (AnimationItem.prototype.waitForFontsLoaded = function () {
          this.renderer &&
            (this.renderer.globalData.fontManager.isLoaded
              ? this.checkLoaded()
              : setTimeout(this.waitForFontsLoaded.bind(this), 20));
        }),
        (AnimationItem.prototype.checkLoaded = function () {
          if (
            !this.isLoaded &&
            this.renderer.globalData.fontManager.isLoaded &&
            (this.imagePreloader.loadedImages() ||
              this.renderer.rendererType !== "canvas") &&
            this.imagePreloader.loadedFootages()
          ) {
            this.isLoaded = !0;
            var a = getExpressionsPlugin();
            a && a.initExpressions(this),
              this.renderer.initItems(),
              setTimeout(
                function () {
                  this.trigger("DOMLoaded");
                }.bind(this),
                0
              ),
              this.gotoFrame(),
              this.autoplay && this.play();
          }
        }),
        (AnimationItem.prototype.resize = function (a, o) {
          var s = typeof a == "number" ? a : void 0,
            _ = typeof o == "number" ? o : void 0;
          this.renderer.updateContainerSize(s, _);
        }),
        (AnimationItem.prototype.setSubframe = function (a) {
          this.isSubframeEnabled = !!a;
        }),
        (AnimationItem.prototype.gotoFrame = function () {
          (this.currentFrame = this.isSubframeEnabled
            ? this.currentRawFrame
            : ~~this.currentRawFrame),
            this.timeCompleted !== this.totalFrames &&
              this.currentFrame > this.timeCompleted &&
              (this.currentFrame = this.timeCompleted),
            this.trigger("enterFrame"),
            this.renderFrame(),
            this.trigger("drawnFrame");
        }),
        (AnimationItem.prototype.renderFrame = function () {
          if (!(this.isLoaded === !1 || !this.renderer))
            try {
              this.expressionsPlugin && this.expressionsPlugin.resetFrame(),
                this.renderer.renderFrame(this.currentFrame + this.firstFrame);
            } catch (a) {
              this.triggerRenderFrameError(a);
            }
        }),
        (AnimationItem.prototype.play = function (a) {
          (a && this.name !== a) ||
            (this.isPaused === !0 &&
              ((this.isPaused = !1),
              this.trigger("_play"),
              this.audioController.resume(),
              this._idle && ((this._idle = !1), this.trigger("_active"))));
        }),
        (AnimationItem.prototype.pause = function (a) {
          (a && this.name !== a) ||
            (this.isPaused === !1 &&
              ((this.isPaused = !0),
              this.trigger("_pause"),
              (this._idle = !0),
              this.trigger("_idle"),
              this.audioController.pause()));
        }),
        (AnimationItem.prototype.togglePause = function (a) {
          (a && this.name !== a) ||
            (this.isPaused === !0 ? this.play() : this.pause());
        }),
        (AnimationItem.prototype.stop = function (a) {
          (a && this.name !== a) ||
            (this.pause(),
            (this.playCount = 0),
            (this._completedLoop = !1),
            this.setCurrentRawFrameValue(0));
        }),
        (AnimationItem.prototype.getMarkerData = function (a) {
          for (var o, s = 0; s < this.markers.length; s += 1)
            if (((o = this.markers[s]), o.payload && o.payload.name === a))
              return o;
          return null;
        }),
        (AnimationItem.prototype.goToAndStop = function (a, o, s) {
          if (!(s && this.name !== s)) {
            var _ = Number(a);
            if (isNaN(_)) {
              var $ = this.getMarkerData(a);
              $ && this.goToAndStop($.time, !0);
            } else
              o
                ? this.setCurrentRawFrameValue(a)
                : this.setCurrentRawFrameValue(a * this.frameModifier);
            this.pause();
          }
        }),
        (AnimationItem.prototype.goToAndPlay = function (a, o, s) {
          if (!(s && this.name !== s)) {
            var _ = Number(a);
            if (isNaN(_)) {
              var $ = this.getMarkerData(a);
              $ &&
                ($.duration
                  ? this.playSegments([$.time, $.time + $.duration], !0)
                  : this.goToAndStop($.time, !0));
            } else this.goToAndStop(_, o, s);
            this.play();
          }
        }),
        (AnimationItem.prototype.advanceTime = function (a) {
          if (!(this.isPaused === !0 || this.isLoaded === !1)) {
            var o = this.currentRawFrame + a * this.frameModifier,
              s = !1;
            o >= this.totalFrames - 1 && this.frameModifier > 0
              ? !this.loop || this.playCount === this.loop
                ? this.checkSegments(
                    o > this.totalFrames ? o % this.totalFrames : 0
                  ) || ((s = !0), (o = this.totalFrames - 1))
                : o >= this.totalFrames
                ? ((this.playCount += 1),
                  this.checkSegments(o % this.totalFrames) ||
                    (this.setCurrentRawFrameValue(o % this.totalFrames),
                    (this._completedLoop = !0),
                    this.trigger("loopComplete")))
                : this.setCurrentRawFrameValue(o)
              : o < 0
              ? this.checkSegments(o % this.totalFrames) ||
                (this.loop && !(this.playCount-- <= 0 && this.loop !== !0)
                  ? (this.setCurrentRawFrameValue(
                      this.totalFrames + (o % this.totalFrames)
                    ),
                    this._completedLoop
                      ? this.trigger("loopComplete")
                      : (this._completedLoop = !0))
                  : ((s = !0), (o = 0)))
              : this.setCurrentRawFrameValue(o),
              s &&
                (this.setCurrentRawFrameValue(o),
                this.pause(),
                this.trigger("complete"));
          }
        }),
        (AnimationItem.prototype.adjustSegment = function (a, o) {
          (this.playCount = 0),
            a[1] < a[0]
              ? (this.frameModifier > 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(-1)),
                (this.totalFrames = a[0] - a[1]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = a[1]),
                this.setCurrentRawFrameValue(this.totalFrames - 0.001 - o))
              : a[1] > a[0] &&
                (this.frameModifier < 0 &&
                  (this.playSpeed < 0
                    ? this.setSpeed(-this.playSpeed)
                    : this.setDirection(1)),
                (this.totalFrames = a[1] - a[0]),
                (this.timeCompleted = this.totalFrames),
                (this.firstFrame = a[0]),
                this.setCurrentRawFrameValue(0.001 + o)),
            this.trigger("segmentStart");
        }),
        (AnimationItem.prototype.setSegment = function (a, o) {
          var s = -1;
          this.isPaused &&
            (this.currentRawFrame + this.firstFrame < a
              ? (s = a)
              : this.currentRawFrame + this.firstFrame > o && (s = o - a)),
            (this.firstFrame = a),
            (this.totalFrames = o - a),
            (this.timeCompleted = this.totalFrames),
            s !== -1 && this.goToAndStop(s, !0);
        }),
        (AnimationItem.prototype.playSegments = function (a, o) {
          if ((o && (this.segments.length = 0), _typeof$4(a[0]) === "object")) {
            var s,
              _ = a.length;
            for (s = 0; s < _; s += 1) this.segments.push(a[s]);
          } else this.segments.push(a);
          this.segments.length &&
            o &&
            this.adjustSegment(this.segments.shift(), 0),
            this.isPaused && this.play();
        }),
        (AnimationItem.prototype.resetSegments = function (a) {
          (this.segments.length = 0),
            this.segments.push([this.animationData.ip, this.animationData.op]),
            a && this.checkSegments(0);
        }),
        (AnimationItem.prototype.checkSegments = function (a) {
          return this.segments.length
            ? (this.adjustSegment(this.segments.shift(), a), !0)
            : !1;
        }),
        (AnimationItem.prototype.destroy = function (a) {
          (a && this.name !== a) ||
            !this.renderer ||
            (this.renderer.destroy(),
            this.imagePreloader.destroy(),
            this.trigger("destroy"),
            (this._cbs = null),
            (this.onEnterFrame = null),
            (this.onLoopComplete = null),
            (this.onComplete = null),
            (this.onSegmentStart = null),
            (this.onDestroy = null),
            (this.renderer = null),
            (this.expressionsPlugin = null),
            (this.imagePreloader = null),
            (this.projectInterface = null));
        }),
        (AnimationItem.prototype.setCurrentRawFrameValue = function (a) {
          (this.currentRawFrame = a), this.gotoFrame();
        }),
        (AnimationItem.prototype.setSpeed = function (a) {
          (this.playSpeed = a), this.updaFrameModifier();
        }),
        (AnimationItem.prototype.setDirection = function (a) {
          (this.playDirection = a < 0 ? -1 : 1), this.updaFrameModifier();
        }),
        (AnimationItem.prototype.setLoop = function (a) {
          this.loop = a;
        }),
        (AnimationItem.prototype.setVolume = function (a, o) {
          (o && this.name !== o) || this.audioController.setVolume(a);
        }),
        (AnimationItem.prototype.getVolume = function () {
          return this.audioController.getVolume();
        }),
        (AnimationItem.prototype.mute = function (a) {
          (a && this.name !== a) || this.audioController.mute();
        }),
        (AnimationItem.prototype.unmute = function (a) {
          (a && this.name !== a) || this.audioController.unmute();
        }),
        (AnimationItem.prototype.updaFrameModifier = function () {
          (this.frameModifier =
            this.frameMult * this.playSpeed * this.playDirection),
            this.audioController.setRate(this.playSpeed * this.playDirection);
        }),
        (AnimationItem.prototype.getPath = function () {
          return this.path;
        }),
        (AnimationItem.prototype.getAssetsPath = function (a) {
          var o = "";
          if (a.e) o = a.p;
          else if (this.assetsPath) {
            var s = a.p;
            s.indexOf("images/") !== -1 && (s = s.split("/")[1]),
              (o = this.assetsPath + s);
          } else (o = this.path), (o += a.u ? a.u : ""), (o += a.p);
          return o;
        }),
        (AnimationItem.prototype.getAssetData = function (a) {
          for (var o = 0, s = this.assets.length; o < s; ) {
            if (a === this.assets[o].id) return this.assets[o];
            o += 1;
          }
          return null;
        }),
        (AnimationItem.prototype.hide = function () {
          this.renderer.hide();
        }),
        (AnimationItem.prototype.show = function () {
          this.renderer.show();
        }),
        (AnimationItem.prototype.getDuration = function (a) {
          return a ? this.totalFrames : this.totalFrames / this.frameRate;
        }),
        (AnimationItem.prototype.updateDocumentData = function (a, o, s) {
          try {
            var _ = this.renderer.getElementByPath(a);
            _.updateDocumentData(o, s);
          } catch {}
        }),
        (AnimationItem.prototype.trigger = function (a) {
          if (this._cbs && this._cbs[a])
            switch (a) {
              case "enterFrame":
                this.triggerEvent(
                  a,
                  new BMEnterFrameEvent(
                    a,
                    this.currentFrame,
                    this.totalFrames,
                    this.frameModifier
                  )
                );
                break;
              case "drawnFrame":
                (this.drawnFrameEvent.currentTime = this.currentFrame),
                  (this.drawnFrameEvent.totalTime = this.totalFrames),
                  (this.drawnFrameEvent.direction = this.frameModifier),
                  this.triggerEvent(a, this.drawnFrameEvent);
                break;
              case "loopComplete":
                this.triggerEvent(
                  a,
                  new BMCompleteLoopEvent(
                    a,
                    this.loop,
                    this.playCount,
                    this.frameMult
                  )
                );
                break;
              case "complete":
                this.triggerEvent(a, new BMCompleteEvent(a, this.frameMult));
                break;
              case "segmentStart":
                this.triggerEvent(
                  a,
                  new BMSegmentStartEvent(a, this.firstFrame, this.totalFrames)
                );
                break;
              case "destroy":
                this.triggerEvent(a, new BMDestroyEvent(a, this));
                break;
              default:
                this.triggerEvent(a);
            }
          a === "enterFrame" &&
            this.onEnterFrame &&
            this.onEnterFrame.call(
              this,
              new BMEnterFrameEvent(
                a,
                this.currentFrame,
                this.totalFrames,
                this.frameMult
              )
            ),
            a === "loopComplete" &&
              this.onLoopComplete &&
              this.onLoopComplete.call(
                this,
                new BMCompleteLoopEvent(
                  a,
                  this.loop,
                  this.playCount,
                  this.frameMult
                )
              ),
            a === "complete" &&
              this.onComplete &&
              this.onComplete.call(
                this,
                new BMCompleteEvent(a, this.frameMult)
              ),
            a === "segmentStart" &&
              this.onSegmentStart &&
              this.onSegmentStart.call(
                this,
                new BMSegmentStartEvent(a, this.firstFrame, this.totalFrames)
              ),
            a === "destroy" &&
              this.onDestroy &&
              this.onDestroy.call(this, new BMDestroyEvent(a, this));
        }),
        (AnimationItem.prototype.triggerRenderFrameError = function (a) {
          var o = new BMRenderFrameErrorEvent(a, this.currentFrame);
          this.triggerEvent("error", o),
            this.onError && this.onError.call(this, o);
        }),
        (AnimationItem.prototype.triggerConfigError = function (a) {
          var o = new BMConfigErrorEvent(a, this.currentFrame);
          this.triggerEvent("error", o),
            this.onError && this.onError.call(this, o);
        });
      var animationManager = (function () {
          var a = {},
            o = [],
            s = 0,
            _ = 0,
            $ = 0,
            et = !0,
            tt = !1;
          function rt(Et) {
            for (var kt = 0, gt = Et.target; kt < _; )
              o[kt].animation === gt &&
                (o.splice(kt, 1), (kt -= 1), (_ -= 1), gt.isPaused || st()),
                (kt += 1);
          }
          function nt(Et, kt) {
            if (!Et) return null;
            for (var gt = 0; gt < _; ) {
              if (o[gt].elem === Et && o[gt].elem !== null)
                return o[gt].animation;
              gt += 1;
            }
            var yt = new AnimationItem();
            return ot(yt, Et), yt.setData(Et, kt), yt;
          }
          function it() {
            var Et,
              kt = o.length,
              gt = [];
            for (Et = 0; Et < kt; Et += 1) gt.push(o[Et].animation);
            return gt;
          }
          function at() {
            ($ += 1), Mt();
          }
          function st() {
            $ -= 1;
          }
          function ot(Et, kt) {
            Et.addEventListener("destroy", rt),
              Et.addEventListener("_active", at),
              Et.addEventListener("_idle", st),
              o.push({ elem: kt, animation: Et }),
              (_ += 1);
          }
          function dt(Et) {
            var kt = new AnimationItem();
            return ot(kt, null), kt.setParams(Et), kt;
          }
          function ht(Et, kt) {
            var gt;
            for (gt = 0; gt < _; gt += 1) o[gt].animation.setSpeed(Et, kt);
          }
          function ft(Et, kt) {
            var gt;
            for (gt = 0; gt < _; gt += 1) o[gt].animation.setDirection(Et, kt);
          }
          function mt(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.play(Et);
          }
          function ut(Et) {
            var kt = Et - s,
              gt;
            for (gt = 0; gt < _; gt += 1) o[gt].animation.advanceTime(kt);
            (s = Et), $ && !tt ? window.requestAnimationFrame(ut) : (et = !0);
          }
          function lt(Et) {
            (s = Et), window.requestAnimationFrame(ut);
          }
          function ct(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.pause(Et);
          }
          function pt(Et, kt, gt) {
            var yt;
            for (yt = 0; yt < _; yt += 1)
              o[yt].animation.goToAndStop(Et, kt, gt);
          }
          function vt(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.stop(Et);
          }
          function xt(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.togglePause(Et);
          }
          function bt(Et) {
            var kt;
            for (kt = _ - 1; kt >= 0; kt -= 1) o[kt].animation.destroy(Et);
          }
          function St(Et, kt, gt) {
            var yt = [].concat(
                [].slice.call(document.getElementsByClassName("lottie")),
                [].slice.call(document.getElementsByClassName("bodymovin"))
              ),
              wt,
              _t = yt.length;
            for (wt = 0; wt < _t; wt += 1)
              gt && yt[wt].setAttribute("data-bm-type", gt), nt(yt[wt], Et);
            if (kt && _t === 0) {
              gt || (gt = "svg");
              var Ft = document.getElementsByTagName("body")[0];
              Ft.innerText = "";
              var Vt = createTag("div");
              (Vt.style.width = "100%"),
                (Vt.style.height = "100%"),
                Vt.setAttribute("data-bm-type", gt),
                Ft.appendChild(Vt),
                nt(Vt, Et);
            }
          }
          function Pt() {
            var Et;
            for (Et = 0; Et < _; Et += 1) o[Et].animation.resize();
          }
          function Mt() {
            !tt && $ && et && (window.requestAnimationFrame(lt), (et = !1));
          }
          function It() {
            tt = !0;
          }
          function Rt() {
            (tt = !1), Mt();
          }
          function jt(Et, kt) {
            var gt;
            for (gt = 0; gt < _; gt += 1) o[gt].animation.setVolume(Et, kt);
          }
          function Dt(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.mute(Et);
          }
          function At(Et) {
            var kt;
            for (kt = 0; kt < _; kt += 1) o[kt].animation.unmute(Et);
          }
          return (
            (a.registerAnimation = nt),
            (a.loadAnimation = dt),
            (a.setSpeed = ht),
            (a.setDirection = ft),
            (a.play = mt),
            (a.pause = ct),
            (a.stop = vt),
            (a.togglePause = xt),
            (a.searchAnimations = St),
            (a.resize = Pt),
            (a.goToAndStop = pt),
            (a.destroy = bt),
            (a.freeze = It),
            (a.unfreeze = Rt),
            (a.setVolume = jt),
            (a.mute = Dt),
            (a.unmute = At),
            (a.getRegisteredAnimations = it),
            a
          );
        })(),
        BezierFactory = (function () {
          var a = {};
          a.getBezierEasing = s;
          var o = {};
          function s(lt, ct, pt, vt, xt) {
            var bt =
              xt ||
              ("bez_" + lt + "_" + ct + "_" + pt + "_" + vt).replace(
                /\./g,
                "p"
              );
            if (o[bt]) return o[bt];
            var St = new ut([lt, ct, pt, vt]);
            return (o[bt] = St), St;
          }
          var _ = 4,
            $ = 0.001,
            et = 1e-7,
            tt = 10,
            rt = 11,
            nt = 1 / (rt - 1),
            it = typeof Float32Array == "function";
          function at(lt, ct) {
            return 1 - 3 * ct + 3 * lt;
          }
          function st(lt, ct) {
            return 3 * ct - 6 * lt;
          }
          function ot(lt) {
            return 3 * lt;
          }
          function dt(lt, ct, pt) {
            return ((at(ct, pt) * lt + st(ct, pt)) * lt + ot(ct)) * lt;
          }
          function ht(lt, ct, pt) {
            return 3 * at(ct, pt) * lt * lt + 2 * st(ct, pt) * lt + ot(ct);
          }
          function ft(lt, ct, pt, vt, xt) {
            var bt,
              St,
              Pt = 0;
            do
              (St = ct + (pt - ct) / 2),
                (bt = dt(St, vt, xt) - lt),
                bt > 0 ? (pt = St) : (ct = St);
            while (Math.abs(bt) > et && ++Pt < tt);
            return St;
          }
          function mt(lt, ct, pt, vt) {
            for (var xt = 0; xt < _; ++xt) {
              var bt = ht(ct, pt, vt);
              if (bt === 0) return ct;
              var St = dt(ct, pt, vt) - lt;
              ct -= St / bt;
            }
            return ct;
          }
          function ut(lt) {
            (this._p = lt),
              (this._mSampleValues = it ? new Float32Array(rt) : new Array(rt)),
              (this._precomputed = !1),
              (this.get = this.get.bind(this));
          }
          return (
            (ut.prototype = {
              get: function (ct) {
                var pt = this._p[0],
                  vt = this._p[1],
                  xt = this._p[2],
                  bt = this._p[3];
                return (
                  this._precomputed || this._precompute(),
                  pt === vt && xt === bt
                    ? ct
                    : ct === 0
                    ? 0
                    : ct === 1
                    ? 1
                    : dt(this._getTForX(ct), vt, bt)
                );
              },
              _precompute: function () {
                var ct = this._p[0],
                  pt = this._p[1],
                  vt = this._p[2],
                  xt = this._p[3];
                (this._precomputed = !0),
                  (ct !== pt || vt !== xt) && this._calcSampleValues();
              },
              _calcSampleValues: function () {
                for (
                  var ct = this._p[0], pt = this._p[2], vt = 0;
                  vt < rt;
                  ++vt
                )
                  this._mSampleValues[vt] = dt(vt * nt, ct, pt);
              },
              _getTForX: function (ct) {
                for (
                  var pt = this._p[0],
                    vt = this._p[2],
                    xt = this._mSampleValues,
                    bt = 0,
                    St = 1,
                    Pt = rt - 1;
                  St !== Pt && xt[St] <= ct;
                  ++St
                )
                  bt += nt;
                --St;
                var Mt = (ct - xt[St]) / (xt[St + 1] - xt[St]),
                  It = bt + Mt * nt,
                  Rt = ht(It, pt, vt);
                return Rt >= $
                  ? mt(ct, It, pt, vt)
                  : Rt === 0
                  ? It
                  : ft(ct, bt, bt + nt, pt, vt);
              },
            }),
            a
          );
        })(),
        pooling = (function () {
          function a(o) {
            return o.concat(createSizedArray(o.length));
          }
          return { double: a };
        })(),
        poolFactory = (function () {
          return function (a, o, s) {
            var _ = 0,
              $ = a,
              et = createSizedArray($),
              tt = { newElement: rt, release: nt };
            function rt() {
              var it;
              return _ ? ((_ -= 1), (it = et[_])) : (it = o()), it;
            }
            function nt(it) {
              _ === $ && ((et = pooling.double(et)), ($ *= 2)),
                s && s(it),
                (et[_] = it),
                (_ += 1);
            }
            return tt;
          };
        })(),
        bezierLengthPool = (function () {
          function a() {
            return {
              addedLength: 0,
              percents: createTypedArray("float32", getDefaultCurveSegments()),
              lengths: createTypedArray("float32", getDefaultCurveSegments()),
            };
          }
          return poolFactory(8, a);
        })(),
        segmentsLengthPool = (function () {
          function a() {
            return { lengths: [], totalLength: 0 };
          }
          function o(s) {
            var _,
              $ = s.lengths.length;
            for (_ = 0; _ < $; _ += 1) bezierLengthPool.release(s.lengths[_]);
            s.lengths.length = 0;
          }
          return poolFactory(8, a, o);
        })();
      function bezFunction() {
        var a = Math;
        function o(ot, dt, ht, ft, mt, ut) {
          var lt = ot * ft + dt * mt + ht * ut - mt * ft - ut * ot - ht * dt;
          return lt > -0.001 && lt < 0.001;
        }
        function s(ot, dt, ht, ft, mt, ut, lt, ct, pt) {
          if (ht === 0 && ut === 0 && pt === 0)
            return o(ot, dt, ft, mt, lt, ct);
          var vt = a.sqrt(
              a.pow(ft - ot, 2) + a.pow(mt - dt, 2) + a.pow(ut - ht, 2)
            ),
            xt = a.sqrt(
              a.pow(lt - ot, 2) + a.pow(ct - dt, 2) + a.pow(pt - ht, 2)
            ),
            bt = a.sqrt(
              a.pow(lt - ft, 2) + a.pow(ct - mt, 2) + a.pow(pt - ut, 2)
            ),
            St;
          return (
            vt > xt
              ? vt > bt
                ? (St = vt - xt - bt)
                : (St = bt - xt - vt)
              : bt > xt
              ? (St = bt - xt - vt)
              : (St = xt - vt - bt),
            St > -1e-4 && St < 1e-4
          );
        }
        var _ = (function () {
          return function (ot, dt, ht, ft) {
            var mt = getDefaultCurveSegments(),
              ut,
              lt,
              ct,
              pt,
              vt,
              xt = 0,
              bt,
              St = [],
              Pt = [],
              Mt = bezierLengthPool.newElement();
            for (ct = ht.length, ut = 0; ut < mt; ut += 1) {
              for (vt = ut / (mt - 1), bt = 0, lt = 0; lt < ct; lt += 1)
                (pt =
                  bmPow(1 - vt, 3) * ot[lt] +
                  3 * bmPow(1 - vt, 2) * vt * ht[lt] +
                  3 * (1 - vt) * bmPow(vt, 2) * ft[lt] +
                  bmPow(vt, 3) * dt[lt]),
                  (St[lt] = pt),
                  Pt[lt] !== null && (bt += bmPow(St[lt] - Pt[lt], 2)),
                  (Pt[lt] = St[lt]);
              bt && ((bt = bmSqrt(bt)), (xt += bt)),
                (Mt.percents[ut] = vt),
                (Mt.lengths[ut] = xt);
            }
            return (Mt.addedLength = xt), Mt;
          };
        })();
        function $(ot) {
          var dt = segmentsLengthPool.newElement(),
            ht = ot.c,
            ft = ot.v,
            mt = ot.o,
            ut = ot.i,
            lt,
            ct = ot._length,
            pt = dt.lengths,
            vt = 0;
          for (lt = 0; lt < ct - 1; lt += 1)
            (pt[lt] = _(ft[lt], ft[lt + 1], mt[lt], ut[lt + 1])),
              (vt += pt[lt].addedLength);
          return (
            ht &&
              ct &&
              ((pt[lt] = _(ft[lt], ft[0], mt[lt], ut[0])),
              (vt += pt[lt].addedLength)),
            (dt.totalLength = vt),
            dt
          );
        }
        function et(ot) {
          (this.segmentLength = 0), (this.points = new Array(ot));
        }
        function tt(ot, dt) {
          (this.partialLength = ot), (this.point = dt);
        }
        var rt = (function () {
          var ot = {};
          return function (dt, ht, ft, mt) {
            var ut = (
              dt[0] +
              "_" +
              dt[1] +
              "_" +
              ht[0] +
              "_" +
              ht[1] +
              "_" +
              ft[0] +
              "_" +
              ft[1] +
              "_" +
              mt[0] +
              "_" +
              mt[1]
            ).replace(/\./g, "p");
            if (!ot[ut]) {
              var lt = getDefaultCurveSegments(),
                ct,
                pt,
                vt,
                xt,
                bt,
                St = 0,
                Pt,
                Mt,
                It = null;
              dt.length === 2 &&
                (dt[0] !== ht[0] || dt[1] !== ht[1]) &&
                o(dt[0], dt[1], ht[0], ht[1], dt[0] + ft[0], dt[1] + ft[1]) &&
                o(dt[0], dt[1], ht[0], ht[1], ht[0] + mt[0], ht[1] + mt[1]) &&
                (lt = 2);
              var Rt = new et(lt);
              for (vt = ft.length, ct = 0; ct < lt; ct += 1) {
                for (
                  Mt = createSizedArray(vt), bt = ct / (lt - 1), Pt = 0, pt = 0;
                  pt < vt;
                  pt += 1
                )
                  (xt =
                    bmPow(1 - bt, 3) * dt[pt] +
                    3 * bmPow(1 - bt, 2) * bt * (dt[pt] + ft[pt]) +
                    3 * (1 - bt) * bmPow(bt, 2) * (ht[pt] + mt[pt]) +
                    bmPow(bt, 3) * ht[pt]),
                    (Mt[pt] = xt),
                    It !== null && (Pt += bmPow(Mt[pt] - It[pt], 2));
                (Pt = bmSqrt(Pt)),
                  (St += Pt),
                  (Rt.points[ct] = new tt(Pt, Mt)),
                  (It = Mt);
              }
              (Rt.segmentLength = St), (ot[ut] = Rt);
            }
            return ot[ut];
          };
        })();
        function nt(ot, dt) {
          var ht = dt.percents,
            ft = dt.lengths,
            mt = ht.length,
            ut = bmFloor((mt - 1) * ot),
            lt = ot * dt.addedLength,
            ct = 0;
          if (ut === mt - 1 || ut === 0 || lt === ft[ut]) return ht[ut];
          for (var pt = ft[ut] > lt ? -1 : 1, vt = !0; vt; )
            if (
              (ft[ut] <= lt && ft[ut + 1] > lt
                ? ((ct = (lt - ft[ut]) / (ft[ut + 1] - ft[ut])), (vt = !1))
                : (ut += pt),
              ut < 0 || ut >= mt - 1)
            ) {
              if (ut === mt - 1) return ht[ut];
              vt = !1;
            }
          return ht[ut] + (ht[ut + 1] - ht[ut]) * ct;
        }
        function it(ot, dt, ht, ft, mt, ut) {
          var lt = nt(mt, ut),
            ct = 1 - lt,
            pt =
              a.round(
                (ct * ct * ct * ot[0] +
                  (lt * ct * ct + ct * lt * ct + ct * ct * lt) * ht[0] +
                  (lt * lt * ct + ct * lt * lt + lt * ct * lt) * ft[0] +
                  lt * lt * lt * dt[0]) *
                  1e3
              ) / 1e3,
            vt =
              a.round(
                (ct * ct * ct * ot[1] +
                  (lt * ct * ct + ct * lt * ct + ct * ct * lt) * ht[1] +
                  (lt * lt * ct + ct * lt * lt + lt * ct * lt) * ft[1] +
                  lt * lt * lt * dt[1]) *
                  1e3
              ) / 1e3;
          return [pt, vt];
        }
        var at = createTypedArray("float32", 8);
        function st(ot, dt, ht, ft, mt, ut, lt) {
          mt < 0 ? (mt = 0) : mt > 1 && (mt = 1);
          var ct = nt(mt, lt);
          ut = ut > 1 ? 1 : ut;
          var pt = nt(ut, lt),
            vt,
            xt = ot.length,
            bt = 1 - ct,
            St = 1 - pt,
            Pt = bt * bt * bt,
            Mt = ct * bt * bt * 3,
            It = ct * ct * bt * 3,
            Rt = ct * ct * ct,
            jt = bt * bt * St,
            Dt = ct * bt * St + bt * ct * St + bt * bt * pt,
            At = ct * ct * St + bt * ct * pt + ct * bt * pt,
            Et = ct * ct * pt,
            kt = bt * St * St,
            gt = ct * St * St + bt * pt * St + bt * St * pt,
            yt = ct * pt * St + bt * pt * pt + ct * St * pt,
            wt = ct * pt * pt,
            _t = St * St * St,
            Ft = pt * St * St + St * pt * St + St * St * pt,
            Vt = pt * pt * St + St * pt * pt + pt * St * pt,
            Lt = pt * pt * pt;
          for (vt = 0; vt < xt; vt += 1)
            (at[vt * 4] =
              a.round(
                (Pt * ot[vt] + Mt * ht[vt] + It * ft[vt] + Rt * dt[vt]) * 1e3
              ) / 1e3),
              (at[vt * 4 + 1] =
                a.round(
                  (jt * ot[vt] + Dt * ht[vt] + At * ft[vt] + Et * dt[vt]) * 1e3
                ) / 1e3),
              (at[vt * 4 + 2] =
                a.round(
                  (kt * ot[vt] + gt * ht[vt] + yt * ft[vt] + wt * dt[vt]) * 1e3
                ) / 1e3),
              (at[vt * 4 + 3] =
                a.round(
                  (_t * ot[vt] + Ft * ht[vt] + Vt * ft[vt] + Lt * dt[vt]) * 1e3
                ) / 1e3);
          return at;
        }
        return {
          getSegmentsLength: $,
          getNewSegment: st,
          getPointInSegment: it,
          buildBezierData: rt,
          pointOnLine2D: o,
          pointOnLine3D: s,
        };
      }
      var bez = bezFunction(),
        initFrame = initialDefaultFrame,
        mathAbs = Math.abs;
      function interpolateValue(a, o) {
        var s = this.offsetTime,
          _;
        this.propType === "multidimensional" &&
          (_ = createTypedArray("float32", this.pv.length));
        for (
          var $ = o.lastIndex,
            et = $,
            tt = this.keyframes.length - 1,
            rt = !0,
            nt,
            it,
            at;
          rt;

        ) {
          if (
            ((nt = this.keyframes[et]),
            (it = this.keyframes[et + 1]),
            et === tt - 1 && a >= it.t - s)
          ) {
            nt.h && (nt = it), ($ = 0);
            break;
          }
          if (it.t - s > a) {
            $ = et;
            break;
          }
          et < tt - 1 ? (et += 1) : (($ = 0), (rt = !1));
        }
        at = this.keyframesMetadata[et] || {};
        var st,
          ot,
          dt,
          ht,
          ft,
          mt,
          ut = it.t - s,
          lt = nt.t - s,
          ct;
        if (nt.to) {
          at.bezierData ||
            (at.bezierData = bez.buildBezierData(
              nt.s,
              it.s || nt.e,
              nt.to,
              nt.ti
            ));
          var pt = at.bezierData;
          if (a >= ut || a < lt) {
            var vt = a >= ut ? pt.points.length - 1 : 0;
            for (ot = pt.points[vt].point.length, st = 0; st < ot; st += 1)
              _[st] = pt.points[vt].point[st];
          } else {
            at.__fnct
              ? (mt = at.__fnct)
              : ((mt = BezierFactory.getBezierEasing(
                  nt.o.x,
                  nt.o.y,
                  nt.i.x,
                  nt.i.y,
                  nt.n
                ).get),
                (at.__fnct = mt)),
              (dt = mt((a - lt) / (ut - lt)));
            var xt = pt.segmentLength * dt,
              bt,
              St =
                o.lastFrame < a && o._lastKeyframeIndex === et
                  ? o._lastAddedLength
                  : 0;
            for (
              ft =
                o.lastFrame < a && o._lastKeyframeIndex === et
                  ? o._lastPoint
                  : 0,
                rt = !0,
                ht = pt.points.length;
              rt;

            ) {
              if (
                ((St += pt.points[ft].partialLength),
                xt === 0 || dt === 0 || ft === pt.points.length - 1)
              ) {
                for (ot = pt.points[ft].point.length, st = 0; st < ot; st += 1)
                  _[st] = pt.points[ft].point[st];
                break;
              } else if (
                xt >= St &&
                xt < St + pt.points[ft + 1].partialLength
              ) {
                for (
                  bt = (xt - St) / pt.points[ft + 1].partialLength,
                    ot = pt.points[ft].point.length,
                    st = 0;
                  st < ot;
                  st += 1
                )
                  _[st] =
                    pt.points[ft].point[st] +
                    (pt.points[ft + 1].point[st] - pt.points[ft].point[st]) *
                      bt;
                break;
              }
              ft < ht - 1 ? (ft += 1) : (rt = !1);
            }
            (o._lastPoint = ft),
              (o._lastAddedLength = St - pt.points[ft].partialLength),
              (o._lastKeyframeIndex = et);
          }
        } else {
          var Pt, Mt, It, Rt, jt;
          if (((tt = nt.s.length), (ct = it.s || nt.e), this.sh && nt.h !== 1))
            if (a >= ut) (_[0] = ct[0]), (_[1] = ct[1]), (_[2] = ct[2]);
            else if (a <= lt)
              (_[0] = nt.s[0]), (_[1] = nt.s[1]), (_[2] = nt.s[2]);
            else {
              var Dt = createQuaternion(nt.s),
                At = createQuaternion(ct),
                Et = (a - lt) / (ut - lt);
              quaternionToEuler(_, slerp(Dt, At, Et));
            }
          else
            for (et = 0; et < tt; et += 1)
              nt.h !== 1 &&
                (a >= ut
                  ? (dt = 1)
                  : a < lt
                  ? (dt = 0)
                  : (nt.o.x.constructor === Array
                      ? (at.__fnct || (at.__fnct = []),
                        at.__fnct[et]
                          ? (mt = at.__fnct[et])
                          : ((Pt =
                              nt.o.x[et] === void 0 ? nt.o.x[0] : nt.o.x[et]),
                            (Mt =
                              nt.o.y[et] === void 0 ? nt.o.y[0] : nt.o.y[et]),
                            (It =
                              nt.i.x[et] === void 0 ? nt.i.x[0] : nt.i.x[et]),
                            (Rt =
                              nt.i.y[et] === void 0 ? nt.i.y[0] : nt.i.y[et]),
                            (mt = BezierFactory.getBezierEasing(
                              Pt,
                              Mt,
                              It,
                              Rt
                            ).get),
                            (at.__fnct[et] = mt)))
                      : at.__fnct
                      ? (mt = at.__fnct)
                      : ((Pt = nt.o.x),
                        (Mt = nt.o.y),
                        (It = nt.i.x),
                        (Rt = nt.i.y),
                        (mt = BezierFactory.getBezierEasing(
                          Pt,
                          Mt,
                          It,
                          Rt
                        ).get),
                        (nt.keyframeMetadata = mt)),
                    (dt = mt((a - lt) / (ut - lt))))),
                (ct = it.s || nt.e),
                (jt =
                  nt.h === 1 ? nt.s[et] : nt.s[et] + (ct[et] - nt.s[et]) * dt),
                this.propType === "multidimensional" ? (_[et] = jt) : (_ = jt);
        }
        return (o.lastIndex = $), _;
      }
      function slerp(a, o, s) {
        var _ = [],
          $ = a[0],
          et = a[1],
          tt = a[2],
          rt = a[3],
          nt = o[0],
          it = o[1],
          at = o[2],
          st = o[3],
          ot,
          dt,
          ht,
          ft,
          mt;
        return (
          (dt = $ * nt + et * it + tt * at + rt * st),
          dt < 0 &&
            ((dt = -dt), (nt = -nt), (it = -it), (at = -at), (st = -st)),
          1 - dt > 1e-6
            ? ((ot = Math.acos(dt)),
              (ht = Math.sin(ot)),
              (ft = Math.sin((1 - s) * ot) / ht),
              (mt = Math.sin(s * ot) / ht))
            : ((ft = 1 - s), (mt = s)),
          (_[0] = ft * $ + mt * nt),
          (_[1] = ft * et + mt * it),
          (_[2] = ft * tt + mt * at),
          (_[3] = ft * rt + mt * st),
          _
        );
      }
      function quaternionToEuler(a, o) {
        var s = o[0],
          _ = o[1],
          $ = o[2],
          et = o[3],
          tt = Math.atan2(2 * _ * et - 2 * s * $, 1 - 2 * _ * _ - 2 * $ * $),
          rt = Math.asin(2 * s * _ + 2 * $ * et),
          nt = Math.atan2(2 * s * et - 2 * _ * $, 1 - 2 * s * s - 2 * $ * $);
        (a[0] = tt / degToRads),
          (a[1] = rt / degToRads),
          (a[2] = nt / degToRads);
      }
      function createQuaternion(a) {
        var o = a[0] * degToRads,
          s = a[1] * degToRads,
          _ = a[2] * degToRads,
          $ = Math.cos(o / 2),
          et = Math.cos(s / 2),
          tt = Math.cos(_ / 2),
          rt = Math.sin(o / 2),
          nt = Math.sin(s / 2),
          it = Math.sin(_ / 2),
          at = $ * et * tt - rt * nt * it,
          st = rt * nt * tt + $ * et * it,
          ot = rt * et * tt + $ * nt * it,
          dt = $ * nt * tt - rt * et * it;
        return [st, ot, dt, at];
      }
      function getValueAtCurrentTime() {
        var a = this.comp.renderedFrame - this.offsetTime,
          o = this.keyframes[0].t - this.offsetTime,
          s = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        if (
          !(
            a === this._caching.lastFrame ||
            (this._caching.lastFrame !== initFrame &&
              ((this._caching.lastFrame >= s && a >= s) ||
                (this._caching.lastFrame < o && a < o)))
          )
        ) {
          this._caching.lastFrame >= a &&
            ((this._caching._lastKeyframeIndex = -1),
            (this._caching.lastIndex = 0));
          var _ = this.interpolateValue(a, this._caching);
          this.pv = _;
        }
        return (this._caching.lastFrame = a), this.pv;
      }
      function setVValue(a) {
        var o;
        if (this.propType === "unidimensional")
          (o = a * this.mult),
            mathAbs(this.v - o) > 1e-5 && ((this.v = o), (this._mdf = !0));
        else
          for (var s = 0, _ = this.v.length; s < _; )
            (o = a[s] * this.mult),
              mathAbs(this.v[s] - o) > 1e-5 &&
                ((this.v[s] = o), (this._mdf = !0)),
              (s += 1);
      }
      function processEffectsSequence() {
        if (
          !(
            this.elem.globalData.frameId === this.frameId ||
            !this.effectsSequence.length
          )
        ) {
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          (this.lock = !0), (this._mdf = this._isFirstFrame);
          var a,
            o = this.effectsSequence.length,
            s = this.kf ? this.pv : this.data.k;
          for (a = 0; a < o; a += 1) s = this.effectsSequence[a](s);
          this.setVValue(s),
            (this._isFirstFrame = !1),
            (this.lock = !1),
            (this.frameId = this.elem.globalData.frameId);
        }
      }
      function addEffect(a) {
        this.effectsSequence.push(a), this.container.addDynamicProperty(this);
      }
      function ValueProperty(a, o, s, _) {
        (this.propType = "unidimensional"),
          (this.mult = s || 1),
          (this.data = o),
          (this.v = s ? o.k * s : o.k),
          (this.pv = o.k),
          (this._mdf = !1),
          (this.elem = a),
          (this.container = _),
          (this.comp = a.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.vel = 0),
          (this.effectsSequence = []),
          (this._isFirstFrame = !0),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.addEffect = addEffect);
      }
      function MultiDimensionalProperty(a, o, s, _) {
        (this.propType = "multidimensional"),
          (this.mult = s || 1),
          (this.data = o),
          (this._mdf = !1),
          (this.elem = a),
          (this.container = _),
          (this.comp = a.comp),
          (this.k = !1),
          (this.kf = !1),
          (this.frameId = -1);
        var $,
          et = o.k.length;
        for (
          this.v = createTypedArray("float32", et),
            this.pv = createTypedArray("float32", et),
            this.vel = createTypedArray("float32", et),
            $ = 0;
          $ < et;
          $ += 1
        )
          (this.v[$] = o.k[$] * this.mult), (this.pv[$] = o.k[$]);
        (this._isFirstFrame = !0),
          (this.effectsSequence = []),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.addEffect = addEffect);
      }
      function KeyframedValueProperty(a, o, s, _) {
        (this.propType = "unidimensional"),
          (this.keyframes = o.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = a.data.st),
          (this.frameId = -1),
          (this._caching = {
            lastFrame: initFrame,
            lastIndex: 0,
            value: 0,
            _lastKeyframeIndex: -1,
          }),
          (this.k = !0),
          (this.kf = !0),
          (this.data = o),
          (this.mult = s || 1),
          (this.elem = a),
          (this.container = _),
          (this.comp = a.comp),
          (this.v = initFrame),
          (this.pv = initFrame),
          (this._isFirstFrame = !0),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.interpolateValue = interpolateValue),
          (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
          (this.addEffect = addEffect);
      }
      function KeyframedMultidimensionalProperty(a, o, s, _) {
        this.propType = "multidimensional";
        var $,
          et = o.k.length,
          tt,
          rt,
          nt,
          it;
        for ($ = 0; $ < et - 1; $ += 1)
          o.k[$].to &&
            o.k[$].s &&
            o.k[$ + 1] &&
            o.k[$ + 1].s &&
            ((tt = o.k[$].s),
            (rt = o.k[$ + 1].s),
            (nt = o.k[$].to),
            (it = o.k[$].ti),
            ((tt.length === 2 &&
              !(tt[0] === rt[0] && tt[1] === rt[1]) &&
              bez.pointOnLine2D(
                tt[0],
                tt[1],
                rt[0],
                rt[1],
                tt[0] + nt[0],
                tt[1] + nt[1]
              ) &&
              bez.pointOnLine2D(
                tt[0],
                tt[1],
                rt[0],
                rt[1],
                rt[0] + it[0],
                rt[1] + it[1]
              )) ||
              (tt.length === 3 &&
                !(tt[0] === rt[0] && tt[1] === rt[1] && tt[2] === rt[2]) &&
                bez.pointOnLine3D(
                  tt[0],
                  tt[1],
                  tt[2],
                  rt[0],
                  rt[1],
                  rt[2],
                  tt[0] + nt[0],
                  tt[1] + nt[1],
                  tt[2] + nt[2]
                ) &&
                bez.pointOnLine3D(
                  tt[0],
                  tt[1],
                  tt[2],
                  rt[0],
                  rt[1],
                  rt[2],
                  rt[0] + it[0],
                  rt[1] + it[1],
                  rt[2] + it[2]
                ))) &&
              ((o.k[$].to = null), (o.k[$].ti = null)),
            tt[0] === rt[0] &&
              tt[1] === rt[1] &&
              nt[0] === 0 &&
              nt[1] === 0 &&
              it[0] === 0 &&
              it[1] === 0 &&
              (tt.length === 2 ||
                (tt[2] === rt[2] && nt[2] === 0 && it[2] === 0)) &&
              ((o.k[$].to = null), (o.k[$].ti = null)));
        (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
          (this.data = o),
          (this.keyframes = o.k),
          (this.keyframesMetadata = []),
          (this.offsetTime = a.data.st),
          (this.k = !0),
          (this.kf = !0),
          (this._isFirstFrame = !0),
          (this.mult = s || 1),
          (this.elem = a),
          (this.container = _),
          (this.comp = a.comp),
          (this.getValue = processEffectsSequence),
          (this.setVValue = setVValue),
          (this.interpolateValue = interpolateValue),
          (this.frameId = -1);
        var at = o.k[0].s.length;
        for (
          this.v = createTypedArray("float32", at),
            this.pv = createTypedArray("float32", at),
            $ = 0;
          $ < at;
          $ += 1
        )
          (this.v[$] = initFrame), (this.pv[$] = initFrame);
        (this._caching = {
          lastFrame: initFrame,
          lastIndex: 0,
          value: createTypedArray("float32", at),
        }),
          (this.addEffect = addEffect);
      }
      var PropertyFactory = (function () {
        function a(s, _, $, et, tt) {
          _.sid && (_ = s.globalData.slotManager.getProp(_));
          var rt;
          if (!_.k.length) rt = new ValueProperty(s, _, et, tt);
          else if (typeof _.k[0] == "number")
            rt = new MultiDimensionalProperty(s, _, et, tt);
          else
            switch ($) {
              case 0:
                rt = new KeyframedValueProperty(s, _, et, tt);
                break;
              case 1:
                rt = new KeyframedMultidimensionalProperty(s, _, et, tt);
                break;
            }
          return rt.effectsSequence.length && tt.addDynamicProperty(rt), rt;
        }
        var o = { getProp: a };
        return o;
      })();
      function DynamicPropertyContainer() {}
      DynamicPropertyContainer.prototype = {
        addDynamicProperty: function (o) {
          this.dynamicProperties.indexOf(o) === -1 &&
            (this.dynamicProperties.push(o),
            this.container.addDynamicProperty(this),
            (this._isAnimated = !0));
        },
        iterateDynamicProperties: function () {
          this._mdf = !1;
          var o,
            s = this.dynamicProperties.length;
          for (o = 0; o < s; o += 1)
            this.dynamicProperties[o].getValue(),
              this.dynamicProperties[o]._mdf && (this._mdf = !0);
        },
        initDynamicPropertyContainer: function (o) {
          (this.container = o),
            (this.dynamicProperties = []),
            (this._mdf = !1),
            (this._isAnimated = !1);
        },
      };
      var pointPool = (function () {
        function a() {
          return createTypedArray("float32", 2);
        }
        return poolFactory(8, a);
      })();
      function ShapePath() {
        (this.c = !1),
          (this._length = 0),
          (this._maxLength = 8),
          (this.v = createSizedArray(this._maxLength)),
          (this.o = createSizedArray(this._maxLength)),
          (this.i = createSizedArray(this._maxLength));
      }
      (ShapePath.prototype.setPathData = function (a, o) {
        (this.c = a), this.setLength(o);
        for (var s = 0; s < o; )
          (this.v[s] = pointPool.newElement()),
            (this.o[s] = pointPool.newElement()),
            (this.i[s] = pointPool.newElement()),
            (s += 1);
      }),
        (ShapePath.prototype.setLength = function (a) {
          for (; this._maxLength < a; ) this.doubleArrayLength();
          this._length = a;
        }),
        (ShapePath.prototype.doubleArrayLength = function () {
          (this.v = this.v.concat(createSizedArray(this._maxLength))),
            (this.i = this.i.concat(createSizedArray(this._maxLength))),
            (this.o = this.o.concat(createSizedArray(this._maxLength))),
            (this._maxLength *= 2);
        }),
        (ShapePath.prototype.setXYAt = function (a, o, s, _, $) {
          var et;
          switch (
            ((this._length = Math.max(this._length, _ + 1)),
            this._length >= this._maxLength && this.doubleArrayLength(),
            s)
          ) {
            case "v":
              et = this.v;
              break;
            case "i":
              et = this.i;
              break;
            case "o":
              et = this.o;
              break;
            default:
              et = [];
              break;
          }
          (!et[_] || (et[_] && !$)) && (et[_] = pointPool.newElement()),
            (et[_][0] = a),
            (et[_][1] = o);
        }),
        (ShapePath.prototype.setTripleAt = function (
          a,
          o,
          s,
          _,
          $,
          et,
          tt,
          rt
        ) {
          this.setXYAt(a, o, "v", tt, rt),
            this.setXYAt(s, _, "o", tt, rt),
            this.setXYAt($, et, "i", tt, rt);
        }),
        (ShapePath.prototype.reverse = function () {
          var a = new ShapePath();
          a.setPathData(this.c, this._length);
          var o = this.v,
            s = this.o,
            _ = this.i,
            $ = 0;
          this.c &&
            (a.setTripleAt(
              o[0][0],
              o[0][1],
              _[0][0],
              _[0][1],
              s[0][0],
              s[0][1],
              0,
              !1
            ),
            ($ = 1));
          var et = this._length - 1,
            tt = this._length,
            rt;
          for (rt = $; rt < tt; rt += 1)
            a.setTripleAt(
              o[et][0],
              o[et][1],
              _[et][0],
              _[et][1],
              s[et][0],
              s[et][1],
              rt,
              !1
            ),
              (et -= 1);
          return a;
        }),
        (ShapePath.prototype.length = function () {
          return this._length;
        });
      var shapePool = (function () {
        function a() {
          return new ShapePath();
        }
        function o($) {
          var et = $._length,
            tt;
          for (tt = 0; tt < et; tt += 1)
            pointPool.release($.v[tt]),
              pointPool.release($.i[tt]),
              pointPool.release($.o[tt]),
              ($.v[tt] = null),
              ($.i[tt] = null),
              ($.o[tt] = null);
          ($._length = 0), ($.c = !1);
        }
        function s($) {
          var et = _.newElement(),
            tt,
            rt = $._length === void 0 ? $.v.length : $._length;
          for (et.setLength(rt), et.c = $.c, tt = 0; tt < rt; tt += 1)
            et.setTripleAt(
              $.v[tt][0],
              $.v[tt][1],
              $.o[tt][0],
              $.o[tt][1],
              $.i[tt][0],
              $.i[tt][1],
              tt
            );
          return et;
        }
        var _ = poolFactory(4, a, o);
        return (_.clone = s), _;
      })();
      function ShapeCollection() {
        (this._length = 0),
          (this._maxLength = 4),
          (this.shapes = createSizedArray(this._maxLength));
      }
      (ShapeCollection.prototype.addShape = function (a) {
        this._length === this._maxLength &&
          ((this.shapes = this.shapes.concat(
            createSizedArray(this._maxLength)
          )),
          (this._maxLength *= 2)),
          (this.shapes[this._length] = a),
          (this._length += 1);
      }),
        (ShapeCollection.prototype.releaseShapes = function () {
          var a;
          for (a = 0; a < this._length; a += 1)
            shapePool.release(this.shapes[a]);
          this._length = 0;
        });
      var shapeCollectionPool = (function () {
          var a = { newShapeCollection: $, release: et },
            o = 0,
            s = 4,
            _ = createSizedArray(s);
          function $() {
            var tt;
            return (
              o ? ((o -= 1), (tt = _[o])) : (tt = new ShapeCollection()), tt
            );
          }
          function et(tt) {
            var rt,
              nt = tt._length;
            for (rt = 0; rt < nt; rt += 1) shapePool.release(tt.shapes[rt]);
            (tt._length = 0),
              o === s && ((_ = pooling.double(_)), (s *= 2)),
              (_[o] = tt),
              (o += 1);
          }
          return a;
        })(),
        ShapePropertyFactory = (function () {
          var a = -999999;
          function o(ut, lt, ct) {
            var pt = ct.lastIndex,
              vt,
              xt,
              bt,
              St,
              Pt,
              Mt,
              It,
              Rt,
              jt,
              Dt = this.keyframes;
            if (ut < Dt[0].t - this.offsetTime)
              (vt = Dt[0].s[0]), (bt = !0), (pt = 0);
            else if (ut >= Dt[Dt.length - 1].t - this.offsetTime)
              (vt = Dt[Dt.length - 1].s
                ? Dt[Dt.length - 1].s[0]
                : Dt[Dt.length - 2].e[0]),
                (bt = !0);
            else {
              for (
                var At = pt, Et = Dt.length - 1, kt = !0, gt, yt, wt;
                kt &&
                ((gt = Dt[At]),
                (yt = Dt[At + 1]),
                !(yt.t - this.offsetTime > ut));

              )
                At < Et - 1 ? (At += 1) : (kt = !1);
              if (
                ((wt = this.keyframesMetadata[At] || {}),
                (bt = gt.h === 1),
                (pt = At),
                !bt)
              ) {
                if (ut >= yt.t - this.offsetTime) Rt = 1;
                else if (ut < gt.t - this.offsetTime) Rt = 0;
                else {
                  var _t;
                  wt.__fnct
                    ? (_t = wt.__fnct)
                    : ((_t = BezierFactory.getBezierEasing(
                        gt.o.x,
                        gt.o.y,
                        gt.i.x,
                        gt.i.y
                      ).get),
                      (wt.__fnct = _t)),
                    (Rt = _t(
                      (ut - (gt.t - this.offsetTime)) /
                        (yt.t - this.offsetTime - (gt.t - this.offsetTime))
                    ));
                }
                xt = yt.s ? yt.s[0] : gt.e[0];
              }
              vt = gt.s[0];
            }
            for (
              Mt = lt._length, It = vt.i[0].length, ct.lastIndex = pt, St = 0;
              St < Mt;
              St += 1
            )
              for (Pt = 0; Pt < It; Pt += 1)
                (jt = bt
                  ? vt.i[St][Pt]
                  : vt.i[St][Pt] + (xt.i[St][Pt] - vt.i[St][Pt]) * Rt),
                  (lt.i[St][Pt] = jt),
                  (jt = bt
                    ? vt.o[St][Pt]
                    : vt.o[St][Pt] + (xt.o[St][Pt] - vt.o[St][Pt]) * Rt),
                  (lt.o[St][Pt] = jt),
                  (jt = bt
                    ? vt.v[St][Pt]
                    : vt.v[St][Pt] + (xt.v[St][Pt] - vt.v[St][Pt]) * Rt),
                  (lt.v[St][Pt] = jt);
          }
          function s() {
            var ut = this.comp.renderedFrame - this.offsetTime,
              lt = this.keyframes[0].t - this.offsetTime,
              ct =
                this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
              pt = this._caching.lastFrame;
            return (
              (pt !== a && ((pt < lt && ut < lt) || (pt > ct && ut > ct))) ||
                ((this._caching.lastIndex =
                  pt < ut ? this._caching.lastIndex : 0),
                this.interpolateShape(ut, this.pv, this._caching)),
              (this._caching.lastFrame = ut),
              this.pv
            );
          }
          function _() {
            this.paths = this.localShapeCollection;
          }
          function $(ut, lt) {
            if (ut._length !== lt._length || ut.c !== lt.c) return !1;
            var ct,
              pt = ut._length;
            for (ct = 0; ct < pt; ct += 1)
              if (
                ut.v[ct][0] !== lt.v[ct][0] ||
                ut.v[ct][1] !== lt.v[ct][1] ||
                ut.o[ct][0] !== lt.o[ct][0] ||
                ut.o[ct][1] !== lt.o[ct][1] ||
                ut.i[ct][0] !== lt.i[ct][0] ||
                ut.i[ct][1] !== lt.i[ct][1]
              )
                return !1;
            return !0;
          }
          function et(ut) {
            $(this.v, ut) ||
              ((this.v = shapePool.clone(ut)),
              this.localShapeCollection.releaseShapes(),
              this.localShapeCollection.addShape(this.v),
              (this._mdf = !0),
              (this.paths = this.localShapeCollection));
          }
          function tt() {
            if (this.elem.globalData.frameId !== this.frameId) {
              if (!this.effectsSequence.length) {
                this._mdf = !1;
                return;
              }
              if (this.lock) {
                this.setVValue(this.pv);
                return;
              }
              (this.lock = !0), (this._mdf = !1);
              var ut;
              this.kf
                ? (ut = this.pv)
                : this.data.ks
                ? (ut = this.data.ks.k)
                : (ut = this.data.pt.k);
              var lt,
                ct = this.effectsSequence.length;
              for (lt = 0; lt < ct; lt += 1) ut = this.effectsSequence[lt](ut);
              this.setVValue(ut),
                (this.lock = !1),
                (this.frameId = this.elem.globalData.frameId);
            }
          }
          function rt(ut, lt, ct) {
            (this.propType = "shape"),
              (this.comp = ut.comp),
              (this.container = ut),
              (this.elem = ut),
              (this.data = lt),
              (this.k = !1),
              (this.kf = !1),
              (this._mdf = !1);
            var pt = ct === 3 ? lt.pt.k : lt.ks.k;
            (this.v = shapePool.clone(pt)),
              (this.pv = shapePool.clone(this.v)),
              (this.localShapeCollection =
                shapeCollectionPool.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.reset = _),
              (this.effectsSequence = []);
          }
          function nt(ut) {
            this.effectsSequence.push(ut),
              this.container.addDynamicProperty(this);
          }
          (rt.prototype.interpolateShape = o),
            (rt.prototype.getValue = tt),
            (rt.prototype.setVValue = et),
            (rt.prototype.addEffect = nt);
          function it(ut, lt, ct) {
            (this.propType = "shape"),
              (this.comp = ut.comp),
              (this.elem = ut),
              (this.container = ut),
              (this.offsetTime = ut.data.st),
              (this.keyframes = ct === 3 ? lt.pt.k : lt.ks.k),
              (this.keyframesMetadata = []),
              (this.k = !0),
              (this.kf = !0);
            var pt = this.keyframes[0].s[0].i.length;
            (this.v = shapePool.newElement()),
              this.v.setPathData(this.keyframes[0].s[0].c, pt),
              (this.pv = shapePool.clone(this.v)),
              (this.localShapeCollection =
                shapeCollectionPool.newShapeCollection()),
              (this.paths = this.localShapeCollection),
              this.paths.addShape(this.v),
              (this.lastFrame = a),
              (this.reset = _),
              (this._caching = { lastFrame: a, lastIndex: 0 }),
              (this.effectsSequence = [s.bind(this)]);
          }
          (it.prototype.getValue = tt),
            (it.prototype.interpolateShape = o),
            (it.prototype.setVValue = et),
            (it.prototype.addEffect = nt);
          var at = (function () {
              var ut = roundCorner;
              function lt(ct, pt) {
                (this.v = shapePool.newElement()),
                  this.v.setPathData(!0, 4),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  (this.paths = this.localShapeCollection),
                  this.localShapeCollection.addShape(this.v),
                  (this.d = pt.d),
                  (this.elem = ct),
                  (this.comp = ct.comp),
                  (this.frameId = -1),
                  this.initDynamicPropertyContainer(ct),
                  (this.p = PropertyFactory.getProp(ct, pt.p, 1, 0, this)),
                  (this.s = PropertyFactory.getProp(ct, pt.s, 1, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertEllToPath());
              }
              return (
                (lt.prototype = {
                  reset: _,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertEllToPath());
                  },
                  convertEllToPath: function () {
                    var pt = this.p.v[0],
                      vt = this.p.v[1],
                      xt = this.s.v[0] / 2,
                      bt = this.s.v[1] / 2,
                      St = this.d !== 3,
                      Pt = this.v;
                    (Pt.v[0][0] = pt),
                      (Pt.v[0][1] = vt - bt),
                      (Pt.v[1][0] = St ? pt + xt : pt - xt),
                      (Pt.v[1][1] = vt),
                      (Pt.v[2][0] = pt),
                      (Pt.v[2][1] = vt + bt),
                      (Pt.v[3][0] = St ? pt - xt : pt + xt),
                      (Pt.v[3][1] = vt),
                      (Pt.i[0][0] = St ? pt - xt * ut : pt + xt * ut),
                      (Pt.i[0][1] = vt - bt),
                      (Pt.i[1][0] = St ? pt + xt : pt - xt),
                      (Pt.i[1][1] = vt - bt * ut),
                      (Pt.i[2][0] = St ? pt + xt * ut : pt - xt * ut),
                      (Pt.i[2][1] = vt + bt),
                      (Pt.i[3][0] = St ? pt - xt : pt + xt),
                      (Pt.i[3][1] = vt + bt * ut),
                      (Pt.o[0][0] = St ? pt + xt * ut : pt - xt * ut),
                      (Pt.o[0][1] = vt - bt),
                      (Pt.o[1][0] = St ? pt + xt : pt - xt),
                      (Pt.o[1][1] = vt + bt * ut),
                      (Pt.o[2][0] = St ? pt - xt * ut : pt + xt * ut),
                      (Pt.o[2][1] = vt + bt),
                      (Pt.o[3][0] = St ? pt - xt : pt + xt),
                      (Pt.o[3][1] = vt - bt * ut);
                  },
                }),
                extendPrototype([DynamicPropertyContainer], lt),
                lt
              );
            })(),
            st = (function () {
              function ut(lt, ct) {
                (this.v = shapePool.newElement()),
                  this.v.setPathData(!0, 0),
                  (this.elem = lt),
                  (this.comp = lt.comp),
                  (this.data = ct),
                  (this.frameId = -1),
                  (this.d = ct.d),
                  this.initDynamicPropertyContainer(lt),
                  ct.sy === 1
                    ? ((this.ir = PropertyFactory.getProp(
                        lt,
                        ct.ir,
                        0,
                        0,
                        this
                      )),
                      (this.is = PropertyFactory.getProp(
                        lt,
                        ct.is,
                        0,
                        0.01,
                        this
                      )),
                      (this.convertToPath = this.convertStarToPath))
                    : (this.convertToPath = this.convertPolygonToPath),
                  (this.pt = PropertyFactory.getProp(lt, ct.pt, 0, 0, this)),
                  (this.p = PropertyFactory.getProp(lt, ct.p, 1, 0, this)),
                  (this.r = PropertyFactory.getProp(
                    lt,
                    ct.r,
                    0,
                    degToRads,
                    this
                  )),
                  (this.or = PropertyFactory.getProp(lt, ct.or, 0, 0, this)),
                  (this.os = PropertyFactory.getProp(lt, ct.os, 0, 0.01, this)),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertToPath());
              }
              return (
                (ut.prototype = {
                  reset: _,
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertToPath());
                  },
                  convertStarToPath: function () {
                    var ct = Math.floor(this.pt.v) * 2,
                      pt = (Math.PI * 2) / ct,
                      vt = !0,
                      xt = this.or.v,
                      bt = this.ir.v,
                      St = this.os.v,
                      Pt = this.is.v,
                      Mt = (2 * Math.PI * xt) / (ct * 2),
                      It = (2 * Math.PI * bt) / (ct * 2),
                      Rt,
                      jt,
                      Dt,
                      At,
                      Et = -Math.PI / 2;
                    Et += this.r.v;
                    var kt = this.data.d === 3 ? -1 : 1;
                    for (this.v._length = 0, Rt = 0; Rt < ct; Rt += 1) {
                      (jt = vt ? xt : bt),
                        (Dt = vt ? St : Pt),
                        (At = vt ? Mt : It);
                      var gt = jt * Math.cos(Et),
                        yt = jt * Math.sin(Et),
                        wt =
                          gt === 0 && yt === 0
                            ? 0
                            : yt / Math.sqrt(gt * gt + yt * yt),
                        _t =
                          gt === 0 && yt === 0
                            ? 0
                            : -gt / Math.sqrt(gt * gt + yt * yt);
                      (gt += +this.p.v[0]),
                        (yt += +this.p.v[1]),
                        this.v.setTripleAt(
                          gt,
                          yt,
                          gt - wt * At * Dt * kt,
                          yt - _t * At * Dt * kt,
                          gt + wt * At * Dt * kt,
                          yt + _t * At * Dt * kt,
                          Rt,
                          !0
                        ),
                        (vt = !vt),
                        (Et += pt * kt);
                    }
                  },
                  convertPolygonToPath: function () {
                    var ct = Math.floor(this.pt.v),
                      pt = (Math.PI * 2) / ct,
                      vt = this.or.v,
                      xt = this.os.v,
                      bt = (2 * Math.PI * vt) / (ct * 4),
                      St,
                      Pt = -Math.PI * 0.5,
                      Mt = this.data.d === 3 ? -1 : 1;
                    for (
                      Pt += this.r.v, this.v._length = 0, St = 0;
                      St < ct;
                      St += 1
                    ) {
                      var It = vt * Math.cos(Pt),
                        Rt = vt * Math.sin(Pt),
                        jt =
                          It === 0 && Rt === 0
                            ? 0
                            : Rt / Math.sqrt(It * It + Rt * Rt),
                        Dt =
                          It === 0 && Rt === 0
                            ? 0
                            : -It / Math.sqrt(It * It + Rt * Rt);
                      (It += +this.p.v[0]),
                        (Rt += +this.p.v[1]),
                        this.v.setTripleAt(
                          It,
                          Rt,
                          It - jt * bt * xt * Mt,
                          Rt - Dt * bt * xt * Mt,
                          It + jt * bt * xt * Mt,
                          Rt + Dt * bt * xt * Mt,
                          St,
                          !0
                        ),
                        (Pt += pt * Mt);
                    }
                    (this.paths.length = 0), (this.paths[0] = this.v);
                  },
                }),
                extendPrototype([DynamicPropertyContainer], ut),
                ut
              );
            })(),
            ot = (function () {
              function ut(lt, ct) {
                (this.v = shapePool.newElement()),
                  (this.v.c = !0),
                  (this.localShapeCollection =
                    shapeCollectionPool.newShapeCollection()),
                  this.localShapeCollection.addShape(this.v),
                  (this.paths = this.localShapeCollection),
                  (this.elem = lt),
                  (this.comp = lt.comp),
                  (this.frameId = -1),
                  (this.d = ct.d),
                  this.initDynamicPropertyContainer(lt),
                  (this.p = PropertyFactory.getProp(lt, ct.p, 1, 0, this)),
                  (this.s = PropertyFactory.getProp(lt, ct.s, 1, 0, this)),
                  (this.r = PropertyFactory.getProp(lt, ct.r, 0, 0, this)),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : ((this.k = !1), this.convertRectToPath());
              }
              return (
                (ut.prototype = {
                  convertRectToPath: function () {
                    var ct = this.p.v[0],
                      pt = this.p.v[1],
                      vt = this.s.v[0] / 2,
                      xt = this.s.v[1] / 2,
                      bt = bmMin(vt, xt, this.r.v),
                      St = bt * (1 - roundCorner);
                    (this.v._length = 0),
                      this.d === 2 || this.d === 1
                        ? (this.v.setTripleAt(
                            ct + vt,
                            pt - xt + bt,
                            ct + vt,
                            pt - xt + bt,
                            ct + vt,
                            pt - xt + St,
                            0,
                            !0
                          ),
                          this.v.setTripleAt(
                            ct + vt,
                            pt + xt - bt,
                            ct + vt,
                            pt + xt - St,
                            ct + vt,
                            pt + xt - bt,
                            1,
                            !0
                          ),
                          bt !== 0
                            ? (this.v.setTripleAt(
                                ct + vt - bt,
                                pt + xt,
                                ct + vt - bt,
                                pt + xt,
                                ct + vt - St,
                                pt + xt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt + bt,
                                pt + xt,
                                ct - vt + St,
                                pt + xt,
                                ct - vt + bt,
                                pt + xt,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt + xt - bt,
                                ct - vt,
                                pt + xt - bt,
                                ct - vt,
                                pt + xt - St,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt - xt + bt,
                                ct - vt,
                                pt - xt + St,
                                ct - vt,
                                pt - xt + bt,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt + bt,
                                pt - xt,
                                ct - vt + bt,
                                pt - xt,
                                ct - vt + St,
                                pt - xt,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct + vt - bt,
                                pt - xt,
                                ct + vt - St,
                                pt - xt,
                                ct + vt - bt,
                                pt - xt,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                ct - vt,
                                pt + xt,
                                ct - vt + St,
                                pt + xt,
                                ct - vt,
                                pt + xt,
                                2
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt - xt,
                                ct - vt,
                                pt - xt + St,
                                ct - vt,
                                pt - xt,
                                3
                              )))
                        : (this.v.setTripleAt(
                            ct + vt,
                            pt - xt + bt,
                            ct + vt,
                            pt - xt + St,
                            ct + vt,
                            pt - xt + bt,
                            0,
                            !0
                          ),
                          bt !== 0
                            ? (this.v.setTripleAt(
                                ct + vt - bt,
                                pt - xt,
                                ct + vt - bt,
                                pt - xt,
                                ct + vt - St,
                                pt - xt,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt + bt,
                                pt - xt,
                                ct - vt + St,
                                pt - xt,
                                ct - vt + bt,
                                pt - xt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt - xt + bt,
                                ct - vt,
                                pt - xt + bt,
                                ct - vt,
                                pt - xt + St,
                                3,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt + xt - bt,
                                ct - vt,
                                pt + xt - St,
                                ct - vt,
                                pt + xt - bt,
                                4,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt + bt,
                                pt + xt,
                                ct - vt + bt,
                                pt + xt,
                                ct - vt + St,
                                pt + xt,
                                5,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct + vt - bt,
                                pt + xt,
                                ct + vt - St,
                                pt + xt,
                                ct + vt - bt,
                                pt + xt,
                                6,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct + vt,
                                pt + xt - bt,
                                ct + vt,
                                pt + xt - bt,
                                ct + vt,
                                pt + xt - St,
                                7,
                                !0
                              ))
                            : (this.v.setTripleAt(
                                ct - vt,
                                pt - xt,
                                ct - vt + St,
                                pt - xt,
                                ct - vt,
                                pt - xt,
                                1,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct - vt,
                                pt + xt,
                                ct - vt,
                                pt + xt - St,
                                ct - vt,
                                pt + xt,
                                2,
                                !0
                              ),
                              this.v.setTripleAt(
                                ct + vt,
                                pt + xt,
                                ct + vt - St,
                                pt + xt,
                                ct + vt,
                                pt + xt,
                                3,
                                !0
                              )));
                  },
                  getValue: function () {
                    this.elem.globalData.frameId !== this.frameId &&
                      ((this.frameId = this.elem.globalData.frameId),
                      this.iterateDynamicProperties(),
                      this._mdf && this.convertRectToPath());
                  },
                  reset: _,
                }),
                extendPrototype([DynamicPropertyContainer], ut),
                ut
              );
            })();
          function dt(ut, lt, ct) {
            var pt;
            if (ct === 3 || ct === 4) {
              var vt = ct === 3 ? lt.pt : lt.ks,
                xt = vt.k;
              xt.length ? (pt = new it(ut, lt, ct)) : (pt = new rt(ut, lt, ct));
            } else
              ct === 5
                ? (pt = new ot(ut, lt))
                : ct === 6
                ? (pt = new at(ut, lt))
                : ct === 7 && (pt = new st(ut, lt));
            return pt.k && ut.addDynamicProperty(pt), pt;
          }
          function ht() {
            return rt;
          }
          function ft() {
            return it;
          }
          var mt = {};
          return (
            (mt.getShapeProp = dt),
            (mt.getConstructorFunction = ht),
            (mt.getKeyframedConstructorFunction = ft),
            mt
          );
        })();
      /*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */ var Matrix = (function () {
        var a = Math.cos,
          o = Math.sin,
          s = Math.tan,
          _ = Math.round;
        function $() {
          return (
            (this.props[0] = 1),
            (this.props[1] = 0),
            (this.props[2] = 0),
            (this.props[3] = 0),
            (this.props[4] = 0),
            (this.props[5] = 1),
            (this.props[6] = 0),
            (this.props[7] = 0),
            (this.props[8] = 0),
            (this.props[9] = 0),
            (this.props[10] = 1),
            (this.props[11] = 0),
            (this.props[12] = 0),
            (this.props[13] = 0),
            (this.props[14] = 0),
            (this.props[15] = 1),
            this
          );
        }
        function et(gt) {
          if (gt === 0) return this;
          var yt = a(gt),
            wt = o(gt);
          return this._t(yt, -wt, 0, 0, wt, yt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function tt(gt) {
          if (gt === 0) return this;
          var yt = a(gt),
            wt = o(gt);
          return this._t(1, 0, 0, 0, 0, yt, -wt, 0, 0, wt, yt, 0, 0, 0, 0, 1);
        }
        function rt(gt) {
          if (gt === 0) return this;
          var yt = a(gt),
            wt = o(gt);
          return this._t(yt, 0, wt, 0, 0, 1, 0, 0, -wt, 0, yt, 0, 0, 0, 0, 1);
        }
        function nt(gt) {
          if (gt === 0) return this;
          var yt = a(gt),
            wt = o(gt);
          return this._t(yt, -wt, 0, 0, wt, yt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function it(gt, yt) {
          return this._t(1, yt, gt, 1, 0, 0);
        }
        function at(gt, yt) {
          return this.shear(s(gt), s(yt));
        }
        function st(gt, yt) {
          var wt = a(yt),
            _t = o(yt);
          return this._t(wt, _t, 0, 0, -_t, wt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            ._t(1, 0, 0, 0, s(gt), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            ._t(wt, -_t, 0, 0, _t, wt, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function ot(gt, yt, wt) {
          return (
            !wt && wt !== 0 && (wt = 1),
            gt === 1 && yt === 1 && wt === 1
              ? this
              : this._t(gt, 0, 0, 0, 0, yt, 0, 0, 0, 0, wt, 0, 0, 0, 0, 1)
          );
        }
        function dt(
          gt,
          yt,
          wt,
          _t,
          Ft,
          Vt,
          Lt,
          Wt,
          zt,
          Gt,
          Kt,
          er,
          Xt,
          Yt,
          nr,
          Ht
        ) {
          return (
            (this.props[0] = gt),
            (this.props[1] = yt),
            (this.props[2] = wt),
            (this.props[3] = _t),
            (this.props[4] = Ft),
            (this.props[5] = Vt),
            (this.props[6] = Lt),
            (this.props[7] = Wt),
            (this.props[8] = zt),
            (this.props[9] = Gt),
            (this.props[10] = Kt),
            (this.props[11] = er),
            (this.props[12] = Xt),
            (this.props[13] = Yt),
            (this.props[14] = nr),
            (this.props[15] = Ht),
            this
          );
        }
        function ht(gt, yt, wt) {
          return (
            (wt = wt || 0),
            gt !== 0 || yt !== 0 || wt !== 0
              ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, gt, yt, wt, 1)
              : this
          );
        }
        function ft(
          gt,
          yt,
          wt,
          _t,
          Ft,
          Vt,
          Lt,
          Wt,
          zt,
          Gt,
          Kt,
          er,
          Xt,
          Yt,
          nr,
          Ht
        ) {
          var Bt = this.props;
          if (
            gt === 1 &&
            yt === 0 &&
            wt === 0 &&
            _t === 0 &&
            Ft === 0 &&
            Vt === 1 &&
            Lt === 0 &&
            Wt === 0 &&
            zt === 0 &&
            Gt === 0 &&
            Kt === 1 &&
            er === 0
          )
            return (
              (Bt[12] = Bt[12] * gt + Bt[15] * Xt),
              (Bt[13] = Bt[13] * Vt + Bt[15] * Yt),
              (Bt[14] = Bt[14] * Kt + Bt[15] * nr),
              (Bt[15] *= Ht),
              (this._identityCalculated = !1),
              this
            );
          var Nt = Bt[0],
            tr = Bt[1],
            rr = Bt[2],
            or = Bt[3],
            pr = Bt[4],
            sr = Bt[5],
            ir = Bt[6],
            cr = Bt[7],
            ar = Bt[8],
            lr = Bt[9],
            mr = Bt[10],
            ur = Bt[11],
            gr = Bt[12],
            vr = Bt[13],
            xr = Bt[14],
            br = Bt[15];
          return (
            (Bt[0] = Nt * gt + tr * Ft + rr * zt + or * Xt),
            (Bt[1] = Nt * yt + tr * Vt + rr * Gt + or * Yt),
            (Bt[2] = Nt * wt + tr * Lt + rr * Kt + or * nr),
            (Bt[3] = Nt * _t + tr * Wt + rr * er + or * Ht),
            (Bt[4] = pr * gt + sr * Ft + ir * zt + cr * Xt),
            (Bt[5] = pr * yt + sr * Vt + ir * Gt + cr * Yt),
            (Bt[6] = pr * wt + sr * Lt + ir * Kt + cr * nr),
            (Bt[7] = pr * _t + sr * Wt + ir * er + cr * Ht),
            (Bt[8] = ar * gt + lr * Ft + mr * zt + ur * Xt),
            (Bt[9] = ar * yt + lr * Vt + mr * Gt + ur * Yt),
            (Bt[10] = ar * wt + lr * Lt + mr * Kt + ur * nr),
            (Bt[11] = ar * _t + lr * Wt + mr * er + ur * Ht),
            (Bt[12] = gr * gt + vr * Ft + xr * zt + br * Xt),
            (Bt[13] = gr * yt + vr * Vt + xr * Gt + br * Yt),
            (Bt[14] = gr * wt + vr * Lt + xr * Kt + br * nr),
            (Bt[15] = gr * _t + vr * Wt + xr * er + br * Ht),
            (this._identityCalculated = !1),
            this
          );
        }
        function mt(gt) {
          var yt = gt.props;
          return this.transform(
            yt[0],
            yt[1],
            yt[2],
            yt[3],
            yt[4],
            yt[5],
            yt[6],
            yt[7],
            yt[8],
            yt[9],
            yt[10],
            yt[11],
            yt[12],
            yt[13],
            yt[14],
            yt[15]
          );
        }
        function ut() {
          return (
            this._identityCalculated ||
              ((this._identity = !(
                this.props[0] !== 1 ||
                this.props[1] !== 0 ||
                this.props[2] !== 0 ||
                this.props[3] !== 0 ||
                this.props[4] !== 0 ||
                this.props[5] !== 1 ||
                this.props[6] !== 0 ||
                this.props[7] !== 0 ||
                this.props[8] !== 0 ||
                this.props[9] !== 0 ||
                this.props[10] !== 1 ||
                this.props[11] !== 0 ||
                this.props[12] !== 0 ||
                this.props[13] !== 0 ||
                this.props[14] !== 0 ||
                this.props[15] !== 1
              )),
              (this._identityCalculated = !0)),
            this._identity
          );
        }
        function lt(gt) {
          for (var yt = 0; yt < 16; ) {
            if (gt.props[yt] !== this.props[yt]) return !1;
            yt += 1;
          }
          return !0;
        }
        function ct(gt) {
          var yt;
          for (yt = 0; yt < 16; yt += 1) gt.props[yt] = this.props[yt];
          return gt;
        }
        function pt(gt) {
          var yt;
          for (yt = 0; yt < 16; yt += 1) this.props[yt] = gt[yt];
        }
        function vt(gt, yt, wt) {
          return {
            x:
              gt * this.props[0] +
              yt * this.props[4] +
              wt * this.props[8] +
              this.props[12],
            y:
              gt * this.props[1] +
              yt * this.props[5] +
              wt * this.props[9] +
              this.props[13],
            z:
              gt * this.props[2] +
              yt * this.props[6] +
              wt * this.props[10] +
              this.props[14],
          };
        }
        function xt(gt, yt, wt) {
          return (
            gt * this.props[0] +
            yt * this.props[4] +
            wt * this.props[8] +
            this.props[12]
          );
        }
        function bt(gt, yt, wt) {
          return (
            gt * this.props[1] +
            yt * this.props[5] +
            wt * this.props[9] +
            this.props[13]
          );
        }
        function St(gt, yt, wt) {
          return (
            gt * this.props[2] +
            yt * this.props[6] +
            wt * this.props[10] +
            this.props[14]
          );
        }
        function Pt() {
          var gt =
              this.props[0] * this.props[5] - this.props[1] * this.props[4],
            yt = this.props[5] / gt,
            wt = -this.props[1] / gt,
            _t = -this.props[4] / gt,
            Ft = this.props[0] / gt,
            Vt =
              (this.props[4] * this.props[13] -
                this.props[5] * this.props[12]) /
              gt,
            Lt =
              -(
                this.props[0] * this.props[13] -
                this.props[1] * this.props[12]
              ) / gt,
            Wt = new Matrix();
          return (
            (Wt.props[0] = yt),
            (Wt.props[1] = wt),
            (Wt.props[4] = _t),
            (Wt.props[5] = Ft),
            (Wt.props[12] = Vt),
            (Wt.props[13] = Lt),
            Wt
          );
        }
        function Mt(gt) {
          var yt = this.getInverseMatrix();
          return yt.applyToPointArray(gt[0], gt[1], gt[2] || 0);
        }
        function It(gt) {
          var yt,
            wt = gt.length,
            _t = [];
          for (yt = 0; yt < wt; yt += 1) _t[yt] = Mt(gt[yt]);
          return _t;
        }
        function Rt(gt, yt, wt) {
          var _t = createTypedArray("float32", 6);
          if (this.isIdentity())
            (_t[0] = gt[0]),
              (_t[1] = gt[1]),
              (_t[2] = yt[0]),
              (_t[3] = yt[1]),
              (_t[4] = wt[0]),
              (_t[5] = wt[1]);
          else {
            var Ft = this.props[0],
              Vt = this.props[1],
              Lt = this.props[4],
              Wt = this.props[5],
              zt = this.props[12],
              Gt = this.props[13];
            (_t[0] = gt[0] * Ft + gt[1] * Lt + zt),
              (_t[1] = gt[0] * Vt + gt[1] * Wt + Gt),
              (_t[2] = yt[0] * Ft + yt[1] * Lt + zt),
              (_t[3] = yt[0] * Vt + yt[1] * Wt + Gt),
              (_t[4] = wt[0] * Ft + wt[1] * Lt + zt),
              (_t[5] = wt[0] * Vt + wt[1] * Wt + Gt);
          }
          return _t;
        }
        function jt(gt, yt, wt) {
          var _t;
          return (
            this.isIdentity()
              ? (_t = [gt, yt, wt])
              : (_t = [
                  gt * this.props[0] +
                    yt * this.props[4] +
                    wt * this.props[8] +
                    this.props[12],
                  gt * this.props[1] +
                    yt * this.props[5] +
                    wt * this.props[9] +
                    this.props[13],
                  gt * this.props[2] +
                    yt * this.props[6] +
                    wt * this.props[10] +
                    this.props[14],
                ]),
            _t
          );
        }
        function Dt(gt, yt) {
          if (this.isIdentity()) return gt + "," + yt;
          var wt = this.props;
          return (
            Math.round((gt * wt[0] + yt * wt[4] + wt[12]) * 100) / 100 +
            "," +
            Math.round((gt * wt[1] + yt * wt[5] + wt[13]) * 100) / 100
          );
        }
        function At() {
          for (
            var gt = 0, yt = this.props, wt = "matrix3d(", _t = 1e4;
            gt < 16;

          )
            (wt += _(yt[gt] * _t) / _t),
              (wt += gt === 15 ? ")" : ","),
              (gt += 1);
          return wt;
        }
        function Et(gt) {
          var yt = 1e4;
          return (gt < 1e-6 && gt > 0) || (gt > -1e-6 && gt < 0)
            ? _(gt * yt) / yt
            : gt;
        }
        function kt() {
          var gt = this.props,
            yt = Et(gt[0]),
            wt = Et(gt[1]),
            _t = Et(gt[4]),
            Ft = Et(gt[5]),
            Vt = Et(gt[12]),
            Lt = Et(gt[13]);
          return (
            "matrix(" +
            yt +
            "," +
            wt +
            "," +
            _t +
            "," +
            Ft +
            "," +
            Vt +
            "," +
            Lt +
            ")"
          );
        }
        return function () {
          (this.reset = $),
            (this.rotate = et),
            (this.rotateX = tt),
            (this.rotateY = rt),
            (this.rotateZ = nt),
            (this.skew = at),
            (this.skewFromAxis = st),
            (this.shear = it),
            (this.scale = ot),
            (this.setTransform = dt),
            (this.translate = ht),
            (this.transform = ft),
            (this.multiply = mt),
            (this.applyToPoint = vt),
            (this.applyToX = xt),
            (this.applyToY = bt),
            (this.applyToZ = St),
            (this.applyToPointArray = jt),
            (this.applyToTriplePoints = Rt),
            (this.applyToPointStringified = Dt),
            (this.toCSS = At),
            (this.to2dCSS = kt),
            (this.clone = ct),
            (this.cloneFromProps = pt),
            (this.equals = lt),
            (this.inversePoints = It),
            (this.inversePoint = Mt),
            (this.getInverseMatrix = Pt),
            (this._t = this.transform),
            (this.isIdentity = ut),
            (this._identity = !0),
            (this._identityCalculated = !1),
            (this.props = createTypedArray("float32", 16)),
            this.reset();
        };
      })();
      function _typeof$3(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$3 = function (s) {
                return typeof s;
              })
            : (_typeof$3 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$3(a)
        );
      }
      var lottie = {};
      function setLocation(a) {
        setLocationHref(a);
      }
      function searchAnimations() {
        animationManager.searchAnimations();
      }
      function setSubframeRendering(a) {
        setSubframeEnabled(a);
      }
      function setPrefix(a) {
        setIdPrefix(a);
      }
      function loadAnimation(a) {
        return animationManager.loadAnimation(a);
      }
      function setQuality(a) {
        if (typeof a == "string")
          switch (a) {
            case "high":
              setDefaultCurveSegments(200);
              break;
            default:
            case "medium":
              setDefaultCurveSegments(50);
              break;
            case "low":
              setDefaultCurveSegments(10);
              break;
          }
        else !isNaN(a) && a > 1 && setDefaultCurveSegments(a);
      }
      function inBrowser() {
        return typeof navigator < "u";
      }
      function installPlugin(a, o) {
        a === "expressions" && setExpressionsPlugin(o);
      }
      function getFactory(a) {
        switch (a) {
          case "propertyFactory":
            return PropertyFactory;
          case "shapePropertyFactory":
            return ShapePropertyFactory;
          case "matrix":
            return Matrix;
          default:
            return null;
        }
      }
      (lottie.play = animationManager.play),
        (lottie.pause = animationManager.pause),
        (lottie.setLocationHref = setLocation),
        (lottie.togglePause = animationManager.togglePause),
        (lottie.setSpeed = animationManager.setSpeed),
        (lottie.setDirection = animationManager.setDirection),
        (lottie.stop = animationManager.stop),
        (lottie.searchAnimations = searchAnimations),
        (lottie.registerAnimation = animationManager.registerAnimation),
        (lottie.loadAnimation = loadAnimation),
        (lottie.setSubframeRendering = setSubframeRendering),
        (lottie.resize = animationManager.resize),
        (lottie.goToAndStop = animationManager.goToAndStop),
        (lottie.destroy = animationManager.destroy),
        (lottie.setQuality = setQuality),
        (lottie.inBrowser = inBrowser),
        (lottie.installPlugin = installPlugin),
        (lottie.freeze = animationManager.freeze),
        (lottie.unfreeze = animationManager.unfreeze),
        (lottie.setVolume = animationManager.setVolume),
        (lottie.mute = animationManager.mute),
        (lottie.unmute = animationManager.unmute),
        (lottie.getRegisteredAnimations =
          animationManager.getRegisteredAnimations),
        (lottie.useWebWorker = setWebWorker),
        (lottie.setIDPrefix = setPrefix),
        (lottie.__getFactory = getFactory),
        (lottie.version = "5.12.2");
      function checkReady() {
        document.readyState === "complete" &&
          (clearInterval(readyStateCheckInterval), searchAnimations());
      }
      function getQueryVariable(a) {
        for (var o = queryString.split("&"), s = 0; s < o.length; s += 1) {
          var _ = o[s].split("=");
          if (decodeURIComponent(_[0]) == a) return decodeURIComponent(_[1]);
        }
        return null;
      }
      var queryString = "";
      {
        var scripts = document.getElementsByTagName("script"),
          index = scripts.length - 1,
          myScript = scripts[index] || { src: "" };
        (queryString = myScript.src
          ? myScript.src.replace(/^[^\?]+\??/, "")
          : ""),
          getQueryVariable("renderer");
      }
      var readyStateCheckInterval = setInterval(checkReady, 100);
      try {
        _typeof$3(exports) !== "object" && (window.bodymovin = lottie);
      } catch (a) {}
      var ShapeModifiers = (function () {
        var a = {},
          o = {};
        (a.registerModifier = s), (a.getModifier = _);
        function s($, et) {
          o[$] || (o[$] = et);
        }
        function _($, et, tt) {
          return new o[$](et, tt);
        }
        return a;
      })();
      function ShapeModifier() {}
      (ShapeModifier.prototype.initModifierProperties = function () {}),
        (ShapeModifier.prototype.addShapeToModifier = function () {}),
        (ShapeModifier.prototype.addShape = function (a) {
          if (!this.closed) {
            a.sh.container.addDynamicProperty(a.sh);
            var o = {
              shape: a.sh,
              data: a,
              localShapeCollection: shapeCollectionPool.newShapeCollection(),
            };
            this.shapes.push(o),
              this.addShapeToModifier(o),
              this._isAnimated && a.setAsAnimated();
          }
        }),
        (ShapeModifier.prototype.init = function (a, o) {
          (this.shapes = []),
            (this.elem = a),
            this.initDynamicPropertyContainer(a),
            this.initModifierProperties(a, o),
            (this.frameId = initialDefaultFrame),
            (this.closed = !1),
            (this.k = !1),
            this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (ShapeModifier.prototype.processKeys = function () {
          this.elem.globalData.frameId !== this.frameId &&
            ((this.frameId = this.elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        extendPrototype([DynamicPropertyContainer], ShapeModifier);
      function TrimModifier() {}
      extendPrototype([ShapeModifier], TrimModifier),
        (TrimModifier.prototype.initModifierProperties = function (a, o) {
          (this.s = PropertyFactory.getProp(a, o.s, 0, 0.01, this)),
            (this.e = PropertyFactory.getProp(a, o.e, 0, 0.01, this)),
            (this.o = PropertyFactory.getProp(a, o.o, 0, 0, this)),
            (this.sValue = 0),
            (this.eValue = 0),
            (this.getValue = this.processKeys),
            (this.m = o.m),
            (this._isAnimated =
              !!this.s.effectsSequence.length ||
              !!this.e.effectsSequence.length ||
              !!this.o.effectsSequence.length);
        }),
        (TrimModifier.prototype.addShapeToModifier = function (a) {
          a.pathsData = [];
        }),
        (TrimModifier.prototype.calculateShapeEdges = function (a, o, s, _, $) {
          var et = [];
          o <= 1
            ? et.push({ s: a, e: o })
            : a >= 1
            ? et.push({ s: a - 1, e: o - 1 })
            : (et.push({ s: a, e: 1 }), et.push({ s: 0, e: o - 1 }));
          var tt = [],
            rt,
            nt = et.length,
            it;
          for (rt = 0; rt < nt; rt += 1)
            if (((it = et[rt]), !(it.e * $ < _ || it.s * $ > _ + s))) {
              var at, st;
              it.s * $ <= _ ? (at = 0) : (at = (it.s * $ - _) / s),
                it.e * $ >= _ + s ? (st = 1) : (st = (it.e * $ - _) / s),
                tt.push([at, st]);
            }
          return tt.length || tt.push([0, 0]), tt;
        }),
        (TrimModifier.prototype.releasePathsData = function (a) {
          var o,
            s = a.length;
          for (o = 0; o < s; o += 1) segmentsLengthPool.release(a[o]);
          return (a.length = 0), a;
        }),
        (TrimModifier.prototype.processShapes = function (a) {
          var o, s;
          if (this._mdf || a) {
            var _ = (this.o.v % 360) / 360;
            if (
              (_ < 0 && (_ += 1),
              this.s.v > 1
                ? (o = 1 + _)
                : this.s.v < 0
                ? (o = 0 + _)
                : (o = this.s.v + _),
              this.e.v > 1
                ? (s = 1 + _)
                : this.e.v < 0
                ? (s = 0 + _)
                : (s = this.e.v + _),
              o > s)
            ) {
              var $ = o;
              (o = s), (s = $);
            }
            (o = Math.round(o * 1e4) * 1e-4),
              (s = Math.round(s * 1e4) * 1e-4),
              (this.sValue = o),
              (this.eValue = s);
          } else (o = this.sValue), (s = this.eValue);
          var et,
            tt,
            rt = this.shapes.length,
            nt,
            it,
            at,
            st,
            ot,
            dt = 0;
          if (s === o)
            for (tt = 0; tt < rt; tt += 1)
              this.shapes[tt].localShapeCollection.releaseShapes(),
                (this.shapes[tt].shape._mdf = !0),
                (this.shapes[tt].shape.paths =
                  this.shapes[tt].localShapeCollection),
                this._mdf && (this.shapes[tt].pathsData.length = 0);
          else if ((s === 1 && o === 0) || (s === 0 && o === 1)) {
            if (this._mdf)
              for (tt = 0; tt < rt; tt += 1)
                (this.shapes[tt].pathsData.length = 0),
                  (this.shapes[tt].shape._mdf = !0);
          } else {
            var ht = [],
              ft,
              mt;
            for (tt = 0; tt < rt; tt += 1)
              if (
                ((ft = this.shapes[tt]),
                !ft.shape._mdf && !this._mdf && !a && this.m !== 2)
              )
                ft.shape.paths = ft.localShapeCollection;
              else {
                if (
                  ((et = ft.shape.paths),
                  (it = et._length),
                  (ot = 0),
                  !ft.shape._mdf && ft.pathsData.length)
                )
                  ot = ft.totalShapeLength;
                else {
                  for (
                    at = this.releasePathsData(ft.pathsData), nt = 0;
                    nt < it;
                    nt += 1
                  )
                    (st = bez.getSegmentsLength(et.shapes[nt])),
                      at.push(st),
                      (ot += st.totalLength);
                  (ft.totalShapeLength = ot), (ft.pathsData = at);
                }
                (dt += ot), (ft.shape._mdf = !0);
              }
            var ut = o,
              lt = s,
              ct = 0,
              pt;
            for (tt = rt - 1; tt >= 0; tt -= 1)
              if (((ft = this.shapes[tt]), ft.shape._mdf)) {
                for (
                  mt = ft.localShapeCollection,
                    mt.releaseShapes(),
                    this.m === 2 && rt > 1
                      ? ((pt = this.calculateShapeEdges(
                          o,
                          s,
                          ft.totalShapeLength,
                          ct,
                          dt
                        )),
                        (ct += ft.totalShapeLength))
                      : (pt = [[ut, lt]]),
                    it = pt.length,
                    nt = 0;
                  nt < it;
                  nt += 1
                ) {
                  (ut = pt[nt][0]),
                    (lt = pt[nt][1]),
                    (ht.length = 0),
                    lt <= 1
                      ? ht.push({
                          s: ft.totalShapeLength * ut,
                          e: ft.totalShapeLength * lt,
                        })
                      : ut >= 1
                      ? ht.push({
                          s: ft.totalShapeLength * (ut - 1),
                          e: ft.totalShapeLength * (lt - 1),
                        })
                      : (ht.push({
                          s: ft.totalShapeLength * ut,
                          e: ft.totalShapeLength,
                        }),
                        ht.push({ s: 0, e: ft.totalShapeLength * (lt - 1) }));
                  var vt = this.addShapes(ft, ht[0]);
                  if (ht[0].s !== ht[0].e) {
                    if (ht.length > 1) {
                      var xt =
                        ft.shape.paths.shapes[ft.shape.paths._length - 1];
                      if (xt.c) {
                        var bt = vt.pop();
                        this.addPaths(vt, mt),
                          (vt = this.addShapes(ft, ht[1], bt));
                      } else
                        this.addPaths(vt, mt), (vt = this.addShapes(ft, ht[1]));
                    }
                    this.addPaths(vt, mt);
                  }
                }
                ft.shape.paths = mt;
              }
          }
        }),
        (TrimModifier.prototype.addPaths = function (a, o) {
          var s,
            _ = a.length;
          for (s = 0; s < _; s += 1) o.addShape(a[s]);
        }),
        (TrimModifier.prototype.addSegment = function (a, o, s, _, $, et, tt) {
          $.setXYAt(o[0], o[1], "o", et),
            $.setXYAt(s[0], s[1], "i", et + 1),
            tt && $.setXYAt(a[0], a[1], "v", et),
            $.setXYAt(_[0], _[1], "v", et + 1);
        }),
        (TrimModifier.prototype.addSegmentFromArray = function (a, o, s, _) {
          o.setXYAt(a[1], a[5], "o", s),
            o.setXYAt(a[2], a[6], "i", s + 1),
            _ && o.setXYAt(a[0], a[4], "v", s),
            o.setXYAt(a[3], a[7], "v", s + 1);
        }),
        (TrimModifier.prototype.addShapes = function (a, o, s) {
          var _ = a.pathsData,
            $ = a.shape.paths.shapes,
            et,
            tt = a.shape.paths._length,
            rt,
            nt,
            it = 0,
            at,
            st,
            ot,
            dt,
            ht = [],
            ft,
            mt = !0;
          for (
            s
              ? ((st = s._length), (ft = s._length))
              : ((s = shapePool.newElement()), (st = 0), (ft = 0)),
              ht.push(s),
              et = 0;
            et < tt;
            et += 1
          ) {
            for (
              ot = _[et].lengths,
                s.c = $[et].c,
                nt = $[et].c ? ot.length : ot.length + 1,
                rt = 1;
              rt < nt;
              rt += 1
            )
              if (((at = ot[rt - 1]), it + at.addedLength < o.s))
                (it += at.addedLength), (s.c = !1);
              else if (it > o.e) {
                s.c = !1;
                break;
              } else
                o.s <= it && o.e >= it + at.addedLength
                  ? (this.addSegment(
                      $[et].v[rt - 1],
                      $[et].o[rt - 1],
                      $[et].i[rt],
                      $[et].v[rt],
                      s,
                      st,
                      mt
                    ),
                    (mt = !1))
                  : ((dt = bez.getNewSegment(
                      $[et].v[rt - 1],
                      $[et].v[rt],
                      $[et].o[rt - 1],
                      $[et].i[rt],
                      (o.s - it) / at.addedLength,
                      (o.e - it) / at.addedLength,
                      ot[rt - 1]
                    )),
                    this.addSegmentFromArray(dt, s, st, mt),
                    (mt = !1),
                    (s.c = !1)),
                  (it += at.addedLength),
                  (st += 1);
            if ($[et].c && ot.length) {
              if (((at = ot[rt - 1]), it <= o.e)) {
                var ut = ot[rt - 1].addedLength;
                o.s <= it && o.e >= it + ut
                  ? (this.addSegment(
                      $[et].v[rt - 1],
                      $[et].o[rt - 1],
                      $[et].i[0],
                      $[et].v[0],
                      s,
                      st,
                      mt
                    ),
                    (mt = !1))
                  : ((dt = bez.getNewSegment(
                      $[et].v[rt - 1],
                      $[et].v[0],
                      $[et].o[rt - 1],
                      $[et].i[0],
                      (o.s - it) / ut,
                      (o.e - it) / ut,
                      ot[rt - 1]
                    )),
                    this.addSegmentFromArray(dt, s, st, mt),
                    (mt = !1),
                    (s.c = !1));
              } else s.c = !1;
              (it += at.addedLength), (st += 1);
            }
            if (
              (s._length &&
                (s.setXYAt(s.v[ft][0], s.v[ft][1], "i", ft),
                s.setXYAt(
                  s.v[s._length - 1][0],
                  s.v[s._length - 1][1],
                  "o",
                  s._length - 1
                )),
              it > o.e)
            )
              break;
            et < tt - 1 &&
              ((s = shapePool.newElement()), (mt = !0), ht.push(s), (st = 0));
          }
          return ht;
        });
      function PuckerAndBloatModifier() {}
      extendPrototype([ShapeModifier], PuckerAndBloatModifier),
        (PuckerAndBloatModifier.prototype.initModifierProperties = function (
          a,
          o
        ) {
          (this.getValue = this.processKeys),
            (this.amount = PropertyFactory.getProp(a, o.a, 0, null, this)),
            (this._isAnimated = !!this.amount.effectsSequence.length);
        }),
        (PuckerAndBloatModifier.prototype.processPath = function (a, o) {
          var s = o / 100,
            _ = [0, 0],
            $ = a._length,
            et = 0;
          for (et = 0; et < $; et += 1)
            (_[0] += a.v[et][0]), (_[1] += a.v[et][1]);
          (_[0] /= $), (_[1] /= $);
          var tt = shapePool.newElement();
          tt.c = a.c;
          var rt, nt, it, at, st, ot;
          for (et = 0; et < $; et += 1)
            (rt = a.v[et][0] + (_[0] - a.v[et][0]) * s),
              (nt = a.v[et][1] + (_[1] - a.v[et][1]) * s),
              (it = a.o[et][0] + (_[0] - a.o[et][0]) * -s),
              (at = a.o[et][1] + (_[1] - a.o[et][1]) * -s),
              (st = a.i[et][0] + (_[0] - a.i[et][0]) * -s),
              (ot = a.i[et][1] + (_[1] - a.i[et][1]) * -s),
              tt.setTripleAt(rt, nt, it, at, st, ot, et);
          return tt;
        }),
        (PuckerAndBloatModifier.prototype.processShapes = function (a) {
          var o,
            s,
            _ = this.shapes.length,
            $,
            et,
            tt = this.amount.v;
          if (tt !== 0) {
            var rt, nt;
            for (s = 0; s < _; s += 1) {
              if (
                ((rt = this.shapes[s]),
                (nt = rt.localShapeCollection),
                !(!rt.shape._mdf && !this._mdf && !a))
              )
                for (
                  nt.releaseShapes(),
                    rt.shape._mdf = !0,
                    o = rt.shape.paths.shapes,
                    et = rt.shape.paths._length,
                    $ = 0;
                  $ < et;
                  $ += 1
                )
                  nt.addShape(this.processPath(o[$], tt));
              rt.shape.paths = rt.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      var TransformPropertyFactory = (function () {
        var a = [0, 0];
        function o(nt) {
          var it = this._mdf;
          this.iterateDynamicProperties(),
            (this._mdf = this._mdf || it),
            this.a && nt.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
            this.s && nt.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
            this.sk && nt.skewFromAxis(-this.sk.v, this.sa.v),
            this.r
              ? nt.rotate(-this.r.v)
              : nt
                  .rotateZ(-this.rz.v)
                  .rotateY(this.ry.v)
                  .rotateX(this.rx.v)
                  .rotateZ(-this.or.v[2])
                  .rotateY(this.or.v[1])
                  .rotateX(this.or.v[0]),
            this.data.p.s
              ? this.data.p.z
                ? nt.translate(this.px.v, this.py.v, -this.pz.v)
                : nt.translate(this.px.v, this.py.v, 0)
              : nt.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
        }
        function s(nt) {
          if (this.elem.globalData.frameId !== this.frameId) {
            if (
              (this._isDirty &&
                (this.precalculateMatrix(), (this._isDirty = !1)),
              this.iterateDynamicProperties(),
              this._mdf || nt)
            ) {
              var it;
              if (
                (this.v.cloneFromProps(this.pre.props),
                this.appliedTransformations < 1 &&
                  this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                this.appliedTransformations < 2 &&
                  this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                this.sk &&
                  this.appliedTransformations < 3 &&
                  this.v.skewFromAxis(-this.sk.v, this.sa.v),
                this.r && this.appliedTransformations < 4
                  ? this.v.rotate(-this.r.v)
                  : !this.r &&
                    this.appliedTransformations < 4 &&
                    this.v
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]),
                this.autoOriented)
              ) {
                var at, st;
                if (
                  ((it = this.elem.globalData.frameRate),
                  this.p && this.p.keyframes && this.p.getValueAtTime)
                )
                  this.p._caching.lastFrame + this.p.offsetTime <=
                  this.p.keyframes[0].t
                    ? ((at = this.p.getValueAtTime(
                        (this.p.keyframes[0].t + 0.01) / it,
                        0
                      )),
                      (st = this.p.getValueAtTime(
                        this.p.keyframes[0].t / it,
                        0
                      )))
                    : this.p._caching.lastFrame + this.p.offsetTime >=
                      this.p.keyframes[this.p.keyframes.length - 1].t
                    ? ((at = this.p.getValueAtTime(
                        this.p.keyframes[this.p.keyframes.length - 1].t / it,
                        0
                      )),
                      (st = this.p.getValueAtTime(
                        (this.p.keyframes[this.p.keyframes.length - 1].t -
                          0.05) /
                          it,
                        0
                      )))
                    : ((at = this.p.pv),
                      (st = this.p.getValueAtTime(
                        (this.p._caching.lastFrame + this.p.offsetTime - 0.01) /
                          it,
                        this.p.offsetTime
                      )));
                else if (
                  this.px &&
                  this.px.keyframes &&
                  this.py.keyframes &&
                  this.px.getValueAtTime &&
                  this.py.getValueAtTime
                ) {
                  (at = []), (st = []);
                  var ot = this.px,
                    dt = this.py;
                  ot._caching.lastFrame + ot.offsetTime <= ot.keyframes[0].t
                    ? ((at[0] = ot.getValueAtTime(
                        (ot.keyframes[0].t + 0.01) / it,
                        0
                      )),
                      (at[1] = dt.getValueAtTime(
                        (dt.keyframes[0].t + 0.01) / it,
                        0
                      )),
                      (st[0] = ot.getValueAtTime(ot.keyframes[0].t / it, 0)),
                      (st[1] = dt.getValueAtTime(dt.keyframes[0].t / it, 0)))
                    : ot._caching.lastFrame + ot.offsetTime >=
                      ot.keyframes[ot.keyframes.length - 1].t
                    ? ((at[0] = ot.getValueAtTime(
                        ot.keyframes[ot.keyframes.length - 1].t / it,
                        0
                      )),
                      (at[1] = dt.getValueAtTime(
                        dt.keyframes[dt.keyframes.length - 1].t / it,
                        0
                      )),
                      (st[0] = ot.getValueAtTime(
                        (ot.keyframes[ot.keyframes.length - 1].t - 0.01) / it,
                        0
                      )),
                      (st[1] = dt.getValueAtTime(
                        (dt.keyframes[dt.keyframes.length - 1].t - 0.01) / it,
                        0
                      )))
                    : ((at = [ot.pv, dt.pv]),
                      (st[0] = ot.getValueAtTime(
                        (ot._caching.lastFrame + ot.offsetTime - 0.01) / it,
                        ot.offsetTime
                      )),
                      (st[1] = dt.getValueAtTime(
                        (dt._caching.lastFrame + dt.offsetTime - 0.01) / it,
                        dt.offsetTime
                      )));
                } else (st = a), (at = st);
                this.v.rotate(-Math.atan2(at[1] - st[1], at[0] - st[0]));
              }
              this.data.p && this.data.p.s
                ? this.data.p.z
                  ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                  : this.v.translate(this.px.v, this.py.v, 0)
                : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }
            this.frameId = this.elem.globalData.frameId;
          }
        }
        function _() {
          if (
            ((this.appliedTransformations = 0),
            this.pre.reset(),
            !this.a.effectsSequence.length)
          )
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
              (this.appliedTransformations = 1);
          else return;
          if (!this.s.effectsSequence.length)
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
              (this.appliedTransformations = 2);
          else return;
          if (this.sk)
            if (
              !this.sk.effectsSequence.length &&
              !this.sa.effectsSequence.length
            )
              this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                (this.appliedTransformations = 3);
            else return;
          this.r
            ? this.r.effectsSequence.length ||
              (this.pre.rotate(-this.r.v), (this.appliedTransformations = 4))
            : !this.rz.effectsSequence.length &&
              !this.ry.effectsSequence.length &&
              !this.rx.effectsSequence.length &&
              !this.or.effectsSequence.length &&
              (this.pre
                .rotateZ(-this.rz.v)
                .rotateY(this.ry.v)
                .rotateX(this.rx.v)
                .rotateZ(-this.or.v[2])
                .rotateY(this.or.v[1])
                .rotateX(this.or.v[0]),
              (this.appliedTransformations = 4));
        }
        function $() {}
        function et(nt) {
          this._addDynamicProperty(nt),
            this.elem.addDynamicProperty(nt),
            (this._isDirty = !0);
        }
        function tt(nt, it, at) {
          if (
            ((this.elem = nt),
            (this.frameId = -1),
            (this.propType = "transform"),
            (this.data = it),
            (this.v = new Matrix()),
            (this.pre = new Matrix()),
            (this.appliedTransformations = 0),
            this.initDynamicPropertyContainer(at || nt),
            it.p && it.p.s
              ? ((this.px = PropertyFactory.getProp(nt, it.p.x, 0, 0, this)),
                (this.py = PropertyFactory.getProp(nt, it.p.y, 0, 0, this)),
                it.p.z &&
                  (this.pz = PropertyFactory.getProp(nt, it.p.z, 0, 0, this)))
              : (this.p = PropertyFactory.getProp(
                  nt,
                  it.p || { k: [0, 0, 0] },
                  1,
                  0,
                  this
                )),
            it.rx)
          ) {
            if (
              ((this.rx = PropertyFactory.getProp(
                nt,
                it.rx,
                0,
                degToRads,
                this
              )),
              (this.ry = PropertyFactory.getProp(
                nt,
                it.ry,
                0,
                degToRads,
                this
              )),
              (this.rz = PropertyFactory.getProp(
                nt,
                it.rz,
                0,
                degToRads,
                this
              )),
              it.or.k[0].ti)
            ) {
              var st,
                ot = it.or.k.length;
              for (st = 0; st < ot; st += 1)
                (it.or.k[st].to = null), (it.or.k[st].ti = null);
            }
            (this.or = PropertyFactory.getProp(nt, it.or, 1, degToRads, this)),
              (this.or.sh = !0);
          } else
            this.r = PropertyFactory.getProp(
              nt,
              it.r || { k: 0 },
              0,
              degToRads,
              this
            );
          it.sk &&
            ((this.sk = PropertyFactory.getProp(nt, it.sk, 0, degToRads, this)),
            (this.sa = PropertyFactory.getProp(nt, it.sa, 0, degToRads, this))),
            (this.a = PropertyFactory.getProp(
              nt,
              it.a || { k: [0, 0, 0] },
              1,
              0,
              this
            )),
            (this.s = PropertyFactory.getProp(
              nt,
              it.s || { k: [100, 100, 100] },
              1,
              0.01,
              this
            )),
            it.o
              ? (this.o = PropertyFactory.getProp(nt, it.o, 0, 0.01, nt))
              : (this.o = { _mdf: !1, v: 1 }),
            (this._isDirty = !0),
            this.dynamicProperties.length || this.getValue(!0);
        }
        (tt.prototype = {
          applyToMatrix: o,
          getValue: s,
          precalculateMatrix: _,
          autoOrient: $,
        }),
          extendPrototype([DynamicPropertyContainer], tt),
          (tt.prototype.addDynamicProperty = et),
          (tt.prototype._addDynamicProperty =
            DynamicPropertyContainer.prototype.addDynamicProperty);
        function rt(nt, it, at) {
          return new tt(nt, it, at);
        }
        return { getTransformProperty: rt };
      })();
      function RepeaterModifier() {}
      extendPrototype([ShapeModifier], RepeaterModifier),
        (RepeaterModifier.prototype.initModifierProperties = function (a, o) {
          (this.getValue = this.processKeys),
            (this.c = PropertyFactory.getProp(a, o.c, 0, null, this)),
            (this.o = PropertyFactory.getProp(a, o.o, 0, null, this)),
            (this.tr = TransformPropertyFactory.getTransformProperty(
              a,
              o.tr,
              this
            )),
            (this.so = PropertyFactory.getProp(a, o.tr.so, 0, 0.01, this)),
            (this.eo = PropertyFactory.getProp(a, o.tr.eo, 0, 0.01, this)),
            (this.data = o),
            this.dynamicProperties.length || this.getValue(!0),
            (this._isAnimated = !!this.dynamicProperties.length),
            (this.pMatrix = new Matrix()),
            (this.rMatrix = new Matrix()),
            (this.sMatrix = new Matrix()),
            (this.tMatrix = new Matrix()),
            (this.matrix = new Matrix());
        }),
        (RepeaterModifier.prototype.applyTransforms = function (
          a,
          o,
          s,
          _,
          $,
          et
        ) {
          var tt = et ? -1 : 1,
            rt = _.s.v[0] + (1 - _.s.v[0]) * (1 - $),
            nt = _.s.v[1] + (1 - _.s.v[1]) * (1 - $);
          a.translate(_.p.v[0] * tt * $, _.p.v[1] * tt * $, _.p.v[2]),
            o.translate(-_.a.v[0], -_.a.v[1], _.a.v[2]),
            o.rotate(-_.r.v * tt * $),
            o.translate(_.a.v[0], _.a.v[1], _.a.v[2]),
            s.translate(-_.a.v[0], -_.a.v[1], _.a.v[2]),
            s.scale(et ? 1 / rt : rt, et ? 1 / nt : nt),
            s.translate(_.a.v[0], _.a.v[1], _.a.v[2]);
        }),
        (RepeaterModifier.prototype.init = function (a, o, s, _) {
          for (
            this.elem = a,
              this.arr = o,
              this.pos = s,
              this.elemsData = _,
              this._currentCopies = 0,
              this._elements = [],
              this._groups = [],
              this.frameId = -1,
              this.initDynamicPropertyContainer(a),
              this.initModifierProperties(a, o[s]);
            s > 0;

          )
            (s -= 1), this._elements.unshift(o[s]);
          this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
        }),
        (RepeaterModifier.prototype.resetElements = function (a) {
          var o,
            s = a.length;
          for (o = 0; o < s; o += 1)
            (a[o]._processed = !1),
              a[o].ty === "gr" && this.resetElements(a[o].it);
        }),
        (RepeaterModifier.prototype.cloneElements = function (a) {
          var o = JSON.parse(JSON.stringify(a));
          return this.resetElements(o), o;
        }),
        (RepeaterModifier.prototype.changeGroupRender = function (a, o) {
          var s,
            _ = a.length;
          for (s = 0; s < _; s += 1)
            (a[s]._render = o),
              a[s].ty === "gr" && this.changeGroupRender(a[s].it, o);
        }),
        (RepeaterModifier.prototype.processShapes = function (a) {
          var o,
            s,
            _,
            $,
            et,
            tt = !1;
          if (this._mdf || a) {
            var rt = Math.ceil(this.c.v);
            if (this._groups.length < rt) {
              for (; this._groups.length < rt; ) {
                var nt = { it: this.cloneElements(this._elements), ty: "gr" };
                nt.it.push({
                  a: { a: 0, ix: 1, k: [0, 0] },
                  nm: "Transform",
                  o: { a: 0, ix: 7, k: 100 },
                  p: { a: 0, ix: 2, k: [0, 0] },
                  r: {
                    a: 1,
                    ix: 6,
                    k: [
                      { s: 0, e: 0, t: 0 },
                      { s: 0, e: 0, t: 1 },
                    ],
                  },
                  s: { a: 0, ix: 3, k: [100, 100] },
                  sa: { a: 0, ix: 5, k: 0 },
                  sk: { a: 0, ix: 4, k: 0 },
                  ty: "tr",
                }),
                  this.arr.splice(0, 0, nt),
                  this._groups.splice(0, 0, nt),
                  (this._currentCopies += 1);
              }
              this.elem.reloadShapes(), (tt = !0);
            }
            et = 0;
            var it;
            for (_ = 0; _ <= this._groups.length - 1; _ += 1) {
              if (
                ((it = et < rt),
                (this._groups[_]._render = it),
                this.changeGroupRender(this._groups[_].it, it),
                !it)
              ) {
                var at = this.elemsData[_].it,
                  st = at[at.length - 1];
                st.transform.op.v !== 0
                  ? ((st.transform.op._mdf = !0), (st.transform.op.v = 0))
                  : (st.transform.op._mdf = !1);
              }
              et += 1;
            }
            this._currentCopies = rt;
            var ot = this.o.v,
              dt = ot % 1,
              ht = ot > 0 ? Math.floor(ot) : Math.ceil(ot),
              ft = this.pMatrix.props,
              mt = this.rMatrix.props,
              ut = this.sMatrix.props;
            this.pMatrix.reset(),
              this.rMatrix.reset(),
              this.sMatrix.reset(),
              this.tMatrix.reset(),
              this.matrix.reset();
            var lt = 0;
            if (ot > 0) {
              for (; lt < ht; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !1
                ),
                  (lt += 1);
              dt &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  dt,
                  !1
                ),
                (lt += dt));
            } else if (ot < 0) {
              for (; lt > ht; )
                this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  1,
                  !0
                ),
                  (lt -= 1);
              dt &&
                (this.applyTransforms(
                  this.pMatrix,
                  this.rMatrix,
                  this.sMatrix,
                  this.tr,
                  -dt,
                  !0
                ),
                (lt -= dt));
            }
            (_ = this.data.m === 1 ? 0 : this._currentCopies - 1),
              ($ = this.data.m === 1 ? 1 : -1),
              (et = this._currentCopies);
            for (var ct, pt; et; ) {
              if (
                ((o = this.elemsData[_].it),
                (s = o[o.length - 1].transform.mProps.v.props),
                (pt = s.length),
                (o[o.length - 1].transform.mProps._mdf = !0),
                (o[o.length - 1].transform.op._mdf = !0),
                (o[o.length - 1].transform.op.v =
                  this._currentCopies === 1
                    ? this.so.v
                    : this.so.v +
                      (this.eo.v - this.so.v) *
                        (_ / (this._currentCopies - 1))),
                lt !== 0)
              ) {
                for (
                  ((_ !== 0 && $ === 1) ||
                    (_ !== this._currentCopies - 1 && $ === -1)) &&
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      1,
                      !1
                    ),
                    this.matrix.transform(
                      mt[0],
                      mt[1],
                      mt[2],
                      mt[3],
                      mt[4],
                      mt[5],
                      mt[6],
                      mt[7],
                      mt[8],
                      mt[9],
                      mt[10],
                      mt[11],
                      mt[12],
                      mt[13],
                      mt[14],
                      mt[15]
                    ),
                    this.matrix.transform(
                      ut[0],
                      ut[1],
                      ut[2],
                      ut[3],
                      ut[4],
                      ut[5],
                      ut[6],
                      ut[7],
                      ut[8],
                      ut[9],
                      ut[10],
                      ut[11],
                      ut[12],
                      ut[13],
                      ut[14],
                      ut[15]
                    ),
                    this.matrix.transform(
                      ft[0],
                      ft[1],
                      ft[2],
                      ft[3],
                      ft[4],
                      ft[5],
                      ft[6],
                      ft[7],
                      ft[8],
                      ft[9],
                      ft[10],
                      ft[11],
                      ft[12],
                      ft[13],
                      ft[14],
                      ft[15]
                    ),
                    ct = 0;
                  ct < pt;
                  ct += 1
                )
                  s[ct] = this.matrix.props[ct];
                this.matrix.reset();
              } else
                for (this.matrix.reset(), ct = 0; ct < pt; ct += 1)
                  s[ct] = this.matrix.props[ct];
              (lt += 1), (et -= 1), (_ += $);
            }
          } else
            for (et = this._currentCopies, _ = 0, $ = 1; et; )
              (o = this.elemsData[_].it),
                (s = o[o.length - 1].transform.mProps.v.props),
                (o[o.length - 1].transform.mProps._mdf = !1),
                (o[o.length - 1].transform.op._mdf = !1),
                (et -= 1),
                (_ += $);
          return tt;
        }),
        (RepeaterModifier.prototype.addShape = function () {});
      function RoundCornersModifier() {}
      extendPrototype([ShapeModifier], RoundCornersModifier),
        (RoundCornersModifier.prototype.initModifierProperties = function (
          a,
          o
        ) {
          (this.getValue = this.processKeys),
            (this.rd = PropertyFactory.getProp(a, o.r, 0, null, this)),
            (this._isAnimated = !!this.rd.effectsSequence.length);
        }),
        (RoundCornersModifier.prototype.processPath = function (a, o) {
          var s = shapePool.newElement();
          s.c = a.c;
          var _,
            $ = a._length,
            et,
            tt,
            rt,
            nt,
            it,
            at,
            st = 0,
            ot,
            dt,
            ht,
            ft,
            mt,
            ut;
          for (_ = 0; _ < $; _ += 1)
            (et = a.v[_]),
              (rt = a.o[_]),
              (tt = a.i[_]),
              et[0] === rt[0] &&
              et[1] === rt[1] &&
              et[0] === tt[0] &&
              et[1] === tt[1]
                ? (_ === 0 || _ === $ - 1) && !a.c
                  ? (s.setTripleAt(
                      et[0],
                      et[1],
                      rt[0],
                      rt[1],
                      tt[0],
                      tt[1],
                      st
                    ),
                    (st += 1))
                  : (_ === 0 ? (nt = a.v[$ - 1]) : (nt = a.v[_ - 1]),
                    (it = Math.sqrt(
                      Math.pow(et[0] - nt[0], 2) + Math.pow(et[1] - nt[1], 2)
                    )),
                    (at = it ? Math.min(it / 2, o) / it : 0),
                    (mt = et[0] + (nt[0] - et[0]) * at),
                    (ot = mt),
                    (ut = et[1] - (et[1] - nt[1]) * at),
                    (dt = ut),
                    (ht = ot - (ot - et[0]) * roundCorner),
                    (ft = dt - (dt - et[1]) * roundCorner),
                    s.setTripleAt(ot, dt, ht, ft, mt, ut, st),
                    (st += 1),
                    _ === $ - 1 ? (nt = a.v[0]) : (nt = a.v[_ + 1]),
                    (it = Math.sqrt(
                      Math.pow(et[0] - nt[0], 2) + Math.pow(et[1] - nt[1], 2)
                    )),
                    (at = it ? Math.min(it / 2, o) / it : 0),
                    (ht = et[0] + (nt[0] - et[0]) * at),
                    (ot = ht),
                    (ft = et[1] + (nt[1] - et[1]) * at),
                    (dt = ft),
                    (mt = ot - (ot - et[0]) * roundCorner),
                    (ut = dt - (dt - et[1]) * roundCorner),
                    s.setTripleAt(ot, dt, ht, ft, mt, ut, st),
                    (st += 1))
                : (s.setTripleAt(
                    a.v[_][0],
                    a.v[_][1],
                    a.o[_][0],
                    a.o[_][1],
                    a.i[_][0],
                    a.i[_][1],
                    st
                  ),
                  (st += 1));
          return s;
        }),
        (RoundCornersModifier.prototype.processShapes = function (a) {
          var o,
            s,
            _ = this.shapes.length,
            $,
            et,
            tt = this.rd.v;
          if (tt !== 0) {
            var rt, nt;
            for (s = 0; s < _; s += 1) {
              if (
                ((rt = this.shapes[s]),
                (nt = rt.localShapeCollection),
                !(!rt.shape._mdf && !this._mdf && !a))
              )
                for (
                  nt.releaseShapes(),
                    rt.shape._mdf = !0,
                    o = rt.shape.paths.shapes,
                    et = rt.shape.paths._length,
                    $ = 0;
                  $ < et;
                  $ += 1
                )
                  nt.addShape(this.processPath(o[$], tt));
              rt.shape.paths = rt.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function floatEqual(a, o) {
        return Math.abs(a - o) * 1e5 <= Math.min(Math.abs(a), Math.abs(o));
      }
      function floatZero(a) {
        return Math.abs(a) <= 1e-5;
      }
      function lerp(a, o, s) {
        return a * (1 - s) + o * s;
      }
      function lerpPoint(a, o, s) {
        return [lerp(a[0], o[0], s), lerp(a[1], o[1], s)];
      }
      function quadRoots(a, o, s) {
        if (a === 0) return [];
        var _ = o * o - 4 * a * s;
        if (_ < 0) return [];
        var $ = -o / (2 * a);
        if (_ === 0) return [$];
        var et = Math.sqrt(_) / (2 * a);
        return [$ - et, $ + et];
      }
      function polynomialCoefficients(a, o, s, _) {
        return [
          -a + 3 * o - 3 * s + _,
          3 * a - 6 * o + 3 * s,
          -3 * a + 3 * o,
          a,
        ];
      }
      function singlePoint(a) {
        return new PolynomialBezier(a, a, a, a, !1);
      }
      function PolynomialBezier(a, o, s, _, $) {
        $ && pointEqual(a, o) && (o = lerpPoint(a, _, 1 / 3)),
          $ && pointEqual(s, _) && (s = lerpPoint(a, _, 2 / 3));
        var et = polynomialCoefficients(a[0], o[0], s[0], _[0]),
          tt = polynomialCoefficients(a[1], o[1], s[1], _[1]);
        (this.a = [et[0], tt[0]]),
          (this.b = [et[1], tt[1]]),
          (this.c = [et[2], tt[2]]),
          (this.d = [et[3], tt[3]]),
          (this.points = [a, o, s, _]);
      }
      (PolynomialBezier.prototype.point = function (a) {
        return [
          ((this.a[0] * a + this.b[0]) * a + this.c[0]) * a + this.d[0],
          ((this.a[1] * a + this.b[1]) * a + this.c[1]) * a + this.d[1],
        ];
      }),
        (PolynomialBezier.prototype.derivative = function (a) {
          return [
            (3 * a * this.a[0] + 2 * this.b[0]) * a + this.c[0],
            (3 * a * this.a[1] + 2 * this.b[1]) * a + this.c[1],
          ];
        }),
        (PolynomialBezier.prototype.tangentAngle = function (a) {
          var o = this.derivative(a);
          return Math.atan2(o[1], o[0]);
        }),
        (PolynomialBezier.prototype.normalAngle = function (a) {
          var o = this.derivative(a);
          return Math.atan2(o[0], o[1]);
        }),
        (PolynomialBezier.prototype.inflectionPoints = function () {
          var a = this.a[1] * this.b[0] - this.a[0] * this.b[1];
          if (floatZero(a)) return [];
          var o = (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) / a,
            s =
              o * o -
              ((1 / 3) * (this.b[1] * this.c[0] - this.b[0] * this.c[1])) / a;
          if (s < 0) return [];
          var _ = Math.sqrt(s);
          return floatZero(_)
            ? _ > 0 && _ < 1
              ? [o]
              : []
            : [o - _, o + _].filter(function ($) {
                return $ > 0 && $ < 1;
              });
        }),
        (PolynomialBezier.prototype.split = function (a) {
          if (a <= 0) return [singlePoint(this.points[0]), this];
          if (a >= 1)
            return [this, singlePoint(this.points[this.points.length - 1])];
          var o = lerpPoint(this.points[0], this.points[1], a),
            s = lerpPoint(this.points[1], this.points[2], a),
            _ = lerpPoint(this.points[2], this.points[3], a),
            $ = lerpPoint(o, s, a),
            et = lerpPoint(s, _, a),
            tt = lerpPoint($, et, a);
          return [
            new PolynomialBezier(this.points[0], o, $, tt, !0),
            new PolynomialBezier(tt, et, _, this.points[3], !0),
          ];
        });
      function extrema(a, o) {
        var s = a.points[0][o],
          _ = a.points[a.points.length - 1][o];
        if (s > _) {
          var $ = _;
          (_ = s), (s = $);
        }
        for (
          var et = quadRoots(3 * a.a[o], 2 * a.b[o], a.c[o]), tt = 0;
          tt < et.length;
          tt += 1
        )
          if (et[tt] > 0 && et[tt] < 1) {
            var rt = a.point(et[tt])[o];
            rt < s ? (s = rt) : rt > _ && (_ = rt);
          }
        return { min: s, max: _ };
      }
      (PolynomialBezier.prototype.bounds = function () {
        return { x: extrema(this, 0), y: extrema(this, 1) };
      }),
        (PolynomialBezier.prototype.boundingBox = function () {
          var a = this.bounds();
          return {
            left: a.x.min,
            right: a.x.max,
            top: a.y.min,
            bottom: a.y.max,
            width: a.x.max - a.x.min,
            height: a.y.max - a.y.min,
            cx: (a.x.max + a.x.min) / 2,
            cy: (a.y.max + a.y.min) / 2,
          };
        });
      function intersectData(a, o, s) {
        var _ = a.boundingBox();
        return {
          cx: _.cx,
          cy: _.cy,
          width: _.width,
          height: _.height,
          bez: a,
          t: (o + s) / 2,
          t1: o,
          t2: s,
        };
      }
      function splitData(a) {
        var o = a.bez.split(0.5);
        return [intersectData(o[0], a.t1, a.t), intersectData(o[1], a.t, a.t2)];
      }
      function boxIntersect(a, o) {
        return (
          Math.abs(a.cx - o.cx) * 2 < a.width + o.width &&
          Math.abs(a.cy - o.cy) * 2 < a.height + o.height
        );
      }
      function intersectsImpl(a, o, s, _, $, et) {
        if (boxIntersect(a, o)) {
          if (
            s >= et ||
            (a.width <= _ && a.height <= _ && o.width <= _ && o.height <= _)
          ) {
            $.push([a.t, o.t]);
            return;
          }
          var tt = splitData(a),
            rt = splitData(o);
          intersectsImpl(tt[0], rt[0], s + 1, _, $, et),
            intersectsImpl(tt[0], rt[1], s + 1, _, $, et),
            intersectsImpl(tt[1], rt[0], s + 1, _, $, et),
            intersectsImpl(tt[1], rt[1], s + 1, _, $, et);
        }
      }
      (PolynomialBezier.prototype.intersections = function (a, o, s) {
        o === void 0 && (o = 2), s === void 0 && (s = 7);
        var _ = [];
        return (
          intersectsImpl(
            intersectData(this, 0, 1),
            intersectData(a, 0, 1),
            0,
            o,
            _,
            s
          ),
          _
        );
      }),
        (PolynomialBezier.shapeSegment = function (a, o) {
          var s = (o + 1) % a.length();
          return new PolynomialBezier(a.v[o], a.o[o], a.i[s], a.v[s], !0);
        }),
        (PolynomialBezier.shapeSegmentInverted = function (a, o) {
          var s = (o + 1) % a.length();
          return new PolynomialBezier(a.v[s], a.i[s], a.o[o], a.v[o], !0);
        });
      function crossProduct(a, o) {
        return [
          a[1] * o[2] - a[2] * o[1],
          a[2] * o[0] - a[0] * o[2],
          a[0] * o[1] - a[1] * o[0],
        ];
      }
      function lineIntersection(a, o, s, _) {
        var $ = [a[0], a[1], 1],
          et = [o[0], o[1], 1],
          tt = [s[0], s[1], 1],
          rt = [_[0], _[1], 1],
          nt = crossProduct(crossProduct($, et), crossProduct(tt, rt));
        return floatZero(nt[2]) ? null : [nt[0] / nt[2], nt[1] / nt[2]];
      }
      function polarOffset(a, o, s) {
        return [a[0] + Math.cos(o) * s, a[1] - Math.sin(o) * s];
      }
      function pointDistance(a, o) {
        return Math.hypot(a[0] - o[0], a[1] - o[1]);
      }
      function pointEqual(a, o) {
        return floatEqual(a[0], o[0]) && floatEqual(a[1], o[1]);
      }
      function ZigZagModifier() {}
      extendPrototype([ShapeModifier], ZigZagModifier),
        (ZigZagModifier.prototype.initModifierProperties = function (a, o) {
          (this.getValue = this.processKeys),
            (this.amplitude = PropertyFactory.getProp(a, o.s, 0, null, this)),
            (this.frequency = PropertyFactory.getProp(a, o.r, 0, null, this)),
            (this.pointsType = PropertyFactory.getProp(a, o.pt, 0, null, this)),
            (this._isAnimated =
              this.amplitude.effectsSequence.length !== 0 ||
              this.frequency.effectsSequence.length !== 0 ||
              this.pointsType.effectsSequence.length !== 0);
        });
      function setPoint(a, o, s, _, $, et, tt) {
        var rt = s - Math.PI / 2,
          nt = s + Math.PI / 2,
          it = o[0] + Math.cos(s) * _ * $,
          at = o[1] - Math.sin(s) * _ * $;
        a.setTripleAt(
          it,
          at,
          it + Math.cos(rt) * et,
          at - Math.sin(rt) * et,
          it + Math.cos(nt) * tt,
          at - Math.sin(nt) * tt,
          a.length()
        );
      }
      function getPerpendicularVector(a, o) {
        var s = [o[0] - a[0], o[1] - a[1]],
          _ = -Math.PI * 0.5,
          $ = [
            Math.cos(_) * s[0] - Math.sin(_) * s[1],
            Math.sin(_) * s[0] + Math.cos(_) * s[1],
          ];
        return $;
      }
      function getProjectingAngle(a, o) {
        var s = o === 0 ? a.length() - 1 : o - 1,
          _ = (o + 1) % a.length(),
          $ = a.v[s],
          et = a.v[_],
          tt = getPerpendicularVector($, et);
        return Math.atan2(0, 1) - Math.atan2(tt[1], tt[0]);
      }
      function zigZagCorner(a, o, s, _, $, et, tt) {
        var rt = getProjectingAngle(o, s),
          nt = o.v[s % o._length],
          it = o.v[s === 0 ? o._length - 1 : s - 1],
          at = o.v[(s + 1) % o._length],
          st =
            et === 2
              ? Math.sqrt(
                  Math.pow(nt[0] - it[0], 2) + Math.pow(nt[1] - it[1], 2)
                )
              : 0,
          ot =
            et === 2
              ? Math.sqrt(
                  Math.pow(nt[0] - at[0], 2) + Math.pow(nt[1] - at[1], 2)
                )
              : 0;
        setPoint(
          a,
          o.v[s % o._length],
          rt,
          tt,
          _,
          ot / (($ + 1) * 2),
          st / (($ + 1) * 2)
        );
      }
      function zigZagSegment(a, o, s, _, $, et) {
        for (var tt = 0; tt < _; tt += 1) {
          var rt = (tt + 1) / (_ + 1),
            nt =
              $ === 2
                ? Math.sqrt(
                    Math.pow(o.points[3][0] - o.points[0][0], 2) +
                      Math.pow(o.points[3][1] - o.points[0][1], 2)
                  )
                : 0,
            it = o.normalAngle(rt),
            at = o.point(rt);
          setPoint(a, at, it, et, s, nt / ((_ + 1) * 2), nt / ((_ + 1) * 2)),
            (et = -et);
        }
        return et;
      }
      (ZigZagModifier.prototype.processPath = function (a, o, s, _) {
        var $ = a._length,
          et = shapePool.newElement();
        if (((et.c = a.c), a.c || ($ -= 1), $ === 0)) return et;
        var tt = -1,
          rt = PolynomialBezier.shapeSegment(a, 0);
        zigZagCorner(et, a, 0, o, s, _, tt);
        for (var nt = 0; nt < $; nt += 1)
          (tt = zigZagSegment(et, rt, o, s, _, -tt)),
            nt === $ - 1 && !a.c
              ? (rt = null)
              : (rt = PolynomialBezier.shapeSegment(a, (nt + 1) % $)),
            zigZagCorner(et, a, nt + 1, o, s, _, tt);
        return et;
      }),
        (ZigZagModifier.prototype.processShapes = function (a) {
          var o,
            s,
            _ = this.shapes.length,
            $,
            et,
            tt = this.amplitude.v,
            rt = Math.max(0, Math.round(this.frequency.v)),
            nt = this.pointsType.v;
          if (tt !== 0) {
            var it, at;
            for (s = 0; s < _; s += 1) {
              if (
                ((it = this.shapes[s]),
                (at = it.localShapeCollection),
                !(!it.shape._mdf && !this._mdf && !a))
              )
                for (
                  at.releaseShapes(),
                    it.shape._mdf = !0,
                    o = it.shape.paths.shapes,
                    et = it.shape.paths._length,
                    $ = 0;
                  $ < et;
                  $ += 1
                )
                  at.addShape(this.processPath(o[$], tt, rt, nt));
              it.shape.paths = it.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function linearOffset(a, o, s) {
        var _ = Math.atan2(o[0] - a[0], o[1] - a[1]);
        return [polarOffset(a, _, s), polarOffset(o, _, s)];
      }
      function offsetSegment(a, o) {
        var s, _, $, et, tt, rt, nt;
        (nt = linearOffset(a.points[0], a.points[1], o)),
          (s = nt[0]),
          (_ = nt[1]),
          (nt = linearOffset(a.points[1], a.points[2], o)),
          ($ = nt[0]),
          (et = nt[1]),
          (nt = linearOffset(a.points[2], a.points[3], o)),
          (tt = nt[0]),
          (rt = nt[1]);
        var it = lineIntersection(s, _, $, et);
        it === null && (it = _);
        var at = lineIntersection(tt, rt, $, et);
        return at === null && (at = tt), new PolynomialBezier(s, it, at, rt);
      }
      function joinLines(a, o, s, _, $) {
        var et = o.points[3],
          tt = s.points[0];
        if (_ === 3 || pointEqual(et, tt)) return et;
        if (_ === 2) {
          var rt = -o.tangentAngle(1),
            nt = -s.tangentAngle(0) + Math.PI,
            it = lineIntersection(
              et,
              polarOffset(et, rt + Math.PI / 2, 100),
              tt,
              polarOffset(tt, rt + Math.PI / 2, 100)
            ),
            at = it ? pointDistance(it, et) : pointDistance(et, tt) / 2,
            st = polarOffset(et, rt, 2 * at * roundCorner);
          return (
            a.setXYAt(st[0], st[1], "o", a.length() - 1),
            (st = polarOffset(tt, nt, 2 * at * roundCorner)),
            a.setTripleAt(tt[0], tt[1], tt[0], tt[1], st[0], st[1], a.length()),
            tt
          );
        }
        var ot = pointEqual(et, o.points[2]) ? o.points[0] : o.points[2],
          dt = pointEqual(tt, s.points[1]) ? s.points[3] : s.points[1],
          ht = lineIntersection(ot, et, tt, dt);
        return ht && pointDistance(ht, et) < $
          ? (a.setTripleAt(
              ht[0],
              ht[1],
              ht[0],
              ht[1],
              ht[0],
              ht[1],
              a.length()
            ),
            ht)
          : et;
      }
      function getIntersection(a, o) {
        var s = a.intersections(o);
        return (
          s.length && floatEqual(s[0][0], 1) && s.shift(),
          s.length ? s[0] : null
        );
      }
      function pruneSegmentIntersection(a, o) {
        var s = a.slice(),
          _ = o.slice(),
          $ = getIntersection(a[a.length - 1], o[0]);
        return (
          $ &&
            ((s[a.length - 1] = a[a.length - 1].split($[0])[0]),
            (_[0] = o[0].split($[1])[1])),
          a.length > 1 &&
          o.length > 1 &&
          (($ = getIntersection(a[0], o[o.length - 1])), $)
            ? [[a[0].split($[0])[0]], [o[o.length - 1].split($[1])[1]]]
            : [s, _]
        );
      }
      function pruneIntersections(a) {
        for (var o, s = 1; s < a.length; s += 1)
          (o = pruneSegmentIntersection(a[s - 1], a[s])),
            (a[s - 1] = o[0]),
            (a[s] = o[1]);
        return (
          a.length > 1 &&
            ((o = pruneSegmentIntersection(a[a.length - 1], a[0])),
            (a[a.length - 1] = o[0]),
            (a[0] = o[1])),
          a
        );
      }
      function offsetSegmentSplit(a, o) {
        var s = a.inflectionPoints(),
          _,
          $,
          et,
          tt;
        if (s.length === 0) return [offsetSegment(a, o)];
        if (s.length === 1 || floatEqual(s[1], 1))
          return (
            (et = a.split(s[0])),
            (_ = et[0]),
            ($ = et[1]),
            [offsetSegment(_, o), offsetSegment($, o)]
          );
        (et = a.split(s[0])), (_ = et[0]);
        var rt = (s[1] - s[0]) / (1 - s[0]);
        return (
          (et = et[1].split(rt)),
          (tt = et[0]),
          ($ = et[1]),
          [offsetSegment(_, o), offsetSegment(tt, o), offsetSegment($, o)]
        );
      }
      function OffsetPathModifier() {}
      extendPrototype([ShapeModifier], OffsetPathModifier),
        (OffsetPathModifier.prototype.initModifierProperties = function (a, o) {
          (this.getValue = this.processKeys),
            (this.amount = PropertyFactory.getProp(a, o.a, 0, null, this)),
            (this.miterLimit = PropertyFactory.getProp(a, o.ml, 0, null, this)),
            (this.lineJoin = o.lj),
            (this._isAnimated = this.amount.effectsSequence.length !== 0);
        }),
        (OffsetPathModifier.prototype.processPath = function (a, o, s, _) {
          var $ = shapePool.newElement();
          $.c = a.c;
          var et = a.length();
          a.c || (et -= 1);
          var tt,
            rt,
            nt,
            it = [];
          for (tt = 0; tt < et; tt += 1)
            (nt = PolynomialBezier.shapeSegment(a, tt)),
              it.push(offsetSegmentSplit(nt, o));
          if (!a.c)
            for (tt = et - 1; tt >= 0; tt -= 1)
              (nt = PolynomialBezier.shapeSegmentInverted(a, tt)),
                it.push(offsetSegmentSplit(nt, o));
          it = pruneIntersections(it);
          var at = null,
            st = null;
          for (tt = 0; tt < it.length; tt += 1) {
            var ot = it[tt];
            for (
              st && (at = joinLines($, st, ot[0], s, _)),
                st = ot[ot.length - 1],
                rt = 0;
              rt < ot.length;
              rt += 1
            )
              (nt = ot[rt]),
                at && pointEqual(nt.points[0], at)
                  ? $.setXYAt(
                      nt.points[1][0],
                      nt.points[1][1],
                      "o",
                      $.length() - 1
                    )
                  : $.setTripleAt(
                      nt.points[0][0],
                      nt.points[0][1],
                      nt.points[1][0],
                      nt.points[1][1],
                      nt.points[0][0],
                      nt.points[0][1],
                      $.length()
                    ),
                $.setTripleAt(
                  nt.points[3][0],
                  nt.points[3][1],
                  nt.points[3][0],
                  nt.points[3][1],
                  nt.points[2][0],
                  nt.points[2][1],
                  $.length()
                ),
                (at = nt.points[3]);
          }
          return it.length && joinLines($, st, it[0][0], s, _), $;
        }),
        (OffsetPathModifier.prototype.processShapes = function (a) {
          var o,
            s,
            _ = this.shapes.length,
            $,
            et,
            tt = this.amount.v,
            rt = this.miterLimit.v,
            nt = this.lineJoin;
          if (tt !== 0) {
            var it, at;
            for (s = 0; s < _; s += 1) {
              if (
                ((it = this.shapes[s]),
                (at = it.localShapeCollection),
                !(!it.shape._mdf && !this._mdf && !a))
              )
                for (
                  at.releaseShapes(),
                    it.shape._mdf = !0,
                    o = it.shape.paths.shapes,
                    et = it.shape.paths._length,
                    $ = 0;
                  $ < et;
                  $ += 1
                )
                  at.addShape(this.processPath(o[$], tt, nt, rt));
              it.shape.paths = it.localShapeCollection;
            }
          }
          this.dynamicProperties.length || (this._mdf = !1);
        });
      function getFontProperties(a) {
        for (
          var o = a.fStyle ? a.fStyle.split(" ") : [],
            s = "normal",
            _ = "normal",
            $ = o.length,
            et,
            tt = 0;
          tt < $;
          tt += 1
        )
          switch (((et = o[tt].toLowerCase()), et)) {
            case "italic":
              _ = "italic";
              break;
            case "bold":
              s = "700";
              break;
            case "black":
              s = "900";
              break;
            case "medium":
              s = "500";
              break;
            case "regular":
            case "normal":
              s = "400";
              break;
            case "light":
            case "thin":
              s = "200";
              break;
          }
        return { style: _, weight: a.fWeight || s };
      }
      var FontManager = (function () {
        var a = 5e3,
          o = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
          s = [];
        s = s.concat([
          2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368,
          2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
          2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403,
        ]);
        var _ = 127988,
          $ = 917631,
          et = 917601,
          tt = 917626,
          rt = 65039,
          nt = 8205,
          it = 127462,
          at = 127487,
          st = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
        function ot(Et) {
          var kt = Et.split(","),
            gt,
            yt = kt.length,
            wt = [];
          for (gt = 0; gt < yt; gt += 1)
            kt[gt] !== "sans-serif" &&
              kt[gt] !== "monospace" &&
              wt.push(kt[gt]);
          return wt.join(",");
        }
        function dt(Et, kt) {
          var gt = createTag("span");
          gt.setAttribute("aria-hidden", !0), (gt.style.fontFamily = kt);
          var yt = createTag("span");
          (yt.innerText = "giItT1WQy@!-/#"),
            (gt.style.position = "absolute"),
            (gt.style.left = "-10000px"),
            (gt.style.top = "-10000px"),
            (gt.style.fontSize = "300px"),
            (gt.style.fontVariant = "normal"),
            (gt.style.fontStyle = "normal"),
            (gt.style.fontWeight = "normal"),
            (gt.style.letterSpacing = "0"),
            gt.appendChild(yt),
            document.body.appendChild(gt);
          var wt = yt.offsetWidth;
          return (
            (yt.style.fontFamily = ot(Et) + ", " + kt),
            { node: yt, w: wt, parent: gt }
          );
        }
        function ht() {
          var Et,
            kt = this.fonts.length,
            gt,
            yt,
            wt = kt;
          for (Et = 0; Et < kt; Et += 1)
            this.fonts[Et].loaded
              ? (wt -= 1)
              : this.fonts[Et].fOrigin === "n" || this.fonts[Et].origin === 0
              ? (this.fonts[Et].loaded = !0)
              : ((gt = this.fonts[Et].monoCase.node),
                (yt = this.fonts[Et].monoCase.w),
                gt.offsetWidth !== yt
                  ? ((wt -= 1), (this.fonts[Et].loaded = !0))
                  : ((gt = this.fonts[Et].sansCase.node),
                    (yt = this.fonts[Et].sansCase.w),
                    gt.offsetWidth !== yt &&
                      ((wt -= 1), (this.fonts[Et].loaded = !0))),
                this.fonts[Et].loaded &&
                  (this.fonts[Et].sansCase.parent.parentNode.removeChild(
                    this.fonts[Et].sansCase.parent
                  ),
                  this.fonts[Et].monoCase.parent.parentNode.removeChild(
                    this.fonts[Et].monoCase.parent
                  )));
          wt !== 0 && Date.now() - this.initTime < a
            ? setTimeout(this.checkLoadedFontsBinded, 20)
            : setTimeout(this.setIsLoadedBinded, 10);
        }
        function ft(Et, kt) {
          var gt = document.body && kt ? "svg" : "canvas",
            yt,
            wt = getFontProperties(Et);
          if (gt === "svg") {
            var _t = createNS("text");
            (_t.style.fontSize = "100px"),
              _t.setAttribute("font-family", Et.fFamily),
              _t.setAttribute("font-style", wt.style),
              _t.setAttribute("font-weight", wt.weight),
              (_t.textContent = "1"),
              Et.fClass
                ? ((_t.style.fontFamily = "inherit"),
                  _t.setAttribute("class", Et.fClass))
                : (_t.style.fontFamily = Et.fFamily),
              kt.appendChild(_t),
              (yt = _t);
          } else {
            var Ft = new OffscreenCanvas(500, 500).getContext("2d");
            (Ft.font = wt.style + " " + wt.weight + " 100px " + Et.fFamily),
              (yt = Ft);
          }
          function Vt(Lt) {
            return gt === "svg"
              ? ((yt.textContent = Lt), yt.getComputedTextLength())
              : yt.measureText(Lt).width;
          }
          return { measureText: Vt };
        }
        function mt(Et, kt) {
          if (!Et) {
            this.isLoaded = !0;
            return;
          }
          if (this.chars) {
            (this.isLoaded = !0), (this.fonts = Et.list);
            return;
          }
          if (!document.body) {
            (this.isLoaded = !0),
              Et.list.forEach(function (Kt) {
                (Kt.helper = ft(Kt)), (Kt.cache = {});
              }),
              (this.fonts = Et.list);
            return;
          }
          var gt = Et.list,
            yt,
            wt = gt.length,
            _t = wt;
          for (yt = 0; yt < wt; yt += 1) {
            var Ft = !0,
              Vt,
              Lt;
            if (
              ((gt[yt].loaded = !1),
              (gt[yt].monoCase = dt(gt[yt].fFamily, "monospace")),
              (gt[yt].sansCase = dt(gt[yt].fFamily, "sans-serif")),
              !gt[yt].fPath)
            )
              (gt[yt].loaded = !0), (_t -= 1);
            else if (gt[yt].fOrigin === "p" || gt[yt].origin === 3) {
              if (
                ((Vt = document.querySelectorAll(
                  'style[f-forigin="p"][f-family="' +
                    gt[yt].fFamily +
                    '"], style[f-origin="3"][f-family="' +
                    gt[yt].fFamily +
                    '"]'
                )),
                Vt.length > 0 && (Ft = !1),
                Ft)
              ) {
                var Wt = createTag("style");
                Wt.setAttribute("f-forigin", gt[yt].fOrigin),
                  Wt.setAttribute("f-origin", gt[yt].origin),
                  Wt.setAttribute("f-family", gt[yt].fFamily),
                  (Wt.type = "text/css"),
                  (Wt.innerText =
                    "@font-face {font-family: " +
                    gt[yt].fFamily +
                    "; font-style: normal; src: url('" +
                    gt[yt].fPath +
                    "');}"),
                  kt.appendChild(Wt);
              }
            } else if (gt[yt].fOrigin === "g" || gt[yt].origin === 1) {
              for (
                Vt = document.querySelectorAll(
                  'link[f-forigin="g"], link[f-origin="1"]'
                ),
                  Lt = 0;
                Lt < Vt.length;
                Lt += 1
              )
                Vt[Lt].href.indexOf(gt[yt].fPath) !== -1 && (Ft = !1);
              if (Ft) {
                var zt = createTag("link");
                zt.setAttribute("f-forigin", gt[yt].fOrigin),
                  zt.setAttribute("f-origin", gt[yt].origin),
                  (zt.type = "text/css"),
                  (zt.rel = "stylesheet"),
                  (zt.href = gt[yt].fPath),
                  document.body.appendChild(zt);
              }
            } else if (gt[yt].fOrigin === "t" || gt[yt].origin === 2) {
              for (
                Vt = document.querySelectorAll(
                  'script[f-forigin="t"], script[f-origin="2"]'
                ),
                  Lt = 0;
                Lt < Vt.length;
                Lt += 1
              )
                gt[yt].fPath === Vt[Lt].src && (Ft = !1);
              if (Ft) {
                var Gt = createTag("link");
                Gt.setAttribute("f-forigin", gt[yt].fOrigin),
                  Gt.setAttribute("f-origin", gt[yt].origin),
                  Gt.setAttribute("rel", "stylesheet"),
                  Gt.setAttribute("href", gt[yt].fPath),
                  kt.appendChild(Gt);
              }
            }
            (gt[yt].helper = ft(gt[yt], kt)),
              (gt[yt].cache = {}),
              this.fonts.push(gt[yt]);
          }
          _t === 0
            ? (this.isLoaded = !0)
            : setTimeout(this.checkLoadedFonts.bind(this), 100);
        }
        function ut(Et) {
          if (Et) {
            this.chars || (this.chars = []);
            var kt,
              gt = Et.length,
              yt,
              wt = this.chars.length,
              _t;
            for (kt = 0; kt < gt; kt += 1) {
              for (yt = 0, _t = !1; yt < wt; )
                this.chars[yt].style === Et[kt].style &&
                  this.chars[yt].fFamily === Et[kt].fFamily &&
                  this.chars[yt].ch === Et[kt].ch &&
                  (_t = !0),
                  (yt += 1);
              _t || (this.chars.push(Et[kt]), (wt += 1));
            }
          }
        }
        function lt(Et, kt, gt) {
          for (var yt = 0, wt = this.chars.length; yt < wt; ) {
            if (
              this.chars[yt].ch === Et &&
              this.chars[yt].style === kt &&
              this.chars[yt].fFamily === gt
            )
              return this.chars[yt];
            yt += 1;
          }
          return (
            ((typeof Et == "string" && Et.charCodeAt(0) !== 13) || !Et) &&
              console &&
              console.warn &&
              !this._warned &&
              ((this._warned = !0),
              console.warn(
                "Missing character from exported characters list: ",
                Et,
                kt,
                gt
              )),
            o
          );
        }
        function ct(Et, kt, gt) {
          var yt = this.getFontByName(kt),
            wt = Et;
          if (!yt.cache[wt]) {
            var _t = yt.helper;
            if (Et === " ") {
              var Ft = _t.measureText("|" + Et + "|"),
                Vt = _t.measureText("||");
              yt.cache[wt] = (Ft - Vt) / 100;
            } else yt.cache[wt] = _t.measureText(Et) / 100;
          }
          return yt.cache[wt] * gt;
        }
        function pt(Et) {
          for (var kt = 0, gt = this.fonts.length; kt < gt; ) {
            if (this.fonts[kt].fName === Et) return this.fonts[kt];
            kt += 1;
          }
          return this.fonts[0];
        }
        function vt(Et) {
          var kt = 0,
            gt = Et.charCodeAt(0);
          if (gt >= 55296 && gt <= 56319) {
            var yt = Et.charCodeAt(1);
            yt >= 56320 &&
              yt <= 57343 &&
              (kt = (gt - 55296) * 1024 + yt - 56320 + 65536);
          }
          return kt;
        }
        function xt(Et, kt) {
          var gt = Et.toString(16) + kt.toString(16);
          return st.indexOf(gt) !== -1;
        }
        function bt(Et) {
          return Et === nt;
        }
        function St(Et) {
          return Et === rt;
        }
        function Pt(Et) {
          var kt = vt(Et);
          return kt >= it && kt <= at;
        }
        function Mt(Et) {
          return Pt(Et.substr(0, 2)) && Pt(Et.substr(2, 2));
        }
        function It(Et) {
          return s.indexOf(Et) !== -1;
        }
        function Rt(Et, kt) {
          var gt = vt(Et.substr(kt, 2));
          if (gt !== _) return !1;
          var yt = 0;
          for (kt += 2; yt < 5; ) {
            if (((gt = vt(Et.substr(kt, 2))), gt < et || gt > tt)) return !1;
            (yt += 1), (kt += 2);
          }
          return vt(Et.substr(kt, 2)) === $;
        }
        function jt() {
          this.isLoaded = !0;
        }
        var Dt = function () {
          (this.fonts = []),
            (this.chars = null),
            (this.typekitLoaded = 0),
            (this.isLoaded = !1),
            (this._warned = !1),
            (this.initTime = Date.now()),
            (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
            (this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this));
        };
        (Dt.isModifier = xt),
          (Dt.isZeroWidthJoiner = bt),
          (Dt.isFlagEmoji = Mt),
          (Dt.isRegionalCode = Pt),
          (Dt.isCombinedCharacter = It),
          (Dt.isRegionalFlag = Rt),
          (Dt.isVariationSelector = St),
          (Dt.BLACK_FLAG_CODE_POINT = _);
        var At = {
          addChars: ut,
          addFonts: mt,
          getCharData: lt,
          getFontByName: pt,
          measureText: ct,
          checkLoadedFonts: ht,
          setIsLoaded: jt,
        };
        return (Dt.prototype = At), Dt;
      })();
      function SlotManager(a) {
        this.animationData = a;
      }
      SlotManager.prototype.getProp = function (a) {
        return this.animationData.slots && this.animationData.slots[a.sid]
          ? Object.assign(a, this.animationData.slots[a.sid].p)
          : a;
      };
      function slotFactory(a) {
        return new SlotManager(a);
      }
      function RenderableElement() {}
      RenderableElement.prototype = {
        initRenderable: function () {
          (this.isInRange = !1),
            (this.hidden = !1),
            (this.isTransparent = !1),
            (this.renderableComponents = []);
        },
        addRenderableComponent: function (o) {
          this.renderableComponents.indexOf(o) === -1 &&
            this.renderableComponents.push(o);
        },
        removeRenderableComponent: function (o) {
          this.renderableComponents.indexOf(o) !== -1 &&
            this.renderableComponents.splice(
              this.renderableComponents.indexOf(o),
              1
            );
        },
        prepareRenderableFrame: function (o) {
          this.checkLayerLimits(o);
        },
        checkTransparency: function () {
          this.finalTransform.mProp.o.v <= 0
            ? !this.isTransparent &&
              this.globalData.renderConfig.hideOnTransparent &&
              ((this.isTransparent = !0), this.hide())
            : this.isTransparent && ((this.isTransparent = !1), this.show());
        },
        checkLayerLimits: function (o) {
          this.data.ip - this.data.st <= o && this.data.op - this.data.st > o
            ? this.isInRange !== !0 &&
              ((this.globalData._mdf = !0),
              (this._mdf = !0),
              (this.isInRange = !0),
              this.show())
            : this.isInRange !== !1 &&
              ((this.globalData._mdf = !0), (this.isInRange = !1), this.hide());
        },
        renderRenderable: function () {
          var o,
            s = this.renderableComponents.length;
          for (o = 0; o < s; o += 1)
            this.renderableComponents[o].renderFrame(this._isFirstFrame);
        },
        sourceRectAtTime: function () {
          return { top: 0, left: 0, width: 100, height: 100 };
        },
        getLayerSize: function () {
          return this.data.ty === 5
            ? { w: this.data.textData.width, h: this.data.textData.height }
            : { w: this.data.width, h: this.data.height };
        },
      };
      var getBlendMode = (function () {
        var a = {
          0: "source-over",
          1: "multiply",
          2: "screen",
          3: "overlay",
          4: "darken",
          5: "lighten",
          6: "color-dodge",
          7: "color-burn",
          8: "hard-light",
          9: "soft-light",
          10: "difference",
          11: "exclusion",
          12: "hue",
          13: "saturation",
          14: "color",
          15: "luminosity",
        };
        return function (o) {
          return a[o] || "";
        };
      })();
      function SliderEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 0, 0, s);
      }
      function AngleEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 0, 0, s);
      }
      function ColorEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 1, 0, s);
      }
      function PointEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 1, 0, s);
      }
      function LayerIndexEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 0, 0, s);
      }
      function MaskIndexEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 0, 0, s);
      }
      function CheckboxEffect(a, o, s) {
        this.p = PropertyFactory.getProp(o, a.v, 0, 0, s);
      }
      function NoValueEffect() {
        this.p = {};
      }
      function EffectsManager(a, o) {
        var s = a.ef || [];
        this.effectElements = [];
        var _,
          $ = s.length,
          et;
        for (_ = 0; _ < $; _ += 1)
          (et = new GroupEffect(s[_], o)), this.effectElements.push(et);
      }
      function GroupEffect(a, o) {
        this.init(a, o);
      }
      extendPrototype([DynamicPropertyContainer], GroupEffect),
        (GroupEffect.prototype.getValue =
          GroupEffect.prototype.iterateDynamicProperties),
        (GroupEffect.prototype.init = function (a, o) {
          (this.data = a),
            (this.effectElements = []),
            this.initDynamicPropertyContainer(o);
          var s,
            _ = this.data.ef.length,
            $,
            et = this.data.ef;
          for (s = 0; s < _; s += 1) {
            switch ((($ = null), et[s].ty)) {
              case 0:
                $ = new SliderEffect(et[s], o, this);
                break;
              case 1:
                $ = new AngleEffect(et[s], o, this);
                break;
              case 2:
                $ = new ColorEffect(et[s], o, this);
                break;
              case 3:
                $ = new PointEffect(et[s], o, this);
                break;
              case 4:
              case 7:
                $ = new CheckboxEffect(et[s], o, this);
                break;
              case 10:
                $ = new LayerIndexEffect(et[s], o, this);
                break;
              case 11:
                $ = new MaskIndexEffect(et[s], o, this);
                break;
              case 5:
                $ = new EffectsManager(et[s], o);
                break;
              default:
                $ = new NoValueEffect(et[s]);
                break;
            }
            $ && this.effectElements.push($);
          }
        });
      function BaseElement() {}
      BaseElement.prototype = {
        checkMasks: function () {
          if (!this.data.hasMask) return !1;
          for (var o = 0, s = this.data.masksProperties.length; o < s; ) {
            if (
              this.data.masksProperties[o].mode !== "n" &&
              this.data.masksProperties[o].cl !== !1
            )
              return !0;
            o += 1;
          }
          return !1;
        },
        initExpressions: function () {
          var o = getExpressionInterfaces();
          if (o) {
            var s = o("layer"),
              _ = o("effects"),
              $ = o("shape"),
              et = o("text"),
              tt = o("comp");
            (this.layerInterface = s(this)),
              this.data.hasMask &&
                this.maskManager &&
                this.layerInterface.registerMaskInterface(this.maskManager);
            var rt = _.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(rt),
              this.data.ty === 0 || this.data.xt
                ? (this.compInterface = tt(this))
                : this.data.ty === 4
                ? ((this.layerInterface.shapeInterface = $(
                    this.shapesData,
                    this.itemsData,
                    this.layerInterface
                  )),
                  (this.layerInterface.content =
                    this.layerInterface.shapeInterface))
                : this.data.ty === 5 &&
                  ((this.layerInterface.textInterface = et(this)),
                  (this.layerInterface.text =
                    this.layerInterface.textInterface));
          }
        },
        setBlendMode: function () {
          var o = getBlendMode(this.data.bm),
            s = this.baseElement || this.layerElement;
          s.style["mix-blend-mode"] = o;
        },
        initBaseData: function (o, s, _) {
          (this.globalData = s),
            (this.comp = _),
            (this.data = o),
            (this.layerId = createElementID()),
            this.data.sr || (this.data.sr = 1),
            (this.effectsManager = new EffectsManager(
              this.data,
              this,
              this.dynamicProperties
            ));
        },
        getType: function () {
          return this.type;
        },
        sourceRectAtTime: function () {},
      };
      function FrameElement() {}
      FrameElement.prototype = {
        initFrame: function () {
          (this._isFirstFrame = !1),
            (this.dynamicProperties = []),
            (this._mdf = !1);
        },
        prepareProperties: function (o, s) {
          var _,
            $ = this.dynamicProperties.length;
          for (_ = 0; _ < $; _ += 1)
            (s ||
              (this._isParent &&
                this.dynamicProperties[_].propType === "transform")) &&
              (this.dynamicProperties[_].getValue(),
              this.dynamicProperties[_]._mdf &&
                ((this.globalData._mdf = !0), (this._mdf = !0)));
        },
        addDynamicProperty: function (o) {
          this.dynamicProperties.indexOf(o) === -1 &&
            this.dynamicProperties.push(o);
        },
      };
      function FootageElement(a, o, s) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = o.getAssetData(a.refId)),
          (this.footageData = o.imageLoader.getAsset(this.assetData)),
          this.initBaseData(a, o, s);
      }
      (FootageElement.prototype.prepareFrame = function () {}),
        extendPrototype(
          [RenderableElement, BaseElement, FrameElement],
          FootageElement
        ),
        (FootageElement.prototype.getBaseElement = function () {
          return null;
        }),
        (FootageElement.prototype.renderFrame = function () {}),
        (FootageElement.prototype.destroy = function () {}),
        (FootageElement.prototype.initExpressions = function () {
          var a = getExpressionInterfaces();
          if (a) {
            var o = a("footage");
            this.layerInterface = o(this);
          }
        }),
        (FootageElement.prototype.getFootageData = function () {
          return this.footageData;
        });
      function AudioElement(a, o, s) {
        this.initFrame(),
          this.initRenderable(),
          (this.assetData = o.getAssetData(a.refId)),
          this.initBaseData(a, o, s),
          (this._isPlaying = !1),
          (this._canPlay = !1);
        var _ = this.globalData.getAssetsPath(this.assetData);
        (this.audio = this.globalData.audioController.createAudio(_)),
          (this._currentTime = 0),
          this.globalData.audioController.addAudio(this),
          (this._volumeMultiplier = 1),
          (this._volume = 1),
          (this._previousVolume = null),
          (this.tm = a.tm
            ? PropertyFactory.getProp(this, a.tm, 0, o.frameRate, this)
            : { _placeholder: !0 }),
          (this.lv = PropertyFactory.getProp(
            this,
            a.au && a.au.lv ? a.au.lv : { k: [100] },
            1,
            0.01,
            this
          ));
      }
      (AudioElement.prototype.prepareFrame = function (a) {
        if (
          (this.prepareRenderableFrame(a, !0),
          this.prepareProperties(a, !0),
          this.tm._placeholder)
        )
          this._currentTime = a / this.data.sr;
        else {
          var o = this.tm.v;
          this._currentTime = o;
        }
        this._volume = this.lv.v[0];
        var s = this._volume * this._volumeMultiplier;
        this._previousVolume !== s &&
          ((this._previousVolume = s), this.audio.volume(s));
      }),
        extendPrototype(
          [RenderableElement, BaseElement, FrameElement],
          AudioElement
        ),
        (AudioElement.prototype.renderFrame = function () {
          this.isInRange &&
            this._canPlay &&
            (this._isPlaying
              ? (!this.audio.playing() ||
                  Math.abs(
                    this._currentTime / this.globalData.frameRate -
                      this.audio.seek()
                  ) > 0.1) &&
                this.audio.seek(this._currentTime / this.globalData.frameRate)
              : (this.audio.play(),
                this.audio.seek(this._currentTime / this.globalData.frameRate),
                (this._isPlaying = !0)));
        }),
        (AudioElement.prototype.show = function () {}),
        (AudioElement.prototype.hide = function () {
          this.audio.pause(), (this._isPlaying = !1);
        }),
        (AudioElement.prototype.pause = function () {
          this.audio.pause(), (this._isPlaying = !1), (this._canPlay = !1);
        }),
        (AudioElement.prototype.resume = function () {
          this._canPlay = !0;
        }),
        (AudioElement.prototype.setRate = function (a) {
          this.audio.rate(a);
        }),
        (AudioElement.prototype.volume = function (a) {
          (this._volumeMultiplier = a),
            (this._previousVolume = a * this._volume),
            this.audio.volume(this._previousVolume);
        }),
        (AudioElement.prototype.getBaseElement = function () {
          return null;
        }),
        (AudioElement.prototype.destroy = function () {}),
        (AudioElement.prototype.sourceRectAtTime = function () {}),
        (AudioElement.prototype.initExpressions = function () {});
      function BaseRenderer() {}
      (BaseRenderer.prototype.checkLayers = function (a) {
        var o,
          s = this.layers.length,
          _;
        for (this.completeLayers = !0, o = s - 1; o >= 0; o -= 1)
          this.elements[o] ||
            ((_ = this.layers[o]),
            _.ip - _.st <= a - this.layers[o].st &&
              _.op - _.st > a - this.layers[o].st &&
              this.buildItem(o)),
            (this.completeLayers = this.elements[o] ? this.completeLayers : !1);
        this.checkPendingElements();
      }),
        (BaseRenderer.prototype.createItem = function (a) {
          switch (a.ty) {
            case 2:
              return this.createImage(a);
            case 0:
              return this.createComp(a);
            case 1:
              return this.createSolid(a);
            case 3:
              return this.createNull(a);
            case 4:
              return this.createShape(a);
            case 5:
              return this.createText(a);
            case 6:
              return this.createAudio(a);
            case 13:
              return this.createCamera(a);
            case 15:
              return this.createFootage(a);
            default:
              return this.createNull(a);
          }
        }),
        (BaseRenderer.prototype.createCamera = function () {
          throw new Error("You're using a 3d camera. Try the html renderer.");
        }),
        (BaseRenderer.prototype.createAudio = function (a) {
          return new AudioElement(a, this.globalData, this);
        }),
        (BaseRenderer.prototype.createFootage = function (a) {
          return new FootageElement(a, this.globalData, this);
        }),
        (BaseRenderer.prototype.buildAllItems = function () {
          var a,
            o = this.layers.length;
          for (a = 0; a < o; a += 1) this.buildItem(a);
          this.checkPendingElements();
        }),
        (BaseRenderer.prototype.includeLayers = function (a) {
          this.completeLayers = !1;
          var o,
            s = a.length,
            _,
            $ = this.layers.length;
          for (o = 0; o < s; o += 1)
            for (_ = 0; _ < $; ) {
              if (this.layers[_].id === a[o].id) {
                this.layers[_] = a[o];
                break;
              }
              _ += 1;
            }
        }),
        (BaseRenderer.prototype.setProjectInterface = function (a) {
          this.globalData.projectInterface = a;
        }),
        (BaseRenderer.prototype.initItems = function () {
          this.globalData.progressiveLoad || this.buildAllItems();
        }),
        (BaseRenderer.prototype.buildElementParenting = function (a, o, s) {
          for (
            var _ = this.elements, $ = this.layers, et = 0, tt = $.length;
            et < tt;

          )
            $[et].ind == o &&
              (!_[et] || _[et] === !0
                ? (this.buildItem(et), this.addPendingElement(a))
                : (s.push(_[et]),
                  _[et].setAsParent(),
                  $[et].parent !== void 0
                    ? this.buildElementParenting(a, $[et].parent, s)
                    : a.setHierarchy(s))),
              (et += 1);
        }),
        (BaseRenderer.prototype.addPendingElement = function (a) {
          this.pendingElements.push(a);
        }),
        (BaseRenderer.prototype.searchExtraCompositions = function (a) {
          var o,
            s = a.length;
          for (o = 0; o < s; o += 1)
            if (a[o].xt) {
              var _ = this.createComp(a[o]);
              _.initExpressions(),
                this.globalData.projectInterface.registerComposition(_);
            }
        }),
        (BaseRenderer.prototype.getElementById = function (a) {
          var o,
            s = this.elements.length;
          for (o = 0; o < s; o += 1)
            if (this.elements[o].data.ind === a) return this.elements[o];
          return null;
        }),
        (BaseRenderer.prototype.getElementByPath = function (a) {
          var o = a.shift(),
            s;
          if (typeof o == "number") s = this.elements[o];
          else {
            var _,
              $ = this.elements.length;
            for (_ = 0; _ < $; _ += 1)
              if (this.elements[_].data.nm === o) {
                s = this.elements[_];
                break;
              }
          }
          return a.length === 0 ? s : s.getElementByPath(a);
        }),
        (BaseRenderer.prototype.setupGlobalData = function (a, o) {
          (this.globalData.fontManager = new FontManager()),
            (this.globalData.slotManager = slotFactory(a)),
            this.globalData.fontManager.addChars(a.chars),
            this.globalData.fontManager.addFonts(a.fonts, o),
            (this.globalData.getAssetData =
              this.animationItem.getAssetData.bind(this.animationItem)),
            (this.globalData.getAssetsPath =
              this.animationItem.getAssetsPath.bind(this.animationItem)),
            (this.globalData.imageLoader = this.animationItem.imagePreloader),
            (this.globalData.audioController =
              this.animationItem.audioController),
            (this.globalData.frameId = 0),
            (this.globalData.frameRate = a.fr),
            (this.globalData.nm = a.nm),
            (this.globalData.compSize = { w: a.w, h: a.h });
        });
      var effectTypes = { TRANSFORM_EFFECT: "transformEFfect" };
      function TransformElement() {}
      TransformElement.prototype = {
        initTransform: function () {
          var o = new Matrix();
          (this.finalTransform = {
            mProp: this.data.ks
              ? TransformPropertyFactory.getTransformProperty(
                  this,
                  this.data.ks,
                  this
                )
              : { o: 0 },
            _matMdf: !1,
            _localMatMdf: !1,
            _opMdf: !1,
            mat: o,
            localMat: o,
            localOpacity: 1,
          }),
            this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
            this.data.ty;
        },
        renderTransform: function () {
          if (
            ((this.finalTransform._opMdf =
              this.finalTransform.mProp.o._mdf || this._isFirstFrame),
            (this.finalTransform._matMdf =
              this.finalTransform.mProp._mdf || this._isFirstFrame),
            this.hierarchy)
          ) {
            var o,
              s = this.finalTransform.mat,
              _ = 0,
              $ = this.hierarchy.length;
            if (!this.finalTransform._matMdf)
              for (; _ < $; ) {
                if (this.hierarchy[_].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = !0;
                  break;
                }
                _ += 1;
              }
            if (this.finalTransform._matMdf)
              for (
                o = this.finalTransform.mProp.v.props,
                  s.cloneFromProps(o),
                  _ = 0;
                _ < $;
                _ += 1
              )
                s.multiply(this.hierarchy[_].finalTransform.mProp.v);
          }
          this.finalTransform._matMdf &&
            (this.finalTransform._localMatMdf = this.finalTransform._matMdf),
            this.finalTransform._opMdf &&
              (this.finalTransform.localOpacity =
                this.finalTransform.mProp.o.v);
        },
        renderLocalTransform: function () {
          if (this.localTransforms) {
            var o = 0,
              s = this.localTransforms.length;
            if (
              ((this.finalTransform._localMatMdf = this.finalTransform._matMdf),
              !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
            )
              for (; o < s; )
                this.localTransforms[o]._mdf &&
                  (this.finalTransform._localMatMdf = !0),
                  this.localTransforms[o]._opMdf &&
                    !this.finalTransform._opMdf &&
                    ((this.finalTransform.localOpacity =
                      this.finalTransform.mProp.o.v),
                    (this.finalTransform._opMdf = !0)),
                  (o += 1);
            if (this.finalTransform._localMatMdf) {
              var _ = this.finalTransform.localMat;
              for (
                this.localTransforms[0].matrix.clone(_), o = 1;
                o < s;
                o += 1
              ) {
                var $ = this.localTransforms[o].matrix;
                _.multiply($);
              }
              _.multiply(this.finalTransform.mat);
            }
            if (this.finalTransform._opMdf) {
              var et = this.finalTransform.localOpacity;
              for (o = 0; o < s; o += 1)
                et *= this.localTransforms[o].opacity * 0.01;
              this.finalTransform.localOpacity = et;
            }
          }
        },
        searchEffectTransforms: function () {
          if (this.renderableEffectsManager) {
            var o = this.renderableEffectsManager.getEffects(
              effectTypes.TRANSFORM_EFFECT
            );
            if (o.length) {
              (this.localTransforms = []),
                (this.finalTransform.localMat = new Matrix());
              var s = 0,
                _ = o.length;
              for (s = 0; s < _; s += 1) this.localTransforms.push(o[s]);
            }
          }
        },
        globalToLocal: function (o) {
          var s = [];
          s.push(this.finalTransform);
          for (var _ = !0, $ = this.comp; _; )
            $.finalTransform
              ? ($.data.hasMask && s.splice(0, 0, $.finalTransform),
                ($ = $.comp))
              : (_ = !1);
          var et,
            tt = s.length,
            rt;
          for (et = 0; et < tt; et += 1)
            (rt = s[et].mat.applyToPointArray(0, 0, 0)),
              (o = [o[0] - rt[0], o[1] - rt[1], 0]);
          return o;
        },
        mHelper: new Matrix(),
      };
      function MaskElement(a, o, s) {
        (this.data = a),
          (this.element = o),
          (this.globalData = s),
          (this.storedData = []),
          (this.masksProperties = this.data.masksProperties || []),
          (this.maskElement = null);
        var _ = this.globalData.defs,
          $,
          et = this.masksProperties ? this.masksProperties.length : 0;
        (this.viewData = createSizedArray(et)), (this.solidPath = "");
        var tt,
          rt = this.masksProperties,
          nt = 0,
          it = [],
          at,
          st,
          ot = createElementID(),
          dt,
          ht,
          ft,
          mt,
          ut = "clipPath",
          lt = "clip-path";
        for ($ = 0; $ < et; $ += 1)
          if (
            (((rt[$].mode !== "a" && rt[$].mode !== "n") ||
              rt[$].inv ||
              rt[$].o.k !== 100 ||
              rt[$].o.x) &&
              ((ut = "mask"), (lt = "mask")),
            (rt[$].mode === "s" || rt[$].mode === "i") && nt === 0
              ? ((dt = createNS("rect")),
                dt.setAttribute("fill", "#ffffff"),
                dt.setAttribute("width", this.element.comp.data.w || 0),
                dt.setAttribute("height", this.element.comp.data.h || 0),
                it.push(dt))
              : (dt = null),
            (tt = createNS("path")),
            rt[$].mode === "n")
          )
            (this.viewData[$] = {
              op: PropertyFactory.getProp(
                this.element,
                rt[$].o,
                0,
                0.01,
                this.element
              ),
              prop: ShapePropertyFactory.getShapeProp(this.element, rt[$], 3),
              elem: tt,
              lastPath: "",
            }),
              _.appendChild(tt);
          else {
            (nt += 1),
              tt.setAttribute(
                "fill",
                rt[$].mode === "s" ? "#000000" : "#ffffff"
              ),
              tt.setAttribute("clip-rule", "nonzero");
            var ct;
            if (
              (rt[$].x.k !== 0
                ? ((ut = "mask"),
                  (lt = "mask"),
                  (mt = PropertyFactory.getProp(
                    this.element,
                    rt[$].x,
                    0,
                    null,
                    this.element
                  )),
                  (ct = createElementID()),
                  (ht = createNS("filter")),
                  ht.setAttribute("id", ct),
                  (ft = createNS("feMorphology")),
                  ft.setAttribute("operator", "erode"),
                  ft.setAttribute("in", "SourceGraphic"),
                  ft.setAttribute("radius", "0"),
                  ht.appendChild(ft),
                  _.appendChild(ht),
                  tt.setAttribute(
                    "stroke",
                    rt[$].mode === "s" ? "#000000" : "#ffffff"
                  ))
                : ((ft = null), (mt = null)),
              (this.storedData[$] = {
                elem: tt,
                x: mt,
                expan: ft,
                lastPath: "",
                lastOperator: "",
                filterId: ct,
                lastRadius: 0,
              }),
              rt[$].mode === "i")
            ) {
              st = it.length;
              var pt = createNS("g");
              for (at = 0; at < st; at += 1) pt.appendChild(it[at]);
              var vt = createNS("mask");
              vt.setAttribute("mask-type", "alpha"),
                vt.setAttribute("id", ot + "_" + nt),
                vt.appendChild(tt),
                _.appendChild(vt),
                pt.setAttribute(
                  "mask",
                  "url(" + getLocationHref() + "#" + ot + "_" + nt + ")"
                ),
                (it.length = 0),
                it.push(pt);
            } else it.push(tt);
            rt[$].inv &&
              !this.solidPath &&
              (this.solidPath = this.createLayerSolidPath()),
              (this.viewData[$] = {
                elem: tt,
                lastPath: "",
                op: PropertyFactory.getProp(
                  this.element,
                  rt[$].o,
                  0,
                  0.01,
                  this.element
                ),
                prop: ShapePropertyFactory.getShapeProp(this.element, rt[$], 3),
                invRect: dt,
              }),
              this.viewData[$].prop.k ||
                this.drawPath(rt[$], this.viewData[$].prop.v, this.viewData[$]);
          }
        for (
          this.maskElement = createNS(ut), et = it.length, $ = 0;
          $ < et;
          $ += 1
        )
          this.maskElement.appendChild(it[$]);
        nt > 0 &&
          (this.maskElement.setAttribute("id", ot),
          this.element.maskedElement.setAttribute(
            lt,
            "url(" + getLocationHref() + "#" + ot + ")"
          ),
          _.appendChild(this.maskElement)),
          this.viewData.length && this.element.addRenderableComponent(this);
      }
      (MaskElement.prototype.getMaskProperty = function (a) {
        return this.viewData[a].prop;
      }),
        (MaskElement.prototype.renderFrame = function (a) {
          var o = this.element.finalTransform.mat,
            s,
            _ = this.masksProperties.length;
          for (s = 0; s < _; s += 1)
            if (
              ((this.viewData[s].prop._mdf || a) &&
                this.drawPath(
                  this.masksProperties[s],
                  this.viewData[s].prop.v,
                  this.viewData[s]
                ),
              (this.viewData[s].op._mdf || a) &&
                this.viewData[s].elem.setAttribute(
                  "fill-opacity",
                  this.viewData[s].op.v
                ),
              this.masksProperties[s].mode !== "n" &&
                (this.viewData[s].invRect &&
                  (this.element.finalTransform.mProp._mdf || a) &&
                  this.viewData[s].invRect.setAttribute(
                    "transform",
                    o.getInverseMatrix().to2dCSS()
                  ),
                this.storedData[s].x && (this.storedData[s].x._mdf || a)))
            ) {
              var $ = this.storedData[s].expan;
              this.storedData[s].x.v < 0
                ? (this.storedData[s].lastOperator !== "erode" &&
                    ((this.storedData[s].lastOperator = "erode"),
                    this.storedData[s].elem.setAttribute(
                      "filter",
                      "url(" +
                        getLocationHref() +
                        "#" +
                        this.storedData[s].filterId +
                        ")"
                    )),
                  $.setAttribute("radius", -this.storedData[s].x.v))
                : (this.storedData[s].lastOperator !== "dilate" &&
                    ((this.storedData[s].lastOperator = "dilate"),
                    this.storedData[s].elem.setAttribute("filter", null)),
                  this.storedData[s].elem.setAttribute(
                    "stroke-width",
                    this.storedData[s].x.v * 2
                  ));
            }
        }),
        (MaskElement.prototype.getMaskelement = function () {
          return this.maskElement;
        }),
        (MaskElement.prototype.createLayerSolidPath = function () {
          var a = "M0,0 ";
          return (
            (a += " h" + this.globalData.compSize.w),
            (a += " v" + this.globalData.compSize.h),
            (a += " h-" + this.globalData.compSize.w),
            (a += " v-" + this.globalData.compSize.h + " "),
            a
          );
        }),
        (MaskElement.prototype.drawPath = function (a, o, s) {
          var _ = " M" + o.v[0][0] + "," + o.v[0][1],
            $,
            et;
          for (et = o._length, $ = 1; $ < et; $ += 1)
            _ +=
              " C" +
              o.o[$ - 1][0] +
              "," +
              o.o[$ - 1][1] +
              " " +
              o.i[$][0] +
              "," +
              o.i[$][1] +
              " " +
              o.v[$][0] +
              "," +
              o.v[$][1];
          if (
            (o.c &&
              et > 1 &&
              (_ +=
                " C" +
                o.o[$ - 1][0] +
                "," +
                o.o[$ - 1][1] +
                " " +
                o.i[0][0] +
                "," +
                o.i[0][1] +
                " " +
                o.v[0][0] +
                "," +
                o.v[0][1]),
            s.lastPath !== _)
          ) {
            var tt = "";
            s.elem &&
              (o.c && (tt = a.inv ? this.solidPath + _ : _),
              s.elem.setAttribute("d", tt)),
              (s.lastPath = _);
          }
        }),
        (MaskElement.prototype.destroy = function () {
          (this.element = null),
            (this.globalData = null),
            (this.maskElement = null),
            (this.data = null),
            (this.masksProperties = null);
        });
      var filtersFactory = (function () {
          var a = {};
          (a.createFilter = o), (a.createAlphaToLuminanceFilter = s);
          function o(_, $) {
            var et = createNS("filter");
            return (
              et.setAttribute("id", _),
              $ !== !0 &&
                (et.setAttribute("filterUnits", "objectBoundingBox"),
                et.setAttribute("x", "0%"),
                et.setAttribute("y", "0%"),
                et.setAttribute("width", "100%"),
                et.setAttribute("height", "100%")),
              et
            );
          }
          function s() {
            var _ = createNS("feColorMatrix");
            return (
              _.setAttribute("type", "matrix"),
              _.setAttribute("color-interpolation-filters", "sRGB"),
              _.setAttribute(
                "values",
                "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"
              ),
              _
            );
          }
          return a;
        })(),
        featureSupport = (function () {
          var a = {
            maskType: !0,
            svgLumaHidden: !0,
            offscreenCanvas: typeof OffscreenCanvas < "u",
          };
          return (
            (/MSIE 10/i.test(navigator.userAgent) ||
              /MSIE 9/i.test(navigator.userAgent) ||
              /rv:11.0/i.test(navigator.userAgent) ||
              /Edge\/\d./i.test(navigator.userAgent)) &&
              (a.maskType = !1),
            /firefox/i.test(navigator.userAgent) && (a.svgLumaHidden = !1),
            a
          );
        })(),
        registeredEffects$1 = {},
        idPrefix = "filter_result_";
      function SVGEffects(a) {
        var o,
          s = "SourceGraphic",
          _ = a.data.ef ? a.data.ef.length : 0,
          $ = createElementID(),
          et = filtersFactory.createFilter($, !0),
          tt = 0;
        this.filters = [];
        var rt;
        for (o = 0; o < _; o += 1) {
          rt = null;
          var nt = a.data.ef[o].ty;
          if (registeredEffects$1[nt]) {
            var it = registeredEffects$1[nt].effect;
            (rt = new it(
              et,
              a.effectsManager.effectElements[o],
              a,
              idPrefix + tt,
              s
            )),
              (s = idPrefix + tt),
              registeredEffects$1[nt].countsAsEffect && (tt += 1);
          }
          rt && this.filters.push(rt);
        }
        tt &&
          (a.globalData.defs.appendChild(et),
          a.layerElement.setAttribute(
            "filter",
            "url(" + getLocationHref() + "#" + $ + ")"
          )),
          this.filters.length && a.addRenderableComponent(this);
      }
      (SVGEffects.prototype.renderFrame = function (a) {
        var o,
          s = this.filters.length;
        for (o = 0; o < s; o += 1) this.filters[o].renderFrame(a);
      }),
        (SVGEffects.prototype.getEffects = function (a) {
          var o,
            s = this.filters.length,
            _ = [];
          for (o = 0; o < s; o += 1)
            this.filters[o].type === a && _.push(this.filters[o]);
          return _;
        });
      function registerEffect$1(a, o, s) {
        registeredEffects$1[a] = { effect: o, countsAsEffect: s };
      }
      function SVGBaseElement() {}
      SVGBaseElement.prototype = {
        initRendererElement: function () {
          this.layerElement = createNS("g");
        },
        createContainerElements: function () {
          (this.matteElement = createNS("g")),
            (this.transformedElement = this.layerElement),
            (this.maskedElement = this.layerElement),
            (this._sizeChanged = !1);
          var o = null;
          if (this.data.td) {
            this.matteMasks = {};
            var s = createNS("g");
            s.setAttribute("id", this.layerId),
              s.appendChild(this.layerElement),
              (o = s),
              this.globalData.defs.appendChild(s);
          } else
            this.data.tt
              ? (this.matteElement.appendChild(this.layerElement),
                (o = this.matteElement),
                (this.baseElement = this.matteElement))
              : (this.baseElement = this.layerElement);
          if (
            (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
            this.data.cl &&
              this.layerElement.setAttribute("class", this.data.cl),
            this.data.ty === 0 && !this.data.hd)
          ) {
            var _ = createNS("clipPath"),
              $ = createNS("path");
            $.setAttribute(
              "d",
              "M0,0 L" +
                this.data.w +
                ",0 L" +
                this.data.w +
                "," +
                this.data.h +
                " L0," +
                this.data.h +
                "z"
            );
            var et = createElementID();
            if (
              (_.setAttribute("id", et),
              _.appendChild($),
              this.globalData.defs.appendChild(_),
              this.checkMasks())
            ) {
              var tt = createNS("g");
              tt.setAttribute(
                "clip-path",
                "url(" + getLocationHref() + "#" + et + ")"
              ),
                tt.appendChild(this.layerElement),
                (this.transformedElement = tt),
                o
                  ? o.appendChild(this.transformedElement)
                  : (this.baseElement = this.transformedElement);
            } else
              this.layerElement.setAttribute(
                "clip-path",
                "url(" + getLocationHref() + "#" + et + ")"
              );
          }
          this.data.bm !== 0 && this.setBlendMode();
        },
        renderElement: function () {
          this.finalTransform._localMatMdf &&
            this.transformedElement.setAttribute(
              "transform",
              this.finalTransform.localMat.to2dCSS()
            ),
            this.finalTransform._opMdf &&
              this.transformedElement.setAttribute(
                "opacity",
                this.finalTransform.localOpacity
              );
        },
        destroyBaseElement: function () {
          (this.layerElement = null),
            (this.matteElement = null),
            this.maskManager.destroy();
        },
        getBaseElement: function () {
          return this.data.hd ? null : this.baseElement;
        },
        createRenderableComponents: function () {
          (this.maskManager = new MaskElement(
            this.data,
            this,
            this.globalData
          )),
            (this.renderableEffectsManager = new SVGEffects(this)),
            this.searchEffectTransforms();
        },
        getMatte: function (o) {
          if (
            (this.matteMasks || (this.matteMasks = {}), !this.matteMasks[o])
          ) {
            var s = this.layerId + "_" + o,
              _,
              $,
              et,
              tt;
            if (o === 1 || o === 3) {
              var rt = createNS("mask");
              rt.setAttribute("id", s),
                rt.setAttribute("mask-type", o === 3 ? "luminance" : "alpha"),
                (et = createNS("use")),
                et.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  "#" + this.layerId
                ),
                rt.appendChild(et),
                this.globalData.defs.appendChild(rt),
                !featureSupport.maskType &&
                  o === 1 &&
                  (rt.setAttribute("mask-type", "luminance"),
                  (_ = createElementID()),
                  ($ = filtersFactory.createFilter(_)),
                  this.globalData.defs.appendChild($),
                  $.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                  (tt = createNS("g")),
                  tt.appendChild(et),
                  rt.appendChild(tt),
                  tt.setAttribute(
                    "filter",
                    "url(" + getLocationHref() + "#" + _ + ")"
                  ));
            } else if (o === 2) {
              var nt = createNS("mask");
              nt.setAttribute("id", s), nt.setAttribute("mask-type", "alpha");
              var it = createNS("g");
              nt.appendChild(it),
                (_ = createElementID()),
                ($ = filtersFactory.createFilter(_));
              var at = createNS("feComponentTransfer");
              at.setAttribute("in", "SourceGraphic"), $.appendChild(at);
              var st = createNS("feFuncA");
              st.setAttribute("type", "table"),
                st.setAttribute("tableValues", "1.0 0.0"),
                at.appendChild(st),
                this.globalData.defs.appendChild($);
              var ot = createNS("rect");
              ot.setAttribute("width", this.comp.data.w),
                ot.setAttribute("height", this.comp.data.h),
                ot.setAttribute("x", "0"),
                ot.setAttribute("y", "0"),
                ot.setAttribute("fill", "#ffffff"),
                ot.setAttribute("opacity", "0"),
                it.setAttribute(
                  "filter",
                  "url(" + getLocationHref() + "#" + _ + ")"
                ),
                it.appendChild(ot),
                (et = createNS("use")),
                et.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  "#" + this.layerId
                ),
                it.appendChild(et),
                featureSupport.maskType ||
                  (nt.setAttribute("mask-type", "luminance"),
                  $.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                  (tt = createNS("g")),
                  it.appendChild(ot),
                  tt.appendChild(this.layerElement),
                  it.appendChild(tt)),
                this.globalData.defs.appendChild(nt);
            }
            this.matteMasks[o] = s;
          }
          return this.matteMasks[o];
        },
        setMatte: function (o) {
          this.matteElement &&
            this.matteElement.setAttribute(
              "mask",
              "url(" + getLocationHref() + "#" + o + ")"
            );
        },
      };
      function HierarchyElement() {}
      HierarchyElement.prototype = {
        initHierarchy: function () {
          (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
        },
        setHierarchy: function (o) {
          this.hierarchy = o;
        },
        setAsParent: function () {
          this._isParent = !0;
        },
        checkParenting: function () {
          this.data.parent !== void 0 &&
            this.comp.buildElementParenting(this, this.data.parent, []);
        },
      };
      function RenderableDOMElement() {}
      (function () {
        var a = {
          initElement: function (s, _, $) {
            this.initFrame(),
              this.initBaseData(s, _, $),
              this.initTransform(s, _, $),
              this.initHierarchy(),
              this.initRenderable(),
              this.initRendererElement(),
              this.createContainerElements(),
              this.createRenderableComponents(),
              this.createContent(),
              this.hide();
          },
          hide: function () {
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
              var s = this.baseElement || this.layerElement;
              (s.style.display = "none"), (this.hidden = !0);
            }
          },
          show: function () {
            if (this.isInRange && !this.isTransparent) {
              if (!this.data.hd) {
                var s = this.baseElement || this.layerElement;
                s.style.display = "block";
              }
              (this.hidden = !1), (this._isFirstFrame = !0);
            }
          },
          renderFrame: function () {
            this.data.hd ||
              this.hidden ||
              (this.renderTransform(),
              this.renderRenderable(),
              this.renderLocalTransform(),
              this.renderElement(),
              this.renderInnerContent(),
              this._isFirstFrame && (this._isFirstFrame = !1));
          },
          renderInnerContent: function () {},
          prepareFrame: function (s) {
            (this._mdf = !1),
              this.prepareRenderableFrame(s),
              this.prepareProperties(s, this.isInRange),
              this.checkTransparency();
          },
          destroy: function () {
            (this.innerElem = null), this.destroyBaseElement();
          },
        };
        extendPrototype(
          [RenderableElement, createProxyFunction(a)],
          RenderableDOMElement
        );
      })();
      function IImageElement(a, o, s) {
        (this.assetData = o.getAssetData(a.refId)),
          this.assetData &&
            this.assetData.sid &&
            (this.assetData = o.slotManager.getProp(this.assetData)),
          this.initElement(a, o, s),
          (this.sourceRect = {
            top: 0,
            left: 0,
            width: this.assetData.w,
            height: this.assetData.h,
          });
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        IImageElement
      ),
        (IImageElement.prototype.createContent = function () {
          var a = this.globalData.getAssetsPath(this.assetData);
          (this.innerElem = createNS("image")),
            this.innerElem.setAttribute("width", this.assetData.w + "px"),
            this.innerElem.setAttribute("height", this.assetData.h + "px"),
            this.innerElem.setAttribute(
              "preserveAspectRatio",
              this.assetData.pr ||
                this.globalData.renderConfig.imagePreserveAspectRatio
            ),
            this.innerElem.setAttributeNS(
              "http://www.w3.org/1999/xlink",
              "href",
              a
            ),
            this.layerElement.appendChild(this.innerElem);
        }),
        (IImageElement.prototype.sourceRectAtTime = function () {
          return this.sourceRect;
        });
      function ProcessedElement(a, o) {
        (this.elem = a), (this.pos = o);
      }
      function IShapeElement() {}
      IShapeElement.prototype = {
        addShapeToModifiers: function (o) {
          var s,
            _ = this.shapeModifiers.length;
          for (s = 0; s < _; s += 1) this.shapeModifiers[s].addShape(o);
        },
        isShapeInAnimatedModifiers: function (o) {
          for (var s = 0, _ = this.shapeModifiers.length; s < _; )
            if (this.shapeModifiers[s].isAnimatedWithShape(o)) return !0;
          return !1;
        },
        renderModifiers: function () {
          if (this.shapeModifiers.length) {
            var o,
              s = this.shapes.length;
            for (o = 0; o < s; o += 1) this.shapes[o].sh.reset();
            s = this.shapeModifiers.length;
            var _;
            for (
              o = s - 1;
              o >= 0 &&
              ((_ = this.shapeModifiers[o].processShapes(this._isFirstFrame)),
              !_);
              o -= 1
            );
          }
        },
        searchProcessedElement: function (o) {
          for (var s = this.processedElements, _ = 0, $ = s.length; _ < $; ) {
            if (s[_].elem === o) return s[_].pos;
            _ += 1;
          }
          return 0;
        },
        addProcessedElement: function (o, s) {
          for (var _ = this.processedElements, $ = _.length; $; )
            if ((($ -= 1), _[$].elem === o)) {
              _[$].pos = s;
              return;
            }
          _.push(new ProcessedElement(o, s));
        },
        prepareFrame: function (o) {
          this.prepareRenderableFrame(o),
            this.prepareProperties(o, this.isInRange);
        },
      };
      var lineCapEnum = { 1: "butt", 2: "round", 3: "square" },
        lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
      function SVGShapeData(a, o, s) {
        (this.caches = []),
          (this.styles = []),
          (this.transformers = a),
          (this.lStr = ""),
          (this.sh = s),
          (this.lvl = o),
          (this._isAnimated = !!s.k);
        for (var _ = 0, $ = a.length; _ < $; ) {
          if (a[_].mProps.dynamicProperties.length) {
            this._isAnimated = !0;
            break;
          }
          _ += 1;
        }
      }
      SVGShapeData.prototype.setAsAnimated = function () {
        this._isAnimated = !0;
      };
      function SVGStyleData(a, o) {
        (this.data = a),
          (this.type = a.ty),
          (this.d = ""),
          (this.lvl = o),
          (this._mdf = !1),
          (this.closed = a.hd === !0),
          (this.pElem = createNS("path")),
          (this.msElem = null);
      }
      SVGStyleData.prototype.reset = function () {
        (this.d = ""), (this._mdf = !1);
      };
      function DashProperty(a, o, s, _) {
        (this.elem = a),
          (this.frameId = -1),
          (this.dataProps = createSizedArray(o.length)),
          (this.renderer = s),
          (this.k = !1),
          (this.dashStr = ""),
          (this.dashArray = createTypedArray(
            "float32",
            o.length ? o.length - 1 : 0
          )),
          (this.dashoffset = createTypedArray("float32", 1)),
          this.initDynamicPropertyContainer(_);
        var $,
          et = o.length || 0,
          tt;
        for ($ = 0; $ < et; $ += 1)
          (tt = PropertyFactory.getProp(a, o[$].v, 0, 0, this)),
            (this.k = tt.k || this.k),
            (this.dataProps[$] = { n: o[$].n, p: tt });
        this.k || this.getValue(!0), (this._isAnimated = this.k);
      }
      (DashProperty.prototype.getValue = function (a) {
        if (
          !(this.elem.globalData.frameId === this.frameId && !a) &&
          ((this.frameId = this.elem.globalData.frameId),
          this.iterateDynamicProperties(),
          (this._mdf = this._mdf || a),
          this._mdf)
        ) {
          var o = 0,
            s = this.dataProps.length;
          for (
            this.renderer === "svg" && (this.dashStr = ""), o = 0;
            o < s;
            o += 1
          )
            this.dataProps[o].n !== "o"
              ? this.renderer === "svg"
                ? (this.dashStr += " " + this.dataProps[o].p.v)
                : (this.dashArray[o] = this.dataProps[o].p.v)
              : (this.dashoffset[0] = this.dataProps[o].p.v);
        }
      }),
        extendPrototype([DynamicPropertyContainer], DashProperty);
      function SVGStrokeStyleData(a, o, s) {
        this.initDynamicPropertyContainer(a),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = PropertyFactory.getProp(a, o.o, 0, 0.01, this)),
          (this.w = PropertyFactory.getProp(a, o.w, 0, null, this)),
          (this.d = new DashProperty(a, o.d || {}, "svg", this)),
          (this.c = PropertyFactory.getProp(a, o.c, 1, 255, this)),
          (this.style = s),
          (this._isAnimated = !!this._isAnimated);
      }
      extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
      function SVGFillStyleData(a, o, s) {
        this.initDynamicPropertyContainer(a),
          (this.getValue = this.iterateDynamicProperties),
          (this.o = PropertyFactory.getProp(a, o.o, 0, 0.01, this)),
          (this.c = PropertyFactory.getProp(a, o.c, 1, 255, this)),
          (this.style = s);
      }
      extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
      function SVGNoStyleData(a, o, s) {
        this.initDynamicPropertyContainer(a),
          (this.getValue = this.iterateDynamicProperties),
          (this.style = s);
      }
      extendPrototype([DynamicPropertyContainer], SVGNoStyleData);
      function GradientProperty(a, o, s) {
        (this.data = o), (this.c = createTypedArray("uint8c", o.p * 4));
        var _ = o.k.k[0].s
          ? o.k.k[0].s.length - o.p * 4
          : o.k.k.length - o.p * 4;
        (this.o = createTypedArray("float32", _)),
          (this._cmdf = !1),
          (this._omdf = !1),
          (this._collapsable = this.checkCollapsable()),
          (this._hasOpacity = _),
          this.initDynamicPropertyContainer(s),
          (this.prop = PropertyFactory.getProp(a, o.k, 1, null, this)),
          (this.k = this.prop.k),
          this.getValue(!0);
      }
      (GradientProperty.prototype.comparePoints = function (a, o) {
        for (var s = 0, _ = this.o.length / 2, $; s < _; ) {
          if ((($ = Math.abs(a[s * 4] - a[o * 4 + s * 2])), $ > 0.01))
            return !1;
          s += 1;
        }
        return !0;
      }),
        (GradientProperty.prototype.checkCollapsable = function () {
          if (this.o.length / 2 !== this.c.length / 4) return !1;
          if (this.data.k.k[0].s)
            for (var a = 0, o = this.data.k.k.length; a < o; ) {
              if (!this.comparePoints(this.data.k.k[a].s, this.data.p))
                return !1;
              a += 1;
            }
          else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
          return !0;
        }),
        (GradientProperty.prototype.getValue = function (a) {
          if (
            (this.prop.getValue(),
            (this._mdf = !1),
            (this._cmdf = !1),
            (this._omdf = !1),
            this.prop._mdf || a)
          ) {
            var o,
              s = this.data.p * 4,
              _,
              $;
            for (o = 0; o < s; o += 1)
              (_ = o % 4 === 0 ? 100 : 255),
                ($ = Math.round(this.prop.v[o] * _)),
                this.c[o] !== $ && ((this.c[o] = $), (this._cmdf = !a));
            if (this.o.length)
              for (s = this.prop.v.length, o = this.data.p * 4; o < s; o += 1)
                (_ = o % 2 === 0 ? 100 : 1),
                  ($ =
                    o % 2 === 0
                      ? Math.round(this.prop.v[o] * 100)
                      : this.prop.v[o]),
                  this.o[o - this.data.p * 4] !== $ &&
                    ((this.o[o - this.data.p * 4] = $), (this._omdf = !a));
            this._mdf = !a;
          }
        }),
        extendPrototype([DynamicPropertyContainer], GradientProperty);
      function SVGGradientFillStyleData(a, o, s) {
        this.initDynamicPropertyContainer(a),
          (this.getValue = this.iterateDynamicProperties),
          this.initGradientData(a, o, s);
      }
      (SVGGradientFillStyleData.prototype.initGradientData = function (
        a,
        o,
        s
      ) {
        (this.o = PropertyFactory.getProp(a, o.o, 0, 0.01, this)),
          (this.s = PropertyFactory.getProp(a, o.s, 1, null, this)),
          (this.e = PropertyFactory.getProp(a, o.e, 1, null, this)),
          (this.h = PropertyFactory.getProp(a, o.h || { k: 0 }, 0, 0.01, this)),
          (this.a = PropertyFactory.getProp(
            a,
            o.a || { k: 0 },
            0,
            degToRads,
            this
          )),
          (this.g = new GradientProperty(a, o.g, this)),
          (this.style = s),
          (this.stops = []),
          this.setGradientData(s.pElem, o),
          this.setGradientOpacity(o, s),
          (this._isAnimated = !!this._isAnimated);
      }),
        (SVGGradientFillStyleData.prototype.setGradientData = function (a, o) {
          var s = createElementID(),
            _ = createNS(o.t === 1 ? "linearGradient" : "radialGradient");
          _.setAttribute("id", s),
            _.setAttribute("spreadMethod", "pad"),
            _.setAttribute("gradientUnits", "userSpaceOnUse");
          var $ = [],
            et,
            tt,
            rt;
          for (rt = o.g.p * 4, tt = 0; tt < rt; tt += 4)
            (et = createNS("stop")), _.appendChild(et), $.push(et);
          a.setAttribute(
            o.ty === "gf" ? "fill" : "stroke",
            "url(" + getLocationHref() + "#" + s + ")"
          ),
            (this.gf = _),
            (this.cst = $);
        }),
        (SVGGradientFillStyleData.prototype.setGradientOpacity = function (
          a,
          o
        ) {
          if (this.g._hasOpacity && !this.g._collapsable) {
            var s,
              _,
              $,
              et = createNS("mask"),
              tt = createNS("path");
            et.appendChild(tt);
            var rt = createElementID(),
              nt = createElementID();
            et.setAttribute("id", nt);
            var it = createNS(a.t === 1 ? "linearGradient" : "radialGradient");
            it.setAttribute("id", rt),
              it.setAttribute("spreadMethod", "pad"),
              it.setAttribute("gradientUnits", "userSpaceOnUse"),
              ($ = a.g.k.k[0].s ? a.g.k.k[0].s.length : a.g.k.k.length);
            var at = this.stops;
            for (_ = a.g.p * 4; _ < $; _ += 2)
              (s = createNS("stop")),
                s.setAttribute("stop-color", "rgb(255,255,255)"),
                it.appendChild(s),
                at.push(s);
            tt.setAttribute(
              a.ty === "gf" ? "fill" : "stroke",
              "url(" + getLocationHref() + "#" + rt + ")"
            ),
              a.ty === "gs" &&
                (tt.setAttribute("stroke-linecap", lineCapEnum[a.lc || 2]),
                tt.setAttribute("stroke-linejoin", lineJoinEnum[a.lj || 2]),
                a.lj === 1 && tt.setAttribute("stroke-miterlimit", a.ml)),
              (this.of = it),
              (this.ms = et),
              (this.ost = at),
              (this.maskId = nt),
              (o.msElem = tt);
          }
        }),
        extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
      function SVGGradientStrokeStyleData(a, o, s) {
        this.initDynamicPropertyContainer(a),
          (this.getValue = this.iterateDynamicProperties),
          (this.w = PropertyFactory.getProp(a, o.w, 0, null, this)),
          (this.d = new DashProperty(a, o.d || {}, "svg", this)),
          this.initGradientData(a, o, s),
          (this._isAnimated = !!this._isAnimated);
      }
      extendPrototype(
        [SVGGradientFillStyleData, DynamicPropertyContainer],
        SVGGradientStrokeStyleData
      );
      function ShapeGroupData() {
        (this.it = []), (this.prevViewData = []), (this.gr = createNS("g"));
      }
      function SVGTransformData(a, o, s) {
        (this.transform = { mProps: a, op: o, container: s }),
          (this.elements = []),
          (this._isAnimated =
            this.transform.mProps.dynamicProperties.length ||
            this.transform.op.effectsSequence.length);
      }
      var buildShapeString = function (o, s, _, $) {
          if (s === 0) return "";
          var et = o.o,
            tt = o.i,
            rt = o.v,
            nt,
            it = " M" + $.applyToPointStringified(rt[0][0], rt[0][1]);
          for (nt = 1; nt < s; nt += 1)
            it +=
              " C" +
              $.applyToPointStringified(et[nt - 1][0], et[nt - 1][1]) +
              " " +
              $.applyToPointStringified(tt[nt][0], tt[nt][1]) +
              " " +
              $.applyToPointStringified(rt[nt][0], rt[nt][1]);
          return (
            _ &&
              s &&
              ((it +=
                " C" +
                $.applyToPointStringified(et[nt - 1][0], et[nt - 1][1]) +
                " " +
                $.applyToPointStringified(tt[0][0], tt[0][1]) +
                " " +
                $.applyToPointStringified(rt[0][0], rt[0][1])),
              (it += "z")),
            it
          );
        },
        SVGElementsRenderer = (function () {
          var a = new Matrix(),
            o = new Matrix(),
            s = { createRenderFunction: _ };
          function _(st) {
            switch (st.ty) {
              case "fl":
                return rt;
              case "gf":
                return it;
              case "gs":
                return nt;
              case "st":
                return at;
              case "sh":
              case "el":
              case "rc":
              case "sr":
                return tt;
              case "tr":
                return $;
              case "no":
                return et;
              default:
                return null;
            }
          }
          function $(st, ot, dt) {
            (dt || ot.transform.op._mdf) &&
              ot.transform.container.setAttribute("opacity", ot.transform.op.v),
              (dt || ot.transform.mProps._mdf) &&
                ot.transform.container.setAttribute(
                  "transform",
                  ot.transform.mProps.v.to2dCSS()
                );
          }
          function et() {}
          function tt(st, ot, dt) {
            var ht,
              ft,
              mt,
              ut,
              lt,
              ct,
              pt = ot.styles.length,
              vt = ot.lvl,
              xt,
              bt,
              St,
              Pt;
            for (ct = 0; ct < pt; ct += 1) {
              if (((ut = ot.sh._mdf || dt), ot.styles[ct].lvl < vt)) {
                for (
                  bt = o.reset(),
                    St = vt - ot.styles[ct].lvl,
                    Pt = ot.transformers.length - 1;
                  !ut && St > 0;

                )
                  (ut = ot.transformers[Pt].mProps._mdf || ut),
                    (St -= 1),
                    (Pt -= 1);
                if (ut)
                  for (
                    St = vt - ot.styles[ct].lvl,
                      Pt = ot.transformers.length - 1;
                    St > 0;

                  )
                    bt.multiply(ot.transformers[Pt].mProps.v),
                      (St -= 1),
                      (Pt -= 1);
              } else bt = a;
              if (((xt = ot.sh.paths), (ft = xt._length), ut)) {
                for (mt = "", ht = 0; ht < ft; ht += 1)
                  (lt = xt.shapes[ht]),
                    lt &&
                      lt._length &&
                      (mt += buildShapeString(lt, lt._length, lt.c, bt));
                ot.caches[ct] = mt;
              } else mt = ot.caches[ct];
              (ot.styles[ct].d += st.hd === !0 ? "" : mt),
                (ot.styles[ct]._mdf = ut || ot.styles[ct]._mdf);
            }
          }
          function rt(st, ot, dt) {
            var ht = ot.style;
            (ot.c._mdf || dt) &&
              ht.pElem.setAttribute(
                "fill",
                "rgb(" +
                  bmFloor(ot.c.v[0]) +
                  "," +
                  bmFloor(ot.c.v[1]) +
                  "," +
                  bmFloor(ot.c.v[2]) +
                  ")"
              ),
              (ot.o._mdf || dt) &&
                ht.pElem.setAttribute("fill-opacity", ot.o.v);
          }
          function nt(st, ot, dt) {
            it(st, ot, dt), at(st, ot, dt);
          }
          function it(st, ot, dt) {
            var ht = ot.gf,
              ft = ot.g._hasOpacity,
              mt = ot.s.v,
              ut = ot.e.v;
            if (ot.o._mdf || dt) {
              var lt = st.ty === "gf" ? "fill-opacity" : "stroke-opacity";
              ot.style.pElem.setAttribute(lt, ot.o.v);
            }
            if (ot.s._mdf || dt) {
              var ct = st.t === 1 ? "x1" : "cx",
                pt = ct === "x1" ? "y1" : "cy";
              ht.setAttribute(ct, mt[0]),
                ht.setAttribute(pt, mt[1]),
                ft &&
                  !ot.g._collapsable &&
                  (ot.of.setAttribute(ct, mt[0]),
                  ot.of.setAttribute(pt, mt[1]));
            }
            var vt, xt, bt, St;
            if (ot.g._cmdf || dt) {
              vt = ot.cst;
              var Pt = ot.g.c;
              for (bt = vt.length, xt = 0; xt < bt; xt += 1)
                (St = vt[xt]),
                  St.setAttribute("offset", Pt[xt * 4] + "%"),
                  St.setAttribute(
                    "stop-color",
                    "rgb(" +
                      Pt[xt * 4 + 1] +
                      "," +
                      Pt[xt * 4 + 2] +
                      "," +
                      Pt[xt * 4 + 3] +
                      ")"
                  );
            }
            if (ft && (ot.g._omdf || dt)) {
              var Mt = ot.g.o;
              for (
                ot.g._collapsable ? (vt = ot.cst) : (vt = ot.ost),
                  bt = vt.length,
                  xt = 0;
                xt < bt;
                xt += 1
              )
                (St = vt[xt]),
                  ot.g._collapsable ||
                    St.setAttribute("offset", Mt[xt * 2] + "%"),
                  St.setAttribute("stop-opacity", Mt[xt * 2 + 1]);
            }
            if (st.t === 1)
              (ot.e._mdf || dt) &&
                (ht.setAttribute("x2", ut[0]),
                ht.setAttribute("y2", ut[1]),
                ft &&
                  !ot.g._collapsable &&
                  (ot.of.setAttribute("x2", ut[0]),
                  ot.of.setAttribute("y2", ut[1])));
            else {
              var It;
              if (
                ((ot.s._mdf || ot.e._mdf || dt) &&
                  ((It = Math.sqrt(
                    Math.pow(mt[0] - ut[0], 2) + Math.pow(mt[1] - ut[1], 2)
                  )),
                  ht.setAttribute("r", It),
                  ft && !ot.g._collapsable && ot.of.setAttribute("r", It)),
                ot.e._mdf || ot.h._mdf || ot.a._mdf || dt)
              ) {
                It ||
                  (It = Math.sqrt(
                    Math.pow(mt[0] - ut[0], 2) + Math.pow(mt[1] - ut[1], 2)
                  ));
                var Rt = Math.atan2(ut[1] - mt[1], ut[0] - mt[0]),
                  jt = ot.h.v;
                jt >= 1 ? (jt = 0.99) : jt <= -1 && (jt = -0.99);
                var Dt = It * jt,
                  At = Math.cos(Rt + ot.a.v) * Dt + mt[0],
                  Et = Math.sin(Rt + ot.a.v) * Dt + mt[1];
                ht.setAttribute("fx", At),
                  ht.setAttribute("fy", Et),
                  ft &&
                    !ot.g._collapsable &&
                    (ot.of.setAttribute("fx", At),
                    ot.of.setAttribute("fy", Et));
              }
            }
          }
          function at(st, ot, dt) {
            var ht = ot.style,
              ft = ot.d;
            ft &&
              (ft._mdf || dt) &&
              ft.dashStr &&
              (ht.pElem.setAttribute("stroke-dasharray", ft.dashStr),
              ht.pElem.setAttribute("stroke-dashoffset", ft.dashoffset[0])),
              ot.c &&
                (ot.c._mdf || dt) &&
                ht.pElem.setAttribute(
                  "stroke",
                  "rgb(" +
                    bmFloor(ot.c.v[0]) +
                    "," +
                    bmFloor(ot.c.v[1]) +
                    "," +
                    bmFloor(ot.c.v[2]) +
                    ")"
                ),
              (ot.o._mdf || dt) &&
                ht.pElem.setAttribute("stroke-opacity", ot.o.v),
              (ot.w._mdf || dt) &&
                (ht.pElem.setAttribute("stroke-width", ot.w.v),
                ht.msElem && ht.msElem.setAttribute("stroke-width", ot.w.v));
          }
          return s;
        })();
      function SVGShapeElement(a, o, s) {
        (this.shapes = []),
          (this.shapesData = a.shapes),
          (this.stylesList = []),
          (this.shapeModifiers = []),
          (this.itemsData = []),
          (this.processedElements = []),
          (this.animatedContents = []),
          this.initElement(a, o, s),
          (this.prevViewData = []);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          IShapeElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        SVGShapeElement
      ),
        (SVGShapeElement.prototype.initSecondaryElement = function () {}),
        (SVGShapeElement.prototype.identityMatrix = new Matrix()),
        (SVGShapeElement.prototype.buildExpressionInterface = function () {}),
        (SVGShapeElement.prototype.createContent = function () {
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            this.layerElement,
            0,
            [],
            !0
          ),
            this.filterUniqueShapes();
        }),
        (SVGShapeElement.prototype.filterUniqueShapes = function () {
          var a,
            o = this.shapes.length,
            s,
            _,
            $ = this.stylesList.length,
            et,
            tt = [],
            rt = !1;
          for (_ = 0; _ < $; _ += 1) {
            for (
              et = this.stylesList[_], rt = !1, tt.length = 0, a = 0;
              a < o;
              a += 1
            )
              (s = this.shapes[a]),
                s.styles.indexOf(et) !== -1 &&
                  (tt.push(s), (rt = s._isAnimated || rt));
            tt.length > 1 && rt && this.setShapesAsAnimated(tt);
          }
        }),
        (SVGShapeElement.prototype.setShapesAsAnimated = function (a) {
          var o,
            s = a.length;
          for (o = 0; o < s; o += 1) a[o].setAsAnimated();
        }),
        (SVGShapeElement.prototype.createStyleElement = function (a, o) {
          var s,
            _ = new SVGStyleData(a, o),
            $ = _.pElem;
          if (a.ty === "st") s = new SVGStrokeStyleData(this, a, _);
          else if (a.ty === "fl") s = new SVGFillStyleData(this, a, _);
          else if (a.ty === "gf" || a.ty === "gs") {
            var et =
              a.ty === "gf"
                ? SVGGradientFillStyleData
                : SVGGradientStrokeStyleData;
            (s = new et(this, a, _)),
              this.globalData.defs.appendChild(s.gf),
              s.maskId &&
                (this.globalData.defs.appendChild(s.ms),
                this.globalData.defs.appendChild(s.of),
                $.setAttribute(
                  "mask",
                  "url(" + getLocationHref() + "#" + s.maskId + ")"
                ));
          } else a.ty === "no" && (s = new SVGNoStyleData(this, a, _));
          return (
            (a.ty === "st" || a.ty === "gs") &&
              ($.setAttribute("stroke-linecap", lineCapEnum[a.lc || 2]),
              $.setAttribute("stroke-linejoin", lineJoinEnum[a.lj || 2]),
              $.setAttribute("fill-opacity", "0"),
              a.lj === 1 && $.setAttribute("stroke-miterlimit", a.ml)),
            a.r === 2 && $.setAttribute("fill-rule", "evenodd"),
            a.ln && $.setAttribute("id", a.ln),
            a.cl && $.setAttribute("class", a.cl),
            a.bm && ($.style["mix-blend-mode"] = getBlendMode(a.bm)),
            this.stylesList.push(_),
            this.addToAnimatedContents(a, s),
            s
          );
        }),
        (SVGShapeElement.prototype.createGroupElement = function (a) {
          var o = new ShapeGroupData();
          return (
            a.ln && o.gr.setAttribute("id", a.ln),
            a.cl && o.gr.setAttribute("class", a.cl),
            a.bm && (o.gr.style["mix-blend-mode"] = getBlendMode(a.bm)),
            o
          );
        }),
        (SVGShapeElement.prototype.createTransformElement = function (a, o) {
          var s = TransformPropertyFactory.getTransformProperty(this, a, this),
            _ = new SVGTransformData(s, s.o, o);
          return this.addToAnimatedContents(a, _), _;
        }),
        (SVGShapeElement.prototype.createShapeElement = function (a, o, s) {
          var _ = 4;
          a.ty === "rc"
            ? (_ = 5)
            : a.ty === "el"
            ? (_ = 6)
            : a.ty === "sr" && (_ = 7);
          var $ = ShapePropertyFactory.getShapeProp(this, a, _, this),
            et = new SVGShapeData(o, s, $);
          return (
            this.shapes.push(et),
            this.addShapeToModifiers(et),
            this.addToAnimatedContents(a, et),
            et
          );
        }),
        (SVGShapeElement.prototype.addToAnimatedContents = function (a, o) {
          for (var s = 0, _ = this.animatedContents.length; s < _; ) {
            if (this.animatedContents[s].element === o) return;
            s += 1;
          }
          this.animatedContents.push({
            fn: SVGElementsRenderer.createRenderFunction(a),
            element: o,
            data: a,
          });
        }),
        (SVGShapeElement.prototype.setElementStyles = function (a) {
          var o = a.styles,
            s,
            _ = this.stylesList.length;
          for (s = 0; s < _; s += 1)
            this.stylesList[s].closed || o.push(this.stylesList[s]);
        }),
        (SVGShapeElement.prototype.reloadShapes = function () {
          this._isFirstFrame = !0;
          var a,
            o = this.itemsData.length;
          for (a = 0; a < o; a += 1) this.prevViewData[a] = this.itemsData[a];
          for (
            this.searchShapes(
              this.shapesData,
              this.itemsData,
              this.prevViewData,
              this.layerElement,
              0,
              [],
              !0
            ),
              this.filterUniqueShapes(),
              o = this.dynamicProperties.length,
              a = 0;
            a < o;
            a += 1
          )
            this.dynamicProperties[a].getValue();
          this.renderModifiers();
        }),
        (SVGShapeElement.prototype.searchShapes = function (
          a,
          o,
          s,
          _,
          $,
          et,
          tt
        ) {
          var rt = [].concat(et),
            nt,
            it = a.length - 1,
            at,
            st,
            ot = [],
            dt = [],
            ht,
            ft,
            mt;
          for (nt = it; nt >= 0; nt -= 1) {
            if (
              ((mt = this.searchProcessedElement(a[nt])),
              mt ? (o[nt] = s[mt - 1]) : (a[nt]._render = tt),
              a[nt].ty === "fl" ||
                a[nt].ty === "st" ||
                a[nt].ty === "gf" ||
                a[nt].ty === "gs" ||
                a[nt].ty === "no")
            )
              mt
                ? (o[nt].style.closed = !1)
                : (o[nt] = this.createStyleElement(a[nt], $)),
                a[nt]._render &&
                  o[nt].style.pElem.parentNode !== _ &&
                  _.appendChild(o[nt].style.pElem),
                ot.push(o[nt].style);
            else if (a[nt].ty === "gr") {
              if (!mt) o[nt] = this.createGroupElement(a[nt]);
              else
                for (st = o[nt].it.length, at = 0; at < st; at += 1)
                  o[nt].prevViewData[at] = o[nt].it[at];
              this.searchShapes(
                a[nt].it,
                o[nt].it,
                o[nt].prevViewData,
                o[nt].gr,
                $ + 1,
                rt,
                tt
              ),
                a[nt]._render &&
                  o[nt].gr.parentNode !== _ &&
                  _.appendChild(o[nt].gr);
            } else
              a[nt].ty === "tr"
                ? (mt || (o[nt] = this.createTransformElement(a[nt], _)),
                  (ht = o[nt].transform),
                  rt.push(ht))
                : a[nt].ty === "sh" ||
                  a[nt].ty === "rc" ||
                  a[nt].ty === "el" ||
                  a[nt].ty === "sr"
                ? (mt || (o[nt] = this.createShapeElement(a[nt], rt, $)),
                  this.setElementStyles(o[nt]))
                : a[nt].ty === "tm" ||
                  a[nt].ty === "rd" ||
                  a[nt].ty === "ms" ||
                  a[nt].ty === "pb" ||
                  a[nt].ty === "zz" ||
                  a[nt].ty === "op"
                ? (mt
                    ? ((ft = o[nt]), (ft.closed = !1))
                    : ((ft = ShapeModifiers.getModifier(a[nt].ty)),
                      ft.init(this, a[nt]),
                      (o[nt] = ft),
                      this.shapeModifiers.push(ft)),
                  dt.push(ft))
                : a[nt].ty === "rp" &&
                  (mt
                    ? ((ft = o[nt]), (ft.closed = !0))
                    : ((ft = ShapeModifiers.getModifier(a[nt].ty)),
                      (o[nt] = ft),
                      ft.init(this, a, nt, o),
                      this.shapeModifiers.push(ft),
                      (tt = !1)),
                  dt.push(ft));
            this.addProcessedElement(a[nt], nt + 1);
          }
          for (it = ot.length, nt = 0; nt < it; nt += 1) ot[nt].closed = !0;
          for (it = dt.length, nt = 0; nt < it; nt += 1) dt[nt].closed = !0;
        }),
        (SVGShapeElement.prototype.renderInnerContent = function () {
          this.renderModifiers();
          var a,
            o = this.stylesList.length;
          for (a = 0; a < o; a += 1) this.stylesList[a].reset();
          for (this.renderShape(), a = 0; a < o; a += 1)
            (this.stylesList[a]._mdf || this._isFirstFrame) &&
              (this.stylesList[a].msElem &&
                (this.stylesList[a].msElem.setAttribute(
                  "d",
                  this.stylesList[a].d
                ),
                (this.stylesList[a].d = "M0 0" + this.stylesList[a].d)),
              this.stylesList[a].pElem.setAttribute(
                "d",
                this.stylesList[a].d || "M0 0"
              ));
        }),
        (SVGShapeElement.prototype.renderShape = function () {
          var a,
            o = this.animatedContents.length,
            s;
          for (a = 0; a < o; a += 1)
            (s = this.animatedContents[a]),
              (this._isFirstFrame || s.element._isAnimated) &&
                s.data !== !0 &&
                s.fn(s.data, s.element, this._isFirstFrame);
        }),
        (SVGShapeElement.prototype.destroy = function () {
          this.destroyBaseElement(),
            (this.shapesData = null),
            (this.itemsData = null);
        });
      function LetterProps(a, o, s, _, $, et) {
        (this.o = a),
          (this.sw = o),
          (this.sc = s),
          (this.fc = _),
          (this.m = $),
          (this.p = et),
          (this._mdf = { o: !0, sw: !!o, sc: !!s, fc: !!_, m: !0, p: !0 });
      }
      LetterProps.prototype.update = function (a, o, s, _, $, et) {
        (this._mdf.o = !1),
          (this._mdf.sw = !1),
          (this._mdf.sc = !1),
          (this._mdf.fc = !1),
          (this._mdf.m = !1),
          (this._mdf.p = !1);
        var tt = !1;
        return (
          this.o !== a && ((this.o = a), (this._mdf.o = !0), (tt = !0)),
          this.sw !== o && ((this.sw = o), (this._mdf.sw = !0), (tt = !0)),
          this.sc !== s && ((this.sc = s), (this._mdf.sc = !0), (tt = !0)),
          this.fc !== _ && ((this.fc = _), (this._mdf.fc = !0), (tt = !0)),
          this.m !== $ && ((this.m = $), (this._mdf.m = !0), (tt = !0)),
          et.length &&
            (this.p[0] !== et[0] ||
              this.p[1] !== et[1] ||
              this.p[4] !== et[4] ||
              this.p[5] !== et[5] ||
              this.p[12] !== et[12] ||
              this.p[13] !== et[13]) &&
            ((this.p = et), (this._mdf.p = !0), (tt = !0)),
          tt
        );
      };
      function TextProperty(a, o) {
        (this._frameId = initialDefaultFrame),
          (this.pv = ""),
          (this.v = ""),
          (this.kf = !1),
          (this._isFirstFrame = !0),
          (this._mdf = !1),
          o.d && o.d.sid && (o.d = a.globalData.slotManager.getProp(o.d)),
          (this.data = o),
          (this.elem = a),
          (this.comp = this.elem.comp),
          (this.keysIndex = 0),
          (this.canResize = !1),
          (this.minimumFontSize = 1),
          (this.effectsSequence = []),
          (this.currentData = {
            ascent: 0,
            boxWidth: this.defaultBoxWidth,
            f: "",
            fStyle: "",
            fWeight: "",
            fc: "",
            j: "",
            justifyOffset: "",
            l: [],
            lh: 0,
            lineWidths: [],
            ls: "",
            of: "",
            s: "",
            sc: "",
            sw: 0,
            t: 0,
            tr: 0,
            sz: 0,
            ps: null,
            fillColorAnim: !1,
            strokeColorAnim: !1,
            strokeWidthAnim: !1,
            yOffset: 0,
            finalSize: 0,
            finalText: [],
            finalLineHeight: 0,
            __complete: !1,
          }),
          this.copyData(this.currentData, this.data.d.k[0].s),
          this.searchProperty() || this.completeTextData(this.currentData);
      }
      (TextProperty.prototype.defaultBoxWidth = [0, 0]),
        (TextProperty.prototype.copyData = function (a, o) {
          for (var s in o)
            Object.prototype.hasOwnProperty.call(o, s) && (a[s] = o[s]);
          return a;
        }),
        (TextProperty.prototype.setCurrentData = function (a) {
          a.__complete || this.completeTextData(a),
            (this.currentData = a),
            (this.currentData.boxWidth =
              this.currentData.boxWidth || this.defaultBoxWidth),
            (this._mdf = !0);
        }),
        (TextProperty.prototype.searchProperty = function () {
          return this.searchKeyframes();
        }),
        (TextProperty.prototype.searchKeyframes = function () {
          return (
            (this.kf = this.data.d.k.length > 1),
            this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
            this.kf
          );
        }),
        (TextProperty.prototype.addEffect = function (a) {
          this.effectsSequence.push(a), this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.getValue = function (a) {
          if (
            !(
              (this.elem.globalData.frameId === this.frameId ||
                !this.effectsSequence.length) &&
              !a
            )
          ) {
            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
            var o = this.currentData,
              s = this.keysIndex;
            if (this.lock) {
              this.setCurrentData(this.currentData);
              return;
            }
            (this.lock = !0), (this._mdf = !1);
            var _,
              $ = this.effectsSequence.length,
              et = a || this.data.d.k[this.keysIndex].s;
            for (_ = 0; _ < $; _ += 1)
              s !== this.keysIndex
                ? (et = this.effectsSequence[_](et, et.t))
                : (et = this.effectsSequence[_](this.currentData, et.t));
            o !== et && this.setCurrentData(et),
              (this.v = this.currentData),
              (this.pv = this.v),
              (this.lock = !1),
              (this.frameId = this.elem.globalData.frameId);
          }
        }),
        (TextProperty.prototype.getKeyframeValue = function () {
          for (
            var a = this.data.d.k,
              o = this.elem.comp.renderedFrame,
              s = 0,
              _ = a.length;
            s <= _ - 1 && !(s === _ - 1 || a[s + 1].t > o);

          )
            s += 1;
          return (
            this.keysIndex !== s && (this.keysIndex = s),
            this.data.d.k[this.keysIndex].s
          );
        }),
        (TextProperty.prototype.buildFinalText = function (a) {
          for (
            var o = [], s = 0, _ = a.length, $, et, tt = !1, rt = !1, nt = "";
            s < _;

          )
            (tt = rt),
              (rt = !1),
              ($ = a.charCodeAt(s)),
              (nt = a.charAt(s)),
              FontManager.isCombinedCharacter($)
                ? (tt = !0)
                : $ >= 55296 && $ <= 56319
                ? FontManager.isRegionalFlag(a, s)
                  ? (nt = a.substr(s, 14))
                  : ((et = a.charCodeAt(s + 1)),
                    et >= 56320 &&
                      et <= 57343 &&
                      (FontManager.isModifier($, et)
                        ? ((nt = a.substr(s, 2)), (tt = !0))
                        : FontManager.isFlagEmoji(a.substr(s, 4))
                        ? (nt = a.substr(s, 4))
                        : (nt = a.substr(s, 2))))
                : $ > 56319
                ? ((et = a.charCodeAt(s + 1)),
                  FontManager.isVariationSelector($) && (tt = !0))
                : FontManager.isZeroWidthJoiner($) && ((tt = !0), (rt = !0)),
              tt ? ((o[o.length - 1] += nt), (tt = !1)) : o.push(nt),
              (s += nt.length);
          return o;
        }),
        (TextProperty.prototype.completeTextData = function (a) {
          a.__complete = !0;
          var o = this.elem.globalData.fontManager,
            s = this.data,
            _ = [],
            $,
            et,
            tt,
            rt = 0,
            nt,
            it = s.m.g,
            at = 0,
            st = 0,
            ot = 0,
            dt = [],
            ht = 0,
            ft = 0,
            mt,
            ut,
            lt = o.getFontByName(a.f),
            ct,
            pt = 0,
            vt = getFontProperties(lt);
          (a.fWeight = vt.weight),
            (a.fStyle = vt.style),
            (a.finalSize = a.s),
            (a.finalText = this.buildFinalText(a.t)),
            (et = a.finalText.length),
            (a.finalLineHeight = a.lh);
          var xt = (a.tr / 1e3) * a.finalSize,
            bt;
          if (a.sz)
            for (var St = !0, Pt = a.sz[0], Mt = a.sz[1], It, Rt; St; ) {
              (Rt = this.buildFinalText(a.t)),
                (It = 0),
                (ht = 0),
                (et = Rt.length),
                (xt = (a.tr / 1e3) * a.finalSize);
              var jt = -1;
              for ($ = 0; $ < et; $ += 1)
                (bt = Rt[$].charCodeAt(0)),
                  (tt = !1),
                  Rt[$] === " "
                    ? (jt = $)
                    : (bt === 13 || bt === 3) &&
                      ((ht = 0),
                      (tt = !0),
                      (It += a.finalLineHeight || a.finalSize * 1.2)),
                  o.chars
                    ? ((ct = o.getCharData(Rt[$], lt.fStyle, lt.fFamily)),
                      (pt = tt ? 0 : (ct.w * a.finalSize) / 100))
                    : (pt = o.measureText(Rt[$], a.f, a.finalSize)),
                  ht + pt > Pt && Rt[$] !== " "
                    ? (jt === -1 ? (et += 1) : ($ = jt),
                      (It += a.finalLineHeight || a.finalSize * 1.2),
                      Rt.splice($, jt === $ ? 1 : 0, "\r"),
                      (jt = -1),
                      (ht = 0))
                    : ((ht += pt), (ht += xt));
              (It += (lt.ascent * a.finalSize) / 100),
                this.canResize && a.finalSize > this.minimumFontSize && Mt < It
                  ? ((a.finalSize -= 1),
                    (a.finalLineHeight = (a.finalSize * a.lh) / a.s))
                  : ((a.finalText = Rt), (et = a.finalText.length), (St = !1));
            }
          (ht = -xt), (pt = 0);
          var Dt = 0,
            At;
          for ($ = 0; $ < et; $ += 1)
            if (
              ((tt = !1),
              (At = a.finalText[$]),
              (bt = At.charCodeAt(0)),
              bt === 13 || bt === 3
                ? ((Dt = 0),
                  dt.push(ht),
                  (ft = ht > ft ? ht : ft),
                  (ht = -2 * xt),
                  (nt = ""),
                  (tt = !0),
                  (ot += 1))
                : (nt = At),
              o.chars
                ? ((ct = o.getCharData(
                    At,
                    lt.fStyle,
                    o.getFontByName(a.f).fFamily
                  )),
                  (pt = tt ? 0 : (ct.w * a.finalSize) / 100))
                : (pt = o.measureText(nt, a.f, a.finalSize)),
              At === " " ? (Dt += pt + xt) : ((ht += pt + xt + Dt), (Dt = 0)),
              _.push({
                l: pt,
                an: pt,
                add: at,
                n: tt,
                anIndexes: [],
                val: nt,
                line: ot,
                animatorJustifyOffset: 0,
              }),
              it == 2)
            ) {
              if (((at += pt), nt === "" || nt === " " || $ === et - 1)) {
                for ((nt === "" || nt === " ") && (at -= pt); st <= $; )
                  (_[st].an = at),
                    (_[st].ind = rt),
                    (_[st].extra = pt),
                    (st += 1);
                (rt += 1), (at = 0);
              }
            } else if (it == 3) {
              if (((at += pt), nt === "" || $ === et - 1)) {
                for (nt === "" && (at -= pt); st <= $; )
                  (_[st].an = at),
                    (_[st].ind = rt),
                    (_[st].extra = pt),
                    (st += 1);
                (at = 0), (rt += 1);
              }
            } else (_[rt].ind = rt), (_[rt].extra = 0), (rt += 1);
          if (((a.l = _), (ft = ht > ft ? ht : ft), dt.push(ht), a.sz))
            (a.boxWidth = a.sz[0]), (a.justifyOffset = 0);
          else
            switch (((a.boxWidth = ft), a.j)) {
              case 1:
                a.justifyOffset = -a.boxWidth;
                break;
              case 2:
                a.justifyOffset = -a.boxWidth / 2;
                break;
              default:
                a.justifyOffset = 0;
            }
          a.lineWidths = dt;
          var Et = s.a,
            kt,
            gt;
          ut = Et.length;
          var yt,
            wt,
            _t = [];
          for (mt = 0; mt < ut; mt += 1) {
            for (
              kt = Et[mt],
                kt.a.sc && (a.strokeColorAnim = !0),
                kt.a.sw && (a.strokeWidthAnim = !0),
                (kt.a.fc || kt.a.fh || kt.a.fs || kt.a.fb) &&
                  (a.fillColorAnim = !0),
                wt = 0,
                yt = kt.s.b,
                $ = 0;
              $ < et;
              $ += 1
            )
              (gt = _[$]),
                (gt.anIndexes[mt] = wt),
                ((yt == 1 && gt.val !== "") ||
                  (yt == 2 && gt.val !== "" && gt.val !== " ") ||
                  (yt == 3 && (gt.n || gt.val == " " || $ == et - 1)) ||
                  (yt == 4 && (gt.n || $ == et - 1))) &&
                  (kt.s.rn === 1 && _t.push(wt), (wt += 1));
            s.a[mt].s.totalChars = wt;
            var Ft = -1,
              Vt;
            if (kt.s.rn === 1)
              for ($ = 0; $ < et; $ += 1)
                (gt = _[$]),
                  Ft != gt.anIndexes[mt] &&
                    ((Ft = gt.anIndexes[mt]),
                    (Vt = _t.splice(
                      Math.floor(Math.random() * _t.length),
                      1
                    )[0])),
                  (gt.anIndexes[mt] = Vt);
          }
          (a.yOffset = a.finalLineHeight || a.finalSize * 1.2),
            (a.ls = a.ls || 0),
            (a.ascent = (lt.ascent * a.finalSize) / 100);
        }),
        (TextProperty.prototype.updateDocumentData = function (a, o) {
          o = o === void 0 ? this.keysIndex : o;
          var s = this.copyData({}, this.data.d.k[o].s);
          (s = this.copyData(s, a)),
            (this.data.d.k[o].s = s),
            this.recalculate(o),
            this.setCurrentData(s),
            this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.recalculate = function (a) {
          var o = this.data.d.k[a].s;
          (o.__complete = !1),
            (this.keysIndex = 0),
            (this._isFirstFrame = !0),
            this.getValue(o);
        }),
        (TextProperty.prototype.canResizeFont = function (a) {
          (this.canResize = a),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        }),
        (TextProperty.prototype.setMinimumFontSize = function (a) {
          (this.minimumFontSize = Math.floor(a) || 1),
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this);
        });
      var TextSelectorProp = (function () {
        var a = Math.max,
          o = Math.min,
          s = Math.floor;
        function _(et, tt) {
          (this._currentTextLength = -1),
            (this.k = !1),
            (this.data = tt),
            (this.elem = et),
            (this.comp = et.comp),
            (this.finalS = 0),
            (this.finalE = 0),
            this.initDynamicPropertyContainer(et),
            (this.s = PropertyFactory.getProp(
              et,
              tt.s || { k: 0 },
              0,
              0,
              this
            )),
            "e" in tt
              ? (this.e = PropertyFactory.getProp(et, tt.e, 0, 0, this))
              : (this.e = { v: 100 }),
            (this.o = PropertyFactory.getProp(
              et,
              tt.o || { k: 0 },
              0,
              0,
              this
            )),
            (this.xe = PropertyFactory.getProp(
              et,
              tt.xe || { k: 0 },
              0,
              0,
              this
            )),
            (this.ne = PropertyFactory.getProp(
              et,
              tt.ne || { k: 0 },
              0,
              0,
              this
            )),
            (this.sm = PropertyFactory.getProp(
              et,
              tt.sm || { k: 100 },
              0,
              0,
              this
            )),
            (this.a = PropertyFactory.getProp(et, tt.a, 0, 0.01, this)),
            this.dynamicProperties.length || this.getValue();
        }
        (_.prototype = {
          getMult: function (tt) {
            this._currentTextLength !==
              this.elem.textProperty.currentData.l.length && this.getValue();
            var rt = 0,
              nt = 0,
              it = 1,
              at = 1;
            this.ne.v > 0 ? (rt = this.ne.v / 100) : (nt = -this.ne.v / 100),
              this.xe.v > 0
                ? (it = 1 - this.xe.v / 100)
                : (at = 1 + this.xe.v / 100);
            var st = BezierFactory.getBezierEasing(rt, nt, it, at).get,
              ot = 0,
              dt = this.finalS,
              ht = this.finalE,
              ft = this.data.sh;
            if (ft === 2)
              ht === dt
                ? (ot = tt >= ht ? 1 : 0)
                : (ot = a(0, o(0.5 / (ht - dt) + (tt - dt) / (ht - dt), 1))),
                (ot = st(ot));
            else if (ft === 3)
              ht === dt
                ? (ot = tt >= ht ? 0 : 1)
                : (ot =
                    1 - a(0, o(0.5 / (ht - dt) + (tt - dt) / (ht - dt), 1))),
                (ot = st(ot));
            else if (ft === 4)
              ht === dt
                ? (ot = 0)
                : ((ot = a(0, o(0.5 / (ht - dt) + (tt - dt) / (ht - dt), 1))),
                  ot < 0.5 ? (ot *= 2) : (ot = 1 - 2 * (ot - 0.5))),
                (ot = st(ot));
            else if (ft === 5) {
              if (ht === dt) ot = 0;
              else {
                var mt = ht - dt;
                tt = o(a(0, tt + 0.5 - dt), ht - dt);
                var ut = -mt / 2 + tt,
                  lt = mt / 2;
                ot = Math.sqrt(1 - (ut * ut) / (lt * lt));
              }
              ot = st(ot);
            } else
              ft === 6
                ? (ht === dt
                    ? (ot = 0)
                    : ((tt = o(a(0, tt + 0.5 - dt), ht - dt)),
                      (ot =
                        (1 +
                          Math.cos(Math.PI + (Math.PI * 2 * tt) / (ht - dt))) /
                        2)),
                  (ot = st(ot)))
                : (tt >= s(dt) &&
                    (tt - dt < 0
                      ? (ot = a(0, o(o(ht, 1) - (dt - tt), 1)))
                      : (ot = a(0, o(ht - tt, 1)))),
                  (ot = st(ot)));
            if (this.sm.v !== 100) {
              var ct = this.sm.v * 0.01;
              ct === 0 && (ct = 1e-8);
              var pt = 0.5 - ct * 0.5;
              ot < pt ? (ot = 0) : ((ot = (ot - pt) / ct), ot > 1 && (ot = 1));
            }
            return ot * this.a.v;
          },
          getValue: function (tt) {
            this.iterateDynamicProperties(),
              (this._mdf = tt || this._mdf),
              (this._currentTextLength =
                this.elem.textProperty.currentData.l.length || 0),
              tt && this.data.r === 2 && (this.e.v = this._currentTextLength);
            var rt = this.data.r === 2 ? 1 : 100 / this.data.totalChars,
              nt = this.o.v / rt,
              it = this.s.v / rt + nt,
              at = this.e.v / rt + nt;
            if (it > at) {
              var st = it;
              (it = at), (at = st);
            }
            (this.finalS = it), (this.finalE = at);
          },
        }),
          extendPrototype([DynamicPropertyContainer], _);
        function $(et, tt, rt) {
          return new _(et, tt);
        }
        return { getTextSelectorProp: $ };
      })();
      function TextAnimatorDataProperty(a, o, s) {
        var _ = { propType: !1 },
          $ = PropertyFactory.getProp,
          et = o.a;
        (this.a = {
          r: et.r ? $(a, et.r, 0, degToRads, s) : _,
          rx: et.rx ? $(a, et.rx, 0, degToRads, s) : _,
          ry: et.ry ? $(a, et.ry, 0, degToRads, s) : _,
          sk: et.sk ? $(a, et.sk, 0, degToRads, s) : _,
          sa: et.sa ? $(a, et.sa, 0, degToRads, s) : _,
          s: et.s ? $(a, et.s, 1, 0.01, s) : _,
          a: et.a ? $(a, et.a, 1, 0, s) : _,
          o: et.o ? $(a, et.o, 0, 0.01, s) : _,
          p: et.p ? $(a, et.p, 1, 0, s) : _,
          sw: et.sw ? $(a, et.sw, 0, 0, s) : _,
          sc: et.sc ? $(a, et.sc, 1, 0, s) : _,
          fc: et.fc ? $(a, et.fc, 1, 0, s) : _,
          fh: et.fh ? $(a, et.fh, 0, 0, s) : _,
          fs: et.fs ? $(a, et.fs, 0, 0.01, s) : _,
          fb: et.fb ? $(a, et.fb, 0, 0.01, s) : _,
          t: et.t ? $(a, et.t, 0, 0, s) : _,
        }),
          (this.s = TextSelectorProp.getTextSelectorProp(a, o.s, s)),
          (this.s.t = o.s.t);
      }
      function TextAnimatorProperty(a, o, s) {
        (this._isFirstFrame = !0),
          (this._hasMaskedPath = !1),
          (this._frameId = -1),
          (this._textData = a),
          (this._renderType = o),
          (this._elem = s),
          (this._animatorsData = createSizedArray(this._textData.a.length)),
          (this._pathData = {}),
          (this._moreOptions = { alignment: {} }),
          (this.renderedLetters = []),
          (this.lettersChangedFlag = !1),
          this.initDynamicPropertyContainer(s);
      }
      (TextAnimatorProperty.prototype.searchProperties = function () {
        var a,
          o = this._textData.a.length,
          s,
          _ = PropertyFactory.getProp;
        for (a = 0; a < o; a += 1)
          (s = this._textData.a[a]),
            (this._animatorsData[a] = new TextAnimatorDataProperty(
              this._elem,
              s,
              this
            ));
        this._textData.p && "m" in this._textData.p
          ? ((this._pathData = {
              a: _(this._elem, this._textData.p.a, 0, 0, this),
              f: _(this._elem, this._textData.p.f, 0, 0, this),
              l: _(this._elem, this._textData.p.l, 0, 0, this),
              r: _(this._elem, this._textData.p.r, 0, 0, this),
              p: _(this._elem, this._textData.p.p, 0, 0, this),
              m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
            }),
            (this._hasMaskedPath = !0))
          : (this._hasMaskedPath = !1),
          (this._moreOptions.alignment = _(
            this._elem,
            this._textData.m.a,
            1,
            0,
            this
          ));
      }),
        (TextAnimatorProperty.prototype.getMeasures = function (a, o) {
          if (
            ((this.lettersChangedFlag = o),
            !(
              !this._mdf &&
              !this._isFirstFrame &&
              !o &&
              (!this._hasMaskedPath || !this._pathData.m._mdf)
            ))
          ) {
            this._isFirstFrame = !1;
            var s = this._moreOptions.alignment.v,
              _ = this._animatorsData,
              $ = this._textData,
              et = this.mHelper,
              tt = this._renderType,
              rt = this.renderedLetters.length,
              nt,
              it,
              at,
              st,
              ot = a.l,
              dt,
              ht,
              ft,
              mt,
              ut,
              lt,
              ct,
              pt,
              vt,
              xt,
              bt,
              St,
              Pt,
              Mt,
              It;
            if (this._hasMaskedPath) {
              if (
                ((It = this._pathData.m),
                !this._pathData.n || this._pathData._mdf)
              ) {
                var Rt = It.v;
                this._pathData.r.v && (Rt = Rt.reverse()),
                  (dt = { tLength: 0, segments: [] }),
                  (st = Rt._length - 1);
                var jt;
                for (St = 0, at = 0; at < st; at += 1)
                  (jt = bez.buildBezierData(
                    Rt.v[at],
                    Rt.v[at + 1],
                    [Rt.o[at][0] - Rt.v[at][0], Rt.o[at][1] - Rt.v[at][1]],
                    [
                      Rt.i[at + 1][0] - Rt.v[at + 1][0],
                      Rt.i[at + 1][1] - Rt.v[at + 1][1],
                    ]
                  )),
                    (dt.tLength += jt.segmentLength),
                    dt.segments.push(jt),
                    (St += jt.segmentLength);
                (at = st),
                  It.v.c &&
                    ((jt = bez.buildBezierData(
                      Rt.v[at],
                      Rt.v[0],
                      [Rt.o[at][0] - Rt.v[at][0], Rt.o[at][1] - Rt.v[at][1]],
                      [Rt.i[0][0] - Rt.v[0][0], Rt.i[0][1] - Rt.v[0][1]]
                    )),
                    (dt.tLength += jt.segmentLength),
                    dt.segments.push(jt),
                    (St += jt.segmentLength)),
                  (this._pathData.pi = dt);
              }
              if (
                ((dt = this._pathData.pi),
                (ht = this._pathData.f.v),
                (ct = 0),
                (lt = 1),
                (mt = 0),
                (ut = !0),
                (xt = dt.segments),
                ht < 0 && It.v.c)
              )
                for (
                  dt.tLength < Math.abs(ht) &&
                    (ht = -Math.abs(ht) % dt.tLength),
                    ct = xt.length - 1,
                    vt = xt[ct].points,
                    lt = vt.length - 1;
                  ht < 0;

                )
                  (ht += vt[lt].partialLength),
                    (lt -= 1),
                    lt < 0 &&
                      ((ct -= 1), (vt = xt[ct].points), (lt = vt.length - 1));
              (vt = xt[ct].points),
                (pt = vt[lt - 1]),
                (ft = vt[lt]),
                (bt = ft.partialLength);
            }
            (st = ot.length), (nt = 0), (it = 0);
            var Dt = a.finalSize * 1.2 * 0.714,
              At = !0,
              Et,
              kt,
              gt,
              yt,
              wt;
            yt = _.length;
            var _t,
              Ft = -1,
              Vt,
              Lt,
              Wt,
              zt = ht,
              Gt = ct,
              Kt = lt,
              er = -1,
              Xt,
              Yt,
              nr,
              Ht,
              Bt,
              Nt,
              tr,
              rr,
              or = "",
              pr = this.defaultPropsArray,
              sr;
            if (a.j === 2 || a.j === 1) {
              var ir = 0,
                cr = 0,
                ar = a.j === 2 ? -0.5 : -1,
                lr = 0,
                mr = !0;
              for (at = 0; at < st; at += 1)
                if (ot[at].n) {
                  for (ir && (ir += cr); lr < at; )
                    (ot[lr].animatorJustifyOffset = ir), (lr += 1);
                  (ir = 0), (mr = !0);
                } else {
                  for (gt = 0; gt < yt; gt += 1)
                    (Et = _[gt].a),
                      Et.t.propType &&
                        (mr && a.j === 2 && (cr += Et.t.v * ar),
                        (kt = _[gt].s),
                        (_t = kt.getMult(
                          ot[at].anIndexes[gt],
                          $.a[gt].s.totalChars
                        )),
                        _t.length
                          ? (ir += Et.t.v * _t[0] * ar)
                          : (ir += Et.t.v * _t * ar));
                  mr = !1;
                }
              for (ir && (ir += cr); lr < at; )
                (ot[lr].animatorJustifyOffset = ir), (lr += 1);
            }
            for (at = 0; at < st; at += 1) {
              if ((et.reset(), (Xt = 1), ot[at].n))
                (nt = 0),
                  (it += a.yOffset),
                  (it += At ? 1 : 0),
                  (ht = zt),
                  (At = !1),
                  this._hasMaskedPath &&
                    ((ct = Gt),
                    (lt = Kt),
                    (vt = xt[ct].points),
                    (pt = vt[lt - 1]),
                    (ft = vt[lt]),
                    (bt = ft.partialLength),
                    (mt = 0)),
                  (or = ""),
                  (rr = ""),
                  (Nt = ""),
                  (sr = ""),
                  (pr = this.defaultPropsArray);
              else {
                if (this._hasMaskedPath) {
                  if (er !== ot[at].line) {
                    switch (a.j) {
                      case 1:
                        ht += St - a.lineWidths[ot[at].line];
                        break;
                      case 2:
                        ht += (St - a.lineWidths[ot[at].line]) / 2;
                        break;
                    }
                    er = ot[at].line;
                  }
                  Ft !== ot[at].ind &&
                    (ot[Ft] && (ht += ot[Ft].extra),
                    (ht += ot[at].an / 2),
                    (Ft = ot[at].ind)),
                    (ht += s[0] * ot[at].an * 0.005);
                  var ur = 0;
                  for (gt = 0; gt < yt; gt += 1)
                    (Et = _[gt].a),
                      Et.p.propType &&
                        ((kt = _[gt].s),
                        (_t = kt.getMult(
                          ot[at].anIndexes[gt],
                          $.a[gt].s.totalChars
                        )),
                        _t.length
                          ? (ur += Et.p.v[0] * _t[0])
                          : (ur += Et.p.v[0] * _t)),
                      Et.a.propType &&
                        ((kt = _[gt].s),
                        (_t = kt.getMult(
                          ot[at].anIndexes[gt],
                          $.a[gt].s.totalChars
                        )),
                        _t.length
                          ? (ur += Et.a.v[0] * _t[0])
                          : (ur += Et.a.v[0] * _t));
                  for (
                    ut = !0,
                      this._pathData.a.v &&
                        ((ht =
                          ot[0].an * 0.5 +
                          ((St -
                            this._pathData.f.v -
                            ot[0].an * 0.5 -
                            ot[ot.length - 1].an * 0.5) *
                            Ft) /
                            (st - 1)),
                        (ht += this._pathData.f.v));
                    ut;

                  )
                    mt + bt >= ht + ur || !vt
                      ? ((Pt = (ht + ur - mt) / ft.partialLength),
                        (Lt = pt.point[0] + (ft.point[0] - pt.point[0]) * Pt),
                        (Wt = pt.point[1] + (ft.point[1] - pt.point[1]) * Pt),
                        et.translate(
                          -s[0] * ot[at].an * 0.005,
                          -(s[1] * Dt) * 0.01
                        ),
                        (ut = !1))
                      : vt &&
                        ((mt += ft.partialLength),
                        (lt += 1),
                        lt >= vt.length &&
                          ((lt = 0),
                          (ct += 1),
                          xt[ct]
                            ? (vt = xt[ct].points)
                            : It.v.c
                            ? ((lt = 0), (ct = 0), (vt = xt[ct].points))
                            : ((mt -= ft.partialLength), (vt = null))),
                        vt &&
                          ((pt = ft), (ft = vt[lt]), (bt = ft.partialLength)));
                  (Vt = ot[at].an / 2 - ot[at].add), et.translate(-Vt, 0, 0);
                } else
                  (Vt = ot[at].an / 2 - ot[at].add),
                    et.translate(-Vt, 0, 0),
                    et.translate(
                      -s[0] * ot[at].an * 0.005,
                      -s[1] * Dt * 0.01,
                      0
                    );
                for (gt = 0; gt < yt; gt += 1)
                  (Et = _[gt].a),
                    Et.t.propType &&
                      ((kt = _[gt].s),
                      (_t = kt.getMult(
                        ot[at].anIndexes[gt],
                        $.a[gt].s.totalChars
                      )),
                      (nt !== 0 || a.j !== 0) &&
                        (this._hasMaskedPath
                          ? _t.length
                            ? (ht += Et.t.v * _t[0])
                            : (ht += Et.t.v * _t)
                          : _t.length
                          ? (nt += Et.t.v * _t[0])
                          : (nt += Et.t.v * _t)));
                for (
                  a.strokeWidthAnim && (nr = a.sw || 0),
                    a.strokeColorAnim &&
                      (a.sc
                        ? (Yt = [a.sc[0], a.sc[1], a.sc[2]])
                        : (Yt = [0, 0, 0])),
                    a.fillColorAnim &&
                      a.fc &&
                      (Ht = [a.fc[0], a.fc[1], a.fc[2]]),
                    gt = 0;
                  gt < yt;
                  gt += 1
                )
                  (Et = _[gt].a),
                    Et.a.propType &&
                      ((kt = _[gt].s),
                      (_t = kt.getMult(
                        ot[at].anIndexes[gt],
                        $.a[gt].s.totalChars
                      )),
                      _t.length
                        ? et.translate(
                            -Et.a.v[0] * _t[0],
                            -Et.a.v[1] * _t[1],
                            Et.a.v[2] * _t[2]
                          )
                        : et.translate(
                            -Et.a.v[0] * _t,
                            -Et.a.v[1] * _t,
                            Et.a.v[2] * _t
                          ));
                for (gt = 0; gt < yt; gt += 1)
                  (Et = _[gt].a),
                    Et.s.propType &&
                      ((kt = _[gt].s),
                      (_t = kt.getMult(
                        ot[at].anIndexes[gt],
                        $.a[gt].s.totalChars
                      )),
                      _t.length
                        ? et.scale(
                            1 + (Et.s.v[0] - 1) * _t[0],
                            1 + (Et.s.v[1] - 1) * _t[1],
                            1
                          )
                        : et.scale(
                            1 + (Et.s.v[0] - 1) * _t,
                            1 + (Et.s.v[1] - 1) * _t,
                            1
                          ));
                for (gt = 0; gt < yt; gt += 1) {
                  if (
                    ((Et = _[gt].a),
                    (kt = _[gt].s),
                    (_t = kt.getMult(
                      ot[at].anIndexes[gt],
                      $.a[gt].s.totalChars
                    )),
                    Et.sk.propType &&
                      (_t.length
                        ? et.skewFromAxis(-Et.sk.v * _t[0], Et.sa.v * _t[1])
                        : et.skewFromAxis(-Et.sk.v * _t, Et.sa.v * _t)),
                    Et.r.propType &&
                      (_t.length
                        ? et.rotateZ(-Et.r.v * _t[2])
                        : et.rotateZ(-Et.r.v * _t)),
                    Et.ry.propType &&
                      (_t.length
                        ? et.rotateY(Et.ry.v * _t[1])
                        : et.rotateY(Et.ry.v * _t)),
                    Et.rx.propType &&
                      (_t.length
                        ? et.rotateX(Et.rx.v * _t[0])
                        : et.rotateX(Et.rx.v * _t)),
                    Et.o.propType &&
                      (_t.length
                        ? (Xt += (Et.o.v * _t[0] - Xt) * _t[0])
                        : (Xt += (Et.o.v * _t - Xt) * _t)),
                    a.strokeWidthAnim &&
                      Et.sw.propType &&
                      (_t.length
                        ? (nr += Et.sw.v * _t[0])
                        : (nr += Et.sw.v * _t)),
                    a.strokeColorAnim && Et.sc.propType)
                  )
                    for (Bt = 0; Bt < 3; Bt += 1)
                      _t.length
                        ? (Yt[Bt] += (Et.sc.v[Bt] - Yt[Bt]) * _t[0])
                        : (Yt[Bt] += (Et.sc.v[Bt] - Yt[Bt]) * _t);
                  if (a.fillColorAnim && a.fc) {
                    if (Et.fc.propType)
                      for (Bt = 0; Bt < 3; Bt += 1)
                        _t.length
                          ? (Ht[Bt] += (Et.fc.v[Bt] - Ht[Bt]) * _t[0])
                          : (Ht[Bt] += (Et.fc.v[Bt] - Ht[Bt]) * _t);
                    Et.fh.propType &&
                      (_t.length
                        ? (Ht = addHueToRGB(Ht, Et.fh.v * _t[0]))
                        : (Ht = addHueToRGB(Ht, Et.fh.v * _t))),
                      Et.fs.propType &&
                        (_t.length
                          ? (Ht = addSaturationToRGB(Ht, Et.fs.v * _t[0]))
                          : (Ht = addSaturationToRGB(Ht, Et.fs.v * _t))),
                      Et.fb.propType &&
                        (_t.length
                          ? (Ht = addBrightnessToRGB(Ht, Et.fb.v * _t[0]))
                          : (Ht = addBrightnessToRGB(Ht, Et.fb.v * _t)));
                  }
                }
                for (gt = 0; gt < yt; gt += 1)
                  (Et = _[gt].a),
                    Et.p.propType &&
                      ((kt = _[gt].s),
                      (_t = kt.getMult(
                        ot[at].anIndexes[gt],
                        $.a[gt].s.totalChars
                      )),
                      this._hasMaskedPath
                        ? _t.length
                          ? et.translate(
                              0,
                              Et.p.v[1] * _t[0],
                              -Et.p.v[2] * _t[1]
                            )
                          : et.translate(0, Et.p.v[1] * _t, -Et.p.v[2] * _t)
                        : _t.length
                        ? et.translate(
                            Et.p.v[0] * _t[0],
                            Et.p.v[1] * _t[1],
                            -Et.p.v[2] * _t[2]
                          )
                        : et.translate(
                            Et.p.v[0] * _t,
                            Et.p.v[1] * _t,
                            -Et.p.v[2] * _t
                          ));
                if (
                  (a.strokeWidthAnim && (Nt = nr < 0 ? 0 : nr),
                  a.strokeColorAnim &&
                    (tr =
                      "rgb(" +
                      Math.round(Yt[0] * 255) +
                      "," +
                      Math.round(Yt[1] * 255) +
                      "," +
                      Math.round(Yt[2] * 255) +
                      ")"),
                  a.fillColorAnim &&
                    a.fc &&
                    (rr =
                      "rgb(" +
                      Math.round(Ht[0] * 255) +
                      "," +
                      Math.round(Ht[1] * 255) +
                      "," +
                      Math.round(Ht[2] * 255) +
                      ")"),
                  this._hasMaskedPath)
                ) {
                  if (
                    (et.translate(0, -a.ls),
                    et.translate(0, s[1] * Dt * 0.01 + it, 0),
                    this._pathData.p.v)
                  ) {
                    Mt =
                      (ft.point[1] - pt.point[1]) / (ft.point[0] - pt.point[0]);
                    var gr = (Math.atan(Mt) * 180) / Math.PI;
                    ft.point[0] < pt.point[0] && (gr += 180),
                      et.rotate((-gr * Math.PI) / 180);
                  }
                  et.translate(Lt, Wt, 0),
                    (ht -= s[0] * ot[at].an * 0.005),
                    ot[at + 1] &&
                      Ft !== ot[at + 1].ind &&
                      ((ht += ot[at].an / 2),
                      (ht += a.tr * 0.001 * a.finalSize));
                } else {
                  switch (
                    (et.translate(nt, it, 0),
                    a.ps && et.translate(a.ps[0], a.ps[1] + a.ascent, 0),
                    a.j)
                  ) {
                    case 1:
                      et.translate(
                        ot[at].animatorJustifyOffset +
                          a.justifyOffset +
                          (a.boxWidth - a.lineWidths[ot[at].line]),
                        0,
                        0
                      );
                      break;
                    case 2:
                      et.translate(
                        ot[at].animatorJustifyOffset +
                          a.justifyOffset +
                          (a.boxWidth - a.lineWidths[ot[at].line]) / 2,
                        0,
                        0
                      );
                      break;
                  }
                  et.translate(0, -a.ls),
                    et.translate(Vt, 0, 0),
                    et.translate(s[0] * ot[at].an * 0.005, s[1] * Dt * 0.01, 0),
                    (nt += ot[at].l + a.tr * 0.001 * a.finalSize);
                }
                tt === "html"
                  ? (or = et.toCSS())
                  : tt === "svg"
                  ? (or = et.to2dCSS())
                  : (pr = [
                      et.props[0],
                      et.props[1],
                      et.props[2],
                      et.props[3],
                      et.props[4],
                      et.props[5],
                      et.props[6],
                      et.props[7],
                      et.props[8],
                      et.props[9],
                      et.props[10],
                      et.props[11],
                      et.props[12],
                      et.props[13],
                      et.props[14],
                      et.props[15],
                    ]),
                  (sr = Xt);
              }
              rt <= at
                ? ((wt = new LetterProps(sr, Nt, tr, rr, or, pr)),
                  this.renderedLetters.push(wt),
                  (rt += 1),
                  (this.lettersChangedFlag = !0))
                : ((wt = this.renderedLetters[at]),
                  (this.lettersChangedFlag =
                    wt.update(sr, Nt, tr, rr, or, pr) ||
                    this.lettersChangedFlag));
            }
          }
        }),
        (TextAnimatorProperty.prototype.getValue = function () {
          this._elem.globalData.frameId !== this._frameId &&
            ((this._frameId = this._elem.globalData.frameId),
            this.iterateDynamicProperties());
        }),
        (TextAnimatorProperty.prototype.mHelper = new Matrix()),
        (TextAnimatorProperty.prototype.defaultPropsArray = []),
        extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
      function ITextElement() {}
      (ITextElement.prototype.initElement = function (a, o, s) {
        (this.lettersChangedFlag = !0),
          this.initFrame(),
          this.initBaseData(a, o, s),
          (this.textProperty = new TextProperty(
            this,
            a.t,
            this.dynamicProperties
          )),
          (this.textAnimator = new TextAnimatorProperty(
            a.t,
            this.renderType,
            this
          )),
          this.initTransform(a, o, s),
          this.initHierarchy(),
          this.initRenderable(),
          this.initRendererElement(),
          this.createContainerElements(),
          this.createRenderableComponents(),
          this.createContent(),
          this.hide(),
          this.textAnimator.searchProperties(this.dynamicProperties);
      }),
        (ITextElement.prototype.prepareFrame = function (a) {
          (this._mdf = !1),
            this.prepareRenderableFrame(a),
            this.prepareProperties(a, this.isInRange);
        }),
        (ITextElement.prototype.createPathShape = function (a, o) {
          var s,
            _ = o.length,
            $,
            et = "";
          for (s = 0; s < _; s += 1)
            o[s].ty === "sh" &&
              (($ = o[s].ks.k), (et += buildShapeString($, $.i.length, !0, a)));
          return et;
        }),
        (ITextElement.prototype.updateDocumentData = function (a, o) {
          this.textProperty.updateDocumentData(a, o);
        }),
        (ITextElement.prototype.canResizeFont = function (a) {
          this.textProperty.canResizeFont(a);
        }),
        (ITextElement.prototype.setMinimumFontSize = function (a) {
          this.textProperty.setMinimumFontSize(a);
        }),
        (ITextElement.prototype.applyTextPropertiesToMatrix = function (
          a,
          o,
          s,
          _,
          $
        ) {
          switch (
            (a.ps && o.translate(a.ps[0], a.ps[1] + a.ascent, 0),
            o.translate(0, -a.ls, 0),
            a.j)
          ) {
            case 1:
              o.translate(
                a.justifyOffset + (a.boxWidth - a.lineWidths[s]),
                0,
                0
              );
              break;
            case 2:
              o.translate(
                a.justifyOffset + (a.boxWidth - a.lineWidths[s]) / 2,
                0,
                0
              );
              break;
          }
          o.translate(_, $, 0);
        }),
        (ITextElement.prototype.buildColor = function (a) {
          return (
            "rgb(" +
            Math.round(a[0] * 255) +
            "," +
            Math.round(a[1] * 255) +
            "," +
            Math.round(a[2] * 255) +
            ")"
          );
        }),
        (ITextElement.prototype.emptyProp = new LetterProps()),
        (ITextElement.prototype.destroy = function () {}),
        (ITextElement.prototype.validateText = function () {
          (this.textProperty._mdf || this.textProperty._isFirstFrame) &&
            (this.buildNewText(),
            (this.textProperty._isFirstFrame = !1),
            (this.textProperty._mdf = !1));
        });
      var emptyShapeData = { shapes: [] };
      function SVGTextLottieElement(a, o, s) {
        (this.textSpans = []),
          (this.renderType = "svg"),
          this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          SVGBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
          ITextElement,
        ],
        SVGTextLottieElement
      ),
        (SVGTextLottieElement.prototype.createContent = function () {
          this.data.singleShape &&
            !this.globalData.fontManager.chars &&
            (this.textContainer = createNS("text"));
        }),
        (SVGTextLottieElement.prototype.buildTextContents = function (a) {
          for (var o = 0, s = a.length, _ = [], $ = ""; o < s; )
            a[o] === String.fromCharCode(13) || a[o] === String.fromCharCode(3)
              ? (_.push($), ($ = ""))
              : ($ += a[o]),
              (o += 1);
          return _.push($), _;
        }),
        (SVGTextLottieElement.prototype.buildShapeData = function (a, o) {
          if (a.shapes && a.shapes.length) {
            var s = a.shapes[0];
            if (s.it) {
              var _ = s.it[s.it.length - 1];
              _.s && ((_.s.k[0] = o), (_.s.k[1] = o));
            }
          }
          return a;
        }),
        (SVGTextLottieElement.prototype.buildNewText = function () {
          this.addDynamicProperty(this);
          var a,
            o,
            s = this.textProperty.currentData;
          (this.renderedLetters = createSizedArray(s ? s.l.length : 0)),
            s.fc
              ? this.layerElement.setAttribute("fill", this.buildColor(s.fc))
              : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
            s.sc &&
              (this.layerElement.setAttribute("stroke", this.buildColor(s.sc)),
              this.layerElement.setAttribute("stroke-width", s.sw)),
            this.layerElement.setAttribute("font-size", s.finalSize);
          var _ = this.globalData.fontManager.getFontByName(s.f);
          if (_.fClass) this.layerElement.setAttribute("class", _.fClass);
          else {
            this.layerElement.setAttribute("font-family", _.fFamily);
            var $ = s.fWeight,
              et = s.fStyle;
            this.layerElement.setAttribute("font-style", et),
              this.layerElement.setAttribute("font-weight", $);
          }
          this.layerElement.setAttribute("aria-label", s.t);
          var tt = s.l || [],
            rt = !!this.globalData.fontManager.chars;
          o = tt.length;
          var nt,
            it = this.mHelper,
            at = "",
            st = this.data.singleShape,
            ot = 0,
            dt = 0,
            ht = !0,
            ft = s.tr * 0.001 * s.finalSize;
          if (st && !rt && !s.sz) {
            var mt = this.textContainer,
              ut = "start";
            switch (s.j) {
              case 1:
                ut = "end";
                break;
              case 2:
                ut = "middle";
                break;
              default:
                ut = "start";
                break;
            }
            mt.setAttribute("text-anchor", ut),
              mt.setAttribute("letter-spacing", ft);
            var lt = this.buildTextContents(s.finalText);
            for (
              o = lt.length, dt = s.ps ? s.ps[1] + s.ascent : 0, a = 0;
              a < o;
              a += 1
            )
              (nt = this.textSpans[a].span || createNS("tspan")),
                (nt.textContent = lt[a]),
                nt.setAttribute("x", 0),
                nt.setAttribute("y", dt),
                (nt.style.display = "inherit"),
                mt.appendChild(nt),
                this.textSpans[a] ||
                  (this.textSpans[a] = { span: null, glyph: null }),
                (this.textSpans[a].span = nt),
                (dt += s.finalLineHeight);
            this.layerElement.appendChild(mt);
          } else {
            var ct = this.textSpans.length,
              pt;
            for (a = 0; a < o; a += 1) {
              if (
                (this.textSpans[a] ||
                  (this.textSpans[a] = {
                    span: null,
                    childSpan: null,
                    glyph: null,
                  }),
                !rt || !st || a === 0)
              ) {
                if (
                  ((nt =
                    ct > a
                      ? this.textSpans[a].span
                      : createNS(rt ? "g" : "text")),
                  ct <= a)
                ) {
                  if (
                    (nt.setAttribute("stroke-linecap", "butt"),
                    nt.setAttribute("stroke-linejoin", "round"),
                    nt.setAttribute("stroke-miterlimit", "4"),
                    (this.textSpans[a].span = nt),
                    rt)
                  ) {
                    var vt = createNS("g");
                    nt.appendChild(vt), (this.textSpans[a].childSpan = vt);
                  }
                  (this.textSpans[a].span = nt),
                    this.layerElement.appendChild(nt);
                }
                nt.style.display = "inherit";
              }
              if (
                (it.reset(),
                st &&
                  (tt[a].n &&
                    ((ot = -ft),
                    (dt += s.yOffset),
                    (dt += ht ? 1 : 0),
                    (ht = !1)),
                  this.applyTextPropertiesToMatrix(s, it, tt[a].line, ot, dt),
                  (ot += tt[a].l || 0),
                  (ot += ft)),
                rt)
              ) {
                pt = this.globalData.fontManager.getCharData(
                  s.finalText[a],
                  _.fStyle,
                  this.globalData.fontManager.getFontByName(s.f).fFamily
                );
                var xt;
                if (pt.t === 1)
                  xt = new SVGCompElement(pt.data, this.globalData, this);
                else {
                  var bt = emptyShapeData;
                  pt.data &&
                    pt.data.shapes &&
                    (bt = this.buildShapeData(pt.data, s.finalSize)),
                    (xt = new SVGShapeElement(bt, this.globalData, this));
                }
                if (this.textSpans[a].glyph) {
                  var St = this.textSpans[a].glyph;
                  this.textSpans[a].childSpan.removeChild(St.layerElement),
                    St.destroy();
                }
                (this.textSpans[a].glyph = xt),
                  (xt._debug = !0),
                  xt.prepareFrame(0),
                  xt.renderFrame(),
                  this.textSpans[a].childSpan.appendChild(xt.layerElement),
                  pt.t === 1 &&
                    this.textSpans[a].childSpan.setAttribute(
                      "transform",
                      "scale(" +
                        s.finalSize / 100 +
                        "," +
                        s.finalSize / 100 +
                        ")"
                    );
              } else
                st &&
                  nt.setAttribute(
                    "transform",
                    "translate(" + it.props[12] + "," + it.props[13] + ")"
                  ),
                  (nt.textContent = tt[a].val),
                  nt.setAttributeNS(
                    "http://www.w3.org/XML/1998/namespace",
                    "xml:space",
                    "preserve"
                  );
            }
            st && nt && nt.setAttribute("d", at);
          }
          for (; a < this.textSpans.length; )
            (this.textSpans[a].span.style.display = "none"), (a += 1);
          this._sizeChanged = !0;
        }),
        (SVGTextLottieElement.prototype.sourceRectAtTime = function () {
          if (
            (this.prepareFrame(this.comp.renderedFrame - this.data.st),
            this.renderInnerContent(),
            this._sizeChanged)
          ) {
            this._sizeChanged = !1;
            var a = this.layerElement.getBBox();
            this.bbox = {
              top: a.y,
              left: a.x,
              width: a.width,
              height: a.height,
            };
          }
          return this.bbox;
        }),
        (SVGTextLottieElement.prototype.getValue = function () {
          var a,
            o = this.textSpans.length,
            s;
          for (
            this.renderedFrame = this.comp.renderedFrame, a = 0;
            a < o;
            a += 1
          )
            (s = this.textSpans[a].glyph),
              s &&
                (s.prepareFrame(this.comp.renderedFrame - this.data.st),
                s._mdf && (this._mdf = !0));
        }),
        (SVGTextLottieElement.prototype.renderInnerContent = function () {
          if (
            (this.validateText(),
            (!this.data.singleShape || this._mdf) &&
              (this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag
              ),
              this.lettersChangedFlag || this.textAnimator.lettersChangedFlag))
          ) {
            this._sizeChanged = !0;
            var a,
              o,
              s = this.textAnimator.renderedLetters,
              _ = this.textProperty.currentData.l;
            o = _.length;
            var $, et, tt;
            for (a = 0; a < o; a += 1)
              _[a].n ||
                (($ = s[a]),
                (et = this.textSpans[a].span),
                (tt = this.textSpans[a].glyph),
                tt && tt.renderFrame(),
                $._mdf.m && et.setAttribute("transform", $.m),
                $._mdf.o && et.setAttribute("opacity", $.o),
                $._mdf.sw && et.setAttribute("stroke-width", $.sw),
                $._mdf.sc && et.setAttribute("stroke", $.sc),
                $._mdf.fc && et.setAttribute("fill", $.fc));
          }
        });
      function ISolidElement(a, o, s) {
        this.initElement(a, o, s);
      }
      extendPrototype([IImageElement], ISolidElement),
        (ISolidElement.prototype.createContent = function () {
          var a = createNS("rect");
          a.setAttribute("width", this.data.sw),
            a.setAttribute("height", this.data.sh),
            a.setAttribute("fill", this.data.sc),
            this.layerElement.appendChild(a);
        });
      function NullElement(a, o, s) {
        this.initFrame(),
          this.initBaseData(a, o, s),
          this.initFrame(),
          this.initTransform(a, o, s),
          this.initHierarchy();
      }
      (NullElement.prototype.prepareFrame = function (a) {
        this.prepareProperties(a, !0);
      }),
        (NullElement.prototype.renderFrame = function () {}),
        (NullElement.prototype.getBaseElement = function () {
          return null;
        }),
        (NullElement.prototype.destroy = function () {}),
        (NullElement.prototype.sourceRectAtTime = function () {}),
        (NullElement.prototype.hide = function () {}),
        extendPrototype(
          [BaseElement, TransformElement, HierarchyElement, FrameElement],
          NullElement
        );
      function SVGRendererBase() {}
      extendPrototype([BaseRenderer], SVGRendererBase),
        (SVGRendererBase.prototype.createNull = function (a) {
          return new NullElement(a, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createShape = function (a) {
          return new SVGShapeElement(a, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createText = function (a) {
          return new SVGTextLottieElement(a, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createImage = function (a) {
          return new IImageElement(a, this.globalData, this);
        }),
        (SVGRendererBase.prototype.createSolid = function (a) {
          return new ISolidElement(a, this.globalData, this);
        }),
        (SVGRendererBase.prototype.configAnimation = function (a) {
          this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
            this.svgElement.setAttribute(
              "xmlns:xlink",
              "http://www.w3.org/1999/xlink"
            ),
            this.renderConfig.viewBoxSize
              ? this.svgElement.setAttribute(
                  "viewBox",
                  this.renderConfig.viewBoxSize
                )
              : this.svgElement.setAttribute(
                  "viewBox",
                  "0 0 " + a.w + " " + a.h
                ),
            this.renderConfig.viewBoxOnly ||
              (this.svgElement.setAttribute("width", a.w),
              this.svgElement.setAttribute("height", a.h),
              (this.svgElement.style.width = "100%"),
              (this.svgElement.style.height = "100%"),
              (this.svgElement.style.transform = "translate3d(0,0,0)"),
              (this.svgElement.style.contentVisibility =
                this.renderConfig.contentVisibility)),
            this.renderConfig.width &&
              this.svgElement.setAttribute("width", this.renderConfig.width),
            this.renderConfig.height &&
              this.svgElement.setAttribute("height", this.renderConfig.height),
            this.renderConfig.className &&
              this.svgElement.setAttribute(
                "class",
                this.renderConfig.className
              ),
            this.renderConfig.id &&
              this.svgElement.setAttribute("id", this.renderConfig.id),
            this.renderConfig.focusable !== void 0 &&
              this.svgElement.setAttribute(
                "focusable",
                this.renderConfig.focusable
              ),
            this.svgElement.setAttribute(
              "preserveAspectRatio",
              this.renderConfig.preserveAspectRatio
            ),
            this.animationItem.wrapper.appendChild(this.svgElement);
          var o = this.globalData.defs;
          this.setupGlobalData(a, o),
            (this.globalData.progressiveLoad =
              this.renderConfig.progressiveLoad),
            (this.data = a);
          var s = createNS("clipPath"),
            _ = createNS("rect");
          _.setAttribute("width", a.w),
            _.setAttribute("height", a.h),
            _.setAttribute("x", 0),
            _.setAttribute("y", 0);
          var $ = createElementID();
          s.setAttribute("id", $),
            s.appendChild(_),
            this.layerElement.setAttribute(
              "clip-path",
              "url(" + getLocationHref() + "#" + $ + ")"
            ),
            o.appendChild(s),
            (this.layers = a.layers),
            (this.elements = createSizedArray(a.layers.length));
        }),
        (SVGRendererBase.prototype.destroy = function () {
          this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = ""),
            (this.layerElement = null),
            (this.globalData.defs = null);
          var a,
            o = this.layers ? this.layers.length : 0;
          for (a = 0; a < o; a += 1)
            this.elements[a] &&
              this.elements[a].destroy &&
              this.elements[a].destroy();
          (this.elements.length = 0),
            (this.destroyed = !0),
            (this.animationItem = null);
        }),
        (SVGRendererBase.prototype.updateContainerSize = function () {}),
        (SVGRendererBase.prototype.findIndexByInd = function (a) {
          var o = 0,
            s = this.layers.length;
          for (o = 0; o < s; o += 1) if (this.layers[o].ind === a) return o;
          return -1;
        }),
        (SVGRendererBase.prototype.buildItem = function (a) {
          var o = this.elements;
          if (!(o[a] || this.layers[a].ty === 99)) {
            o[a] = !0;
            var s = this.createItem(this.layers[a]);
            if (
              ((o[a] = s),
              getExpressionsPlugin() &&
                (this.layers[a].ty === 0 &&
                  this.globalData.projectInterface.registerComposition(s),
                s.initExpressions()),
              this.appendElementInPos(s, a),
              this.layers[a].tt)
            ) {
              var _ =
                "tp" in this.layers[a]
                  ? this.findIndexByInd(this.layers[a].tp)
                  : a - 1;
              if (_ === -1) return;
              if (!this.elements[_] || this.elements[_] === !0)
                this.buildItem(_), this.addPendingElement(s);
              else {
                var $ = o[_],
                  et = $.getMatte(this.layers[a].tt);
                s.setMatte(et);
              }
            }
          }
        }),
        (SVGRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var a = this.pendingElements.pop();
            if ((a.checkParenting(), a.data.tt))
              for (var o = 0, s = this.elements.length; o < s; ) {
                if (this.elements[o] === a) {
                  var _ =
                      "tp" in a.data ? this.findIndexByInd(a.data.tp) : o - 1,
                    $ = this.elements[_],
                    et = $.getMatte(this.layers[o].tt);
                  a.setMatte(et);
                  break;
                }
                o += 1;
              }
          }
        }),
        (SVGRendererBase.prototype.renderFrame = function (a) {
          if (!(this.renderedFrame === a || this.destroyed)) {
            a === null ? (a = this.renderedFrame) : (this.renderedFrame = a),
              (this.globalData.frameNum = a),
              (this.globalData.frameId += 1),
              (this.globalData.projectInterface.currentFrame = a),
              (this.globalData._mdf = !1);
            var o,
              s = this.layers.length;
            for (
              this.completeLayers || this.checkLayers(a), o = s - 1;
              o >= 0;
              o -= 1
            )
              (this.completeLayers || this.elements[o]) &&
                this.elements[o].prepareFrame(a - this.layers[o].st);
            if (this.globalData._mdf)
              for (o = 0; o < s; o += 1)
                (this.completeLayers || this.elements[o]) &&
                  this.elements[o].renderFrame();
          }
        }),
        (SVGRendererBase.prototype.appendElementInPos = function (a, o) {
          var s = a.getBaseElement();
          if (s) {
            for (var _ = 0, $; _ < o; )
              this.elements[_] &&
                this.elements[_] !== !0 &&
                this.elements[_].getBaseElement() &&
                ($ = this.elements[_].getBaseElement()),
                (_ += 1);
            $
              ? this.layerElement.insertBefore(s, $)
              : this.layerElement.appendChild(s);
          }
        }),
        (SVGRendererBase.prototype.hide = function () {
          this.layerElement.style.display = "none";
        }),
        (SVGRendererBase.prototype.show = function () {
          this.layerElement.style.display = "block";
        });
      function ICompElement() {}
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        ICompElement
      ),
        (ICompElement.prototype.initElement = function (a, o, s) {
          this.initFrame(),
            this.initBaseData(a, o, s),
            this.initTransform(a, o, s),
            this.initRenderable(),
            this.initHierarchy(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            (this.data.xt || !o.progressiveLoad) && this.buildAllItems(),
            this.hide();
        }),
        (ICompElement.prototype.prepareFrame = function (a) {
          if (
            ((this._mdf = !1),
            this.prepareRenderableFrame(a),
            this.prepareProperties(a, this.isInRange),
            !(!this.isInRange && !this.data.xt))
          ) {
            if (this.tm._placeholder) this.renderedFrame = a / this.data.sr;
            else {
              var o = this.tm.v;
              o === this.data.op && (o = this.data.op - 1),
                (this.renderedFrame = o);
            }
            var s,
              _ = this.elements.length;
            for (
              this.completeLayers || this.checkLayers(this.renderedFrame),
                s = _ - 1;
              s >= 0;
              s -= 1
            )
              (this.completeLayers || this.elements[s]) &&
                (this.elements[s].prepareFrame(
                  this.renderedFrame - this.layers[s].st
                ),
                this.elements[s]._mdf && (this._mdf = !0));
          }
        }),
        (ICompElement.prototype.renderInnerContent = function () {
          var a,
            o = this.layers.length;
          for (a = 0; a < o; a += 1)
            (this.completeLayers || this.elements[a]) &&
              this.elements[a].renderFrame();
        }),
        (ICompElement.prototype.setElements = function (a) {
          this.elements = a;
        }),
        (ICompElement.prototype.getElements = function () {
          return this.elements;
        }),
        (ICompElement.prototype.destroyElements = function () {
          var a,
            o = this.layers.length;
          for (a = 0; a < o; a += 1)
            this.elements[a] && this.elements[a].destroy();
        }),
        (ICompElement.prototype.destroy = function () {
          this.destroyElements(), this.destroyBaseElement();
        });
      function SVGCompElement(a, o, s) {
        (this.layers = a.layers),
          (this.supports3d = !0),
          (this.completeLayers = !1),
          (this.pendingElements = []),
          (this.elements = this.layers
            ? createSizedArray(this.layers.length)
            : []),
          this.initElement(a, o, s),
          (this.tm = a.tm
            ? PropertyFactory.getProp(this, a.tm, 0, o.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [SVGRendererBase, ICompElement, SVGBaseElement],
        SVGCompElement
      ),
        (SVGCompElement.prototype.createComp = function (a) {
          return new SVGCompElement(a, this.globalData, this);
        });
      function SVGRenderer(a, o) {
        (this.animationItem = a),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.svgElement = createNS("svg"));
        var s = "";
        if (o && o.title) {
          var _ = createNS("title"),
            $ = createElementID();
          _.setAttribute("id", $),
            (_.textContent = o.title),
            this.svgElement.appendChild(_),
            (s += $);
        }
        if (o && o.description) {
          var et = createNS("desc"),
            tt = createElementID();
          et.setAttribute("id", tt),
            (et.textContent = o.description),
            this.svgElement.appendChild(et),
            (s += " " + tt);
        }
        s && this.svgElement.setAttribute("aria-labelledby", s);
        var rt = createNS("defs");
        this.svgElement.appendChild(rt);
        var nt = createNS("g");
        this.svgElement.appendChild(nt),
          (this.layerElement = nt),
          (this.renderConfig = {
            preserveAspectRatio:
              (o && o.preserveAspectRatio) || "xMidYMid meet",
            imagePreserveAspectRatio:
              (o && o.imagePreserveAspectRatio) || "xMidYMid slice",
            contentVisibility: (o && o.contentVisibility) || "visible",
            progressiveLoad: (o && o.progressiveLoad) || !1,
            hideOnTransparent: !(o && o.hideOnTransparent === !1),
            viewBoxOnly: (o && o.viewBoxOnly) || !1,
            viewBoxSize: (o && o.viewBoxSize) || !1,
            className: (o && o.className) || "",
            id: (o && o.id) || "",
            focusable: o && o.focusable,
            filterSize: {
              width: (o && o.filterSize && o.filterSize.width) || "100%",
              height: (o && o.filterSize && o.filterSize.height) || "100%",
              x: (o && o.filterSize && o.filterSize.x) || "0%",
              y: (o && o.filterSize && o.filterSize.y) || "0%",
            },
            width: o && o.width,
            height: o && o.height,
            runExpressions:
              !o || o.runExpressions === void 0 || o.runExpressions,
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            defs: rt,
            renderConfig: this.renderConfig,
          }),
          (this.elements = []),
          (this.pendingElements = []),
          (this.destroyed = !1),
          (this.rendererType = "svg");
      }
      extendPrototype([SVGRendererBase], SVGRenderer),
        (SVGRenderer.prototype.createComp = function (a) {
          return new SVGCompElement(a, this.globalData, this);
        });
      function ShapeTransformManager() {
        (this.sequences = {}),
          (this.sequenceList = []),
          (this.transform_key_count = 0);
      }
      ShapeTransformManager.prototype = {
        addTransformSequence: function (o) {
          var s,
            _ = o.length,
            $ = "_";
          for (s = 0; s < _; s += 1) $ += o[s].transform.key + "_";
          var et = this.sequences[$];
          return (
            et ||
              ((et = {
                transforms: [].concat(o),
                finalTransform: new Matrix(),
                _mdf: !1,
              }),
              (this.sequences[$] = et),
              this.sequenceList.push(et)),
            et
          );
        },
        processSequence: function (o, s) {
          for (var _ = 0, $ = o.transforms.length, et = s; _ < $ && !s; ) {
            if (o.transforms[_].transform.mProps._mdf) {
              et = !0;
              break;
            }
            _ += 1;
          }
          if (et)
            for (o.finalTransform.reset(), _ = $ - 1; _ >= 0; _ -= 1)
              o.finalTransform.multiply(o.transforms[_].transform.mProps.v);
          o._mdf = et;
        },
        processSequences: function (o) {
          var s,
            _ = this.sequenceList.length;
          for (s = 0; s < _; s += 1)
            this.processSequence(this.sequenceList[s], o);
        },
        getNewKey: function () {
          return (
            (this.transform_key_count += 1), "_" + this.transform_key_count
          );
        },
      };
      var lumaLoader = function () {
        var o = "__lottie_element_luma_buffer",
          s = null,
          _ = null,
          $ = null;
        function et() {
          var nt = createNS("svg"),
            it = createNS("filter"),
            at = createNS("feColorMatrix");
          return (
            it.setAttribute("id", o),
            at.setAttribute("type", "matrix"),
            at.setAttribute("color-interpolation-filters", "sRGB"),
            at.setAttribute(
              "values",
              "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"
            ),
            it.appendChild(at),
            nt.appendChild(it),
            nt.setAttribute("id", o + "_svg"),
            featureSupport.svgLumaHidden && (nt.style.display = "none"),
            nt
          );
        }
        function tt() {
          s ||
            (($ = et()),
            document.body.appendChild($),
            (s = createTag("canvas")),
            (_ = s.getContext("2d")),
            (_.filter = "url(#" + o + ")"),
            (_.fillStyle = "rgba(0,0,0,0)"),
            _.fillRect(0, 0, 1, 1));
        }
        function rt(nt) {
          return (
            s || tt(),
            (s.width = nt.width),
            (s.height = nt.height),
            (_.filter = "url(#" + o + ")"),
            s
          );
        }
        return { load: tt, get: rt };
      };
      function createCanvas(a, o) {
        if (featureSupport.offscreenCanvas) return new OffscreenCanvas(a, o);
        var s = createTag("canvas");
        return (s.width = a), (s.height = o), s;
      }
      var assetLoader = (function () {
          return {
            loadLumaCanvas: lumaLoader.load,
            getLumaCanvas: lumaLoader.get,
            createCanvas,
          };
        })(),
        registeredEffects = {};
      function CVEffects(a) {
        var o,
          s = a.data.ef ? a.data.ef.length : 0;
        this.filters = [];
        var _;
        for (o = 0; o < s; o += 1) {
          _ = null;
          var $ = a.data.ef[o].ty;
          if (registeredEffects[$]) {
            var et = registeredEffects[$].effect;
            _ = new et(a.effectsManager.effectElements[o], a);
          }
          _ && this.filters.push(_);
        }
        this.filters.length && a.addRenderableComponent(this);
      }
      (CVEffects.prototype.renderFrame = function (a) {
        var o,
          s = this.filters.length;
        for (o = 0; o < s; o += 1) this.filters[o].renderFrame(a);
      }),
        (CVEffects.prototype.getEffects = function (a) {
          var o,
            s = this.filters.length,
            _ = [];
          for (o = 0; o < s; o += 1)
            this.filters[o].type === a && _.push(this.filters[o]);
          return _;
        });
      function registerEffect(a, o) {
        registeredEffects[a] = { effect: o };
      }
      function CVMaskElement(a, o) {
        (this.data = a),
          (this.element = o),
          (this.masksProperties = this.data.masksProperties || []),
          (this.viewData = createSizedArray(this.masksProperties.length));
        var s,
          _ = this.masksProperties.length,
          $ = !1;
        for (s = 0; s < _; s += 1)
          this.masksProperties[s].mode !== "n" && ($ = !0),
            (this.viewData[s] = ShapePropertyFactory.getShapeProp(
              this.element,
              this.masksProperties[s],
              3
            ));
        (this.hasMasks = $), $ && this.element.addRenderableComponent(this);
      }
      (CVMaskElement.prototype.renderFrame = function () {
        if (this.hasMasks) {
          var a = this.element.finalTransform.mat,
            o = this.element.canvasContext,
            s,
            _ = this.masksProperties.length,
            $,
            et,
            tt;
          for (o.beginPath(), s = 0; s < _; s += 1)
            if (this.masksProperties[s].mode !== "n") {
              this.masksProperties[s].inv &&
                (o.moveTo(0, 0),
                o.lineTo(this.element.globalData.compSize.w, 0),
                o.lineTo(
                  this.element.globalData.compSize.w,
                  this.element.globalData.compSize.h
                ),
                o.lineTo(0, this.element.globalData.compSize.h),
                o.lineTo(0, 0)),
                (tt = this.viewData[s].v),
                ($ = a.applyToPointArray(tt.v[0][0], tt.v[0][1], 0)),
                o.moveTo($[0], $[1]);
              var rt,
                nt = tt._length;
              for (rt = 1; rt < nt; rt += 1)
                (et = a.applyToTriplePoints(tt.o[rt - 1], tt.i[rt], tt.v[rt])),
                  o.bezierCurveTo(et[0], et[1], et[2], et[3], et[4], et[5]);
              (et = a.applyToTriplePoints(tt.o[rt - 1], tt.i[0], tt.v[0])),
                o.bezierCurveTo(et[0], et[1], et[2], et[3], et[4], et[5]);
            }
          this.element.globalData.renderer.save(!0), o.clip();
        }
      }),
        (CVMaskElement.prototype.getMaskProperty =
          MaskElement.prototype.getMaskProperty),
        (CVMaskElement.prototype.destroy = function () {
          this.element = null;
        });
      function CVBaseElement() {}
      var operationsMap = {
        1: "source-in",
        2: "source-out",
        3: "source-in",
        4: "source-out",
      };
      (CVBaseElement.prototype = {
        createElements: function () {},
        initRendererElement: function () {},
        createContainerElements: function () {
          if (this.data.tt >= 1) {
            this.buffers = [];
            var o = this.globalData.canvasContext,
              s = assetLoader.createCanvas(o.canvas.width, o.canvas.height);
            this.buffers.push(s);
            var _ = assetLoader.createCanvas(o.canvas.width, o.canvas.height);
            this.buffers.push(_),
              this.data.tt >= 3 &&
                !document._isProxy &&
                assetLoader.loadLumaCanvas();
          }
          (this.canvasContext = this.globalData.canvasContext),
            (this.transformCanvas = this.globalData.transformCanvas),
            (this.renderableEffectsManager = new CVEffects(this)),
            this.searchEffectTransforms();
        },
        createContent: function () {},
        setBlendMode: function () {
          var o = this.globalData;
          if (o.blendMode !== this.data.bm) {
            o.blendMode = this.data.bm;
            var s = getBlendMode(this.data.bm);
            o.canvasContext.globalCompositeOperation = s;
          }
        },
        createRenderableComponents: function () {
          (this.maskManager = new CVMaskElement(this.data, this)),
            (this.transformEffects = this.renderableEffectsManager.getEffects(
              effectTypes.TRANSFORM_EFFECT
            ));
        },
        hideElement: function () {
          !this.hidden &&
            (!this.isInRange || this.isTransparent) &&
            (this.hidden = !0);
        },
        showElement: function () {
          this.isInRange &&
            !this.isTransparent &&
            ((this.hidden = !1),
            (this._isFirstFrame = !0),
            (this.maskManager._isFirstFrame = !0));
        },
        clearCanvas: function (o) {
          o.clearRect(
            this.transformCanvas.tx,
            this.transformCanvas.ty,
            this.transformCanvas.w * this.transformCanvas.sx,
            this.transformCanvas.h * this.transformCanvas.sy
          );
        },
        prepareLayer: function () {
          if (this.data.tt >= 1) {
            var o = this.buffers[0],
              s = o.getContext("2d");
            this.clearCanvas(s),
              s.drawImage(this.canvasContext.canvas, 0, 0),
              (this.currentTransform = this.canvasContext.getTransform()),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.clearCanvas(this.canvasContext),
              this.canvasContext.setTransform(this.currentTransform);
          }
        },
        exitLayer: function () {
          if (this.data.tt >= 1) {
            var o = this.buffers[1],
              s = o.getContext("2d");
            this.clearCanvas(s),
              s.drawImage(this.canvasContext.canvas, 0, 0),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.clearCanvas(this.canvasContext),
              this.canvasContext.setTransform(this.currentTransform);
            var _ = this.comp.getElementById(
              "tp" in this.data ? this.data.tp : this.data.ind - 1
            );
            if (
              (_.renderFrame(!0),
              this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
              this.data.tt >= 3 && !document._isProxy)
            ) {
              var $ = assetLoader.getLumaCanvas(this.canvasContext.canvas),
                et = $.getContext("2d");
              et.drawImage(this.canvasContext.canvas, 0, 0),
                this.clearCanvas(this.canvasContext),
                this.canvasContext.drawImage($, 0, 0);
            }
            (this.canvasContext.globalCompositeOperation =
              operationsMap[this.data.tt]),
              this.canvasContext.drawImage(o, 0, 0),
              (this.canvasContext.globalCompositeOperation =
                "destination-over"),
              this.canvasContext.drawImage(this.buffers[0], 0, 0),
              this.canvasContext.setTransform(this.currentTransform),
              (this.canvasContext.globalCompositeOperation = "source-over");
          }
        },
        renderFrame: function (o) {
          if (!(this.hidden || this.data.hd) && !(this.data.td === 1 && !o)) {
            this.renderTransform(),
              this.renderRenderable(),
              this.renderLocalTransform(),
              this.setBlendMode();
            var s = this.data.ty === 0;
            this.prepareLayer(),
              this.globalData.renderer.save(s),
              this.globalData.renderer.ctxTransform(
                this.finalTransform.localMat.props
              ),
              this.globalData.renderer.ctxOpacity(
                this.finalTransform.localOpacity
              ),
              this.renderInnerContent(),
              this.globalData.renderer.restore(s),
              this.exitLayer(),
              this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
              this._isFirstFrame && (this._isFirstFrame = !1);
          }
        },
        destroy: function () {
          (this.canvasContext = null),
            (this.data = null),
            (this.globalData = null),
            this.maskManager.destroy();
        },
        mHelper: new Matrix(),
      }),
        (CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement),
        (CVBaseElement.prototype.show = CVBaseElement.prototype.showElement);
      function CVShapeData(a, o, s, _) {
        (this.styledShapes = []), (this.tr = [0, 0, 0, 0, 0, 0]);
        var $ = 4;
        o.ty === "rc"
          ? ($ = 5)
          : o.ty === "el"
          ? ($ = 6)
          : o.ty === "sr" && ($ = 7),
          (this.sh = ShapePropertyFactory.getShapeProp(a, o, $, a));
        var et,
          tt = s.length,
          rt;
        for (et = 0; et < tt; et += 1)
          s[et].closed ||
            ((rt = {
              transforms: _.addTransformSequence(s[et].transforms),
              trNodes: [],
            }),
            this.styledShapes.push(rt),
            s[et].elements.push(rt));
      }
      CVShapeData.prototype.setAsAnimated =
        SVGShapeData.prototype.setAsAnimated;
      function CVShapeElement(a, o, s) {
        (this.shapes = []),
          (this.shapesData = a.shapes),
          (this.stylesList = []),
          (this.itemsData = []),
          (this.prevViewData = []),
          (this.shapeModifiers = []),
          (this.processedElements = []),
          (this.transformsManager = new ShapeTransformManager()),
          this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          IShapeElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVShapeElement
      ),
        (CVShapeElement.prototype.initElement =
          RenderableDOMElement.prototype.initElement),
        (CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: !1 }),
        (CVShapeElement.prototype.dashResetter = []),
        (CVShapeElement.prototype.createContent = function () {
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            !0,
            []
          );
        }),
        (CVShapeElement.prototype.createStyleElement = function (a, o) {
          var s = {
              data: a,
              type: a.ty,
              preTransforms: this.transformsManager.addTransformSequence(o),
              transforms: [],
              elements: [],
              closed: a.hd === !0,
            },
            _ = {};
          if (
            (a.ty === "fl" || a.ty === "st"
              ? ((_.c = PropertyFactory.getProp(this, a.c, 1, 255, this)),
                _.c.k ||
                  (s.co =
                    "rgb(" +
                    bmFloor(_.c.v[0]) +
                    "," +
                    bmFloor(_.c.v[1]) +
                    "," +
                    bmFloor(_.c.v[2]) +
                    ")"))
              : (a.ty === "gf" || a.ty === "gs") &&
                ((_.s = PropertyFactory.getProp(this, a.s, 1, null, this)),
                (_.e = PropertyFactory.getProp(this, a.e, 1, null, this)),
                (_.h = PropertyFactory.getProp(
                  this,
                  a.h || { k: 0 },
                  0,
                  0.01,
                  this
                )),
                (_.a = PropertyFactory.getProp(
                  this,
                  a.a || { k: 0 },
                  0,
                  degToRads,
                  this
                )),
                (_.g = new GradientProperty(this, a.g, this))),
            (_.o = PropertyFactory.getProp(this, a.o, 0, 0.01, this)),
            a.ty === "st" || a.ty === "gs")
          ) {
            if (
              ((s.lc = lineCapEnum[a.lc || 2]),
              (s.lj = lineJoinEnum[a.lj || 2]),
              a.lj == 1 && (s.ml = a.ml),
              (_.w = PropertyFactory.getProp(this, a.w, 0, null, this)),
              _.w.k || (s.wi = _.w.v),
              a.d)
            ) {
              var $ = new DashProperty(this, a.d, "canvas", this);
              (_.d = $),
                _.d.k || ((s.da = _.d.dashArray), (s.do = _.d.dashoffset[0]));
            }
          } else s.r = a.r === 2 ? "evenodd" : "nonzero";
          return this.stylesList.push(s), (_.style = s), _;
        }),
        (CVShapeElement.prototype.createGroupElement = function () {
          var a = { it: [], prevViewData: [] };
          return a;
        }),
        (CVShapeElement.prototype.createTransformElement = function (a) {
          var o = {
            transform: {
              opacity: 1,
              _opMdf: !1,
              key: this.transformsManager.getNewKey(),
              op: PropertyFactory.getProp(this, a.o, 0, 0.01, this),
              mProps: TransformPropertyFactory.getTransformProperty(
                this,
                a,
                this
              ),
            },
          };
          return o;
        }),
        (CVShapeElement.prototype.createShapeElement = function (a) {
          var o = new CVShapeData(
            this,
            a,
            this.stylesList,
            this.transformsManager
          );
          return this.shapes.push(o), this.addShapeToModifiers(o), o;
        }),
        (CVShapeElement.prototype.reloadShapes = function () {
          this._isFirstFrame = !0;
          var a,
            o = this.itemsData.length;
          for (a = 0; a < o; a += 1) this.prevViewData[a] = this.itemsData[a];
          for (
            this.searchShapes(
              this.shapesData,
              this.itemsData,
              this.prevViewData,
              !0,
              []
            ),
              o = this.dynamicProperties.length,
              a = 0;
            a < o;
            a += 1
          )
            this.dynamicProperties[a].getValue();
          this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame);
        }),
        (CVShapeElement.prototype.addTransformToStyleList = function (a) {
          var o,
            s = this.stylesList.length;
          for (o = 0; o < s; o += 1)
            this.stylesList[o].closed || this.stylesList[o].transforms.push(a);
        }),
        (CVShapeElement.prototype.removeTransformFromStyleList = function () {
          var a,
            o = this.stylesList.length;
          for (a = 0; a < o; a += 1)
            this.stylesList[a].closed || this.stylesList[a].transforms.pop();
        }),
        (CVShapeElement.prototype.closeStyles = function (a) {
          var o,
            s = a.length;
          for (o = 0; o < s; o += 1) a[o].closed = !0;
        }),
        (CVShapeElement.prototype.searchShapes = function (a, o, s, _, $) {
          var et,
            tt = a.length - 1,
            rt,
            nt,
            it = [],
            at = [],
            st,
            ot,
            dt,
            ht = [].concat($);
          for (et = tt; et >= 0; et -= 1) {
            if (
              ((st = this.searchProcessedElement(a[et])),
              st ? (o[et] = s[st - 1]) : (a[et]._shouldRender = _),
              a[et].ty === "fl" ||
                a[et].ty === "st" ||
                a[et].ty === "gf" ||
                a[et].ty === "gs")
            )
              st
                ? (o[et].style.closed = !1)
                : (o[et] = this.createStyleElement(a[et], ht)),
                it.push(o[et].style);
            else if (a[et].ty === "gr") {
              if (!st) o[et] = this.createGroupElement(a[et]);
              else
                for (nt = o[et].it.length, rt = 0; rt < nt; rt += 1)
                  o[et].prevViewData[rt] = o[et].it[rt];
              this.searchShapes(a[et].it, o[et].it, o[et].prevViewData, _, ht);
            } else
              a[et].ty === "tr"
                ? (st ||
                    ((dt = this.createTransformElement(a[et])), (o[et] = dt)),
                  ht.push(o[et]),
                  this.addTransformToStyleList(o[et]))
                : a[et].ty === "sh" ||
                  a[et].ty === "rc" ||
                  a[et].ty === "el" ||
                  a[et].ty === "sr"
                ? st || (o[et] = this.createShapeElement(a[et]))
                : a[et].ty === "tm" ||
                  a[et].ty === "rd" ||
                  a[et].ty === "pb" ||
                  a[et].ty === "zz" ||
                  a[et].ty === "op"
                ? (st
                    ? ((ot = o[et]), (ot.closed = !1))
                    : ((ot = ShapeModifiers.getModifier(a[et].ty)),
                      ot.init(this, a[et]),
                      (o[et] = ot),
                      this.shapeModifiers.push(ot)),
                  at.push(ot))
                : a[et].ty === "rp" &&
                  (st
                    ? ((ot = o[et]), (ot.closed = !0))
                    : ((ot = ShapeModifiers.getModifier(a[et].ty)),
                      (o[et] = ot),
                      ot.init(this, a, et, o),
                      this.shapeModifiers.push(ot),
                      (_ = !1)),
                  at.push(ot));
            this.addProcessedElement(a[et], et + 1);
          }
          for (
            this.removeTransformFromStyleList(),
              this.closeStyles(it),
              tt = at.length,
              et = 0;
            et < tt;
            et += 1
          )
            at[et].closed = !0;
        }),
        (CVShapeElement.prototype.renderInnerContent = function () {
          (this.transformHelper.opacity = 1),
            (this.transformHelper._opMdf = !1),
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame),
            this.renderShape(
              this.transformHelper,
              this.shapesData,
              this.itemsData,
              !0
            );
        }),
        (CVShapeElement.prototype.renderShapeTransform = function (a, o) {
          (a._opMdf || o.op._mdf || this._isFirstFrame) &&
            ((o.opacity = a.opacity), (o.opacity *= o.op.v), (o._opMdf = !0));
        }),
        (CVShapeElement.prototype.drawLayer = function () {
          var a,
            o = this.stylesList.length,
            s,
            _,
            $,
            et,
            tt,
            rt,
            nt = this.globalData.renderer,
            it = this.globalData.canvasContext,
            at,
            st;
          for (a = 0; a < o; a += 1)
            if (
              ((st = this.stylesList[a]),
              (at = st.type),
              !(
                ((at === "st" || at === "gs") && st.wi === 0) ||
                !st.data._shouldRender ||
                st.coOp === 0 ||
                this.globalData.currentGlobalAlpha === 0
              ))
            ) {
              for (
                nt.save(),
                  tt = st.elements,
                  at === "st" || at === "gs"
                    ? (nt.ctxStrokeStyle(at === "st" ? st.co : st.grd),
                      nt.ctxLineWidth(st.wi),
                      nt.ctxLineCap(st.lc),
                      nt.ctxLineJoin(st.lj),
                      nt.ctxMiterLimit(st.ml || 0))
                    : nt.ctxFillStyle(at === "fl" ? st.co : st.grd),
                  nt.ctxOpacity(st.coOp),
                  at !== "st" && at !== "gs" && it.beginPath(),
                  nt.ctxTransform(st.preTransforms.finalTransform.props),
                  _ = tt.length,
                  s = 0;
                s < _;
                s += 1
              ) {
                for (
                  (at === "st" || at === "gs") &&
                    (it.beginPath(),
                    st.da &&
                      (it.setLineDash(st.da), (it.lineDashOffset = st.do))),
                    rt = tt[s].trNodes,
                    et = rt.length,
                    $ = 0;
                  $ < et;
                  $ += 1
                )
                  rt[$].t === "m"
                    ? it.moveTo(rt[$].p[0], rt[$].p[1])
                    : rt[$].t === "c"
                    ? it.bezierCurveTo(
                        rt[$].pts[0],
                        rt[$].pts[1],
                        rt[$].pts[2],
                        rt[$].pts[3],
                        rt[$].pts[4],
                        rt[$].pts[5]
                      )
                    : it.closePath();
                (at === "st" || at === "gs") &&
                  (nt.ctxStroke(), st.da && it.setLineDash(this.dashResetter));
              }
              at !== "st" &&
                at !== "gs" &&
                this.globalData.renderer.ctxFill(st.r),
                nt.restore();
            }
        }),
        (CVShapeElement.prototype.renderShape = function (a, o, s, _) {
          var $,
            et = o.length - 1,
            tt;
          for (tt = a, $ = et; $ >= 0; $ -= 1)
            o[$].ty === "tr"
              ? ((tt = s[$].transform), this.renderShapeTransform(a, tt))
              : o[$].ty === "sh" ||
                o[$].ty === "el" ||
                o[$].ty === "rc" ||
                o[$].ty === "sr"
              ? this.renderPath(o[$], s[$])
              : o[$].ty === "fl"
              ? this.renderFill(o[$], s[$], tt)
              : o[$].ty === "st"
              ? this.renderStroke(o[$], s[$], tt)
              : o[$].ty === "gf" || o[$].ty === "gs"
              ? this.renderGradientFill(o[$], s[$], tt)
              : o[$].ty === "gr"
              ? this.renderShape(tt, o[$].it, s[$].it)
              : o[$].ty;
          _ && this.drawLayer();
        }),
        (CVShapeElement.prototype.renderStyledShape = function (a, o) {
          if (this._isFirstFrame || o._mdf || a.transforms._mdf) {
            var s = a.trNodes,
              _ = o.paths,
              $,
              et,
              tt,
              rt = _._length;
            s.length = 0;
            var nt = a.transforms.finalTransform;
            for (tt = 0; tt < rt; tt += 1) {
              var it = _.shapes[tt];
              if (it && it.v) {
                for (et = it._length, $ = 1; $ < et; $ += 1)
                  $ === 1 &&
                    s.push({
                      t: "m",
                      p: nt.applyToPointArray(it.v[0][0], it.v[0][1], 0),
                    }),
                    s.push({
                      t: "c",
                      pts: nt.applyToTriplePoints(
                        it.o[$ - 1],
                        it.i[$],
                        it.v[$]
                      ),
                    });
                et === 1 &&
                  s.push({
                    t: "m",
                    p: nt.applyToPointArray(it.v[0][0], it.v[0][1], 0),
                  }),
                  it.c &&
                    et &&
                    (s.push({
                      t: "c",
                      pts: nt.applyToTriplePoints(
                        it.o[$ - 1],
                        it.i[0],
                        it.v[0]
                      ),
                    }),
                    s.push({ t: "z" }));
              }
            }
            a.trNodes = s;
          }
        }),
        (CVShapeElement.prototype.renderPath = function (a, o) {
          if (a.hd !== !0 && a._shouldRender) {
            var s,
              _ = o.styledShapes.length;
            for (s = 0; s < _; s += 1)
              this.renderStyledShape(o.styledShapes[s], o.sh);
          }
        }),
        (CVShapeElement.prototype.renderFill = function (a, o, s) {
          var _ = o.style;
          (o.c._mdf || this._isFirstFrame) &&
            (_.co =
              "rgb(" +
              bmFloor(o.c.v[0]) +
              "," +
              bmFloor(o.c.v[1]) +
              "," +
              bmFloor(o.c.v[2]) +
              ")"),
            (o.o._mdf || s._opMdf || this._isFirstFrame) &&
              (_.coOp = o.o.v * s.opacity);
        }),
        (CVShapeElement.prototype.renderGradientFill = function (a, o, s) {
          var _ = o.style,
            $;
          if (
            !_.grd ||
            o.g._mdf ||
            o.s._mdf ||
            o.e._mdf ||
            (a.t !== 1 && (o.h._mdf || o.a._mdf))
          ) {
            var et = this.globalData.canvasContext,
              tt = o.s.v,
              rt = o.e.v;
            if (a.t === 1)
              $ = et.createLinearGradient(tt[0], tt[1], rt[0], rt[1]);
            else {
              var nt = Math.sqrt(
                  Math.pow(tt[0] - rt[0], 2) + Math.pow(tt[1] - rt[1], 2)
                ),
                it = Math.atan2(rt[1] - tt[1], rt[0] - tt[0]),
                at = o.h.v;
              at >= 1 ? (at = 0.99) : at <= -1 && (at = -0.99);
              var st = nt * at,
                ot = Math.cos(it + o.a.v) * st + tt[0],
                dt = Math.sin(it + o.a.v) * st + tt[1];
              $ = et.createRadialGradient(ot, dt, 0, tt[0], tt[1], nt);
            }
            var ht,
              ft = a.g.p,
              mt = o.g.c,
              ut = 1;
            for (ht = 0; ht < ft; ht += 1)
              o.g._hasOpacity && o.g._collapsable && (ut = o.g.o[ht * 2 + 1]),
                $.addColorStop(
                  mt[ht * 4] / 100,
                  "rgba(" +
                    mt[ht * 4 + 1] +
                    "," +
                    mt[ht * 4 + 2] +
                    "," +
                    mt[ht * 4 + 3] +
                    "," +
                    ut +
                    ")"
                );
            _.grd = $;
          }
          _.coOp = o.o.v * s.opacity;
        }),
        (CVShapeElement.prototype.renderStroke = function (a, o, s) {
          var _ = o.style,
            $ = o.d;
          $ &&
            ($._mdf || this._isFirstFrame) &&
            ((_.da = $.dashArray), (_.do = $.dashoffset[0])),
            (o.c._mdf || this._isFirstFrame) &&
              (_.co =
                "rgb(" +
                bmFloor(o.c.v[0]) +
                "," +
                bmFloor(o.c.v[1]) +
                "," +
                bmFloor(o.c.v[2]) +
                ")"),
            (o.o._mdf || s._opMdf || this._isFirstFrame) &&
              (_.coOp = o.o.v * s.opacity),
            (o.w._mdf || this._isFirstFrame) && (_.wi = o.w.v);
        }),
        (CVShapeElement.prototype.destroy = function () {
          (this.shapesData = null),
            (this.globalData = null),
            (this.canvasContext = null),
            (this.stylesList.length = 0),
            (this.itemsData.length = 0);
        });
      function CVTextElement(a, o, s) {
        (this.textSpans = []),
          (this.yOffset = 0),
          (this.fillColorAnim = !1),
          (this.strokeColorAnim = !1),
          (this.strokeWidthAnim = !1),
          (this.stroke = !1),
          (this.fill = !1),
          (this.justifyOffset = 0),
          (this.currentRender = null),
          (this.renderType = "canvas"),
          (this.values = {
            fill: "rgba(0,0,0,0)",
            stroke: "rgba(0,0,0,0)",
            sWidth: 0,
            fValue: "",
          }),
          this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
          ITextElement,
        ],
        CVTextElement
      ),
        (CVTextElement.prototype.tHelper =
          createTag("canvas").getContext("2d")),
        (CVTextElement.prototype.buildNewText = function () {
          var a = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(a.l ? a.l.length : 0);
          var o = !1;
          a.fc
            ? ((o = !0), (this.values.fill = this.buildColor(a.fc)))
            : (this.values.fill = "rgba(0,0,0,0)"),
            (this.fill = o);
          var s = !1;
          a.sc &&
            ((s = !0),
            (this.values.stroke = this.buildColor(a.sc)),
            (this.values.sWidth = a.sw));
          var _ = this.globalData.fontManager.getFontByName(a.f),
            $,
            et,
            tt = a.l,
            rt = this.mHelper;
          (this.stroke = s),
            (this.values.fValue =
              a.finalSize +
              "px " +
              this.globalData.fontManager.getFontByName(a.f).fFamily),
            (et = a.finalText.length);
          var nt,
            it,
            at,
            st,
            ot,
            dt,
            ht,
            ft,
            mt,
            ut,
            lt = this.data.singleShape,
            ct = a.tr * 0.001 * a.finalSize,
            pt = 0,
            vt = 0,
            xt = !0,
            bt = 0;
          for ($ = 0; $ < et; $ += 1) {
            (nt = this.globalData.fontManager.getCharData(
              a.finalText[$],
              _.fStyle,
              this.globalData.fontManager.getFontByName(a.f).fFamily
            )),
              (it = (nt && nt.data) || {}),
              rt.reset(),
              lt &&
                tt[$].n &&
                ((pt = -ct), (vt += a.yOffset), (vt += xt ? 1 : 0), (xt = !1)),
              (ot = it.shapes ? it.shapes[0].it : []),
              (ht = ot.length),
              rt.scale(a.finalSize / 100, a.finalSize / 100),
              lt && this.applyTextPropertiesToMatrix(a, rt, tt[$].line, pt, vt),
              (mt = createSizedArray(ht - 1));
            var St = 0;
            for (dt = 0; dt < ht; dt += 1)
              if (ot[dt].ty === "sh") {
                for (
                  st = ot[dt].ks.k.i.length, ft = ot[dt].ks.k, ut = [], at = 1;
                  at < st;
                  at += 1
                )
                  at === 1 &&
                    ut.push(
                      rt.applyToX(ft.v[0][0], ft.v[0][1], 0),
                      rt.applyToY(ft.v[0][0], ft.v[0][1], 0)
                    ),
                    ut.push(
                      rt.applyToX(ft.o[at - 1][0], ft.o[at - 1][1], 0),
                      rt.applyToY(ft.o[at - 1][0], ft.o[at - 1][1], 0),
                      rt.applyToX(ft.i[at][0], ft.i[at][1], 0),
                      rt.applyToY(ft.i[at][0], ft.i[at][1], 0),
                      rt.applyToX(ft.v[at][0], ft.v[at][1], 0),
                      rt.applyToY(ft.v[at][0], ft.v[at][1], 0)
                    );
                ut.push(
                  rt.applyToX(ft.o[at - 1][0], ft.o[at - 1][1], 0),
                  rt.applyToY(ft.o[at - 1][0], ft.o[at - 1][1], 0),
                  rt.applyToX(ft.i[0][0], ft.i[0][1], 0),
                  rt.applyToY(ft.i[0][0], ft.i[0][1], 0),
                  rt.applyToX(ft.v[0][0], ft.v[0][1], 0),
                  rt.applyToY(ft.v[0][0], ft.v[0][1], 0)
                ),
                  (mt[St] = ut),
                  (St += 1);
              }
            lt && ((pt += tt[$].l), (pt += ct)),
              this.textSpans[bt]
                ? (this.textSpans[bt].elem = mt)
                : (this.textSpans[bt] = { elem: mt }),
              (bt += 1);
          }
        }),
        (CVTextElement.prototype.renderInnerContent = function () {
          this.validateText();
          var a = this.canvasContext;
          (a.font = this.values.fValue),
            this.globalData.renderer.ctxLineCap("butt"),
            this.globalData.renderer.ctxLineJoin("miter"),
            this.globalData.renderer.ctxMiterLimit(4),
            this.data.singleShape ||
              this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag
              );
          var o,
            s,
            _,
            $,
            et,
            tt,
            rt = this.textAnimator.renderedLetters,
            nt = this.textProperty.currentData.l;
          s = nt.length;
          var it,
            at = null,
            st = null,
            ot = null,
            dt,
            ht,
            ft = this.globalData.renderer;
          for (o = 0; o < s; o += 1)
            if (!nt[o].n) {
              if (
                ((it = rt[o]),
                it && (ft.save(), ft.ctxTransform(it.p), ft.ctxOpacity(it.o)),
                this.fill)
              ) {
                for (
                  it && it.fc
                    ? at !== it.fc && (ft.ctxFillStyle(it.fc), (at = it.fc))
                    : at !== this.values.fill &&
                      ((at = this.values.fill),
                      ft.ctxFillStyle(this.values.fill)),
                    dt = this.textSpans[o].elem,
                    $ = dt.length,
                    this.globalData.canvasContext.beginPath(),
                    _ = 0;
                  _ < $;
                  _ += 1
                )
                  for (
                    ht = dt[_],
                      tt = ht.length,
                      this.globalData.canvasContext.moveTo(ht[0], ht[1]),
                      et = 2;
                    et < tt;
                    et += 6
                  )
                    this.globalData.canvasContext.bezierCurveTo(
                      ht[et],
                      ht[et + 1],
                      ht[et + 2],
                      ht[et + 3],
                      ht[et + 4],
                      ht[et + 5]
                    );
                this.globalData.canvasContext.closePath(), ft.ctxFill();
              }
              if (this.stroke) {
                for (
                  it && it.sw
                    ? ot !== it.sw && ((ot = it.sw), ft.ctxLineWidth(it.sw))
                    : ot !== this.values.sWidth &&
                      ((ot = this.values.sWidth),
                      ft.ctxLineWidth(this.values.sWidth)),
                    it && it.sc
                      ? st !== it.sc && ((st = it.sc), ft.ctxStrokeStyle(it.sc))
                      : st !== this.values.stroke &&
                        ((st = this.values.stroke),
                        ft.ctxStrokeStyle(this.values.stroke)),
                    dt = this.textSpans[o].elem,
                    $ = dt.length,
                    this.globalData.canvasContext.beginPath(),
                    _ = 0;
                  _ < $;
                  _ += 1
                )
                  for (
                    ht = dt[_],
                      tt = ht.length,
                      this.globalData.canvasContext.moveTo(ht[0], ht[1]),
                      et = 2;
                    et < tt;
                    et += 6
                  )
                    this.globalData.canvasContext.bezierCurveTo(
                      ht[et],
                      ht[et + 1],
                      ht[et + 2],
                      ht[et + 3],
                      ht[et + 4],
                      ht[et + 5]
                    );
                this.globalData.canvasContext.closePath(), ft.ctxStroke();
              }
              it && this.globalData.renderer.restore();
            }
        });
      function CVImageElement(a, o, s) {
        (this.assetData = o.getAssetData(a.refId)),
          (this.img = o.imageLoader.getAsset(this.assetData)),
          this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVImageElement
      ),
        (CVImageElement.prototype.initElement =
          SVGShapeElement.prototype.initElement),
        (CVImageElement.prototype.prepareFrame =
          IImageElement.prototype.prepareFrame),
        (CVImageElement.prototype.createContent = function () {
          if (
            this.img.width &&
            (this.assetData.w !== this.img.width ||
              this.assetData.h !== this.img.height)
          ) {
            var a = createTag("canvas");
            (a.width = this.assetData.w), (a.height = this.assetData.h);
            var o = a.getContext("2d"),
              s = this.img.width,
              _ = this.img.height,
              $ = s / _,
              et = this.assetData.w / this.assetData.h,
              tt,
              rt,
              nt =
                this.assetData.pr ||
                this.globalData.renderConfig.imagePreserveAspectRatio;
            ($ > et && nt === "xMidYMid slice") ||
            ($ < et && nt !== "xMidYMid slice")
              ? ((rt = _), (tt = rt * et))
              : ((tt = s), (rt = tt / et)),
              o.drawImage(
                this.img,
                (s - tt) / 2,
                (_ - rt) / 2,
                tt,
                rt,
                0,
                0,
                this.assetData.w,
                this.assetData.h
              ),
              (this.img = a);
          }
        }),
        (CVImageElement.prototype.renderInnerContent = function () {
          this.canvasContext.drawImage(this.img, 0, 0);
        }),
        (CVImageElement.prototype.destroy = function () {
          this.img = null;
        });
      function CVSolidElement(a, o, s) {
        this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          CVBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        CVSolidElement
      ),
        (CVSolidElement.prototype.initElement =
          SVGShapeElement.prototype.initElement),
        (CVSolidElement.prototype.prepareFrame =
          IImageElement.prototype.prepareFrame),
        (CVSolidElement.prototype.renderInnerContent = function () {
          this.globalData.renderer.ctxFillStyle(this.data.sc),
            this.globalData.renderer.ctxFillRect(
              0,
              0,
              this.data.sw,
              this.data.sh
            );
        });
      function CanvasRendererBase() {}
      extendPrototype([BaseRenderer], CanvasRendererBase),
        (CanvasRendererBase.prototype.createShape = function (a) {
          return new CVShapeElement(a, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createText = function (a) {
          return new CVTextElement(a, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createImage = function (a) {
          return new CVImageElement(a, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createSolid = function (a) {
          return new CVSolidElement(a, this.globalData, this);
        }),
        (CanvasRendererBase.prototype.createNull =
          SVGRenderer.prototype.createNull),
        (CanvasRendererBase.prototype.ctxTransform = function (a) {
          (a[0] === 1 &&
            a[1] === 0 &&
            a[4] === 0 &&
            a[5] === 1 &&
            a[12] === 0 &&
            a[13] === 0) ||
            this.canvasContext.transform(a[0], a[1], a[4], a[5], a[12], a[13]);
        }),
        (CanvasRendererBase.prototype.ctxOpacity = function (a) {
          this.canvasContext.globalAlpha *= a < 0 ? 0 : a;
        }),
        (CanvasRendererBase.prototype.ctxFillStyle = function (a) {
          this.canvasContext.fillStyle = a;
        }),
        (CanvasRendererBase.prototype.ctxStrokeStyle = function (a) {
          this.canvasContext.strokeStyle = a;
        }),
        (CanvasRendererBase.prototype.ctxLineWidth = function (a) {
          this.canvasContext.lineWidth = a;
        }),
        (CanvasRendererBase.prototype.ctxLineCap = function (a) {
          this.canvasContext.lineCap = a;
        }),
        (CanvasRendererBase.prototype.ctxLineJoin = function (a) {
          this.canvasContext.lineJoin = a;
        }),
        (CanvasRendererBase.prototype.ctxMiterLimit = function (a) {
          this.canvasContext.miterLimit = a;
        }),
        (CanvasRendererBase.prototype.ctxFill = function (a) {
          this.canvasContext.fill(a);
        }),
        (CanvasRendererBase.prototype.ctxFillRect = function (a, o, s, _) {
          this.canvasContext.fillRect(a, o, s, _);
        }),
        (CanvasRendererBase.prototype.ctxStroke = function () {
          this.canvasContext.stroke();
        }),
        (CanvasRendererBase.prototype.reset = function () {
          if (!this.renderConfig.clearCanvas) {
            this.canvasContext.restore();
            return;
          }
          this.contextData.reset();
        }),
        (CanvasRendererBase.prototype.save = function () {
          this.canvasContext.save();
        }),
        (CanvasRendererBase.prototype.restore = function (a) {
          if (!this.renderConfig.clearCanvas) {
            this.canvasContext.restore();
            return;
          }
          a && (this.globalData.blendMode = "source-over"),
            this.contextData.restore(a);
        }),
        (CanvasRendererBase.prototype.configAnimation = function (a) {
          if (this.animationItem.wrapper) {
            this.animationItem.container = createTag("canvas");
            var o = this.animationItem.container.style;
            (o.width = "100%"), (o.height = "100%");
            var s = "0px 0px 0px";
            (o.transformOrigin = s),
              (o.mozTransformOrigin = s),
              (o.webkitTransformOrigin = s),
              (o["-webkit-transform"] = s),
              (o.contentVisibility = this.renderConfig.contentVisibility),
              this.animationItem.wrapper.appendChild(
                this.animationItem.container
              ),
              (this.canvasContext =
                this.animationItem.container.getContext("2d")),
              this.renderConfig.className &&
                this.animationItem.container.setAttribute(
                  "class",
                  this.renderConfig.className
                ),
              this.renderConfig.id &&
                this.animationItem.container.setAttribute(
                  "id",
                  this.renderConfig.id
                );
          } else this.canvasContext = this.renderConfig.context;
          this.contextData.setContext(this.canvasContext),
            (this.data = a),
            (this.layers = a.layers),
            (this.transformCanvas = {
              w: a.w,
              h: a.h,
              sx: 0,
              sy: 0,
              tx: 0,
              ty: 0,
            }),
            this.setupGlobalData(a, document.body),
            (this.globalData.canvasContext = this.canvasContext),
            (this.globalData.renderer = this),
            (this.globalData.isDashed = !1),
            (this.globalData.progressiveLoad =
              this.renderConfig.progressiveLoad),
            (this.globalData.transformCanvas = this.transformCanvas),
            (this.elements = createSizedArray(a.layers.length)),
            this.updateContainerSize();
        }),
        (CanvasRendererBase.prototype.updateContainerSize = function (a, o) {
          this.reset();
          var s, _;
          a
            ? ((s = a),
              (_ = o),
              (this.canvasContext.canvas.width = s),
              (this.canvasContext.canvas.height = _))
            : (this.animationItem.wrapper && this.animationItem.container
                ? ((s = this.animationItem.wrapper.offsetWidth),
                  (_ = this.animationItem.wrapper.offsetHeight))
                : ((s = this.canvasContext.canvas.width),
                  (_ = this.canvasContext.canvas.height)),
              (this.canvasContext.canvas.width = s * this.renderConfig.dpr),
              (this.canvasContext.canvas.height = _ * this.renderConfig.dpr));
          var $, et;
          if (
            this.renderConfig.preserveAspectRatio.indexOf("meet") !== -1 ||
            this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1
          ) {
            var tt = this.renderConfig.preserveAspectRatio.split(" "),
              rt = tt[1] || "meet",
              nt = tt[0] || "xMidYMid",
              it = nt.substr(0, 4),
              at = nt.substr(4);
            ($ = s / _),
              (et = this.transformCanvas.w / this.transformCanvas.h),
              (et > $ && rt === "meet") || (et < $ && rt === "slice")
                ? ((this.transformCanvas.sx =
                    s / (this.transformCanvas.w / this.renderConfig.dpr)),
                  (this.transformCanvas.sy =
                    s / (this.transformCanvas.w / this.renderConfig.dpr)))
                : ((this.transformCanvas.sx =
                    _ / (this.transformCanvas.h / this.renderConfig.dpr)),
                  (this.transformCanvas.sy =
                    _ / (this.transformCanvas.h / this.renderConfig.dpr))),
              it === "xMid" &&
              ((et < $ && rt === "meet") || (et > $ && rt === "slice"))
                ? (this.transformCanvas.tx =
                    ((s -
                      this.transformCanvas.w * (_ / this.transformCanvas.h)) /
                      2) *
                    this.renderConfig.dpr)
                : it === "xMax" &&
                  ((et < $ && rt === "meet") || (et > $ && rt === "slice"))
                ? (this.transformCanvas.tx =
                    (s -
                      this.transformCanvas.w * (_ / this.transformCanvas.h)) *
                    this.renderConfig.dpr)
                : (this.transformCanvas.tx = 0),
              at === "YMid" &&
              ((et > $ && rt === "meet") || (et < $ && rt === "slice"))
                ? (this.transformCanvas.ty =
                    ((_ -
                      this.transformCanvas.h * (s / this.transformCanvas.w)) /
                      2) *
                    this.renderConfig.dpr)
                : at === "YMax" &&
                  ((et > $ && rt === "meet") || (et < $ && rt === "slice"))
                ? (this.transformCanvas.ty =
                    (_ -
                      this.transformCanvas.h * (s / this.transformCanvas.w)) *
                    this.renderConfig.dpr)
                : (this.transformCanvas.ty = 0);
          } else
            this.renderConfig.preserveAspectRatio === "none"
              ? ((this.transformCanvas.sx =
                  s / (this.transformCanvas.w / this.renderConfig.dpr)),
                (this.transformCanvas.sy =
                  _ / (this.transformCanvas.h / this.renderConfig.dpr)),
                (this.transformCanvas.tx = 0),
                (this.transformCanvas.ty = 0))
              : ((this.transformCanvas.sx = this.renderConfig.dpr),
                (this.transformCanvas.sy = this.renderConfig.dpr),
                (this.transformCanvas.tx = 0),
                (this.transformCanvas.ty = 0));
          (this.transformCanvas.props = [
            this.transformCanvas.sx,
            0,
            0,
            0,
            0,
            this.transformCanvas.sy,
            0,
            0,
            0,
            0,
            1,
            0,
            this.transformCanvas.tx,
            this.transformCanvas.ty,
            0,
            1,
          ]),
            this.ctxTransform(this.transformCanvas.props),
            this.canvasContext.beginPath(),
            this.canvasContext.rect(
              0,
              0,
              this.transformCanvas.w,
              this.transformCanvas.h
            ),
            this.canvasContext.closePath(),
            this.canvasContext.clip(),
            this.renderFrame(this.renderedFrame, !0);
        }),
        (CanvasRendererBase.prototype.destroy = function () {
          this.renderConfig.clearCanvas &&
            this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = "");
          var a,
            o = this.layers ? this.layers.length : 0;
          for (a = o - 1; a >= 0; a -= 1)
            this.elements[a] &&
              this.elements[a].destroy &&
              this.elements[a].destroy();
          (this.elements.length = 0),
            (this.globalData.canvasContext = null),
            (this.animationItem.container = null),
            (this.destroyed = !0);
        }),
        (CanvasRendererBase.prototype.renderFrame = function (a, o) {
          if (
            !(
              (this.renderedFrame === a &&
                this.renderConfig.clearCanvas === !0 &&
                !o) ||
              this.destroyed ||
              a === -1
            )
          ) {
            (this.renderedFrame = a),
              (this.globalData.frameNum = a - this.animationItem._isFirstFrame),
              (this.globalData.frameId += 1),
              (this.globalData._mdf = !this.renderConfig.clearCanvas || o),
              (this.globalData.projectInterface.currentFrame = a);
            var s,
              _ = this.layers.length;
            for (
              this.completeLayers || this.checkLayers(a), s = _ - 1;
              s >= 0;
              s -= 1
            )
              (this.completeLayers || this.elements[s]) &&
                this.elements[s].prepareFrame(a - this.layers[s].st);
            if (this.globalData._mdf) {
              for (
                this.renderConfig.clearCanvas === !0
                  ? this.canvasContext.clearRect(
                      0,
                      0,
                      this.transformCanvas.w,
                      this.transformCanvas.h
                    )
                  : this.save(),
                  s = _ - 1;
                s >= 0;
                s -= 1
              )
                (this.completeLayers || this.elements[s]) &&
                  this.elements[s].renderFrame();
              this.renderConfig.clearCanvas !== !0 && this.restore();
            }
          }
        }),
        (CanvasRendererBase.prototype.buildItem = function (a) {
          var o = this.elements;
          if (!(o[a] || this.layers[a].ty === 99)) {
            var s = this.createItem(this.layers[a], this, this.globalData);
            (o[a] = s), s.initExpressions();
          }
        }),
        (CanvasRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var a = this.pendingElements.pop();
            a.checkParenting();
          }
        }),
        (CanvasRendererBase.prototype.hide = function () {
          this.animationItem.container.style.display = "none";
        }),
        (CanvasRendererBase.prototype.show = function () {
          this.animationItem.container.style.display = "block";
        });
      function CanvasContext() {
        (this.opacity = -1),
          (this.transform = createTypedArray("float32", 16)),
          (this.fillStyle = ""),
          (this.strokeStyle = ""),
          (this.lineWidth = ""),
          (this.lineCap = ""),
          (this.lineJoin = ""),
          (this.miterLimit = ""),
          (this.id = Math.random());
      }
      function CVContextData() {
        (this.stack = []), (this.cArrPos = 0), (this.cTr = new Matrix());
        var a,
          o = 15;
        for (a = 0; a < o; a += 1) {
          var s = new CanvasContext();
          this.stack[a] = s;
        }
        (this._length = o),
          (this.nativeContext = null),
          (this.transformMat = new Matrix()),
          (this.currentOpacity = 1),
          (this.currentFillStyle = ""),
          (this.appliedFillStyle = ""),
          (this.currentStrokeStyle = ""),
          (this.appliedStrokeStyle = ""),
          (this.currentLineWidth = ""),
          (this.appliedLineWidth = ""),
          (this.currentLineCap = ""),
          (this.appliedLineCap = ""),
          (this.currentLineJoin = ""),
          (this.appliedLineJoin = ""),
          (this.appliedMiterLimit = ""),
          (this.currentMiterLimit = "");
      }
      (CVContextData.prototype.duplicate = function () {
        var a = this._length * 2,
          o = 0;
        for (o = this._length; o < a; o += 1)
          this.stack[o] = new CanvasContext();
        this._length = a;
      }),
        (CVContextData.prototype.reset = function () {
          (this.cArrPos = 0),
            this.cTr.reset(),
            (this.stack[this.cArrPos].opacity = 1);
        }),
        (CVContextData.prototype.restore = function (a) {
          this.cArrPos -= 1;
          var o = this.stack[this.cArrPos],
            s = o.transform,
            _,
            $ = this.cTr.props;
          for (_ = 0; _ < 16; _ += 1) $[_] = s[_];
          if (a) {
            this.nativeContext.restore();
            var et = this.stack[this.cArrPos + 1];
            (this.appliedFillStyle = et.fillStyle),
              (this.appliedStrokeStyle = et.strokeStyle),
              (this.appliedLineWidth = et.lineWidth),
              (this.appliedLineCap = et.lineCap),
              (this.appliedLineJoin = et.lineJoin),
              (this.appliedMiterLimit = et.miterLimit);
          }
          this.nativeContext.setTransform(s[0], s[1], s[4], s[5], s[12], s[13]),
            (a || (o.opacity !== -1 && this.currentOpacity !== o.opacity)) &&
              ((this.nativeContext.globalAlpha = o.opacity),
              (this.currentOpacity = o.opacity)),
            (this.currentFillStyle = o.fillStyle),
            (this.currentStrokeStyle = o.strokeStyle),
            (this.currentLineWidth = o.lineWidth),
            (this.currentLineCap = o.lineCap),
            (this.currentLineJoin = o.lineJoin),
            (this.currentMiterLimit = o.miterLimit);
        }),
        (CVContextData.prototype.save = function (a) {
          a && this.nativeContext.save();
          var o = this.cTr.props;
          this._length <= this.cArrPos && this.duplicate();
          var s = this.stack[this.cArrPos],
            _;
          for (_ = 0; _ < 16; _ += 1) s.transform[_] = o[_];
          this.cArrPos += 1;
          var $ = this.stack[this.cArrPos];
          ($.opacity = s.opacity),
            ($.fillStyle = s.fillStyle),
            ($.strokeStyle = s.strokeStyle),
            ($.lineWidth = s.lineWidth),
            ($.lineCap = s.lineCap),
            ($.lineJoin = s.lineJoin),
            ($.miterLimit = s.miterLimit);
        }),
        (CVContextData.prototype.setOpacity = function (a) {
          this.stack[this.cArrPos].opacity = a;
        }),
        (CVContextData.prototype.setContext = function (a) {
          this.nativeContext = a;
        }),
        (CVContextData.prototype.fillStyle = function (a) {
          this.stack[this.cArrPos].fillStyle !== a &&
            ((this.currentFillStyle = a),
            (this.stack[this.cArrPos].fillStyle = a));
        }),
        (CVContextData.prototype.strokeStyle = function (a) {
          this.stack[this.cArrPos].strokeStyle !== a &&
            ((this.currentStrokeStyle = a),
            (this.stack[this.cArrPos].strokeStyle = a));
        }),
        (CVContextData.prototype.lineWidth = function (a) {
          this.stack[this.cArrPos].lineWidth !== a &&
            ((this.currentLineWidth = a),
            (this.stack[this.cArrPos].lineWidth = a));
        }),
        (CVContextData.prototype.lineCap = function (a) {
          this.stack[this.cArrPos].lineCap !== a &&
            ((this.currentLineCap = a), (this.stack[this.cArrPos].lineCap = a));
        }),
        (CVContextData.prototype.lineJoin = function (a) {
          this.stack[this.cArrPos].lineJoin !== a &&
            ((this.currentLineJoin = a),
            (this.stack[this.cArrPos].lineJoin = a));
        }),
        (CVContextData.prototype.miterLimit = function (a) {
          this.stack[this.cArrPos].miterLimit !== a &&
            ((this.currentMiterLimit = a),
            (this.stack[this.cArrPos].miterLimit = a));
        }),
        (CVContextData.prototype.transform = function (a) {
          this.transformMat.cloneFromProps(a);
          var o = this.cTr;
          this.transformMat.multiply(o),
            o.cloneFromProps(this.transformMat.props);
          var s = o.props;
          this.nativeContext.setTransform(s[0], s[1], s[4], s[5], s[12], s[13]);
        }),
        (CVContextData.prototype.opacity = function (a) {
          var o = this.stack[this.cArrPos].opacity;
          (o *= a < 0 ? 0 : a),
            this.stack[this.cArrPos].opacity !== o &&
              (this.currentOpacity !== a &&
                ((this.nativeContext.globalAlpha = a),
                (this.currentOpacity = a)),
              (this.stack[this.cArrPos].opacity = o));
        }),
        (CVContextData.prototype.fill = function (a) {
          this.appliedFillStyle !== this.currentFillStyle &&
            ((this.appliedFillStyle = this.currentFillStyle),
            (this.nativeContext.fillStyle = this.appliedFillStyle)),
            this.nativeContext.fill(a);
        }),
        (CVContextData.prototype.fillRect = function (a, o, s, _) {
          this.appliedFillStyle !== this.currentFillStyle &&
            ((this.appliedFillStyle = this.currentFillStyle),
            (this.nativeContext.fillStyle = this.appliedFillStyle)),
            this.nativeContext.fillRect(a, o, s, _);
        }),
        (CVContextData.prototype.stroke = function () {
          this.appliedStrokeStyle !== this.currentStrokeStyle &&
            ((this.appliedStrokeStyle = this.currentStrokeStyle),
            (this.nativeContext.strokeStyle = this.appliedStrokeStyle)),
            this.appliedLineWidth !== this.currentLineWidth &&
              ((this.appliedLineWidth = this.currentLineWidth),
              (this.nativeContext.lineWidth = this.appliedLineWidth)),
            this.appliedLineCap !== this.currentLineCap &&
              ((this.appliedLineCap = this.currentLineCap),
              (this.nativeContext.lineCap = this.appliedLineCap)),
            this.appliedLineJoin !== this.currentLineJoin &&
              ((this.appliedLineJoin = this.currentLineJoin),
              (this.nativeContext.lineJoin = this.appliedLineJoin)),
            this.appliedMiterLimit !== this.currentMiterLimit &&
              ((this.appliedMiterLimit = this.currentMiterLimit),
              (this.nativeContext.miterLimit = this.appliedMiterLimit)),
            this.nativeContext.stroke();
        });
      function CVCompElement(a, o, s) {
        (this.completeLayers = !1),
          (this.layers = a.layers),
          (this.pendingElements = []),
          (this.elements = createSizedArray(this.layers.length)),
          this.initElement(a, o, s),
          (this.tm = a.tm
            ? PropertyFactory.getProp(this, a.tm, 0, o.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [CanvasRendererBase, ICompElement, CVBaseElement],
        CVCompElement
      ),
        (CVCompElement.prototype.renderInnerContent = function () {
          var a = this.canvasContext;
          a.beginPath(),
            a.moveTo(0, 0),
            a.lineTo(this.data.w, 0),
            a.lineTo(this.data.w, this.data.h),
            a.lineTo(0, this.data.h),
            a.lineTo(0, 0),
            a.clip();
          var o,
            s = this.layers.length;
          for (o = s - 1; o >= 0; o -= 1)
            (this.completeLayers || this.elements[o]) &&
              this.elements[o].renderFrame();
        }),
        (CVCompElement.prototype.destroy = function () {
          var a,
            o = this.layers.length;
          for (a = o - 1; a >= 0; a -= 1)
            this.elements[a] && this.elements[a].destroy();
          (this.layers = null), (this.elements = null);
        }),
        (CVCompElement.prototype.createComp = function (a) {
          return new CVCompElement(a, this.globalData, this);
        });
      function CanvasRenderer(a, o) {
        (this.animationItem = a),
          (this.renderConfig = {
            clearCanvas: o && o.clearCanvas !== void 0 ? o.clearCanvas : !0,
            context: (o && o.context) || null,
            progressiveLoad: (o && o.progressiveLoad) || !1,
            preserveAspectRatio:
              (o && o.preserveAspectRatio) || "xMidYMid meet",
            imagePreserveAspectRatio:
              (o && o.imagePreserveAspectRatio) || "xMidYMid slice",
            contentVisibility: (o && o.contentVisibility) || "visible",
            className: (o && o.className) || "",
            id: (o && o.id) || "",
            runExpressions:
              !o || o.runExpressions === void 0 || o.runExpressions,
          }),
          (this.renderConfig.dpr = (o && o.dpr) || 1),
          this.animationItem.wrapper &&
            (this.renderConfig.dpr =
              (o && o.dpr) || window.devicePixelRatio || 1),
          (this.renderedFrame = -1),
          (this.globalData = {
            frameNum: -1,
            _mdf: !1,
            renderConfig: this.renderConfig,
            currentGlobalAlpha: -1,
          }),
          (this.contextData = new CVContextData()),
          (this.elements = []),
          (this.pendingElements = []),
          (this.transformMat = new Matrix()),
          (this.completeLayers = !1),
          (this.rendererType = "canvas"),
          this.renderConfig.clearCanvas &&
            ((this.ctxTransform = this.contextData.transform.bind(
              this.contextData
            )),
            (this.ctxOpacity = this.contextData.opacity.bind(this.contextData)),
            (this.ctxFillStyle = this.contextData.fillStyle.bind(
              this.contextData
            )),
            (this.ctxStrokeStyle = this.contextData.strokeStyle.bind(
              this.contextData
            )),
            (this.ctxLineWidth = this.contextData.lineWidth.bind(
              this.contextData
            )),
            (this.ctxLineCap = this.contextData.lineCap.bind(this.contextData)),
            (this.ctxLineJoin = this.contextData.lineJoin.bind(
              this.contextData
            )),
            (this.ctxMiterLimit = this.contextData.miterLimit.bind(
              this.contextData
            )),
            (this.ctxFill = this.contextData.fill.bind(this.contextData)),
            (this.ctxFillRect = this.contextData.fillRect.bind(
              this.contextData
            )),
            (this.ctxStroke = this.contextData.stroke.bind(this.contextData)),
            (this.save = this.contextData.save.bind(this.contextData)));
      }
      extendPrototype([CanvasRendererBase], CanvasRenderer),
        (CanvasRenderer.prototype.createComp = function (a) {
          return new CVCompElement(a, this.globalData, this);
        });
      function HBaseElement() {}
      (HBaseElement.prototype = {
        checkBlendMode: function () {},
        initRendererElement: function () {
          (this.baseElement = createTag(this.data.tg || "div")),
            this.data.hasMask
              ? ((this.svgElement = createNS("svg")),
                (this.layerElement = createNS("g")),
                (this.maskedElement = this.layerElement),
                this.svgElement.appendChild(this.layerElement),
                this.baseElement.appendChild(this.svgElement))
              : (this.layerElement = this.baseElement),
            styleDiv(this.baseElement);
        },
        createContainerElements: function () {
          (this.renderableEffectsManager = new CVEffects(this)),
            (this.transformedElement = this.baseElement),
            (this.maskedElement = this.layerElement),
            this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
            this.data.cl &&
              this.layerElement.setAttribute("class", this.data.cl),
            this.data.bm !== 0 && this.setBlendMode();
        },
        renderElement: function () {
          var o = this.transformedElement ? this.transformedElement.style : {};
          if (this.finalTransform._matMdf) {
            var s = this.finalTransform.mat.toCSS();
            (o.transform = s), (o.webkitTransform = s);
          }
          this.finalTransform._opMdf &&
            (o.opacity = this.finalTransform.mProp.o.v);
        },
        renderFrame: function () {
          this.data.hd ||
            this.hidden ||
            (this.renderTransform(),
            this.renderRenderable(),
            this.renderElement(),
            this.renderInnerContent(),
            this._isFirstFrame && (this._isFirstFrame = !1));
        },
        destroy: function () {
          (this.layerElement = null),
            (this.transformedElement = null),
            this.matteElement && (this.matteElement = null),
            this.maskManager &&
              (this.maskManager.destroy(), (this.maskManager = null));
        },
        createRenderableComponents: function () {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
        },
        addEffects: function () {},
        setMatte: function () {},
      }),
        (HBaseElement.prototype.getBaseElement =
          SVGBaseElement.prototype.getBaseElement),
        (HBaseElement.prototype.destroyBaseElement =
          HBaseElement.prototype.destroy),
        (HBaseElement.prototype.buildElementParenting =
          BaseRenderer.prototype.buildElementParenting);
      function HSolidElement(a, o, s) {
        this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
        ],
        HSolidElement
      ),
        (HSolidElement.prototype.createContent = function () {
          var a;
          this.data.hasMask
            ? ((a = createNS("rect")),
              a.setAttribute("width", this.data.sw),
              a.setAttribute("height", this.data.sh),
              a.setAttribute("fill", this.data.sc),
              this.svgElement.setAttribute("width", this.data.sw),
              this.svgElement.setAttribute("height", this.data.sh))
            : ((a = createTag("div")),
              (a.style.width = this.data.sw + "px"),
              (a.style.height = this.data.sh + "px"),
              (a.style.backgroundColor = this.data.sc)),
            this.layerElement.appendChild(a);
        });
      function HShapeElement(a, o, s) {
        (this.shapes = []),
          (this.shapesData = a.shapes),
          (this.stylesList = []),
          (this.shapeModifiers = []),
          (this.itemsData = []),
          (this.processedElements = []),
          (this.animatedContents = []),
          (this.shapesContainer = createNS("g")),
          this.initElement(a, o, s),
          (this.prevViewData = []),
          (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 });
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HSolidElement,
          SVGShapeElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        HShapeElement
      ),
        (HShapeElement.prototype._renderShapeFrame =
          HShapeElement.prototype.renderInnerContent),
        (HShapeElement.prototype.createContent = function () {
          var a;
          if (((this.baseElement.style.fontSize = 0), this.data.hasMask))
            this.layerElement.appendChild(this.shapesContainer),
              (a = this.svgElement);
          else {
            a = createNS("svg");
            var o = this.comp.data ? this.comp.data : this.globalData.compSize;
            a.setAttribute("width", o.w),
              a.setAttribute("height", o.h),
              a.appendChild(this.shapesContainer),
              this.layerElement.appendChild(a);
          }
          this.searchShapes(
            this.shapesData,
            this.itemsData,
            this.prevViewData,
            this.shapesContainer,
            0,
            [],
            !0
          ),
            this.filterUniqueShapes(),
            (this.shapeCont = a);
        }),
        (HShapeElement.prototype.getTransformedPoint = function (a, o) {
          var s,
            _ = a.length;
          for (s = 0; s < _; s += 1)
            o = a[s].mProps.v.applyToPointArray(o[0], o[1], 0);
          return o;
        }),
        (HShapeElement.prototype.calculateShapeBoundingBox = function (a, o) {
          var s = a.sh.v,
            _ = a.transformers,
            $,
            et = s._length,
            tt,
            rt,
            nt,
            it;
          if (!(et <= 1)) {
            for ($ = 0; $ < et - 1; $ += 1)
              (tt = this.getTransformedPoint(_, s.v[$])),
                (rt = this.getTransformedPoint(_, s.o[$])),
                (nt = this.getTransformedPoint(_, s.i[$ + 1])),
                (it = this.getTransformedPoint(_, s.v[$ + 1])),
                this.checkBounds(tt, rt, nt, it, o);
            s.c &&
              ((tt = this.getTransformedPoint(_, s.v[$])),
              (rt = this.getTransformedPoint(_, s.o[$])),
              (nt = this.getTransformedPoint(_, s.i[0])),
              (it = this.getTransformedPoint(_, s.v[0])),
              this.checkBounds(tt, rt, nt, it, o));
          }
        }),
        (HShapeElement.prototype.checkBounds = function (a, o, s, _, $) {
          this.getBoundsOfCurve(a, o, s, _);
          var et = this.shapeBoundingBox;
          ($.x = bmMin(et.left, $.x)),
            ($.xMax = bmMax(et.right, $.xMax)),
            ($.y = bmMin(et.top, $.y)),
            ($.yMax = bmMax(et.bottom, $.yMax));
        }),
        (HShapeElement.prototype.shapeBoundingBox = {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0,
        }),
        (HShapeElement.prototype.tempBoundingBox = {
          x: 0,
          xMax: 0,
          y: 0,
          yMax: 0,
          width: 0,
          height: 0,
        }),
        (HShapeElement.prototype.getBoundsOfCurve = function (a, o, s, _) {
          for (
            var $ = [
                [a[0], _[0]],
                [a[1], _[1]],
              ],
              et,
              tt,
              rt,
              nt,
              it,
              at,
              st,
              ot = 0;
            ot < 2;
            ++ot
          )
            (tt = 6 * a[ot] - 12 * o[ot] + 6 * s[ot]),
              (et = -3 * a[ot] + 9 * o[ot] - 9 * s[ot] + 3 * _[ot]),
              (rt = 3 * o[ot] - 3 * a[ot]),
              (tt |= 0),
              (et |= 0),
              (rt |= 0),
              (et === 0 && tt === 0) ||
                (et === 0
                  ? ((nt = -rt / tt),
                    nt > 0 &&
                      nt < 1 &&
                      $[ot].push(this.calculateF(nt, a, o, s, _, ot)))
                  : ((it = tt * tt - 4 * rt * et),
                    it >= 0 &&
                      ((at = (-tt + bmSqrt(it)) / (2 * et)),
                      at > 0 &&
                        at < 1 &&
                        $[ot].push(this.calculateF(at, a, o, s, _, ot)),
                      (st = (-tt - bmSqrt(it)) / (2 * et)),
                      st > 0 &&
                        st < 1 &&
                        $[ot].push(this.calculateF(st, a, o, s, _, ot)))));
          (this.shapeBoundingBox.left = bmMin.apply(null, $[0])),
            (this.shapeBoundingBox.top = bmMin.apply(null, $[1])),
            (this.shapeBoundingBox.right = bmMax.apply(null, $[0])),
            (this.shapeBoundingBox.bottom = bmMax.apply(null, $[1]));
        }),
        (HShapeElement.prototype.calculateF = function (a, o, s, _, $, et) {
          return (
            bmPow(1 - a, 3) * o[et] +
            3 * bmPow(1 - a, 2) * a * s[et] +
            3 * (1 - a) * bmPow(a, 2) * _[et] +
            bmPow(a, 3) * $[et]
          );
        }),
        (HShapeElement.prototype.calculateBoundingBox = function (a, o) {
          var s,
            _ = a.length;
          for (s = 0; s < _; s += 1)
            a[s] && a[s].sh
              ? this.calculateShapeBoundingBox(a[s], o)
              : a[s] && a[s].it
              ? this.calculateBoundingBox(a[s].it, o)
              : a[s] &&
                a[s].style &&
                a[s].w &&
                this.expandStrokeBoundingBox(a[s].w, o);
        }),
        (HShapeElement.prototype.expandStrokeBoundingBox = function (a, o) {
          var s = 0;
          if (a.keyframes) {
            for (var _ = 0; _ < a.keyframes.length; _ += 1) {
              var $ = a.keyframes[_].s;
              $ > s && (s = $);
            }
            s *= a.mult;
          } else s = a.v * a.mult;
          (o.x -= s), (o.xMax += s), (o.y -= s), (o.yMax += s);
        }),
        (HShapeElement.prototype.currentBoxContains = function (a) {
          return (
            this.currentBBox.x <= a.x &&
            this.currentBBox.y <= a.y &&
            this.currentBBox.width + this.currentBBox.x >= a.x + a.width &&
            this.currentBBox.height + this.currentBBox.y >= a.y + a.height
          );
        }),
        (HShapeElement.prototype.renderInnerContent = function () {
          if (
            (this._renderShapeFrame(),
            !this.hidden && (this._isFirstFrame || this._mdf))
          ) {
            var a = this.tempBoundingBox,
              o = 999999;
            if (
              ((a.x = o),
              (a.xMax = -o),
              (a.y = o),
              (a.yMax = -o),
              this.calculateBoundingBox(this.itemsData, a),
              (a.width = a.xMax < a.x ? 0 : a.xMax - a.x),
              (a.height = a.yMax < a.y ? 0 : a.yMax - a.y),
              this.currentBoxContains(a))
            )
              return;
            var s = !1;
            if (
              (this.currentBBox.w !== a.width &&
                ((this.currentBBox.w = a.width),
                this.shapeCont.setAttribute("width", a.width),
                (s = !0)),
              this.currentBBox.h !== a.height &&
                ((this.currentBBox.h = a.height),
                this.shapeCont.setAttribute("height", a.height),
                (s = !0)),
              s || this.currentBBox.x !== a.x || this.currentBBox.y !== a.y)
            ) {
              (this.currentBBox.w = a.width),
                (this.currentBBox.h = a.height),
                (this.currentBBox.x = a.x),
                (this.currentBBox.y = a.y),
                this.shapeCont.setAttribute(
                  "viewBox",
                  this.currentBBox.x +
                    " " +
                    this.currentBBox.y +
                    " " +
                    this.currentBBox.w +
                    " " +
                    this.currentBBox.h
                );
              var _ = this.shapeCont.style,
                $ =
                  "translate(" +
                  this.currentBBox.x +
                  "px," +
                  this.currentBBox.y +
                  "px)";
              (_.transform = $), (_.webkitTransform = $);
            }
          }
        });
      function HTextElement(a, o, s) {
        (this.textSpans = []),
          (this.textPaths = []),
          (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }),
          (this.renderType = "svg"),
          (this.isMasked = !1),
          this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HierarchyElement,
          FrameElement,
          RenderableDOMElement,
          ITextElement,
        ],
        HTextElement
      ),
        (HTextElement.prototype.createContent = function () {
          if (((this.isMasked = this.checkMasks()), this.isMasked)) {
            (this.renderType = "svg"),
              (this.compW = this.comp.data.w),
              (this.compH = this.comp.data.h),
              this.svgElement.setAttribute("width", this.compW),
              this.svgElement.setAttribute("height", this.compH);
            var a = createNS("g");
            this.maskedElement.appendChild(a), (this.innerElem = a);
          } else
            (this.renderType = "html"), (this.innerElem = this.layerElement);
          this.checkParenting();
        }),
        (HTextElement.prototype.buildNewText = function () {
          var a = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(a.l ? a.l.length : 0);
          var o = this.innerElem.style,
            s = a.fc ? this.buildColor(a.fc) : "rgba(0,0,0,0)";
          (o.fill = s),
            (o.color = s),
            a.sc &&
              ((o.stroke = this.buildColor(a.sc)),
              (o.strokeWidth = a.sw + "px"));
          var _ = this.globalData.fontManager.getFontByName(a.f);
          if (!this.globalData.fontManager.chars)
            if (
              ((o.fontSize = a.finalSize + "px"),
              (o.lineHeight = a.finalSize + "px"),
              _.fClass)
            )
              this.innerElem.className = _.fClass;
            else {
              o.fontFamily = _.fFamily;
              var $ = a.fWeight,
                et = a.fStyle;
              (o.fontStyle = et), (o.fontWeight = $);
            }
          var tt,
            rt,
            nt = a.l;
          rt = nt.length;
          var it,
            at,
            st,
            ot = this.mHelper,
            dt,
            ht = "",
            ft = 0;
          for (tt = 0; tt < rt; tt += 1) {
            if (
              (this.globalData.fontManager.chars
                ? (this.textPaths[ft]
                    ? (it = this.textPaths[ft])
                    : ((it = createNS("path")),
                      it.setAttribute("stroke-linecap", lineCapEnum[1]),
                      it.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                      it.setAttribute("stroke-miterlimit", "4")),
                  this.isMasked ||
                    (this.textSpans[ft]
                      ? ((at = this.textSpans[ft]), (st = at.children[0]))
                      : ((at = createTag("div")),
                        (at.style.lineHeight = 0),
                        (st = createNS("svg")),
                        st.appendChild(it),
                        styleDiv(at))))
                : this.isMasked
                ? (it = this.textPaths[ft]
                    ? this.textPaths[ft]
                    : createNS("text"))
                : this.textSpans[ft]
                ? ((at = this.textSpans[ft]), (it = this.textPaths[ft]))
                : ((at = createTag("span")),
                  styleDiv(at),
                  (it = createTag("span")),
                  styleDiv(it),
                  at.appendChild(it)),
              this.globalData.fontManager.chars)
            ) {
              var mt = this.globalData.fontManager.getCharData(
                  a.finalText[tt],
                  _.fStyle,
                  this.globalData.fontManager.getFontByName(a.f).fFamily
                ),
                ut;
              if (
                (mt ? (ut = mt.data) : (ut = null),
                ot.reset(),
                ut &&
                  ut.shapes &&
                  ut.shapes.length &&
                  ((dt = ut.shapes[0].it),
                  ot.scale(a.finalSize / 100, a.finalSize / 100),
                  (ht = this.createPathShape(ot, dt)),
                  it.setAttribute("d", ht)),
                this.isMasked)
              )
                this.innerElem.appendChild(it);
              else {
                if ((this.innerElem.appendChild(at), ut && ut.shapes)) {
                  document.body.appendChild(st);
                  var lt = st.getBBox();
                  st.setAttribute("width", lt.width + 2),
                    st.setAttribute("height", lt.height + 2),
                    st.setAttribute(
                      "viewBox",
                      lt.x -
                        1 +
                        " " +
                        (lt.y - 1) +
                        " " +
                        (lt.width + 2) +
                        " " +
                        (lt.height + 2)
                    );
                  var ct = st.style,
                    pt = "translate(" + (lt.x - 1) + "px," + (lt.y - 1) + "px)";
                  (ct.transform = pt),
                    (ct.webkitTransform = pt),
                    (nt[tt].yOffset = lt.y - 1);
                } else
                  st.setAttribute("width", 1), st.setAttribute("height", 1);
                at.appendChild(st);
              }
            } else if (
              ((it.textContent = nt[tt].val),
              it.setAttributeNS(
                "http://www.w3.org/XML/1998/namespace",
                "xml:space",
                "preserve"
              ),
              this.isMasked)
            )
              this.innerElem.appendChild(it);
            else {
              this.innerElem.appendChild(at);
              var vt = it.style,
                xt = "translate3d(0," + -a.finalSize / 1.2 + "px,0)";
              (vt.transform = xt), (vt.webkitTransform = xt);
            }
            this.isMasked
              ? (this.textSpans[ft] = it)
              : (this.textSpans[ft] = at),
              (this.textSpans[ft].style.display = "block"),
              (this.textPaths[ft] = it),
              (ft += 1);
          }
          for (; ft < this.textSpans.length; )
            (this.textSpans[ft].style.display = "none"), (ft += 1);
        }),
        (HTextElement.prototype.renderInnerContent = function () {
          this.validateText();
          var a;
          if (this.data.singleShape) {
            if (!this._isFirstFrame && !this.lettersChangedFlag) return;
            if (this.isMasked && this.finalTransform._matMdf) {
              this.svgElement.setAttribute(
                "viewBox",
                -this.finalTransform.mProp.p.v[0] +
                  " " +
                  -this.finalTransform.mProp.p.v[1] +
                  " " +
                  this.compW +
                  " " +
                  this.compH
              ),
                (a = this.svgElement.style);
              var o =
                "translate(" +
                -this.finalTransform.mProp.p.v[0] +
                "px," +
                -this.finalTransform.mProp.p.v[1] +
                "px)";
              (a.transform = o), (a.webkitTransform = o);
            }
          }
          if (
            (this.textAnimator.getMeasures(
              this.textProperty.currentData,
              this.lettersChangedFlag
            ),
            !(
              !this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag
            ))
          ) {
            var s,
              _,
              $ = 0,
              et = this.textAnimator.renderedLetters,
              tt = this.textProperty.currentData.l;
            _ = tt.length;
            var rt, nt, it;
            for (s = 0; s < _; s += 1)
              tt[s].n
                ? ($ += 1)
                : ((nt = this.textSpans[s]),
                  (it = this.textPaths[s]),
                  (rt = et[$]),
                  ($ += 1),
                  rt._mdf.m &&
                    (this.isMasked
                      ? nt.setAttribute("transform", rt.m)
                      : ((nt.style.webkitTransform = rt.m),
                        (nt.style.transform = rt.m))),
                  (nt.style.opacity = rt.o),
                  rt.sw && rt._mdf.sw && it.setAttribute("stroke-width", rt.sw),
                  rt.sc && rt._mdf.sc && it.setAttribute("stroke", rt.sc),
                  rt.fc &&
                    rt._mdf.fc &&
                    (it.setAttribute("fill", rt.fc), (it.style.color = rt.fc)));
            if (
              this.innerElem.getBBox &&
              !this.hidden &&
              (this._isFirstFrame || this._mdf)
            ) {
              var at = this.innerElem.getBBox();
              this.currentBBox.w !== at.width &&
                ((this.currentBBox.w = at.width),
                this.svgElement.setAttribute("width", at.width)),
                this.currentBBox.h !== at.height &&
                  ((this.currentBBox.h = at.height),
                  this.svgElement.setAttribute("height", at.height));
              var st = 1;
              if (
                this.currentBBox.w !== at.width + st * 2 ||
                this.currentBBox.h !== at.height + st * 2 ||
                this.currentBBox.x !== at.x - st ||
                this.currentBBox.y !== at.y - st
              ) {
                (this.currentBBox.w = at.width + st * 2),
                  (this.currentBBox.h = at.height + st * 2),
                  (this.currentBBox.x = at.x - st),
                  (this.currentBBox.y = at.y - st),
                  this.svgElement.setAttribute(
                    "viewBox",
                    this.currentBBox.x +
                      " " +
                      this.currentBBox.y +
                      " " +
                      this.currentBBox.w +
                      " " +
                      this.currentBBox.h
                  ),
                  (a = this.svgElement.style);
                var ot =
                  "translate(" +
                  this.currentBBox.x +
                  "px," +
                  this.currentBBox.y +
                  "px)";
                (a.transform = ot), (a.webkitTransform = ot);
              }
            }
          }
        });
      function HCameraElement(a, o, s) {
        this.initFrame(), this.initBaseData(a, o, s), this.initHierarchy();
        var _ = PropertyFactory.getProp;
        if (
          ((this.pe = _(this, a.pe, 0, 0, this)),
          a.ks.p.s
            ? ((this.px = _(this, a.ks.p.x, 1, 0, this)),
              (this.py = _(this, a.ks.p.y, 1, 0, this)),
              (this.pz = _(this, a.ks.p.z, 1, 0, this)))
            : (this.p = _(this, a.ks.p, 1, 0, this)),
          a.ks.a && (this.a = _(this, a.ks.a, 1, 0, this)),
          a.ks.or.k.length && a.ks.or.k[0].to)
        ) {
          var $,
            et = a.ks.or.k.length;
          for ($ = 0; $ < et; $ += 1)
            (a.ks.or.k[$].to = null), (a.ks.or.k[$].ti = null);
        }
        (this.or = _(this, a.ks.or, 1, degToRads, this)),
          (this.or.sh = !0),
          (this.rx = _(this, a.ks.rx, 0, degToRads, this)),
          (this.ry = _(this, a.ks.ry, 0, degToRads, this)),
          (this.rz = _(this, a.ks.rz, 0, degToRads, this)),
          (this.mat = new Matrix()),
          (this._prevMat = new Matrix()),
          (this._isFirstFrame = !0),
          (this.finalTransform = { mProp: this });
      }
      extendPrototype(
        [BaseElement, FrameElement, HierarchyElement],
        HCameraElement
      ),
        (HCameraElement.prototype.setup = function () {
          var a,
            o = this.comp.threeDElements.length,
            s,
            _,
            $;
          for (a = 0; a < o; a += 1)
            if (((s = this.comp.threeDElements[a]), s.type === "3d")) {
              (_ = s.perspectiveElem.style), ($ = s.container.style);
              var et = this.pe.v + "px",
                tt = "0px 0px 0px",
                rt = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
              (_.perspective = et),
                (_.webkitPerspective = et),
                ($.transformOrigin = tt),
                ($.mozTransformOrigin = tt),
                ($.webkitTransformOrigin = tt),
                (_.transform = rt),
                (_.webkitTransform = rt);
            }
        }),
        (HCameraElement.prototype.createElements = function () {}),
        (HCameraElement.prototype.hide = function () {}),
        (HCameraElement.prototype.renderFrame = function () {
          var a = this._isFirstFrame,
            o,
            s;
          if (this.hierarchy)
            for (s = this.hierarchy.length, o = 0; o < s; o += 1)
              a = this.hierarchy[o].finalTransform.mProp._mdf || a;
          if (
            a ||
            this.pe._mdf ||
            (this.p && this.p._mdf) ||
            (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) ||
            this.rx._mdf ||
            this.ry._mdf ||
            this.rz._mdf ||
            this.or._mdf ||
            (this.a && this.a._mdf)
          ) {
            if ((this.mat.reset(), this.hierarchy))
              for (s = this.hierarchy.length - 1, o = s; o >= 0; o -= 1) {
                var _ = this.hierarchy[o].finalTransform.mProp;
                this.mat.translate(-_.p.v[0], -_.p.v[1], _.p.v[2]),
                  this.mat
                    .rotateX(-_.or.v[0])
                    .rotateY(-_.or.v[1])
                    .rotateZ(_.or.v[2]),
                  this.mat.rotateX(-_.rx.v).rotateY(-_.ry.v).rotateZ(_.rz.v),
                  this.mat.scale(1 / _.s.v[0], 1 / _.s.v[1], 1 / _.s.v[2]),
                  this.mat.translate(_.a.v[0], _.a.v[1], _.a.v[2]);
              }
            if (
              (this.p
                ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2])
                : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
              this.a)
            ) {
              var $;
              this.p
                ? ($ = [
                    this.p.v[0] - this.a.v[0],
                    this.p.v[1] - this.a.v[1],
                    this.p.v[2] - this.a.v[2],
                  ])
                : ($ = [
                    this.px.v - this.a.v[0],
                    this.py.v - this.a.v[1],
                    this.pz.v - this.a.v[2],
                  ]);
              var et = Math.sqrt(
                  Math.pow($[0], 2) + Math.pow($[1], 2) + Math.pow($[2], 2)
                ),
                tt = [$[0] / et, $[1] / et, $[2] / et],
                rt = Math.sqrt(tt[2] * tt[2] + tt[0] * tt[0]),
                nt = Math.atan2(tt[1], rt),
                it = Math.atan2(tt[0], -tt[2]);
              this.mat.rotateY(it).rotateX(-nt);
            }
            this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
              this.mat
                .rotateX(-this.or.v[0])
                .rotateY(-this.or.v[1])
                .rotateZ(this.or.v[2]),
              this.mat.translate(
                this.globalData.compSize.w / 2,
                this.globalData.compSize.h / 2,
                0
              ),
              this.mat.translate(0, 0, this.pe.v);
            var at = !this._prevMat.equals(this.mat);
            if ((at || this.pe._mdf) && this.comp.threeDElements) {
              s = this.comp.threeDElements.length;
              var st, ot, dt;
              for (o = 0; o < s; o += 1)
                if (((st = this.comp.threeDElements[o]), st.type === "3d")) {
                  if (at) {
                    var ht = this.mat.toCSS();
                    (dt = st.container.style),
                      (dt.transform = ht),
                      (dt.webkitTransform = ht);
                  }
                  this.pe._mdf &&
                    ((ot = st.perspectiveElem.style),
                    (ot.perspective = this.pe.v + "px"),
                    (ot.webkitPerspective = this.pe.v + "px"));
                }
              this.mat.clone(this._prevMat);
            }
          }
          this._isFirstFrame = !1;
        }),
        (HCameraElement.prototype.prepareFrame = function (a) {
          this.prepareProperties(a, !0);
        }),
        (HCameraElement.prototype.destroy = function () {}),
        (HCameraElement.prototype.getBaseElement = function () {
          return null;
        });
      function HImageElement(a, o, s) {
        (this.assetData = o.getAssetData(a.refId)), this.initElement(a, o, s);
      }
      extendPrototype(
        [
          BaseElement,
          TransformElement,
          HBaseElement,
          HSolidElement,
          HierarchyElement,
          FrameElement,
          RenderableElement,
        ],
        HImageElement
      ),
        (HImageElement.prototype.createContent = function () {
          var a = this.globalData.getAssetsPath(this.assetData),
            o = new Image();
          this.data.hasMask
            ? ((this.imageElem = createNS("image")),
              this.imageElem.setAttribute("width", this.assetData.w + "px"),
              this.imageElem.setAttribute("height", this.assetData.h + "px"),
              this.imageElem.setAttributeNS(
                "http://www.w3.org/1999/xlink",
                "href",
                a
              ),
              this.layerElement.appendChild(this.imageElem),
              this.baseElement.setAttribute("width", this.assetData.w),
              this.baseElement.setAttribute("height", this.assetData.h))
            : this.layerElement.appendChild(o),
            (o.crossOrigin = "anonymous"),
            (o.src = a),
            this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
        });
      function HybridRendererBase(a, o) {
        (this.animationItem = a),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.renderConfig = {
            className: (o && o.className) || "",
            imagePreserveAspectRatio:
              (o && o.imagePreserveAspectRatio) || "xMidYMid slice",
            hideOnTransparent: !(o && o.hideOnTransparent === !1),
            filterSize: {
              width: (o && o.filterSize && o.filterSize.width) || "400%",
              height: (o && o.filterSize && o.filterSize.height) || "400%",
              x: (o && o.filterSize && o.filterSize.x) || "-100%",
              y: (o && o.filterSize && o.filterSize.y) || "-100%",
            },
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            renderConfig: this.renderConfig,
          }),
          (this.pendingElements = []),
          (this.elements = []),
          (this.threeDElements = []),
          (this.destroyed = !1),
          (this.camera = null),
          (this.supports3d = !0),
          (this.rendererType = "html");
      }
      extendPrototype([BaseRenderer], HybridRendererBase),
        (HybridRendererBase.prototype.buildItem =
          SVGRenderer.prototype.buildItem),
        (HybridRendererBase.prototype.checkPendingElements = function () {
          for (; this.pendingElements.length; ) {
            var a = this.pendingElements.pop();
            a.checkParenting();
          }
        }),
        (HybridRendererBase.prototype.appendElementInPos = function (a, o) {
          var s = a.getBaseElement();
          if (s) {
            var _ = this.layers[o];
            if (!_.ddd || !this.supports3d)
              if (this.threeDElements) this.addTo3dContainer(s, o);
              else {
                for (var $ = 0, et, tt, rt; $ < o; )
                  this.elements[$] &&
                    this.elements[$] !== !0 &&
                    this.elements[$].getBaseElement &&
                    ((tt = this.elements[$]),
                    (rt = this.layers[$].ddd
                      ? this.getThreeDContainerByPos($)
                      : tt.getBaseElement()),
                    (et = rt || et)),
                    ($ += 1);
                et
                  ? (!_.ddd || !this.supports3d) &&
                    this.layerElement.insertBefore(s, et)
                  : (!_.ddd || !this.supports3d) &&
                    this.layerElement.appendChild(s);
              }
            else this.addTo3dContainer(s, o);
          }
        }),
        (HybridRendererBase.prototype.createShape = function (a) {
          return this.supports3d
            ? new HShapeElement(a, this.globalData, this)
            : new SVGShapeElement(a, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createText = function (a) {
          return this.supports3d
            ? new HTextElement(a, this.globalData, this)
            : new SVGTextLottieElement(a, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createCamera = function (a) {
          return (
            (this.camera = new HCameraElement(a, this.globalData, this)),
            this.camera
          );
        }),
        (HybridRendererBase.prototype.createImage = function (a) {
          return this.supports3d
            ? new HImageElement(a, this.globalData, this)
            : new IImageElement(a, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createSolid = function (a) {
          return this.supports3d
            ? new HSolidElement(a, this.globalData, this)
            : new ISolidElement(a, this.globalData, this);
        }),
        (HybridRendererBase.prototype.createNull =
          SVGRenderer.prototype.createNull),
        (HybridRendererBase.prototype.getThreeDContainerByPos = function (a) {
          for (var o = 0, s = this.threeDElements.length; o < s; ) {
            if (
              this.threeDElements[o].startPos <= a &&
              this.threeDElements[o].endPos >= a
            )
              return this.threeDElements[o].perspectiveElem;
            o += 1;
          }
          return null;
        }),
        (HybridRendererBase.prototype.createThreeDContainer = function (a, o) {
          var s = createTag("div"),
            _,
            $;
          styleDiv(s);
          var et = createTag("div");
          if ((styleDiv(et), o === "3d")) {
            (_ = s.style),
              (_.width = this.globalData.compSize.w + "px"),
              (_.height = this.globalData.compSize.h + "px");
            var tt = "50% 50%";
            (_.webkitTransformOrigin = tt),
              (_.mozTransformOrigin = tt),
              (_.transformOrigin = tt),
              ($ = et.style);
            var rt = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
            ($.transform = rt), ($.webkitTransform = rt);
          }
          s.appendChild(et);
          var nt = {
            container: et,
            perspectiveElem: s,
            startPos: a,
            endPos: a,
            type: o,
          };
          return this.threeDElements.push(nt), nt;
        }),
        (HybridRendererBase.prototype.build3dContainers = function () {
          var a,
            o = this.layers.length,
            s,
            _ = "";
          for (a = 0; a < o; a += 1)
            this.layers[a].ddd && this.layers[a].ty !== 3
              ? (_ !== "3d" &&
                  ((_ = "3d"), (s = this.createThreeDContainer(a, "3d"))),
                (s.endPos = Math.max(s.endPos, a)))
              : (_ !== "2d" &&
                  ((_ = "2d"), (s = this.createThreeDContainer(a, "2d"))),
                (s.endPos = Math.max(s.endPos, a)));
          for (o = this.threeDElements.length, a = o - 1; a >= 0; a -= 1)
            this.resizerElem.appendChild(
              this.threeDElements[a].perspectiveElem
            );
        }),
        (HybridRendererBase.prototype.addTo3dContainer = function (a, o) {
          for (var s = 0, _ = this.threeDElements.length; s < _; ) {
            if (o <= this.threeDElements[s].endPos) {
              for (var $ = this.threeDElements[s].startPos, et; $ < o; )
                this.elements[$] &&
                  this.elements[$].getBaseElement &&
                  (et = this.elements[$].getBaseElement()),
                  ($ += 1);
              et
                ? this.threeDElements[s].container.insertBefore(a, et)
                : this.threeDElements[s].container.appendChild(a);
              break;
            }
            s += 1;
          }
        }),
        (HybridRendererBase.prototype.configAnimation = function (a) {
          var o = createTag("div"),
            s = this.animationItem.wrapper,
            _ = o.style;
          (_.width = a.w + "px"),
            (_.height = a.h + "px"),
            (this.resizerElem = o),
            styleDiv(o),
            (_.transformStyle = "flat"),
            (_.mozTransformStyle = "flat"),
            (_.webkitTransformStyle = "flat"),
            this.renderConfig.className &&
              o.setAttribute("class", this.renderConfig.className),
            s.appendChild(o),
            (_.overflow = "hidden");
          var $ = createNS("svg");
          $.setAttribute("width", "1"),
            $.setAttribute("height", "1"),
            styleDiv($),
            this.resizerElem.appendChild($);
          var et = createNS("defs");
          $.appendChild(et),
            (this.data = a),
            this.setupGlobalData(a, $),
            (this.globalData.defs = et),
            (this.layers = a.layers),
            (this.layerElement = this.resizerElem),
            this.build3dContainers(),
            this.updateContainerSize();
        }),
        (HybridRendererBase.prototype.destroy = function () {
          this.animationItem.wrapper &&
            (this.animationItem.wrapper.innerText = ""),
            (this.animationItem.container = null),
            (this.globalData.defs = null);
          var a,
            o = this.layers ? this.layers.length : 0;
          for (a = 0; a < o; a += 1)
            this.elements[a] &&
              this.elements[a].destroy &&
              this.elements[a].destroy();
          (this.elements.length = 0),
            (this.destroyed = !0),
            (this.animationItem = null);
        }),
        (HybridRendererBase.prototype.updateContainerSize = function () {
          var a = this.animationItem.wrapper.offsetWidth,
            o = this.animationItem.wrapper.offsetHeight,
            s = a / o,
            _ = this.globalData.compSize.w / this.globalData.compSize.h,
            $,
            et,
            tt,
            rt;
          _ > s
            ? (($ = a / this.globalData.compSize.w),
              (et = a / this.globalData.compSize.w),
              (tt = 0),
              (rt =
                (o -
                  this.globalData.compSize.h *
                    (a / this.globalData.compSize.w)) /
                2))
            : (($ = o / this.globalData.compSize.h),
              (et = o / this.globalData.compSize.h),
              (tt =
                (a -
                  this.globalData.compSize.w *
                    (o / this.globalData.compSize.h)) /
                2),
              (rt = 0));
          var nt = this.resizerElem.style;
          (nt.webkitTransform =
            "matrix3d(" +
            $ +
            ",0,0,0,0," +
            et +
            ",0,0,0,0,1,0," +
            tt +
            "," +
            rt +
            ",0,1)"),
            (nt.transform = nt.webkitTransform);
        }),
        (HybridRendererBase.prototype.renderFrame =
          SVGRenderer.prototype.renderFrame),
        (HybridRendererBase.prototype.hide = function () {
          this.resizerElem.style.display = "none";
        }),
        (HybridRendererBase.prototype.show = function () {
          this.resizerElem.style.display = "block";
        }),
        (HybridRendererBase.prototype.initItems = function () {
          if ((this.buildAllItems(), this.camera)) this.camera.setup();
          else {
            var a = this.globalData.compSize.w,
              o = this.globalData.compSize.h,
              s,
              _ = this.threeDElements.length;
            for (s = 0; s < _; s += 1) {
              var $ = this.threeDElements[s].perspectiveElem.style;
              ($.webkitPerspective =
                Math.sqrt(Math.pow(a, 2) + Math.pow(o, 2)) + "px"),
                ($.perspective = $.webkitPerspective);
            }
          }
        }),
        (HybridRendererBase.prototype.searchExtraCompositions = function (a) {
          var o,
            s = a.length,
            _ = createTag("div");
          for (o = 0; o < s; o += 1)
            if (a[o].xt) {
              var $ = this.createComp(a[o], _, this.globalData.comp, null);
              $.initExpressions(),
                this.globalData.projectInterface.registerComposition($);
            }
        });
      function HCompElement(a, o, s) {
        (this.layers = a.layers),
          (this.supports3d = !a.hasMask),
          (this.completeLayers = !1),
          (this.pendingElements = []),
          (this.elements = this.layers
            ? createSizedArray(this.layers.length)
            : []),
          this.initElement(a, o, s),
          (this.tm = a.tm
            ? PropertyFactory.getProp(this, a.tm, 0, o.frameRate, this)
            : { _placeholder: !0 });
      }
      extendPrototype(
        [HybridRendererBase, ICompElement, HBaseElement],
        HCompElement
      ),
        (HCompElement.prototype._createBaseContainerElements =
          HCompElement.prototype.createContainerElements),
        (HCompElement.prototype.createContainerElements = function () {
          this._createBaseContainerElements(),
            this.data.hasMask
              ? (this.svgElement.setAttribute("width", this.data.w),
                this.svgElement.setAttribute("height", this.data.h),
                (this.transformedElement = this.baseElement))
              : (this.transformedElement = this.layerElement);
        }),
        (HCompElement.prototype.addTo3dContainer = function (a, o) {
          for (var s = 0, _; s < o; )
            this.elements[s] &&
              this.elements[s].getBaseElement &&
              (_ = this.elements[s].getBaseElement()),
              (s += 1);
          _
            ? this.layerElement.insertBefore(a, _)
            : this.layerElement.appendChild(a);
        }),
        (HCompElement.prototype.createComp = function (a) {
          return this.supports3d
            ? new HCompElement(a, this.globalData, this)
            : new SVGCompElement(a, this.globalData, this);
        });
      function HybridRenderer(a, o) {
        (this.animationItem = a),
          (this.layers = null),
          (this.renderedFrame = -1),
          (this.renderConfig = {
            className: (o && o.className) || "",
            imagePreserveAspectRatio:
              (o && o.imagePreserveAspectRatio) || "xMidYMid slice",
            hideOnTransparent: !(o && o.hideOnTransparent === !1),
            filterSize: {
              width: (o && o.filterSize && o.filterSize.width) || "400%",
              height: (o && o.filterSize && o.filterSize.height) || "400%",
              x: (o && o.filterSize && o.filterSize.x) || "-100%",
              y: (o && o.filterSize && o.filterSize.y) || "-100%",
            },
            runExpressions:
              !o || o.runExpressions === void 0 || o.runExpressions,
          }),
          (this.globalData = {
            _mdf: !1,
            frameNum: -1,
            renderConfig: this.renderConfig,
          }),
          (this.pendingElements = []),
          (this.elements = []),
          (this.threeDElements = []),
          (this.destroyed = !1),
          (this.camera = null),
          (this.supports3d = !0),
          (this.rendererType = "html");
      }
      extendPrototype([HybridRendererBase], HybridRenderer),
        (HybridRenderer.prototype.createComp = function (a) {
          return this.supports3d
            ? new HCompElement(a, this.globalData, this)
            : new SVGCompElement(a, this.globalData, this);
        });
      var CompExpressionInterface = (function () {
        return function (a) {
          function o(s) {
            for (var _ = 0, $ = a.layers.length; _ < $; ) {
              if (a.layers[_].nm === s || a.layers[_].ind === s)
                return a.elements[_].layerInterface;
              _ += 1;
            }
            return null;
          }
          return (
            Object.defineProperty(o, "_name", { value: a.data.nm }),
            (o.layer = o),
            (o.pixelAspect = 1),
            (o.height = a.data.h || a.globalData.compSize.h),
            (o.width = a.data.w || a.globalData.compSize.w),
            (o.pixelAspect = 1),
            (o.frameDuration = 1 / a.globalData.frameRate),
            (o.displayStartTime = 0),
            (o.numLayers = a.layers.length),
            o
          );
        };
      })();
      function _typeof$2(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$2 = function (s) {
                return typeof s;
              })
            : (_typeof$2 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$2(a)
        );
      }
      function seedRandom(a, o) {
        var s = this,
          _ = 256,
          $ = 6,
          et = 52,
          tt = "random",
          rt = o.pow(_, $),
          nt = o.pow(2, et),
          it = nt * 2,
          at = _ - 1,
          st;
        function ot(ct, pt, vt) {
          var xt = [];
          pt = pt === !0 ? { entropy: !0 } : pt || {};
          var bt = mt(
              ft(pt.entropy ? [ct, lt(a)] : ct === null ? ut() : ct, 3),
              xt
            ),
            St = new dt(xt),
            Pt = function () {
              for (var It = St.g($), Rt = rt, jt = 0; It < nt; )
                (It = (It + jt) * _), (Rt *= _), (jt = St.g(1));
              for (; It >= it; ) (It /= 2), (Rt /= 2), (jt >>>= 1);
              return (It + jt) / Rt;
            };
          return (
            (Pt.int32 = function () {
              return St.g(4) | 0;
            }),
            (Pt.quick = function () {
              return St.g(4) / 4294967296;
            }),
            (Pt.double = Pt),
            mt(lt(St.S), a),
            (
              pt.pass ||
              vt ||
              function (Mt, It, Rt, jt) {
                return (
                  jt &&
                    (jt.S && ht(jt, St),
                    (Mt.state = function () {
                      return ht(St, {});
                    })),
                  Rt ? ((o[tt] = Mt), It) : Mt
                );
              }
            )(Pt, bt, "global" in pt ? pt.global : this == o, pt.state)
          );
        }
        o["seed" + tt] = ot;
        function dt(ct) {
          var pt,
            vt = ct.length,
            xt = this,
            bt = 0,
            St = (xt.i = xt.j = 0),
            Pt = (xt.S = []);
          for (vt || (ct = [vt++]); bt < _; ) Pt[bt] = bt++;
          for (bt = 0; bt < _; bt++)
            (Pt[bt] = Pt[(St = at & (St + ct[bt % vt] + (pt = Pt[bt])))]),
              (Pt[St] = pt);
          xt.g = function (Mt) {
            for (var It, Rt = 0, jt = xt.i, Dt = xt.j, At = xt.S; Mt--; )
              (It = At[(jt = at & (jt + 1))]),
                (Rt =
                  Rt * _ +
                  At[
                    at & ((At[jt] = At[(Dt = at & (Dt + It))]) + (At[Dt] = It))
                  ]);
            return (xt.i = jt), (xt.j = Dt), Rt;
          };
        }
        function ht(ct, pt) {
          return (pt.i = ct.i), (pt.j = ct.j), (pt.S = ct.S.slice()), pt;
        }
        function ft(ct, pt) {
          var vt = [],
            xt = _typeof$2(ct),
            bt;
          if (pt && xt == "object")
            for (bt in ct)
              try {
                vt.push(ft(ct[bt], pt - 1));
              } catch {}
          return vt.length ? vt : xt == "string" ? ct : ct + "\0";
        }
        function mt(ct, pt) {
          for (var vt = ct + "", xt, bt = 0; bt < vt.length; )
            pt[at & bt] = at & ((xt ^= pt[at & bt] * 19) + vt.charCodeAt(bt++));
          return lt(pt);
        }
        function ut() {
          try {
            var ct = new Uint8Array(_);
            return (s.crypto || s.msCrypto).getRandomValues(ct), lt(ct);
          } catch {
            var pt = s.navigator,
              vt = pt && pt.plugins;
            return [+new Date(), s, vt, s.screen, lt(a)];
          }
        }
        function lt(ct) {
          return String.fromCharCode.apply(0, ct);
        }
        mt(o.random(), a);
      }
      function initialize$2(a) {
        seedRandom([], a);
      }
      var propTypes = { SHAPE: "shape" };
      function _typeof$1(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof$1 = function (s) {
                return typeof s;
              })
            : (_typeof$1 = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof$1(a)
        );
      }
      var ExpressionManager = (function () {
          var ob = {},
            Math = BMMath,
            window = null,
            document = null,
            XMLHttpRequest = null,
            fetch = null,
            frames = null,
            _lottieGlobal = {};
          initialize$2(BMMath);
          function resetFrame() {
            _lottieGlobal = {};
          }
          function $bm_isInstanceOfArray(a) {
            return a.constructor === Array || a.constructor === Float32Array;
          }
          function isNumerable(a, o) {
            return (
              a === "number" ||
              o instanceof Number ||
              a === "boolean" ||
              a === "string"
            );
          }
          function $bm_neg(a) {
            var o = _typeof$1(a);
            if (o === "number" || a instanceof Number || o === "boolean")
              return -a;
            if ($bm_isInstanceOfArray(a)) {
              var s,
                _ = a.length,
                $ = [];
              for (s = 0; s < _; s += 1) $[s] = -a[s];
              return $;
            }
            return a.propType ? a.v : -a;
          }
          var easeInBez = BezierFactory.getBezierEasing(
              0.333,
              0,
              0.833,
              0.833,
              "easeIn"
            ).get,
            easeOutBez = BezierFactory.getBezierEasing(
              0.167,
              0.167,
              0.667,
              1,
              "easeOut"
            ).get,
            easeInOutBez = BezierFactory.getBezierEasing(
              0.33,
              0,
              0.667,
              1,
              "easeInOut"
            ).get;
          function sum(a, o) {
            var s = _typeof$1(a),
              _ = _typeof$1(o);
            if (
              (isNumerable(s, a) && isNumerable(_, o)) ||
              s === "string" ||
              _ === "string"
            )
              return a + o;
            if ($bm_isInstanceOfArray(a) && isNumerable(_, o))
              return (a = a.slice(0)), (a[0] += o), a;
            if (isNumerable(s, a) && $bm_isInstanceOfArray(o))
              return (o = o.slice(0)), (o[0] = a + o[0]), o;
            if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(o)) {
              for (
                var $ = 0, et = a.length, tt = o.length, rt = [];
                $ < et || $ < tt;

              )
                (typeof a[$] == "number" || a[$] instanceof Number) &&
                (typeof o[$] == "number" || o[$] instanceof Number)
                  ? (rt[$] = a[$] + o[$])
                  : (rt[$] = o[$] === void 0 ? a[$] : a[$] || o[$]),
                  ($ += 1);
              return rt;
            }
            return 0;
          }
          var add = sum;
          function sub(a, o) {
            var s = _typeof$1(a),
              _ = _typeof$1(o);
            if (isNumerable(s, a) && isNumerable(_, o))
              return (
                s === "string" && (a = parseInt(a, 10)),
                _ === "string" && (o = parseInt(o, 10)),
                a - o
              );
            if ($bm_isInstanceOfArray(a) && isNumerable(_, o))
              return (a = a.slice(0)), (a[0] -= o), a;
            if (isNumerable(s, a) && $bm_isInstanceOfArray(o))
              return (o = o.slice(0)), (o[0] = a - o[0]), o;
            if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(o)) {
              for (
                var $ = 0, et = a.length, tt = o.length, rt = [];
                $ < et || $ < tt;

              )
                (typeof a[$] == "number" || a[$] instanceof Number) &&
                (typeof o[$] == "number" || o[$] instanceof Number)
                  ? (rt[$] = a[$] - o[$])
                  : (rt[$] = o[$] === void 0 ? a[$] : a[$] || o[$]),
                  ($ += 1);
              return rt;
            }
            return 0;
          }
          function mul(a, o) {
            var s = _typeof$1(a),
              _ = _typeof$1(o),
              $;
            if (isNumerable(s, a) && isNumerable(_, o)) return a * o;
            var et, tt;
            if ($bm_isInstanceOfArray(a) && isNumerable(_, o)) {
              for (
                tt = a.length, $ = createTypedArray("float32", tt), et = 0;
                et < tt;
                et += 1
              )
                $[et] = a[et] * o;
              return $;
            }
            if (isNumerable(s, a) && $bm_isInstanceOfArray(o)) {
              for (
                tt = o.length, $ = createTypedArray("float32", tt), et = 0;
                et < tt;
                et += 1
              )
                $[et] = a * o[et];
              return $;
            }
            return 0;
          }
          function div(a, o) {
            var s = _typeof$1(a),
              _ = _typeof$1(o),
              $;
            if (isNumerable(s, a) && isNumerable(_, o)) return a / o;
            var et, tt;
            if ($bm_isInstanceOfArray(a) && isNumerable(_, o)) {
              for (
                tt = a.length, $ = createTypedArray("float32", tt), et = 0;
                et < tt;
                et += 1
              )
                $[et] = a[et] / o;
              return $;
            }
            if (isNumerable(s, a) && $bm_isInstanceOfArray(o)) {
              for (
                tt = o.length, $ = createTypedArray("float32", tt), et = 0;
                et < tt;
                et += 1
              )
                $[et] = a / o[et];
              return $;
            }
            return 0;
          }
          function mod(a, o) {
            return (
              typeof a == "string" && (a = parseInt(a, 10)),
              typeof o == "string" && (o = parseInt(o, 10)),
              a % o
            );
          }
          var $bm_sum = sum,
            $bm_sub = sub,
            $bm_mul = mul,
            $bm_div = div,
            $bm_mod = mod;
          function clamp(a, o, s) {
            if (o > s) {
              var _ = s;
              (s = o), (o = _);
            }
            return Math.min(Math.max(a, o), s);
          }
          function radiansToDegrees(a) {
            return a / degToRads;
          }
          var radians_to_degrees = radiansToDegrees;
          function degreesToRadians(a) {
            return a * degToRads;
          }
          var degrees_to_radians = radiansToDegrees,
            helperLengthArray = [0, 0, 0, 0, 0, 0];
          function length(a, o) {
            if (typeof a == "number" || a instanceof Number)
              return (o = o || 0), Math.abs(a - o);
            o || (o = helperLengthArray);
            var s,
              _ = Math.min(a.length, o.length),
              $ = 0;
            for (s = 0; s < _; s += 1) $ += Math.pow(o[s] - a[s], 2);
            return Math.sqrt($);
          }
          function normalize(a) {
            return div(a, length(a));
          }
          function rgbToHsl(a) {
            var o = a[0],
              s = a[1],
              _ = a[2],
              $ = Math.max(o, s, _),
              et = Math.min(o, s, _),
              tt,
              rt,
              nt = ($ + et) / 2;
            if ($ === et) (tt = 0), (rt = 0);
            else {
              var it = $ - et;
              switch (
                ((rt = nt > 0.5 ? it / (2 - $ - et) : it / ($ + et)), $)
              ) {
                case o:
                  tt = (s - _) / it + (s < _ ? 6 : 0);
                  break;
                case s:
                  tt = (_ - o) / it + 2;
                  break;
                case _:
                  tt = (o - s) / it + 4;
                  break;
              }
              tt /= 6;
            }
            return [tt, rt, nt, a[3]];
          }
          function hue2rgb(a, o, s) {
            return (
              s < 0 && (s += 1),
              s > 1 && (s -= 1),
              s < 1 / 6
                ? a + (o - a) * 6 * s
                : s < 1 / 2
                ? o
                : s < 2 / 3
                ? a + (o - a) * (2 / 3 - s) * 6
                : a
            );
          }
          function hslToRgb(a) {
            var o = a[0],
              s = a[1],
              _ = a[2],
              $,
              et,
              tt;
            if (s === 0) ($ = _), (tt = _), (et = _);
            else {
              var rt = _ < 0.5 ? _ * (1 + s) : _ + s - _ * s,
                nt = 2 * _ - rt;
              ($ = hue2rgb(nt, rt, o + 1 / 3)),
                (et = hue2rgb(nt, rt, o)),
                (tt = hue2rgb(nt, rt, o - 1 / 3));
            }
            return [$, et, tt, a[3]];
          }
          function linear(a, o, s, _, $) {
            if (
              ((_ === void 0 || $ === void 0) &&
                ((_ = o), ($ = s), (o = 0), (s = 1)),
              s < o)
            ) {
              var et = s;
              (s = o), (o = et);
            }
            if (a <= o) return _;
            if (a >= s) return $;
            var tt = s === o ? 0 : (a - o) / (s - o);
            if (!_.length) return _ + ($ - _) * tt;
            var rt,
              nt = _.length,
              it = createTypedArray("float32", nt);
            for (rt = 0; rt < nt; rt += 1)
              it[rt] = _[rt] + ($[rt] - _[rt]) * tt;
            return it;
          }
          function random(a, o) {
            if (
              (o === void 0 &&
                (a === void 0 ? ((a = 0), (o = 1)) : ((o = a), (a = void 0))),
              o.length)
            ) {
              var s,
                _ = o.length;
              a || (a = createTypedArray("float32", _));
              var $ = createTypedArray("float32", _),
                et = BMMath.random();
              for (s = 0; s < _; s += 1) $[s] = a[s] + et * (o[s] - a[s]);
              return $;
            }
            a === void 0 && (a = 0);
            var tt = BMMath.random();
            return a + tt * (o - a);
          }
          function createPath(a, o, s, _) {
            var $,
              et = a.length,
              tt = shapePool.newElement();
            tt.setPathData(!!_, et);
            var rt = [0, 0],
              nt,
              it;
            for ($ = 0; $ < et; $ += 1)
              (nt = o && o[$] ? o[$] : rt),
                (it = s && s[$] ? s[$] : rt),
                tt.setTripleAt(
                  a[$][0],
                  a[$][1],
                  it[0] + a[$][0],
                  it[1] + a[$][1],
                  nt[0] + a[$][0],
                  nt[1] + a[$][1],
                  $,
                  !0
                );
            return tt;
          }
          function initiateExpression(elem, data, property) {
            function noOp(a) {
              return a;
            }
            if (!elem.globalData.renderConfig.runExpressions) return noOp;
            var val = data.x,
              needsVelocity = /velocity(?![\w\d])/.test(val),
              _needsRandom = val.indexOf("random") !== -1,
              elemType = elem.data.ty,
              transform,
              $bm_transform,
              content,
              effect,
              thisProperty = property;
            (thisProperty.valueAtTime = thisProperty.getValueAtTime),
              Object.defineProperty(thisProperty, "value", {
                get: function () {
                  return thisProperty.v;
                },
              }),
              (elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate),
              (elem.comp.displayStartTime = 0);
            var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
              outPoint = elem.data.op / elem.comp.globalData.frameRate,
              width = elem.data.sw ? elem.data.sw : 0,
              height = elem.data.sh ? elem.data.sh : 0,
              name = elem.data.nm,
              loopIn,
              loop_in,
              loopOut,
              loop_out,
              smooth,
              toWorld,
              fromWorld,
              fromComp,
              toComp,
              fromCompToSurface,
              position,
              rotation,
              anchorPoint,
              scale,
              thisLayer,
              thisComp,
              mask,
              valueAtTime,
              velocityAtTime,
              scoped_bm_rt,
              expression_function = eval(
                "[function _expression_function(){" +
                  val +
                  ";scoped_bm_rt=$bm_rt}]"
              )[0],
              numKeys = property.kf ? data.k.length : 0,
              active = !this.data || this.data.hd !== !0,
              wiggle = function a(o, s) {
                var _,
                  $,
                  et = this.pv.length ? this.pv.length : 1,
                  tt = createTypedArray("float32", et);
                o = 5;
                var rt = Math.floor(time * o);
                for (_ = 0, $ = 0; _ < rt; ) {
                  for ($ = 0; $ < et; $ += 1)
                    tt[$] += -s + s * 2 * BMMath.random();
                  _ += 1;
                }
                var nt = time * o,
                  it = nt - Math.floor(nt),
                  at = createTypedArray("float32", et);
                if (et > 1) {
                  for ($ = 0; $ < et; $ += 1)
                    at[$] =
                      this.pv[$] + tt[$] + (-s + s * 2 * BMMath.random()) * it;
                  return at;
                }
                return this.pv + tt[0] + (-s + s * 2 * BMMath.random()) * it;
              }.bind(this);
            thisProperty.loopIn &&
              ((loopIn = thisProperty.loopIn.bind(thisProperty)),
              (loop_in = loopIn)),
              thisProperty.loopOut &&
                ((loopOut = thisProperty.loopOut.bind(thisProperty)),
                (loop_out = loopOut)),
              thisProperty.smooth &&
                (smooth = thisProperty.smooth.bind(thisProperty));
            function loopInDuration(a, o) {
              return loopIn(a, o, !0);
            }
            function loopOutDuration(a, o) {
              return loopOut(a, o, !0);
            }
            this.getValueAtTime &&
              (valueAtTime = this.getValueAtTime.bind(this)),
              this.getVelocityAtTime &&
                (velocityAtTime = this.getVelocityAtTime.bind(this));
            var comp = elem.comp.globalData.projectInterface.bind(
              elem.comp.globalData.projectInterface
            );
            function lookAt(a, o) {
              var s = [o[0] - a[0], o[1] - a[1], o[2] - a[2]],
                _ =
                  Math.atan2(s[0], Math.sqrt(s[1] * s[1] + s[2] * s[2])) /
                  degToRads,
                $ = -Math.atan2(s[1], s[2]) / degToRads;
              return [$, _, 0];
            }
            function easeOut(a, o, s, _, $) {
              return applyEase(easeOutBez, a, o, s, _, $);
            }
            function easeIn(a, o, s, _, $) {
              return applyEase(easeInBez, a, o, s, _, $);
            }
            function ease(a, o, s, _, $) {
              return applyEase(easeInOutBez, a, o, s, _, $);
            }
            function applyEase(a, o, s, _, $, et) {
              $ === void 0 ? (($ = s), (et = _)) : (o = (o - s) / (_ - s)),
                o > 1 ? (o = 1) : o < 0 && (o = 0);
              var tt = a(o);
              if ($bm_isInstanceOfArray($)) {
                var rt,
                  nt = $.length,
                  it = createTypedArray("float32", nt);
                for (rt = 0; rt < nt; rt += 1)
                  it[rt] = (et[rt] - $[rt]) * tt + $[rt];
                return it;
              }
              return (et - $) * tt + $;
            }
            function nearestKey(a) {
              var o,
                s = data.k.length,
                _,
                $;
              if (!data.k.length || typeof data.k[0] == "number")
                (_ = 0), ($ = 0);
              else if (
                ((_ = -1),
                (a *= elem.comp.globalData.frameRate),
                a < data.k[0].t)
              )
                (_ = 1), ($ = data.k[0].t);
              else {
                for (o = 0; o < s - 1; o += 1)
                  if (a === data.k[o].t) {
                    (_ = o + 1), ($ = data.k[o].t);
                    break;
                  } else if (a > data.k[o].t && a < data.k[o + 1].t) {
                    a - data.k[o].t > data.k[o + 1].t - a
                      ? ((_ = o + 2), ($ = data.k[o + 1].t))
                      : ((_ = o + 1), ($ = data.k[o].t));
                    break;
                  }
                _ === -1 && ((_ = o + 1), ($ = data.k[o].t));
              }
              var et = {};
              return (
                (et.index = _),
                (et.time = $ / elem.comp.globalData.frameRate),
                et
              );
            }
            function key(a) {
              var o, s, _;
              if (!data.k.length || typeof data.k[0] == "number")
                throw new Error("The property has no keyframe at index " + a);
              (a -= 1),
                (o = {
                  time: data.k[a].t / elem.comp.globalData.frameRate,
                  value: [],
                });
              var $ = Object.prototype.hasOwnProperty.call(data.k[a], "s")
                ? data.k[a].s
                : data.k[a - 1].e;
              for (_ = $.length, s = 0; s < _; s += 1)
                (o[s] = $[s]), (o.value[s] = $[s]);
              return o;
            }
            function framesToTime(a, o) {
              return o || (o = elem.comp.globalData.frameRate), a / o;
            }
            function timeToFrames(a, o) {
              return (
                !a && a !== 0 && (a = time),
                o || (o = elem.comp.globalData.frameRate),
                a * o
              );
            }
            function seedRandom(a) {
              BMMath.seedrandom(randSeed + a);
            }
            function sourceRectAtTime() {
              return elem.sourceRectAtTime();
            }
            function substring(a, o) {
              return typeof value == "string"
                ? o === void 0
                  ? value.substring(a)
                  : value.substring(a, o)
                : "";
            }
            function substr(a, o) {
              return typeof value == "string"
                ? o === void 0
                  ? value.substr(a)
                  : value.substr(a, o)
                : "";
            }
            function posterizeTime(a) {
              (time = a === 0 ? 0 : Math.floor(time * a) / a),
                (value = valueAtTime(time));
            }
            var time,
              velocity,
              value,
              text,
              textIndex,
              textTotal,
              selectorValue,
              index = elem.data.ind,
              hasParent = !!(elem.hierarchy && elem.hierarchy.length),
              parent,
              randSeed = Math.floor(Math.random() * 1e6),
              globalData = elem.globalData;
            function executeExpression(a) {
              return (
                (value = a),
                this.frameExpressionId === elem.globalData.frameId &&
                this.propType !== "textSelector"
                  ? value
                  : (this.propType === "textSelector" &&
                      ((textIndex = this.textIndex),
                      (textTotal = this.textTotal),
                      (selectorValue = this.selectorValue)),
                    thisLayer ||
                      ((text = elem.layerInterface.text),
                      (thisLayer = elem.layerInterface),
                      (thisComp = elem.comp.compInterface),
                      (toWorld = thisLayer.toWorld.bind(thisLayer)),
                      (fromWorld = thisLayer.fromWorld.bind(thisLayer)),
                      (fromComp = thisLayer.fromComp.bind(thisLayer)),
                      (toComp = thisLayer.toComp.bind(thisLayer)),
                      (mask = thisLayer.mask
                        ? thisLayer.mask.bind(thisLayer)
                        : null),
                      (fromCompToSurface = fromComp)),
                    transform ||
                      ((transform = elem.layerInterface(
                        "ADBE Transform Group"
                      )),
                      ($bm_transform = transform),
                      transform && (anchorPoint = transform.anchorPoint)),
                    elemType === 4 &&
                      !content &&
                      (content = thisLayer("ADBE Root Vectors Group")),
                    effect || (effect = thisLayer(4)),
                    (hasParent = !!(elem.hierarchy && elem.hierarchy.length)),
                    hasParent &&
                      !parent &&
                      (parent = elem.hierarchy[0].layerInterface),
                    (time =
                      this.comp.renderedFrame / this.comp.globalData.frameRate),
                    _needsRandom && seedRandom(randSeed + time),
                    needsVelocity && (velocity = velocityAtTime(time)),
                    expression_function(),
                    (this.frameExpressionId = elem.globalData.frameId),
                    (scoped_bm_rt =
                      scoped_bm_rt.propType === propTypes.SHAPE
                        ? scoped_bm_rt.v
                        : scoped_bm_rt),
                    scoped_bm_rt)
              );
            }
            return (
              (executeExpression.__preventDeadCodeRemoval = [
                $bm_transform,
                anchorPoint,
                time,
                velocity,
                inPoint,
                outPoint,
                width,
                height,
                name,
                loop_in,
                loop_out,
                smooth,
                toComp,
                fromCompToSurface,
                toWorld,
                fromWorld,
                mask,
                position,
                rotation,
                scale,
                thisComp,
                numKeys,
                active,
                wiggle,
                loopInDuration,
                loopOutDuration,
                comp,
                lookAt,
                easeOut,
                easeIn,
                ease,
                nearestKey,
                key,
                text,
                textIndex,
                textTotal,
                selectorValue,
                framesToTime,
                timeToFrames,
                sourceRectAtTime,
                substring,
                substr,
                posterizeTime,
                index,
                globalData,
              ]),
              executeExpression
            );
          }
          return (
            (ob.initiateExpression = initiateExpression),
            (ob.__preventDeadCodeRemoval = [
              window,
              document,
              XMLHttpRequest,
              fetch,
              frames,
              $bm_neg,
              add,
              $bm_sum,
              $bm_sub,
              $bm_mul,
              $bm_div,
              $bm_mod,
              clamp,
              radians_to_degrees,
              degreesToRadians,
              degrees_to_radians,
              normalize,
              rgbToHsl,
              hslToRgb,
              linear,
              random,
              createPath,
              _lottieGlobal,
            ]),
            (ob.resetFrame = resetFrame),
            ob
          );
        })(),
        Expressions = (function () {
          var a = {};
          (a.initExpressions = o),
            (a.resetFrame = ExpressionManager.resetFrame);
          function o(s) {
            var _ = 0,
              $ = [];
            function et() {
              _ += 1;
            }
            function tt() {
              (_ -= 1), _ === 0 && nt();
            }
            function rt(it) {
              $.indexOf(it) === -1 && $.push(it);
            }
            function nt() {
              var it,
                at = $.length;
              for (it = 0; it < at; it += 1) $[it].release();
              $.length = 0;
            }
            (s.renderer.compInterface = CompExpressionInterface(s.renderer)),
              s.renderer.globalData.projectInterface.registerComposition(
                s.renderer
              ),
              (s.renderer.globalData.pushExpression = et),
              (s.renderer.globalData.popExpression = tt),
              (s.renderer.globalData.registerExpressionProperty = rt);
          }
          return a;
        })(),
        MaskManagerInterface = (function () {
          function a(s, _) {
            (this._mask = s), (this._data = _);
          }
          Object.defineProperty(a.prototype, "maskPath", {
            get: function () {
              return (
                this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop
              );
            },
          }),
            Object.defineProperty(a.prototype, "maskOpacity", {
              get: function () {
                return (
                  this._mask.op.k && this._mask.op.getValue(),
                  this._mask.op.v * 100
                );
              },
            });
          var o = function (_) {
            var $ = createSizedArray(_.viewData.length),
              et,
              tt = _.viewData.length;
            for (et = 0; et < tt; et += 1)
              $[et] = new a(_.viewData[et], _.masksProperties[et]);
            var rt = function (it) {
              for (et = 0; et < tt; ) {
                if (_.masksProperties[et].nm === it) return $[et];
                et += 1;
              }
              return null;
            };
            return rt;
          };
          return o;
        })(),
        ExpressionPropertyInterface = (function () {
          var a = { pv: 0, v: 0, mult: 1 },
            o = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
          function s(tt, rt, nt) {
            Object.defineProperty(tt, "velocity", {
              get: function () {
                return rt.getVelocityAtTime(rt.comp.currentFrame);
              },
            }),
              (tt.numKeys = rt.keyframes ? rt.keyframes.length : 0),
              (tt.key = function (it) {
                if (!tt.numKeys) return 0;
                var at = "";
                "s" in rt.keyframes[it - 1]
                  ? (at = rt.keyframes[it - 1].s)
                  : "e" in rt.keyframes[it - 2]
                  ? (at = rt.keyframes[it - 2].e)
                  : (at = rt.keyframes[it - 2].s);
                var st =
                  nt === "unidimensional"
                    ? new Number(at)
                    : Object.assign({}, at);
                return (
                  (st.time =
                    rt.keyframes[it - 1].t / rt.elem.comp.globalData.frameRate),
                  (st.value = nt === "unidimensional" ? at[0] : at),
                  st
                );
              }),
              (tt.valueAtTime = rt.getValueAtTime),
              (tt.speedAtTime = rt.getSpeedAtTime),
              (tt.velocityAtTime = rt.getVelocityAtTime),
              (tt.propertyGroup = rt.propertyGroup);
          }
          function _(tt) {
            (!tt || !("pv" in tt)) && (tt = a);
            var rt = 1 / tt.mult,
              nt = tt.pv * rt,
              it = new Number(nt);
            return (
              (it.value = nt),
              s(it, tt, "unidimensional"),
              function () {
                return (
                  tt.k && tt.getValue(),
                  (nt = tt.v * rt),
                  it.value !== nt &&
                    ((it = new Number(nt)),
                    (it.value = nt),
                    s(it, tt, "unidimensional")),
                  it
                );
              }
            );
          }
          function $(tt) {
            (!tt || !("pv" in tt)) && (tt = o);
            var rt = 1 / tt.mult,
              nt = (tt.data && tt.data.l) || tt.pv.length,
              it = createTypedArray("float32", nt),
              at = createTypedArray("float32", nt);
            return (
              (it.value = at),
              s(it, tt, "multidimensional"),
              function () {
                tt.k && tt.getValue();
                for (var st = 0; st < nt; st += 1)
                  (at[st] = tt.v[st] * rt), (it[st] = at[st]);
                return it;
              }
            );
          }
          function et() {
            return a;
          }
          return function (tt) {
            return tt ? (tt.propType === "unidimensional" ? _(tt) : $(tt)) : et;
          };
        })(),
        TransformExpressionInterface = (function () {
          return function (a) {
            function o(tt) {
              switch (tt) {
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                  return o.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                  return o.rotation;
                case "ADBE Rotate X":
                  return o.xRotation;
                case "ADBE Rotate Y":
                  return o.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                  return o.position;
                case "ADBE Position_0":
                  return o.xPosition;
                case "ADBE Position_1":
                  return o.yPosition;
                case "ADBE Position_2":
                  return o.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                  return o.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                  return o.opacity;
                default:
                  return null;
              }
            }
            Object.defineProperty(o, "rotation", {
              get: ExpressionPropertyInterface(a.r || a.rz),
            }),
              Object.defineProperty(o, "zRotation", {
                get: ExpressionPropertyInterface(a.rz || a.r),
              }),
              Object.defineProperty(o, "xRotation", {
                get: ExpressionPropertyInterface(a.rx),
              }),
              Object.defineProperty(o, "yRotation", {
                get: ExpressionPropertyInterface(a.ry),
              }),
              Object.defineProperty(o, "scale", {
                get: ExpressionPropertyInterface(a.s),
              });
            var s, _, $, et;
            return (
              a.p
                ? (et = ExpressionPropertyInterface(a.p))
                : ((s = ExpressionPropertyInterface(a.px)),
                  (_ = ExpressionPropertyInterface(a.py)),
                  a.pz && ($ = ExpressionPropertyInterface(a.pz))),
              Object.defineProperty(o, "position", {
                get: function () {
                  return a.p ? et() : [s(), _(), $ ? $() : 0];
                },
              }),
              Object.defineProperty(o, "xPosition", {
                get: ExpressionPropertyInterface(a.px),
              }),
              Object.defineProperty(o, "yPosition", {
                get: ExpressionPropertyInterface(a.py),
              }),
              Object.defineProperty(o, "zPosition", {
                get: ExpressionPropertyInterface(a.pz),
              }),
              Object.defineProperty(o, "anchorPoint", {
                get: ExpressionPropertyInterface(a.a),
              }),
              Object.defineProperty(o, "opacity", {
                get: ExpressionPropertyInterface(a.o),
              }),
              Object.defineProperty(o, "skew", {
                get: ExpressionPropertyInterface(a.sk),
              }),
              Object.defineProperty(o, "skewAxis", {
                get: ExpressionPropertyInterface(a.sa),
              }),
              Object.defineProperty(o, "orientation", {
                get: ExpressionPropertyInterface(a.or),
              }),
              o
            );
          };
        })(),
        LayerExpressionInterface = (function () {
          function a(it) {
            var at = new Matrix();
            if (it !== void 0) {
              var st = this._elem.finalTransform.mProp.getValueAtTime(it);
              st.clone(at);
            } else {
              var ot = this._elem.finalTransform.mProp;
              ot.applyToMatrix(at);
            }
            return at;
          }
          function o(it, at) {
            var st = this.getMatrix(at);
            return (
              (st.props[12] = 0),
              (st.props[13] = 0),
              (st.props[14] = 0),
              this.applyPoint(st, it)
            );
          }
          function s(it, at) {
            var st = this.getMatrix(at);
            return this.applyPoint(st, it);
          }
          function _(it, at) {
            var st = this.getMatrix(at);
            return (
              (st.props[12] = 0),
              (st.props[13] = 0),
              (st.props[14] = 0),
              this.invertPoint(st, it)
            );
          }
          function $(it, at) {
            var st = this.getMatrix(at);
            return this.invertPoint(st, it);
          }
          function et(it, at) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var st,
                ot = this._elem.hierarchy.length;
              for (st = 0; st < ot; st += 1)
                this._elem.hierarchy[st].finalTransform.mProp.applyToMatrix(it);
            }
            return it.applyToPointArray(at[0], at[1], at[2] || 0);
          }
          function tt(it, at) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var st,
                ot = this._elem.hierarchy.length;
              for (st = 0; st < ot; st += 1)
                this._elem.hierarchy[st].finalTransform.mProp.applyToMatrix(it);
            }
            return it.inversePoint(at);
          }
          function rt(it) {
            var at = new Matrix();
            if (
              (at.reset(),
              this._elem.finalTransform.mProp.applyToMatrix(at),
              this._elem.hierarchy && this._elem.hierarchy.length)
            ) {
              var st,
                ot = this._elem.hierarchy.length;
              for (st = 0; st < ot; st += 1)
                this._elem.hierarchy[st].finalTransform.mProp.applyToMatrix(at);
              return at.inversePoint(it);
            }
            return at.inversePoint(it);
          }
          function nt() {
            return [1, 1, 1, 1];
          }
          return function (it) {
            var at;
            function st(ft) {
              dt.mask = new MaskManagerInterface(ft, it);
            }
            function ot(ft) {
              dt.effect = ft;
            }
            function dt(ft) {
              switch (ft) {
                case "ADBE Root Vectors Group":
                case "Contents":
                case 2:
                  return dt.shapeInterface;
                case 1:
                case 6:
                case "Transform":
                case "transform":
                case "ADBE Transform Group":
                  return at;
                case 4:
                case "ADBE Effect Parade":
                case "effects":
                case "Effects":
                  return dt.effect;
                case "ADBE Text Properties":
                  return dt.textInterface;
                default:
                  return null;
              }
            }
            (dt.getMatrix = a),
              (dt.invertPoint = tt),
              (dt.applyPoint = et),
              (dt.toWorld = s),
              (dt.toWorldVec = o),
              (dt.fromWorld = $),
              (dt.fromWorldVec = _),
              (dt.toComp = s),
              (dt.fromComp = rt),
              (dt.sampleImage = nt),
              (dt.sourceRectAtTime = it.sourceRectAtTime.bind(it)),
              (dt._elem = it),
              (at = TransformExpressionInterface(it.finalTransform.mProp));
            var ht = getDescriptor(at, "anchorPoint");
            return (
              Object.defineProperties(dt, {
                hasParent: {
                  get: function () {
                    return it.hierarchy.length;
                  },
                },
                parent: {
                  get: function () {
                    return it.hierarchy[0].layerInterface;
                  },
                },
                rotation: getDescriptor(at, "rotation"),
                scale: getDescriptor(at, "scale"),
                position: getDescriptor(at, "position"),
                opacity: getDescriptor(at, "opacity"),
                anchorPoint: ht,
                anchor_point: ht,
                transform: {
                  get: function () {
                    return at;
                  },
                },
                active: {
                  get: function () {
                    return it.isInRange;
                  },
                },
              }),
              (dt.startTime = it.data.st),
              (dt.index = it.data.ind),
              (dt.source = it.data.refId),
              (dt.height = it.data.ty === 0 ? it.data.h : 100),
              (dt.width = it.data.ty === 0 ? it.data.w : 100),
              (dt.inPoint = it.data.ip / it.comp.globalData.frameRate),
              (dt.outPoint = it.data.op / it.comp.globalData.frameRate),
              (dt._name = it.data.nm),
              (dt.registerMaskInterface = st),
              (dt.registerEffectsInterface = ot),
              dt
            );
          };
        })(),
        propertyGroupFactory = (function () {
          return function (a, o) {
            return function (s) {
              return (s = s === void 0 ? 1 : s), s <= 0 ? a : o(s - 1);
            };
          };
        })(),
        PropertyInterface = (function () {
          return function (a, o) {
            var s = { _name: a };
            function _($) {
              return ($ = $ === void 0 ? 1 : $), $ <= 0 ? s : o($ - 1);
            }
            return _;
          };
        })(),
        EffectsExpressionInterface = (function () {
          var a = { createEffectsInterface: o };
          function o($, et) {
            if ($.effectsManager) {
              var tt = [],
                rt = $.data.ef,
                nt,
                it = $.effectsManager.effectElements.length;
              for (nt = 0; nt < it; nt += 1)
                tt.push(s(rt[nt], $.effectsManager.effectElements[nt], et, $));
              var at = $.data.ef || [],
                st = function (dt) {
                  for (nt = 0, it = at.length; nt < it; ) {
                    if (
                      dt === at[nt].nm ||
                      dt === at[nt].mn ||
                      dt === at[nt].ix
                    )
                      return tt[nt];
                    nt += 1;
                  }
                  return null;
                };
              return (
                Object.defineProperty(st, "numProperties", {
                  get: function () {
                    return at.length;
                  },
                }),
                st
              );
            }
            return null;
          }
          function s($, et, tt, rt) {
            function nt(dt) {
              for (var ht = $.ef, ft = 0, mt = ht.length; ft < mt; ) {
                if (dt === ht[ft].nm || dt === ht[ft].mn || dt === ht[ft].ix)
                  return ht[ft].ty === 5 ? at[ft] : at[ft]();
                ft += 1;
              }
              throw new Error();
            }
            var it = propertyGroupFactory(nt, tt),
              at = [],
              st,
              ot = $.ef.length;
            for (st = 0; st < ot; st += 1)
              $.ef[st].ty === 5
                ? at.push(
                    s(
                      $.ef[st],
                      et.effectElements[st],
                      et.effectElements[st].propertyGroup,
                      rt
                    )
                  )
                : at.push(_(et.effectElements[st], $.ef[st].ty, rt, it));
            return (
              $.mn === "ADBE Color Control" &&
                Object.defineProperty(nt, "color", {
                  get: function () {
                    return at[0]();
                  },
                }),
              Object.defineProperties(nt, {
                numProperties: {
                  get: function () {
                    return $.np;
                  },
                },
                _name: { value: $.nm },
                propertyGroup: { value: it },
              }),
              (nt.enabled = $.en !== 0),
              (nt.active = nt.enabled),
              nt
            );
          }
          function _($, et, tt, rt) {
            var nt = ExpressionPropertyInterface($.p);
            function it() {
              return et === 10 ? tt.comp.compInterface($.p.v) : nt();
            }
            return (
              $.p.setGroupProperty &&
                $.p.setGroupProperty(PropertyInterface("", rt)),
              it
            );
          }
          return a;
        })(),
        ShapePathInterface = (function () {
          return function (o, s, _) {
            var $ = s.sh;
            function et(rt) {
              return rt === "Shape" ||
                rt === "shape" ||
                rt === "Path" ||
                rt === "path" ||
                rt === "ADBE Vector Shape" ||
                rt === 2
                ? et.path
                : null;
            }
            var tt = propertyGroupFactory(et, _);
            return (
              $.setGroupProperty(PropertyInterface("Path", tt)),
              Object.defineProperties(et, {
                path: {
                  get: function () {
                    return $.k && $.getValue(), $;
                  },
                },
                shape: {
                  get: function () {
                    return $.k && $.getValue(), $;
                  },
                },
                _name: { value: o.nm },
                ix: { value: o.ix },
                propertyIndex: { value: o.ix },
                mn: { value: o.mn },
                propertyGroup: { value: _ },
              }),
              et
            );
          };
        })(),
        ShapeExpressionInterface = (function () {
          function a(ht, ft, mt) {
            var ut = [],
              lt,
              ct = ht ? ht.length : 0;
            for (lt = 0; lt < ct; lt += 1)
              ht[lt].ty === "gr"
                ? ut.push(s(ht[lt], ft[lt], mt))
                : ht[lt].ty === "fl"
                ? ut.push(_(ht[lt], ft[lt], mt))
                : ht[lt].ty === "st"
                ? ut.push(tt(ht[lt], ft[lt], mt))
                : ht[lt].ty === "tm"
                ? ut.push(rt(ht[lt], ft[lt], mt))
                : ht[lt].ty === "tr" ||
                  (ht[lt].ty === "el"
                    ? ut.push(it(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "sr"
                    ? ut.push(at(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "sh"
                    ? ut.push(ShapePathInterface(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "rc"
                    ? ut.push(st(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "rd"
                    ? ut.push(ot(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "rp"
                    ? ut.push(dt(ht[lt], ft[lt], mt))
                    : ht[lt].ty === "gf"
                    ? ut.push($(ht[lt], ft[lt], mt))
                    : ut.push(et(ht[lt], ft[lt])));
            return ut;
          }
          function o(ht, ft, mt) {
            var ut,
              lt = function (vt) {
                for (var xt = 0, bt = ut.length; xt < bt; ) {
                  if (
                    ut[xt]._name === vt ||
                    ut[xt].mn === vt ||
                    ut[xt].propertyIndex === vt ||
                    ut[xt].ix === vt ||
                    ut[xt].ind === vt
                  )
                    return ut[xt];
                  xt += 1;
                }
                return typeof vt == "number" ? ut[vt - 1] : null;
              };
            (lt.propertyGroup = propertyGroupFactory(lt, mt)),
              (ut = a(ht.it, ft.it, lt.propertyGroup)),
              (lt.numProperties = ut.length);
            var ct = nt(
              ht.it[ht.it.length - 1],
              ft.it[ft.it.length - 1],
              lt.propertyGroup
            );
            return (
              (lt.transform = ct),
              (lt.propertyIndex = ht.cix),
              (lt._name = ht.nm),
              lt
            );
          }
          function s(ht, ft, mt) {
            var ut = function (vt) {
              switch (vt) {
                case "ADBE Vectors Group":
                case "Contents":
                case 2:
                  return ut.content;
                default:
                  return ut.transform;
              }
            };
            ut.propertyGroup = propertyGroupFactory(ut, mt);
            var lt = o(ht, ft, ut.propertyGroup),
              ct = nt(
                ht.it[ht.it.length - 1],
                ft.it[ft.it.length - 1],
                ut.propertyGroup
              );
            return (
              (ut.content = lt),
              (ut.transform = ct),
              Object.defineProperty(ut, "_name", {
                get: function () {
                  return ht.nm;
                },
              }),
              (ut.numProperties = ht.np),
              (ut.propertyIndex = ht.ix),
              (ut.nm = ht.nm),
              (ut.mn = ht.mn),
              ut
            );
          }
          function _(ht, ft, mt) {
            function ut(lt) {
              return lt === "Color" || lt === "color"
                ? ut.color
                : lt === "Opacity" || lt === "opacity"
                ? ut.opacity
                : null;
            }
            return (
              Object.defineProperties(ut, {
                color: { get: ExpressionPropertyInterface(ft.c) },
                opacity: { get: ExpressionPropertyInterface(ft.o) },
                _name: { value: ht.nm },
                mn: { value: ht.mn },
              }),
              ft.c.setGroupProperty(PropertyInterface("Color", mt)),
              ft.o.setGroupProperty(PropertyInterface("Opacity", mt)),
              ut
            );
          }
          function $(ht, ft, mt) {
            function ut(lt) {
              return lt === "Start Point" || lt === "start point"
                ? ut.startPoint
                : lt === "End Point" || lt === "end point"
                ? ut.endPoint
                : lt === "Opacity" || lt === "opacity"
                ? ut.opacity
                : null;
            }
            return (
              Object.defineProperties(ut, {
                startPoint: { get: ExpressionPropertyInterface(ft.s) },
                endPoint: { get: ExpressionPropertyInterface(ft.e) },
                opacity: { get: ExpressionPropertyInterface(ft.o) },
                type: {
                  get: function () {
                    return "a";
                  },
                },
                _name: { value: ht.nm },
                mn: { value: ht.mn },
              }),
              ft.s.setGroupProperty(PropertyInterface("Start Point", mt)),
              ft.e.setGroupProperty(PropertyInterface("End Point", mt)),
              ft.o.setGroupProperty(PropertyInterface("Opacity", mt)),
              ut
            );
          }
          function et() {
            function ht() {
              return null;
            }
            return ht;
          }
          function tt(ht, ft, mt) {
            var ut = propertyGroupFactory(bt, mt),
              lt = propertyGroupFactory(xt, ut);
            function ct(St) {
              Object.defineProperty(xt, ht.d[St].nm, {
                get: ExpressionPropertyInterface(ft.d.dataProps[St].p),
              });
            }
            var pt,
              vt = ht.d ? ht.d.length : 0,
              xt = {};
            for (pt = 0; pt < vt; pt += 1)
              ct(pt), ft.d.dataProps[pt].p.setGroupProperty(lt);
            function bt(St) {
              return St === "Color" || St === "color"
                ? bt.color
                : St === "Opacity" || St === "opacity"
                ? bt.opacity
                : St === "Stroke Width" || St === "stroke width"
                ? bt.strokeWidth
                : null;
            }
            return (
              Object.defineProperties(bt, {
                color: { get: ExpressionPropertyInterface(ft.c) },
                opacity: { get: ExpressionPropertyInterface(ft.o) },
                strokeWidth: { get: ExpressionPropertyInterface(ft.w) },
                dash: {
                  get: function () {
                    return xt;
                  },
                },
                _name: { value: ht.nm },
                mn: { value: ht.mn },
              }),
              ft.c.setGroupProperty(PropertyInterface("Color", ut)),
              ft.o.setGroupProperty(PropertyInterface("Opacity", ut)),
              ft.w.setGroupProperty(PropertyInterface("Stroke Width", ut)),
              bt
            );
          }
          function rt(ht, ft, mt) {
            function ut(ct) {
              return ct === ht.e.ix || ct === "End" || ct === "end"
                ? ut.end
                : ct === ht.s.ix
                ? ut.start
                : ct === ht.o.ix
                ? ut.offset
                : null;
            }
            var lt = propertyGroupFactory(ut, mt);
            return (
              (ut.propertyIndex = ht.ix),
              ft.s.setGroupProperty(PropertyInterface("Start", lt)),
              ft.e.setGroupProperty(PropertyInterface("End", lt)),
              ft.o.setGroupProperty(PropertyInterface("Offset", lt)),
              (ut.propertyIndex = ht.ix),
              (ut.propertyGroup = mt),
              Object.defineProperties(ut, {
                start: { get: ExpressionPropertyInterface(ft.s) },
                end: { get: ExpressionPropertyInterface(ft.e) },
                offset: { get: ExpressionPropertyInterface(ft.o) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          function nt(ht, ft, mt) {
            function ut(ct) {
              return ht.a.ix === ct || ct === "Anchor Point"
                ? ut.anchorPoint
                : ht.o.ix === ct || ct === "Opacity"
                ? ut.opacity
                : ht.p.ix === ct || ct === "Position"
                ? ut.position
                : ht.r.ix === ct ||
                  ct === "Rotation" ||
                  ct === "ADBE Vector Rotation"
                ? ut.rotation
                : ht.s.ix === ct || ct === "Scale"
                ? ut.scale
                : (ht.sk && ht.sk.ix === ct) || ct === "Skew"
                ? ut.skew
                : (ht.sa && ht.sa.ix === ct) || ct === "Skew Axis"
                ? ut.skewAxis
                : null;
            }
            var lt = propertyGroupFactory(ut, mt);
            return (
              ft.transform.mProps.o.setGroupProperty(
                PropertyInterface("Opacity", lt)
              ),
              ft.transform.mProps.p.setGroupProperty(
                PropertyInterface("Position", lt)
              ),
              ft.transform.mProps.a.setGroupProperty(
                PropertyInterface("Anchor Point", lt)
              ),
              ft.transform.mProps.s.setGroupProperty(
                PropertyInterface("Scale", lt)
              ),
              ft.transform.mProps.r.setGroupProperty(
                PropertyInterface("Rotation", lt)
              ),
              ft.transform.mProps.sk &&
                (ft.transform.mProps.sk.setGroupProperty(
                  PropertyInterface("Skew", lt)
                ),
                ft.transform.mProps.sa.setGroupProperty(
                  PropertyInterface("Skew Angle", lt)
                )),
              ft.transform.op.setGroupProperty(
                PropertyInterface("Opacity", lt)
              ),
              Object.defineProperties(ut, {
                opacity: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.o),
                },
                position: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.p),
                },
                anchorPoint: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.a),
                },
                scale: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.s),
                },
                rotation: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.r),
                },
                skew: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.sk),
                },
                skewAxis: {
                  get: ExpressionPropertyInterface(ft.transform.mProps.sa),
                },
                _name: { value: ht.nm },
              }),
              (ut.ty = "tr"),
              (ut.mn = ht.mn),
              (ut.propertyGroup = mt),
              ut
            );
          }
          function it(ht, ft, mt) {
            function ut(pt) {
              return ht.p.ix === pt
                ? ut.position
                : ht.s.ix === pt
                ? ut.size
                : null;
            }
            var lt = propertyGroupFactory(ut, mt);
            ut.propertyIndex = ht.ix;
            var ct = ft.sh.ty === "tm" ? ft.sh.prop : ft.sh;
            return (
              ct.s.setGroupProperty(PropertyInterface("Size", lt)),
              ct.p.setGroupProperty(PropertyInterface("Position", lt)),
              Object.defineProperties(ut, {
                size: { get: ExpressionPropertyInterface(ct.s) },
                position: { get: ExpressionPropertyInterface(ct.p) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          function at(ht, ft, mt) {
            function ut(pt) {
              return ht.p.ix === pt
                ? ut.position
                : ht.r.ix === pt
                ? ut.rotation
                : ht.pt.ix === pt
                ? ut.points
                : ht.or.ix === pt || pt === "ADBE Vector Star Outer Radius"
                ? ut.outerRadius
                : ht.os.ix === pt
                ? ut.outerRoundness
                : ht.ir &&
                  (ht.ir.ix === pt || pt === "ADBE Vector Star Inner Radius")
                ? ut.innerRadius
                : ht.is && ht.is.ix === pt
                ? ut.innerRoundness
                : null;
            }
            var lt = propertyGroupFactory(ut, mt),
              ct = ft.sh.ty === "tm" ? ft.sh.prop : ft.sh;
            return (
              (ut.propertyIndex = ht.ix),
              ct.or.setGroupProperty(PropertyInterface("Outer Radius", lt)),
              ct.os.setGroupProperty(PropertyInterface("Outer Roundness", lt)),
              ct.pt.setGroupProperty(PropertyInterface("Points", lt)),
              ct.p.setGroupProperty(PropertyInterface("Position", lt)),
              ct.r.setGroupProperty(PropertyInterface("Rotation", lt)),
              ht.ir &&
                (ct.ir.setGroupProperty(PropertyInterface("Inner Radius", lt)),
                ct.is.setGroupProperty(
                  PropertyInterface("Inner Roundness", lt)
                )),
              Object.defineProperties(ut, {
                position: { get: ExpressionPropertyInterface(ct.p) },
                rotation: { get: ExpressionPropertyInterface(ct.r) },
                points: { get: ExpressionPropertyInterface(ct.pt) },
                outerRadius: { get: ExpressionPropertyInterface(ct.or) },
                outerRoundness: { get: ExpressionPropertyInterface(ct.os) },
                innerRadius: { get: ExpressionPropertyInterface(ct.ir) },
                innerRoundness: { get: ExpressionPropertyInterface(ct.is) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          function st(ht, ft, mt) {
            function ut(pt) {
              return ht.p.ix === pt
                ? ut.position
                : ht.r.ix === pt
                ? ut.roundness
                : ht.s.ix === pt ||
                  pt === "Size" ||
                  pt === "ADBE Vector Rect Size"
                ? ut.size
                : null;
            }
            var lt = propertyGroupFactory(ut, mt),
              ct = ft.sh.ty === "tm" ? ft.sh.prop : ft.sh;
            return (
              (ut.propertyIndex = ht.ix),
              ct.p.setGroupProperty(PropertyInterface("Position", lt)),
              ct.s.setGroupProperty(PropertyInterface("Size", lt)),
              ct.r.setGroupProperty(PropertyInterface("Rotation", lt)),
              Object.defineProperties(ut, {
                position: { get: ExpressionPropertyInterface(ct.p) },
                roundness: { get: ExpressionPropertyInterface(ct.r) },
                size: { get: ExpressionPropertyInterface(ct.s) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          function ot(ht, ft, mt) {
            function ut(pt) {
              return ht.r.ix === pt || pt === "Round Corners 1"
                ? ut.radius
                : null;
            }
            var lt = propertyGroupFactory(ut, mt),
              ct = ft;
            return (
              (ut.propertyIndex = ht.ix),
              ct.rd.setGroupProperty(PropertyInterface("Radius", lt)),
              Object.defineProperties(ut, {
                radius: { get: ExpressionPropertyInterface(ct.rd) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          function dt(ht, ft, mt) {
            function ut(pt) {
              return ht.c.ix === pt || pt === "Copies"
                ? ut.copies
                : ht.o.ix === pt || pt === "Offset"
                ? ut.offset
                : null;
            }
            var lt = propertyGroupFactory(ut, mt),
              ct = ft;
            return (
              (ut.propertyIndex = ht.ix),
              ct.c.setGroupProperty(PropertyInterface("Copies", lt)),
              ct.o.setGroupProperty(PropertyInterface("Offset", lt)),
              Object.defineProperties(ut, {
                copies: { get: ExpressionPropertyInterface(ct.c) },
                offset: { get: ExpressionPropertyInterface(ct.o) },
                _name: { value: ht.nm },
              }),
              (ut.mn = ht.mn),
              ut
            );
          }
          return function (ht, ft, mt) {
            var ut;
            function lt(pt) {
              if (typeof pt == "number")
                return (
                  (pt = pt === void 0 ? 1 : pt), pt === 0 ? mt : ut[pt - 1]
                );
              for (var vt = 0, xt = ut.length; vt < xt; ) {
                if (ut[vt]._name === pt) return ut[vt];
                vt += 1;
              }
              return null;
            }
            function ct() {
              return mt;
            }
            return (
              (lt.propertyGroup = propertyGroupFactory(lt, ct)),
              (ut = a(ht, ft, lt.propertyGroup)),
              (lt.numProperties = ut.length),
              (lt._name = "Contents"),
              lt
            );
          };
        })(),
        TextExpressionInterface = (function () {
          return function (a) {
            var o;
            function s(_) {
              switch (_) {
                case "ADBE Text Document":
                  return s.sourceText;
                default:
                  return null;
              }
            }
            return (
              Object.defineProperty(s, "sourceText", {
                get: function () {
                  a.textProperty.getValue();
                  var $ = a.textProperty.currentData.t;
                  return (
                    (!o || $ !== o.value) &&
                      ((o = new String($)),
                      (o.value = $ || new String($)),
                      Object.defineProperty(o, "style", {
                        get: function () {
                          return { fillColor: a.textProperty.currentData.fc };
                        },
                      })),
                    o
                  );
                },
              }),
              s
            );
          };
        })();
      function _typeof(a) {
        "@babel/helpers - typeof";
        return (
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? (_typeof = function (s) {
                return typeof s;
              })
            : (_typeof = function (s) {
                return s &&
                  typeof Symbol == "function" &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              }),
          _typeof(a)
        );
      }
      var FootageInterface = (function () {
          var a = function (_) {
              var $ = "",
                et = _.getFootageData();
              function tt() {
                return ($ = ""), (et = _.getFootageData()), rt;
              }
              function rt(nt) {
                if (et[nt])
                  return (
                    ($ = nt), (et = et[nt]), _typeof(et) === "object" ? rt : et
                  );
                var it = nt.indexOf($);
                if (it !== -1) {
                  var at = parseInt(nt.substr(it + $.length), 10);
                  return (et = et[at]), _typeof(et) === "object" ? rt : et;
                }
                return "";
              }
              return tt;
            },
            o = function (_) {
              function $(et) {
                return et === "Outline" ? $.outlineInterface() : null;
              }
              return ($._name = "Outline"), ($.outlineInterface = a(_)), $;
            };
          return function (s) {
            function _($) {
              return $ === "Data" ? _.dataInterface : null;
            }
            return (_._name = "Data"), (_.dataInterface = o(s)), _;
          };
        })(),
        interfaces = {
          layer: LayerExpressionInterface,
          effects: EffectsExpressionInterface,
          comp: CompExpressionInterface,
          shape: ShapeExpressionInterface,
          text: TextExpressionInterface,
          footage: FootageInterface,
        };
      function getInterface(a) {
        return interfaces[a] || null;
      }
      var expressionHelpers = (function () {
        function a(tt, rt, nt) {
          rt.x &&
            ((nt.k = !0),
            (nt.x = !0),
            (nt.initiateExpression = ExpressionManager.initiateExpression),
            nt.effectsSequence.push(
              nt.initiateExpression(tt, rt, nt).bind(nt)
            ));
        }
        function o(tt) {
          return (
            (tt *= this.elem.globalData.frameRate),
            (tt -= this.offsetTime),
            tt !== this._cachingAtTime.lastFrame &&
              ((this._cachingAtTime.lastIndex =
                this._cachingAtTime.lastFrame < tt
                  ? this._cachingAtTime.lastIndex
                  : 0),
              (this._cachingAtTime.value = this.interpolateValue(
                tt,
                this._cachingAtTime
              )),
              (this._cachingAtTime.lastFrame = tt)),
            this._cachingAtTime.value
          );
        }
        function s(tt) {
          var rt = -0.01,
            nt = this.getValueAtTime(tt),
            it = this.getValueAtTime(tt + rt),
            at = 0;
          if (nt.length) {
            var st;
            for (st = 0; st < nt.length; st += 1)
              at += Math.pow(it[st] - nt[st], 2);
            at = Math.sqrt(at) * 100;
          } else at = 0;
          return at;
        }
        function _(tt) {
          if (this.vel !== void 0) return this.vel;
          var rt = -0.001,
            nt = this.getValueAtTime(tt),
            it = this.getValueAtTime(tt + rt),
            at;
          if (nt.length) {
            at = createTypedArray("float32", nt.length);
            var st;
            for (st = 0; st < nt.length; st += 1)
              at[st] = (it[st] - nt[st]) / rt;
          } else at = (it - nt) / rt;
          return at;
        }
        function $() {
          return this.pv;
        }
        function et(tt) {
          this.propertyGroup = tt;
        }
        return {
          searchExpressions: a,
          getSpeedAtTime: s,
          getVelocityAtTime: _,
          getValueAtTime: o,
          getStaticValueAtTime: $,
          setGroupProperty: et,
        };
      })();
      function addPropertyDecorator() {
        function a(ot, dt, ht) {
          if (!this.k || !this.keyframes) return this.pv;
          ot = ot ? ot.toLowerCase() : "";
          var ft = this.comp.renderedFrame,
            mt = this.keyframes,
            ut = mt[mt.length - 1].t;
          if (ft <= ut) return this.pv;
          var lt, ct;
          ht
            ? (dt
                ? (lt = Math.abs(ut - this.elem.comp.globalData.frameRate * dt))
                : (lt = Math.max(0, ut - this.elem.data.ip)),
              (ct = ut - lt))
            : ((!dt || dt > mt.length - 1) && (dt = mt.length - 1),
              (ct = mt[mt.length - 1 - dt].t),
              (lt = ut - ct));
          var pt, vt, xt;
          if (ot === "pingpong") {
            var bt = Math.floor((ft - ct) / lt);
            if (bt % 2 !== 0)
              return this.getValueAtTime(
                (lt - ((ft - ct) % lt) + ct) / this.comp.globalData.frameRate,
                0
              );
          } else if (ot === "offset") {
            var St = this.getValueAtTime(
                ct / this.comp.globalData.frameRate,
                0
              ),
              Pt = this.getValueAtTime(ut / this.comp.globalData.frameRate, 0),
              Mt = this.getValueAtTime(
                (((ft - ct) % lt) + ct) / this.comp.globalData.frameRate,
                0
              ),
              It = Math.floor((ft - ct) / lt);
            if (this.pv.length) {
              for (
                xt = new Array(St.length), vt = xt.length, pt = 0;
                pt < vt;
                pt += 1
              )
                xt[pt] = (Pt[pt] - St[pt]) * It + Mt[pt];
              return xt;
            }
            return (Pt - St) * It + Mt;
          } else if (ot === "continue") {
            var Rt = this.getValueAtTime(
                ut / this.comp.globalData.frameRate,
                0
              ),
              jt = this.getValueAtTime(
                (ut - 0.001) / this.comp.globalData.frameRate,
                0
              );
            if (this.pv.length) {
              for (
                xt = new Array(Rt.length), vt = xt.length, pt = 0;
                pt < vt;
                pt += 1
              )
                xt[pt] =
                  Rt[pt] +
                  ((Rt[pt] - jt[pt]) *
                    ((ft - ut) / this.comp.globalData.frameRate)) /
                    5e-4;
              return xt;
            }
            return Rt + (Rt - jt) * ((ft - ut) / 0.001);
          }
          return this.getValueAtTime(
            (((ft - ct) % lt) + ct) / this.comp.globalData.frameRate,
            0
          );
        }
        function o(ot, dt, ht) {
          if (!this.k) return this.pv;
          ot = ot ? ot.toLowerCase() : "";
          var ft = this.comp.renderedFrame,
            mt = this.keyframes,
            ut = mt[0].t;
          if (ft >= ut) return this.pv;
          var lt, ct;
          ht
            ? (dt
                ? (lt = Math.abs(this.elem.comp.globalData.frameRate * dt))
                : (lt = Math.max(0, this.elem.data.op - ut)),
              (ct = ut + lt))
            : ((!dt || dt > mt.length - 1) && (dt = mt.length - 1),
              (ct = mt[dt].t),
              (lt = ct - ut));
          var pt, vt, xt;
          if (ot === "pingpong") {
            var bt = Math.floor((ut - ft) / lt);
            if (bt % 2 === 0)
              return this.getValueAtTime(
                (((ut - ft) % lt) + ut) / this.comp.globalData.frameRate,
                0
              );
          } else if (ot === "offset") {
            var St = this.getValueAtTime(
                ut / this.comp.globalData.frameRate,
                0
              ),
              Pt = this.getValueAtTime(ct / this.comp.globalData.frameRate, 0),
              Mt = this.getValueAtTime(
                (lt - ((ut - ft) % lt) + ut) / this.comp.globalData.frameRate,
                0
              ),
              It = Math.floor((ut - ft) / lt) + 1;
            if (this.pv.length) {
              for (
                xt = new Array(St.length), vt = xt.length, pt = 0;
                pt < vt;
                pt += 1
              )
                xt[pt] = Mt[pt] - (Pt[pt] - St[pt]) * It;
              return xt;
            }
            return Mt - (Pt - St) * It;
          } else if (ot === "continue") {
            var Rt = this.getValueAtTime(
                ut / this.comp.globalData.frameRate,
                0
              ),
              jt = this.getValueAtTime(
                (ut + 0.001) / this.comp.globalData.frameRate,
                0
              );
            if (this.pv.length) {
              for (
                xt = new Array(Rt.length), vt = xt.length, pt = 0;
                pt < vt;
                pt += 1
              )
                xt[pt] = Rt[pt] + ((Rt[pt] - jt[pt]) * (ut - ft)) / 0.001;
              return xt;
            }
            return Rt + ((Rt - jt) * (ut - ft)) / 0.001;
          }
          return this.getValueAtTime(
            (lt - (((ut - ft) % lt) + ut)) / this.comp.globalData.frameRate,
            0
          );
        }
        function s(ot, dt) {
          if (!this.k) return this.pv;
          if (((ot = (ot || 0.4) * 0.5), (dt = Math.floor(dt || 5)), dt <= 1))
            return this.pv;
          var ht = this.comp.renderedFrame / this.comp.globalData.frameRate,
            ft = ht - ot,
            mt = ht + ot,
            ut = dt > 1 ? (mt - ft) / (dt - 1) : 1,
            lt = 0,
            ct = 0,
            pt;
          this.pv.length
            ? (pt = createTypedArray("float32", this.pv.length))
            : (pt = 0);
          for (var vt; lt < dt; ) {
            if (((vt = this.getValueAtTime(ft + lt * ut)), this.pv.length))
              for (ct = 0; ct < this.pv.length; ct += 1) pt[ct] += vt[ct];
            else pt += vt;
            lt += 1;
          }
          if (this.pv.length)
            for (ct = 0; ct < this.pv.length; ct += 1) pt[ct] /= dt;
          else pt /= dt;
          return pt;
        }
        function _(ot) {
          this._transformCachingAtTime ||
            (this._transformCachingAtTime = { v: new Matrix() });
          var dt = this._transformCachingAtTime.v;
          if (
            (dt.cloneFromProps(this.pre.props), this.appliedTransformations < 1)
          ) {
            var ht = this.a.getValueAtTime(ot);
            dt.translate(
              -ht[0] * this.a.mult,
              -ht[1] * this.a.mult,
              ht[2] * this.a.mult
            );
          }
          if (this.appliedTransformations < 2) {
            var ft = this.s.getValueAtTime(ot);
            dt.scale(
              ft[0] * this.s.mult,
              ft[1] * this.s.mult,
              ft[2] * this.s.mult
            );
          }
          if (this.sk && this.appliedTransformations < 3) {
            var mt = this.sk.getValueAtTime(ot),
              ut = this.sa.getValueAtTime(ot);
            dt.skewFromAxis(-mt * this.sk.mult, ut * this.sa.mult);
          }
          if (this.r && this.appliedTransformations < 4) {
            var lt = this.r.getValueAtTime(ot);
            dt.rotate(-lt * this.r.mult);
          } else if (!this.r && this.appliedTransformations < 4) {
            var ct = this.rz.getValueAtTime(ot),
              pt = this.ry.getValueAtTime(ot),
              vt = this.rx.getValueAtTime(ot),
              xt = this.or.getValueAtTime(ot);
            dt.rotateZ(-ct * this.rz.mult)
              .rotateY(pt * this.ry.mult)
              .rotateX(vt * this.rx.mult)
              .rotateZ(-xt[2] * this.or.mult)
              .rotateY(xt[1] * this.or.mult)
              .rotateX(xt[0] * this.or.mult);
          }
          if (this.data.p && this.data.p.s) {
            var bt = this.px.getValueAtTime(ot),
              St = this.py.getValueAtTime(ot);
            if (this.data.p.z) {
              var Pt = this.pz.getValueAtTime(ot);
              dt.translate(
                bt * this.px.mult,
                St * this.py.mult,
                -Pt * this.pz.mult
              );
            } else dt.translate(bt * this.px.mult, St * this.py.mult, 0);
          } else {
            var Mt = this.p.getValueAtTime(ot);
            dt.translate(
              Mt[0] * this.p.mult,
              Mt[1] * this.p.mult,
              -Mt[2] * this.p.mult
            );
          }
          return dt;
        }
        function $() {
          return this.v.clone(new Matrix());
        }
        var et = TransformPropertyFactory.getTransformProperty;
        TransformPropertyFactory.getTransformProperty = function (ot, dt, ht) {
          var ft = et(ot, dt, ht);
          return (
            ft.dynamicProperties.length
              ? (ft.getValueAtTime = _.bind(ft))
              : (ft.getValueAtTime = $.bind(ft)),
            (ft.setGroupProperty = expressionHelpers.setGroupProperty),
            ft
          );
        };
        var tt = PropertyFactory.getProp;
        PropertyFactory.getProp = function (ot, dt, ht, ft, mt) {
          var ut = tt(ot, dt, ht, ft, mt);
          ut.kf
            ? (ut.getValueAtTime = expressionHelpers.getValueAtTime.bind(ut))
            : (ut.getValueAtTime =
                expressionHelpers.getStaticValueAtTime.bind(ut)),
            (ut.setGroupProperty = expressionHelpers.setGroupProperty),
            (ut.loopOut = a),
            (ut.loopIn = o),
            (ut.smooth = s),
            (ut.getVelocityAtTime =
              expressionHelpers.getVelocityAtTime.bind(ut)),
            (ut.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(ut)),
            (ut.numKeys = dt.a === 1 ? dt.k.length : 0),
            (ut.propertyIndex = dt.ix);
          var lt = 0;
          return (
            ht !== 0 &&
              (lt = createTypedArray(
                "float32",
                dt.a === 1 ? dt.k[0].s.length : dt.k.length
              )),
            (ut._cachingAtTime = {
              lastFrame: initialDefaultFrame,
              lastIndex: 0,
              value: lt,
            }),
            expressionHelpers.searchExpressions(ot, dt, ut),
            ut.k && mt.addDynamicProperty(ut),
            ut
          );
        };
        function rt(ot) {
          return (
            this._cachingAtTime ||
              (this._cachingAtTime = {
                shapeValue: shapePool.clone(this.pv),
                lastIndex: 0,
                lastTime: initialDefaultFrame,
              }),
            (ot *= this.elem.globalData.frameRate),
            (ot -= this.offsetTime),
            ot !== this._cachingAtTime.lastTime &&
              ((this._cachingAtTime.lastIndex =
                this._cachingAtTime.lastTime < ot
                  ? this._caching.lastIndex
                  : 0),
              (this._cachingAtTime.lastTime = ot),
              this.interpolateShape(
                ot,
                this._cachingAtTime.shapeValue,
                this._cachingAtTime
              )),
            this._cachingAtTime.shapeValue
          );
        }
        var nt = ShapePropertyFactory.getConstructorFunction(),
          it = ShapePropertyFactory.getKeyframedConstructorFunction();
        function at() {}
        (at.prototype = {
          vertices: function (dt, ht) {
            this.k && this.getValue();
            var ft = this.v;
            ht !== void 0 && (ft = this.getValueAtTime(ht, 0));
            var mt,
              ut = ft._length,
              lt = ft[dt],
              ct = ft.v,
              pt = createSizedArray(ut);
            for (mt = 0; mt < ut; mt += 1)
              dt === "i" || dt === "o"
                ? (pt[mt] = [lt[mt][0] - ct[mt][0], lt[mt][1] - ct[mt][1]])
                : (pt[mt] = [lt[mt][0], lt[mt][1]]);
            return pt;
          },
          points: function (dt) {
            return this.vertices("v", dt);
          },
          inTangents: function (dt) {
            return this.vertices("i", dt);
          },
          outTangents: function (dt) {
            return this.vertices("o", dt);
          },
          isClosed: function () {
            return this.v.c;
          },
          pointOnPath: function (dt, ht) {
            var ft = this.v;
            ht !== void 0 && (ft = this.getValueAtTime(ht, 0)),
              this._segmentsLength ||
                (this._segmentsLength = bez.getSegmentsLength(ft));
            for (
              var mt = this._segmentsLength,
                ut = mt.lengths,
                lt = mt.totalLength * dt,
                ct = 0,
                pt = ut.length,
                vt = 0,
                xt;
              ct < pt;

            ) {
              if (vt + ut[ct].addedLength > lt) {
                var bt = ct,
                  St = ft.c && ct === pt - 1 ? 0 : ct + 1,
                  Pt = (lt - vt) / ut[ct].addedLength;
                xt = bez.getPointInSegment(
                  ft.v[bt],
                  ft.v[St],
                  ft.o[bt],
                  ft.i[St],
                  Pt,
                  ut[ct]
                );
                break;
              } else vt += ut[ct].addedLength;
              ct += 1;
            }
            return (
              xt ||
                (xt = ft.c
                  ? [ft.v[0][0], ft.v[0][1]]
                  : [ft.v[ft._length - 1][0], ft.v[ft._length - 1][1]]),
              xt
            );
          },
          vectorOnPath: function (dt, ht, ft) {
            dt == 1 ? (dt = this.v.c) : dt == 0 && (dt = 0.999);
            var mt = this.pointOnPath(dt, ht),
              ut = this.pointOnPath(dt + 0.001, ht),
              lt = ut[0] - mt[0],
              ct = ut[1] - mt[1],
              pt = Math.sqrt(Math.pow(lt, 2) + Math.pow(ct, 2));
            if (pt === 0) return [0, 0];
            var vt =
              ft === "tangent" ? [lt / pt, ct / pt] : [-ct / pt, lt / pt];
            return vt;
          },
          tangentOnPath: function (dt, ht) {
            return this.vectorOnPath(dt, ht, "tangent");
          },
          normalOnPath: function (dt, ht) {
            return this.vectorOnPath(dt, ht, "normal");
          },
          setGroupProperty: expressionHelpers.setGroupProperty,
          getValueAtTime: expressionHelpers.getStaticValueAtTime,
        }),
          extendPrototype([at], nt),
          extendPrototype([at], it),
          (it.prototype.getValueAtTime = rt),
          (it.prototype.initiateExpression =
            ExpressionManager.initiateExpression);
        var st = ShapePropertyFactory.getShapeProp;
        ShapePropertyFactory.getShapeProp = function (ot, dt, ht, ft, mt) {
          var ut = st(ot, dt, ht, ft, mt);
          return (
            (ut.propertyIndex = dt.ix),
            (ut.lock = !1),
            ht === 3
              ? expressionHelpers.searchExpressions(ot, dt.pt, ut)
              : ht === 4 && expressionHelpers.searchExpressions(ot, dt.ks, ut),
            ut.k && ot.addDynamicProperty(ut),
            ut
          );
        };
      }
      function initialize$1() {
        addPropertyDecorator();
      }
      function addDecorator() {
        function a() {
          return this.data.d.x
            ? ((this.calculateExpression =
                ExpressionManager.initiateExpression.bind(this)(
                  this.elem,
                  this.data.d,
                  this
                )),
              this.addEffect(this.getExpressionValue.bind(this)),
              !0)
            : null;
        }
        (TextProperty.prototype.getExpressionValue = function (o, s) {
          var _ = this.calculateExpression(s);
          if (o.t !== _) {
            var $ = {};
            return (
              this.copyData($, o), ($.t = _.toString()), ($.__complete = !1), $
            );
          }
          return o;
        }),
          (TextProperty.prototype.searchProperty = function () {
            var o = this.searchKeyframes(),
              s = this.searchExpressions();
            return (this.kf = o || s), this.kf;
          }),
          (TextProperty.prototype.searchExpressions = a);
      }
      function initialize() {
        addDecorator();
      }
      function SVGComposableEffect() {}
      SVGComposableEffect.prototype = {
        createMergeNode: function a(o, s) {
          var _ = createNS("feMerge");
          _.setAttribute("result", o);
          var $, et;
          for (et = 0; et < s.length; et += 1)
            ($ = createNS("feMergeNode")),
              $.setAttribute("in", s[et]),
              _.appendChild($),
              _.appendChild($);
          return _;
        },
      };
      var linearFilterValue =
        "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
      function SVGTintFilter(a, o, s, _, $) {
        this.filterManager = o;
        var et = createNS("feColorMatrix");
        et.setAttribute("type", "matrix"),
          et.setAttribute("color-interpolation-filters", "linearRGB"),
          et.setAttribute("values", linearFilterValue + " 1 0"),
          (this.linearFilter = et),
          et.setAttribute("result", _ + "_tint_1"),
          a.appendChild(et),
          (et = createNS("feColorMatrix")),
          et.setAttribute("type", "matrix"),
          et.setAttribute("color-interpolation-filters", "sRGB"),
          et.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
          et.setAttribute("result", _ + "_tint_2"),
          a.appendChild(et),
          (this.matrixFilter = et);
        var tt = this.createMergeNode(_, [$, _ + "_tint_1", _ + "_tint_2"]);
        a.appendChild(tt);
      }
      extendPrototype([SVGComposableEffect], SVGTintFilter),
        (SVGTintFilter.prototype.renderFrame = function (a) {
          if (a || this.filterManager._mdf) {
            var o = this.filterManager.effectElements[0].p.v,
              s = this.filterManager.effectElements[1].p.v,
              _ = this.filterManager.effectElements[2].p.v / 100;
            this.linearFilter.setAttribute(
              "values",
              linearFilterValue + " " + _ + " 0"
            ),
              this.matrixFilter.setAttribute(
                "values",
                s[0] -
                  o[0] +
                  " 0 0 0 " +
                  o[0] +
                  " " +
                  (s[1] - o[1]) +
                  " 0 0 0 " +
                  o[1] +
                  " " +
                  (s[2] - o[2]) +
                  " 0 0 0 " +
                  o[2] +
                  " 0 0 0 1 0"
              );
          }
        });
      function SVGFillFilter(a, o, s, _) {
        this.filterManager = o;
        var $ = createNS("feColorMatrix");
        $.setAttribute("type", "matrix"),
          $.setAttribute("color-interpolation-filters", "sRGB"),
          $.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
          $.setAttribute("result", _),
          a.appendChild($),
          (this.matrixFilter = $);
      }
      SVGFillFilter.prototype.renderFrame = function (a) {
        if (a || this.filterManager._mdf) {
          var o = this.filterManager.effectElements[2].p.v,
            s = this.filterManager.effectElements[6].p.v;
          this.matrixFilter.setAttribute(
            "values",
            "0 0 0 0 " +
              o[0] +
              " 0 0 0 0 " +
              o[1] +
              " 0 0 0 0 " +
              o[2] +
              " 0 0 0 " +
              s +
              " 0"
          );
        }
      };
      function SVGStrokeEffect(a, o, s) {
        (this.initialized = !1),
          (this.filterManager = o),
          (this.elem = s),
          (this.paths = []);
      }
      (SVGStrokeEffect.prototype.initialize = function () {
        var a =
            this.elem.layerElement.children ||
            this.elem.layerElement.childNodes,
          o,
          s,
          _,
          $;
        for (
          this.filterManager.effectElements[1].p.v === 1
            ? (($ = this.elem.maskManager.masksProperties.length), (_ = 0))
            : ((_ = this.filterManager.effectElements[0].p.v - 1), ($ = _ + 1)),
            s = createNS("g"),
            s.setAttribute("fill", "none"),
            s.setAttribute("stroke-linecap", "round"),
            s.setAttribute("stroke-dashoffset", 1),
            _;
          _ < $;
          _ += 1
        )
          (o = createNS("path")),
            s.appendChild(o),
            this.paths.push({ p: o, m: _ });
        if (this.filterManager.effectElements[10].p.v === 3) {
          var et = createNS("mask"),
            tt = createElementID();
          et.setAttribute("id", tt),
            et.setAttribute("mask-type", "alpha"),
            et.appendChild(s),
            this.elem.globalData.defs.appendChild(et);
          var rt = createNS("g");
          for (
            rt.setAttribute(
              "mask",
              "url(" + getLocationHref() + "#" + tt + ")"
            );
            a[0];

          )
            rt.appendChild(a[0]);
          this.elem.layerElement.appendChild(rt),
            (this.masker = et),
            s.setAttribute("stroke", "#fff");
        } else if (
          this.filterManager.effectElements[10].p.v === 1 ||
          this.filterManager.effectElements[10].p.v === 2
        ) {
          if (this.filterManager.effectElements[10].p.v === 2)
            for (
              a =
                this.elem.layerElement.children ||
                this.elem.layerElement.childNodes;
              a.length;

            )
              this.elem.layerElement.removeChild(a[0]);
          this.elem.layerElement.appendChild(s),
            this.elem.layerElement.removeAttribute("mask"),
            s.setAttribute("stroke", "#fff");
        }
        (this.initialized = !0), (this.pathMasker = s);
      }),
        (SVGStrokeEffect.prototype.renderFrame = function (a) {
          this.initialized || this.initialize();
          var o,
            s = this.paths.length,
            _,
            $;
          for (o = 0; o < s; o += 1)
            if (
              this.paths[o].m !== -1 &&
              ((_ = this.elem.maskManager.viewData[this.paths[o].m]),
              ($ = this.paths[o].p),
              (a || this.filterManager._mdf || _.prop._mdf) &&
                $.setAttribute("d", _.lastPath),
              a ||
                this.filterManager.effectElements[9].p._mdf ||
                this.filterManager.effectElements[4].p._mdf ||
                this.filterManager.effectElements[7].p._mdf ||
                this.filterManager.effectElements[8].p._mdf ||
                _.prop._mdf)
            ) {
              var et;
              if (
                this.filterManager.effectElements[7].p.v !== 0 ||
                this.filterManager.effectElements[8].p.v !== 100
              ) {
                var tt =
                    Math.min(
                      this.filterManager.effectElements[7].p.v,
                      this.filterManager.effectElements[8].p.v
                    ) * 0.01,
                  rt =
                    Math.max(
                      this.filterManager.effectElements[7].p.v,
                      this.filterManager.effectElements[8].p.v
                    ) * 0.01,
                  nt = $.getTotalLength();
                et = "0 0 0 " + nt * tt + " ";
                var it = nt * (rt - tt),
                  at =
                    1 +
                    this.filterManager.effectElements[4].p.v *
                      2 *
                      this.filterManager.effectElements[9].p.v *
                      0.01,
                  st = Math.floor(it / at),
                  ot;
                for (ot = 0; ot < st; ot += 1)
                  et +=
                    "1 " +
                    this.filterManager.effectElements[4].p.v *
                      2 *
                      this.filterManager.effectElements[9].p.v *
                      0.01 +
                    " ";
                et += "0 " + nt * 10 + " 0 0";
              } else
                et =
                  "1 " +
                  this.filterManager.effectElements[4].p.v *
                    2 *
                    this.filterManager.effectElements[9].p.v *
                    0.01;
              $.setAttribute("stroke-dasharray", et);
            }
          if (
            ((a || this.filterManager.effectElements[4].p._mdf) &&
              this.pathMasker.setAttribute(
                "stroke-width",
                this.filterManager.effectElements[4].p.v * 2
              ),
            (a || this.filterManager.effectElements[6].p._mdf) &&
              this.pathMasker.setAttribute(
                "opacity",
                this.filterManager.effectElements[6].p.v
              ),
            (this.filterManager.effectElements[10].p.v === 1 ||
              this.filterManager.effectElements[10].p.v === 2) &&
              (a || this.filterManager.effectElements[3].p._mdf))
          ) {
            var dt = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute(
              "stroke",
              "rgb(" +
                bmFloor(dt[0] * 255) +
                "," +
                bmFloor(dt[1] * 255) +
                "," +
                bmFloor(dt[2] * 255) +
                ")"
            );
          }
        });
      function SVGTritoneFilter(a, o, s, _) {
        this.filterManager = o;
        var $ = createNS("feColorMatrix");
        $.setAttribute("type", "matrix"),
          $.setAttribute("color-interpolation-filters", "linearRGB"),
          $.setAttribute(
            "values",
            "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"
          ),
          a.appendChild($);
        var et = createNS("feComponentTransfer");
        et.setAttribute("color-interpolation-filters", "sRGB"),
          et.setAttribute("result", _),
          (this.matrixFilter = et);
        var tt = createNS("feFuncR");
        tt.setAttribute("type", "table"),
          et.appendChild(tt),
          (this.feFuncR = tt);
        var rt = createNS("feFuncG");
        rt.setAttribute("type", "table"),
          et.appendChild(rt),
          (this.feFuncG = rt);
        var nt = createNS("feFuncB");
        nt.setAttribute("type", "table"),
          et.appendChild(nt),
          (this.feFuncB = nt),
          a.appendChild(et);
      }
      SVGTritoneFilter.prototype.renderFrame = function (a) {
        if (a || this.filterManager._mdf) {
          var o = this.filterManager.effectElements[0].p.v,
            s = this.filterManager.effectElements[1].p.v,
            _ = this.filterManager.effectElements[2].p.v,
            $ = _[0] + " " + s[0] + " " + o[0],
            et = _[1] + " " + s[1] + " " + o[1],
            tt = _[2] + " " + s[2] + " " + o[2];
          this.feFuncR.setAttribute("tableValues", $),
            this.feFuncG.setAttribute("tableValues", et),
            this.feFuncB.setAttribute("tableValues", tt);
        }
      };
      function SVGProLevelsFilter(a, o, s, _) {
        this.filterManager = o;
        var $ = this.filterManager.effectElements,
          et = createNS("feComponentTransfer");
        ($[10].p.k ||
          $[10].p.v !== 0 ||
          $[11].p.k ||
          $[11].p.v !== 1 ||
          $[12].p.k ||
          $[12].p.v !== 1 ||
          $[13].p.k ||
          $[13].p.v !== 0 ||
          $[14].p.k ||
          $[14].p.v !== 1) &&
          (this.feFuncR = this.createFeFunc("feFuncR", et)),
          ($[17].p.k ||
            $[17].p.v !== 0 ||
            $[18].p.k ||
            $[18].p.v !== 1 ||
            $[19].p.k ||
            $[19].p.v !== 1 ||
            $[20].p.k ||
            $[20].p.v !== 0 ||
            $[21].p.k ||
            $[21].p.v !== 1) &&
            (this.feFuncG = this.createFeFunc("feFuncG", et)),
          ($[24].p.k ||
            $[24].p.v !== 0 ||
            $[25].p.k ||
            $[25].p.v !== 1 ||
            $[26].p.k ||
            $[26].p.v !== 1 ||
            $[27].p.k ||
            $[27].p.v !== 0 ||
            $[28].p.k ||
            $[28].p.v !== 1) &&
            (this.feFuncB = this.createFeFunc("feFuncB", et)),
          ($[31].p.k ||
            $[31].p.v !== 0 ||
            $[32].p.k ||
            $[32].p.v !== 1 ||
            $[33].p.k ||
            $[33].p.v !== 1 ||
            $[34].p.k ||
            $[34].p.v !== 0 ||
            $[35].p.k ||
            $[35].p.v !== 1) &&
            (this.feFuncA = this.createFeFunc("feFuncA", et)),
          (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) &&
            (et.setAttribute("color-interpolation-filters", "sRGB"),
            a.appendChild(et)),
          ($[3].p.k ||
            $[3].p.v !== 0 ||
            $[4].p.k ||
            $[4].p.v !== 1 ||
            $[5].p.k ||
            $[5].p.v !== 1 ||
            $[6].p.k ||
            $[6].p.v !== 0 ||
            $[7].p.k ||
            $[7].p.v !== 1) &&
            ((et = createNS("feComponentTransfer")),
            et.setAttribute("color-interpolation-filters", "sRGB"),
            et.setAttribute("result", _),
            a.appendChild(et),
            (this.feFuncRComposed = this.createFeFunc("feFuncR", et)),
            (this.feFuncGComposed = this.createFeFunc("feFuncG", et)),
            (this.feFuncBComposed = this.createFeFunc("feFuncB", et)));
      }
      (SVGProLevelsFilter.prototype.createFeFunc = function (a, o) {
        var s = createNS(a);
        return s.setAttribute("type", "table"), o.appendChild(s), s;
      }),
        (SVGProLevelsFilter.prototype.getTableValue = function (a, o, s, _, $) {
          for (
            var et = 0,
              tt = 256,
              rt,
              nt = Math.min(a, o),
              it = Math.max(a, o),
              at = Array.call(null, { length: tt }),
              st,
              ot = 0,
              dt = $ - _,
              ht = o - a;
            et <= 256;

          )
            (rt = et / 256),
              rt <= nt
                ? (st = ht < 0 ? $ : _)
                : rt >= it
                ? (st = ht < 0 ? _ : $)
                : (st = _ + dt * Math.pow((rt - a) / ht, 1 / s)),
              (at[ot] = st),
              (ot += 1),
              (et += 256 / (tt - 1));
          return at.join(" ");
        }),
        (SVGProLevelsFilter.prototype.renderFrame = function (a) {
          if (a || this.filterManager._mdf) {
            var o,
              s = this.filterManager.effectElements;
            this.feFuncRComposed &&
              (a ||
                s[3].p._mdf ||
                s[4].p._mdf ||
                s[5].p._mdf ||
                s[6].p._mdf ||
                s[7].p._mdf) &&
              ((o = this.getTableValue(
                s[3].p.v,
                s[4].p.v,
                s[5].p.v,
                s[6].p.v,
                s[7].p.v
              )),
              this.feFuncRComposed.setAttribute("tableValues", o),
              this.feFuncGComposed.setAttribute("tableValues", o),
              this.feFuncBComposed.setAttribute("tableValues", o)),
              this.feFuncR &&
                (a ||
                  s[10].p._mdf ||
                  s[11].p._mdf ||
                  s[12].p._mdf ||
                  s[13].p._mdf ||
                  s[14].p._mdf) &&
                ((o = this.getTableValue(
                  s[10].p.v,
                  s[11].p.v,
                  s[12].p.v,
                  s[13].p.v,
                  s[14].p.v
                )),
                this.feFuncR.setAttribute("tableValues", o)),
              this.feFuncG &&
                (a ||
                  s[17].p._mdf ||
                  s[18].p._mdf ||
                  s[19].p._mdf ||
                  s[20].p._mdf ||
                  s[21].p._mdf) &&
                ((o = this.getTableValue(
                  s[17].p.v,
                  s[18].p.v,
                  s[19].p.v,
                  s[20].p.v,
                  s[21].p.v
                )),
                this.feFuncG.setAttribute("tableValues", o)),
              this.feFuncB &&
                (a ||
                  s[24].p._mdf ||
                  s[25].p._mdf ||
                  s[26].p._mdf ||
                  s[27].p._mdf ||
                  s[28].p._mdf) &&
                ((o = this.getTableValue(
                  s[24].p.v,
                  s[25].p.v,
                  s[26].p.v,
                  s[27].p.v,
                  s[28].p.v
                )),
                this.feFuncB.setAttribute("tableValues", o)),
              this.feFuncA &&
                (a ||
                  s[31].p._mdf ||
                  s[32].p._mdf ||
                  s[33].p._mdf ||
                  s[34].p._mdf ||
                  s[35].p._mdf) &&
                ((o = this.getTableValue(
                  s[31].p.v,
                  s[32].p.v,
                  s[33].p.v,
                  s[34].p.v,
                  s[35].p.v
                )),
                this.feFuncA.setAttribute("tableValues", o));
          }
        });
      function SVGDropShadowEffect(a, o, s, _, $) {
        var et = o.container.globalData.renderConfig.filterSize,
          tt = o.data.fs || et;
        a.setAttribute("x", tt.x || et.x),
          a.setAttribute("y", tt.y || et.y),
          a.setAttribute("width", tt.width || et.width),
          a.setAttribute("height", tt.height || et.height),
          (this.filterManager = o);
        var rt = createNS("feGaussianBlur");
        rt.setAttribute("in", "SourceAlpha"),
          rt.setAttribute("result", _ + "_drop_shadow_1"),
          rt.setAttribute("stdDeviation", "0"),
          (this.feGaussianBlur = rt),
          a.appendChild(rt);
        var nt = createNS("feOffset");
        nt.setAttribute("dx", "25"),
          nt.setAttribute("dy", "0"),
          nt.setAttribute("in", _ + "_drop_shadow_1"),
          nt.setAttribute("result", _ + "_drop_shadow_2"),
          (this.feOffset = nt),
          a.appendChild(nt);
        var it = createNS("feFlood");
        it.setAttribute("flood-color", "#00ff00"),
          it.setAttribute("flood-opacity", "1"),
          it.setAttribute("result", _ + "_drop_shadow_3"),
          (this.feFlood = it),
          a.appendChild(it);
        var at = createNS("feComposite");
        at.setAttribute("in", _ + "_drop_shadow_3"),
          at.setAttribute("in2", _ + "_drop_shadow_2"),
          at.setAttribute("operator", "in"),
          at.setAttribute("result", _ + "_drop_shadow_4"),
          a.appendChild(at);
        var st = this.createMergeNode(_, [_ + "_drop_shadow_4", $]);
        a.appendChild(st);
      }
      extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
        (SVGDropShadowEffect.prototype.renderFrame = function (a) {
          if (a || this.filterManager._mdf) {
            if (
              ((a || this.filterManager.effectElements[4].p._mdf) &&
                this.feGaussianBlur.setAttribute(
                  "stdDeviation",
                  this.filterManager.effectElements[4].p.v / 4
                ),
              a || this.filterManager.effectElements[0].p._mdf)
            ) {
              var o = this.filterManager.effectElements[0].p.v;
              this.feFlood.setAttribute(
                "flood-color",
                rgbToHex(
                  Math.round(o[0] * 255),
                  Math.round(o[1] * 255),
                  Math.round(o[2] * 255)
                )
              );
            }
            if (
              ((a || this.filterManager.effectElements[1].p._mdf) &&
                this.feFlood.setAttribute(
                  "flood-opacity",
                  this.filterManager.effectElements[1].p.v / 255
                ),
              a ||
                this.filterManager.effectElements[2].p._mdf ||
                this.filterManager.effectElements[3].p._mdf)
            ) {
              var s = this.filterManager.effectElements[3].p.v,
                _ = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                $ = s * Math.cos(_),
                et = s * Math.sin(_);
              this.feOffset.setAttribute("dx", $),
                this.feOffset.setAttribute("dy", et);
            }
          }
        });
      var _svgMatteSymbols = [];
      function SVGMatte3Effect(a, o, s) {
        (this.initialized = !1),
          (this.filterManager = o),
          (this.filterElem = a),
          (this.elem = s),
          (s.matteElement = createNS("g")),
          s.matteElement.appendChild(s.layerElement),
          s.matteElement.appendChild(s.transformedElement),
          (s.baseElement = s.matteElement);
      }
      (SVGMatte3Effect.prototype.findSymbol = function (a) {
        for (var o = 0, s = _svgMatteSymbols.length; o < s; ) {
          if (_svgMatteSymbols[o] === a) return _svgMatteSymbols[o];
          o += 1;
        }
        return null;
      }),
        (SVGMatte3Effect.prototype.replaceInParent = function (a, o) {
          var s = a.layerElement.parentNode;
          if (s) {
            for (
              var _ = s.children, $ = 0, et = _.length;
              $ < et && _[$] !== a.layerElement;

            )
              $ += 1;
            var tt;
            $ <= et - 2 && (tt = _[$ + 1]);
            var rt = createNS("use");
            rt.setAttribute("href", "#" + o),
              tt ? s.insertBefore(rt, tt) : s.appendChild(rt);
          }
        }),
        (SVGMatte3Effect.prototype.setElementAsMask = function (a, o) {
          if (!this.findSymbol(o)) {
            var s = createElementID(),
              _ = createNS("mask");
            _.setAttribute("id", o.layerId),
              _.setAttribute("mask-type", "alpha"),
              _svgMatteSymbols.push(o);
            var $ = a.globalData.defs;
            $.appendChild(_);
            var et = createNS("symbol");
            et.setAttribute("id", s),
              this.replaceInParent(o, s),
              et.appendChild(o.layerElement),
              $.appendChild(et);
            var tt = createNS("use");
            tt.setAttribute("href", "#" + s),
              _.appendChild(tt),
              (o.data.hd = !1),
              o.show();
          }
          a.setMatte(o.layerId);
        }),
        (SVGMatte3Effect.prototype.initialize = function () {
          for (
            var a = this.filterManager.effectElements[0].p.v,
              o = this.elem.comp.elements,
              s = 0,
              _ = o.length;
            s < _;

          )
            o[s] &&
              o[s].data.ind === a &&
              this.setElementAsMask(this.elem, o[s]),
              (s += 1);
          this.initialized = !0;
        }),
        (SVGMatte3Effect.prototype.renderFrame = function () {
          this.initialized || this.initialize();
        });
      function SVGGaussianBlurEffect(a, o, s, _) {
        a.setAttribute("x", "-100%"),
          a.setAttribute("y", "-100%"),
          a.setAttribute("width", "300%"),
          a.setAttribute("height", "300%"),
          (this.filterManager = o);
        var $ = createNS("feGaussianBlur");
        $.setAttribute("result", _),
          a.appendChild($),
          (this.feGaussianBlur = $);
      }
      SVGGaussianBlurEffect.prototype.renderFrame = function (a) {
        if (a || this.filterManager._mdf) {
          var o = 0.3,
            s = this.filterManager.effectElements[0].p.v * o,
            _ = this.filterManager.effectElements[1].p.v,
            $ = _ == 3 ? 0 : s,
            et = _ == 2 ? 0 : s;
          this.feGaussianBlur.setAttribute("stdDeviation", $ + " " + et);
          var tt =
            this.filterManager.effectElements[2].p.v == 1
              ? "wrap"
              : "duplicate";
          this.feGaussianBlur.setAttribute("edgeMode", tt);
        }
      };
      function TransformEffect() {}
      (TransformEffect.prototype.init = function (a) {
        (this.effectsManager = a),
          (this.type = effectTypes.TRANSFORM_EFFECT),
          (this.matrix = new Matrix()),
          (this.opacity = -1),
          (this._mdf = !1),
          (this._opMdf = !1);
      }),
        (TransformEffect.prototype.renderFrame = function (a) {
          if (
            ((this._opMdf = !1),
            (this._mdf = !1),
            a || this.effectsManager._mdf)
          ) {
            var o = this.effectsManager.effectElements,
              s = o[0].p.v,
              _ = o[1].p.v,
              $ = o[2].p.v === 1,
              et = o[3].p.v,
              tt = $ ? et : o[4].p.v,
              rt = o[5].p.v,
              nt = o[6].p.v,
              it = o[7].p.v;
            this.matrix.reset(),
              this.matrix.translate(-s[0], -s[1], s[2]),
              this.matrix.scale(tt * 0.01, et * 0.01, 1),
              this.matrix.rotate(-it * degToRads),
              this.matrix.skewFromAxis(-rt * degToRads, (nt + 90) * degToRads),
              this.matrix.translate(_[0], _[1], 0),
              (this._mdf = !0),
              this.opacity !== o[8].p.v &&
                ((this.opacity = o[8].p.v), (this._opMdf = !0));
          }
        });
      function SVGTransformEffect(a, o) {
        this.init(o);
      }
      extendPrototype([TransformEffect], SVGTransformEffect);
      function CVTransformEffect(a) {
        this.init(a);
      }
      return (
        extendPrototype([TransformEffect], CVTransformEffect),
        registerRenderer("canvas", CanvasRenderer),
        registerRenderer("html", HybridRenderer),
        registerRenderer("svg", SVGRenderer),
        ShapeModifiers.registerModifier("tm", TrimModifier),
        ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
        ShapeModifiers.registerModifier("rp", RepeaterModifier),
        ShapeModifiers.registerModifier("rd", RoundCornersModifier),
        ShapeModifiers.registerModifier("zz", ZigZagModifier),
        ShapeModifiers.registerModifier("op", OffsetPathModifier),
        setExpressionsPlugin(Expressions),
        setExpressionInterfaces(getInterface),
        initialize$1(),
        initialize(),
        registerEffect$1(20, SVGTintFilter, !0),
        registerEffect$1(21, SVGFillFilter, !0),
        registerEffect$1(22, SVGStrokeEffect, !1),
        registerEffect$1(23, SVGTritoneFilter, !0),
        registerEffect$1(24, SVGProLevelsFilter, !0),
        registerEffect$1(25, SVGDropShadowEffect, !0),
        registerEffect$1(28, SVGMatte3Effect, !1),
        registerEffect$1(29, SVGGaussianBlurEffect, !0),
        registerEffect$1(35, SVGTransformEffect, !1),
        registerEffect(35, CVTransformEffect),
        lottie
      );
    });
})(lottie, lottie.exports);
var lottieExports = lottie.exports;
Object.defineProperty(dist, "__esModule", { value: !0 });
var _extends2 = _extends,
  _extends3 = _interopRequireDefault(_extends2),
  _getPrototypeOf = getPrototypeOf$1,
  _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf),
  _classCallCheck2 = classCallCheck,
  _classCallCheck3 = _interopRequireDefault(_classCallCheck2),
  _createClass2 = createClass,
  _createClass3 = _interopRequireDefault(_createClass2),
  _possibleConstructorReturn2 = possibleConstructorReturn,
  _possibleConstructorReturn3 = _interopRequireDefault(
    _possibleConstructorReturn2
  ),
  _inherits2 = inherits,
  _inherits3 = _interopRequireDefault(_inherits2),
  _react = reactExports,
  _react2 = _interopRequireDefault(_react),
  _propTypes = propTypesExports,
  _propTypes2 = _interopRequireDefault(_propTypes),
  _lottieWeb = lottieExports,
  _lottieWeb2 = _interopRequireDefault(_lottieWeb);
function _interopRequireDefault(a) {
  return a && a.__esModule ? a : { default: a };
}
var Lottie = (function (a) {
    (0, _inherits3.default)(o, a);
    function o() {
      var s, _, $, et;
      (0, _classCallCheck3.default)(this, o);
      for (var tt = arguments.length, rt = Array(tt), nt = 0; nt < tt; nt++)
        rt[nt] = arguments[nt];
      return (
        (et =
          ((_ =
            (($ = (0, _possibleConstructorReturn3.default)(
              this,
              (s = o.__proto__ || (0, _getPrototypeOf2.default)(o)).call.apply(
                s,
                [this].concat(rt)
              )
            )),
            $)),
          ($.handleClickToPause = function () {
            $.anim.isPaused ? $.anim.play() : $.anim.pause();
          }),
          _)),
        (0, _possibleConstructorReturn3.default)($, et)
      );
    }
    return (
      (0, _createClass3.default)(o, [
        {
          key: "componentDidMount",
          value: function () {
            var _ = this.props,
              $ = _.options,
              et = _.eventListeners,
              tt = $.loop,
              rt = $.autoplay,
              nt = $.animationData,
              it = $.rendererSettings,
              at = $.segments;
            (this.options = {
              container: this.el,
              renderer: "svg",
              loop: tt !== !1,
              autoplay: rt !== !1,
              segments: at !== !1,
              animationData: nt,
              rendererSettings: it,
            }),
              (this.options = (0, _extends3.default)({}, this.options, $)),
              (this.anim = _lottieWeb2.default.loadAnimation(this.options)),
              this.registerEvents(et);
          },
        },
        {
          key: "componentWillUpdate",
          value: function (_) {
            this.options.animationData !== _.options.animationData &&
              (this.deRegisterEvents(this.props.eventListeners),
              this.destroy(),
              (this.options = (0, _extends3.default)(
                {},
                this.options,
                _.options
              )),
              (this.anim = _lottieWeb2.default.loadAnimation(this.options)),
              this.registerEvents(_.eventListeners));
          },
        },
        {
          key: "componentDidUpdate",
          value: function () {
            this.props.isStopped
              ? this.stop()
              : this.props.segments
              ? this.playSegments()
              : this.play(),
              this.pause(),
              this.setSpeed(),
              this.setDirection();
          },
        },
        {
          key: "componentWillUnmount",
          value: function () {
            this.deRegisterEvents(this.props.eventListeners),
              this.destroy(),
              (this.options.animationData = null),
              (this.anim = null);
          },
        },
        {
          key: "setSpeed",
          value: function () {
            this.anim.setSpeed(this.props.speed);
          },
        },
        {
          key: "setDirection",
          value: function () {
            this.anim.setDirection(this.props.direction);
          },
        },
        {
          key: "play",
          value: function () {
            this.anim.play();
          },
        },
        {
          key: "playSegments",
          value: function () {
            this.anim.playSegments(this.props.segments);
          },
        },
        {
          key: "stop",
          value: function () {
            this.anim.stop();
          },
        },
        {
          key: "pause",
          value: function () {
            this.props.isPaused && !this.anim.isPaused
              ? this.anim.pause()
              : !this.props.isPaused && this.anim.isPaused && this.anim.pause();
          },
        },
        {
          key: "destroy",
          value: function () {
            this.anim.destroy();
          },
        },
        {
          key: "registerEvents",
          value: function (_) {
            var $ = this;
            _.forEach(function (et) {
              $.anim.addEventListener(et.eventName, et.callback);
            });
          },
        },
        {
          key: "deRegisterEvents",
          value: function (_) {
            var $ = this;
            _.forEach(function (et) {
              $.anim.removeEventListener(et.eventName, et.callback);
            });
          },
        },
        {
          key: "render",
          value: function () {
            var _ = this,
              $ = this.props,
              et = $.width,
              tt = $.height,
              rt = $.ariaRole,
              nt = $.ariaLabel,
              it = $.isClickToPauseDisabled,
              at = $.title,
              st = function (ft) {
                var mt = void 0;
                return (
                  typeof ft == "number"
                    ? (mt = ft + "px")
                    : (mt = ft || "100%"),
                  mt
                );
              },
              ot = (0, _extends3.default)(
                {
                  width: st(et),
                  height: st(tt),
                  overflow: "hidden",
                  margin: "0 auto",
                  outline: "none",
                },
                this.props.style
              ),
              dt = it
                ? function () {
                    return null;
                  }
                : this.handleClickToPause;
            return _react2.default.createElement("div", {
              ref: function (ft) {
                _.el = ft;
              },
              style: ot,
              onClick: dt,
              title: at,
              role: rt,
              "aria-label": nt,
              tabIndex: "0",
            });
          },
        },
      ]),
      o
    );
  })(_react2.default.Component),
  _default = (dist.default = Lottie);
Lottie.propTypes = {
  eventListeners: _propTypes2.default.arrayOf(_propTypes2.default.object),
  options: _propTypes2.default.object.isRequired,
  height: _propTypes2.default.oneOfType([
    _propTypes2.default.string,
    _propTypes2.default.number,
  ]),
  width: _propTypes2.default.oneOfType([
    _propTypes2.default.string,
    _propTypes2.default.number,
  ]),
  isStopped: _propTypes2.default.bool,
  isPaused: _propTypes2.default.bool,
  speed: _propTypes2.default.number,
  segments: _propTypes2.default.arrayOf(_propTypes2.default.number),
  direction: _propTypes2.default.number,
  ariaRole: _propTypes2.default.string,
  ariaLabel: _propTypes2.default.string,
  isClickToPauseDisabled: _propTypes2.default.bool,
  title: _propTypes2.default.string,
};
Lottie.defaultProps = {
  eventListeners: [],
  isStopped: !1,
  isPaused: !1,
  speed: 1,
  ariaRole: "button",
  ariaLabel: "animation",
  isClickToPauseDisabled: !1,
  title: "",
};
const nm = "spinner",
  ddd = 0,
  h = 50,
  w = 50,
  meta = { g: "LottieFiles AE 0.1.20" },
  layers = [
    {
      ty: 4,
      nm: "Shape Layer 1",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 360, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 70,
            },
            { s: [0], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 1,
    },
    {
      ty: 4,
      nm: "Shape Layer 2",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 405, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 70,
            },
            { s: [10], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 2,
    },
    {
      ty: 4,
      nm: "Shape Layer 3",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 450, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 70,
            },
            { s: [20], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 3,
    },
    {
      ty: 4,
      nm: "Shape Layer 4",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 495, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 70,
            },
            { s: [30], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 4,
    },
    {
      ty: 4,
      nm: "Shape Layer 5",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 540, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 70,
            },
            { s: [40], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 5,
    },
    {
      ty: 4,
      nm: "Shape Layer 6",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 585, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 70,
            },
            { s: [50], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 6,
    },
    {
      ty: 4,
      nm: "Shape Layer 7",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 630, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 70,
            },
            { s: [60], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 7,
    },
    {
      ty: 4,
      nm: "Shape Layer 8",
      sr: 1,
      st: 0,
      op: 120,
      ip: 0,
      hd: !1,
      ddd: 0,
      bm: 0,
      hasMask: !1,
      ao: 0,
      ks: {
        a: { a: 0, k: [0, 0, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
        sk: { a: 0, k: 0 },
        p: { a: 0, k: [24.688, 24.938, 0], ix: 2 },
        r: { a: 0, k: 675, ix: 10 },
        sa: { a: 0, k: 0 },
        o: {
          a: 1,
          k: [
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [70],
              t: 0,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [60],
              t: 10,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [50],
              t: 20,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [40],
              t: 30,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [30],
              t: 40,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [20],
              t: 50,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [10],
              t: 60,
            },
            {
              o: { x: 0.167, y: 0.167 },
              i: { x: 0.833, y: 0.833 },
              s: [0],
              t: 70,
            },
            { s: [70], t: 80 },
          ],
          ix: 11,
        },
      },
      ef: [],
      shapes: [
        {
          ty: "gr",
          bm: 0,
          hd: !1,
          mn: "ADBE Vector Group",
          nm: "Rectangle 1",
          ix: 1,
          cix: 2,
          np: 3,
          it: [
            {
              ty: "rc",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Shape - Rect",
              nm: "Rectangle Path 1",
              d: 1,
              p: { a: 0, k: [0, -4], ix: 3 },
              r: { a: 0, k: 15, ix: 4 },
              s: { a: 0, k: [4, 12], ix: 2 },
            },
            {
              ty: "fl",
              bm: 0,
              hd: !1,
              mn: "ADBE Vector Graphic - Fill",
              nm: "Fill 1",
              c: { a: 0, k: [0.2863, 0.3137, 0.3412], ix: 4 },
              r: 1,
              o: { a: 0, k: 100, ix: 5 },
            },
            {
              ty: "tr",
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              sk: { a: 0, k: 0, ix: 4 },
              p: { a: 0, k: [0.248, -12.664], ix: 2 },
              r: { a: 0, k: 0, ix: 6 },
              sa: { a: 0, k: 0, ix: 5 },
              o: { a: 0, k: 100, ix: 7 },
            },
          ],
        },
      ],
      ind: 8,
    },
  ],
  v = "5.5.7",
  fr = 120,
  op = 79,
  ip = 0,
  assets = [],
  LoadingData = { nm, ddd, h, w, meta, layers, v, fr, op, ip, assets },
  animations = {
    initial: { opacity: 0, x: 10 },
    animate: { opacity: 1, x: 0 },
    exit: { opacity: 0, x: -10 },
  },
  AnimatedPage = (a) =>
    jsxRuntimeExports.jsx(motion.div, {
      variants: animations,
      initial: "initial",
      animate: "animate",
      exit: "exit",
      transition: { duration: 0.3 },
      ...a,
    }),
  Loading = () => {
    const a = {
      loop: !0,
      autoplay: !0,
      animationData: LoadingData,
      rendererSettings: { preserveAspectRatio: "xMidYMid slice" },
    };
    return jsxRuntimeExports.jsx(AnimatedPage, {
      style: { flex: 1, display: "flex", zIndex: 2 },
      children: jsxRuntimeExports.jsx("div", {
        className: "container",
        children: jsxRuntimeExports.jsx(_default, {
          options: a,
          height: 30,
          width: 30,
        }),
      }),
    });
  },
  LoginForm = ({ handleSubmit: a }) =>
    jsxRuntimeExports.jsx(AnimatedPage, {
      style: { flex: 1, display: "flex", zIndex: 2 },
      children: jsxRuntimeExports.jsx(Flex, {
        p: 8,
        flex: 1,
        align: "center",
        justify: "center",
        children: jsxRuntimeExports.jsxs(Stack, {
          spacing: 4,
          w: "full",
          maxW: "md",
          children: [
            jsxRuntimeExports.jsx(Heading, {
              fontSize: "2xl",
              children: "Sign in to your account",
            }),
            jsxRuntimeExports.jsxs(FormControl, {
              id: "email",
              children: [
                jsxRuntimeExports.jsx(FormLabel, { children: "Email address" }),
                jsxRuntimeExports.jsx(Input, { type: "email" }),
              ],
            }),
            jsxRuntimeExports.jsxs(FormControl, {
              id: "password",
              children: [
                jsxRuntimeExports.jsx(FormLabel, { children: "Password" }),
                jsxRuntimeExports.jsx(Input, { type: "password" }),
              ],
            }),
            jsxRuntimeExports.jsxs(Stack, {
              spacing: 6,
              children: [
                jsxRuntimeExports.jsxs(Stack, {
                  direction: { base: "column", sm: "row" },
                  align: "start",
                  justify: "space-between",
                  children: [
                    jsxRuntimeExports.jsx(Checkbox, {
                      defaultChecked: !0,
                      children: "Remember me",
                    }),
                    jsxRuntimeExports.jsx(Text, {
                      color: "blue.500",
                      children: "Forgot password?",
                    }),
                  ],
                }),
                jsxRuntimeExports.jsx(Button, {
                  colorScheme: "blue",
                  variant: "solid",
                  onClick: a,
                  children: "Sign in",
                }),
              ],
            }),
          ],
        }),
      }),
    }),
  loginBanner = "./assets/loginBanner-bc59c85a.svg",
  Login = () => {
    const a = useNavigate(),
      [o, s] = reactExports.useState(!1);
    o && setTimeout(() => a("/home"), 2e3);
    const _ = () => {
      s(!0);
    };
    return jsxRuntimeExports.jsx(AnimatedPage, {
      children: jsxRuntimeExports.jsx("div", {
        className: "container",
        children: jsxRuntimeExports.jsxs(Flex, {
          h: "100vh",
          w: "100vw",
          flexDirection: { base: "column", md: "row" },
          children: [
            jsxRuntimeExports.jsx(AnimatePresence, {
              initial: !1,
              mode: "wait",
              children: o
                ? jsxRuntimeExports.jsx(Loading, {}, "loading")
                : jsxRuntimeExports.jsx(
                    LoginForm,
                    { handleSubmit: _ },
                    "loginForm"
                  ),
            }),
            jsxRuntimeExports.jsx(Flex, {
              flex: 1,
              justifyContent: "center",
              bg: "#fcfcfc",
              children: jsxRuntimeExports.jsx(Image$1, {
                w: { base: "80%", md: "70%", lg: "60%" },
                alt: "Login Image",
                src: loginBanner,
              }),
            }),
          ],
        }),
      }),
    });
  };
var DefaultContext = {
    color: void 0,
    size: void 0,
    className: void 0,
    style: void 0,
    attr: void 0,
  },
  IconContext = React.createContext && React.createContext(DefaultContext),
  __assign =
    (globalThis && globalThis.__assign) ||
    function () {
      return (
        (__assign =
          Object.assign ||
          function (a) {
            for (var o, s = 1, _ = arguments.length; s < _; s++) {
              o = arguments[s];
              for (var $ in o)
                Object.prototype.hasOwnProperty.call(o, $) && (a[$] = o[$]);
            }
            return a;
          }),
        __assign.apply(this, arguments)
      );
    },
  __rest =
    (globalThis && globalThis.__rest) ||
    function (a, o) {
      var s = {};
      for (var _ in a)
        Object.prototype.hasOwnProperty.call(a, _) &&
          o.indexOf(_) < 0 &&
          (s[_] = a[_]);
      if (a != null && typeof Object.getOwnPropertySymbols == "function")
        for (var $ = 0, _ = Object.getOwnPropertySymbols(a); $ < _.length; $++)
          o.indexOf(_[$]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(a, _[$]) &&
            (s[_[$]] = a[_[$]]);
      return s;
    };
function Tree2Element(a) {
  return (
    a &&
    a.map(function (o, s) {
      return React.createElement(
        o.tag,
        __assign({ key: s }, o.attr),
        Tree2Element(o.child)
      );
    })
  );
}
function GenIcon(a) {
  return function (o) {
    return React.createElement(
      IconBase,
      __assign({ attr: __assign({}, a.attr) }, o),
      Tree2Element(a.child)
    );
  };
}
function IconBase(a) {
  var o = function (s) {
    var _ = a.attr,
      $ = a.size,
      et = a.title,
      tt = __rest(a, ["attr", "size", "title"]),
      rt = $ || s.size || "1em",
      nt;
    return (
      s.className && (nt = s.className),
      a.className && (nt = (nt ? nt + " " : "") + a.className),
      React.createElement(
        "svg",
        __assign(
          { stroke: "currentColor", fill: "currentColor", strokeWidth: "0" },
          s.attr,
          _,
          tt,
          {
            className: nt,
            style: __assign(
              __assign({ color: a.color || s.color }, s.style),
              a.style
            ),
            height: rt,
            width: rt,
            xmlns: "http://www.w3.org/2000/svg",
          }
        ),
        et && React.createElement("title", null, et),
        a.children
      )
    );
  };
  return IconContext !== void 0
    ? React.createElement(IconContext.Consumer, null, function (s) {
        return o(s);
      })
    : o(DefaultContext);
}
function FiCompass(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      { tag: "circle", attr: { cx: "12", cy: "12", r: "10" } },
      {
        tag: "polygon",
        attr: {
          points: "16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76",
        },
      },
    ],
  })(a);
}
function FiHome(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      {
        tag: "path",
        attr: { d: "M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" },
      },
      { tag: "polyline", attr: { points: "9 22 9 12 15 12 15 22" } },
    ],
  })(a);
}
function FiLogOut(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      { tag: "path", attr: { d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" } },
      { tag: "polyline", attr: { points: "16 17 21 12 16 7" } },
      { tag: "line", attr: { x1: "21", y1: "12", x2: "9", y2: "12" } },
    ],
  })(a);
}
function FiMenu(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      { tag: "line", attr: { x1: "3", y1: "12", x2: "21", y2: "12" } },
      { tag: "line", attr: { x1: "3", y1: "6", x2: "21", y2: "6" } },
      { tag: "line", attr: { x1: "3", y1: "18", x2: "21", y2: "18" } },
    ],
  })(a);
}
function FiSettings(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      { tag: "circle", attr: { cx: "12", cy: "12", r: "3" } },
      {
        tag: "path",
        attr: {
          d: "M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z",
        },
      },
    ],
  })(a);
}
function FiStar(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      {
        tag: "polygon",
        attr: {
          points:
            "12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2",
        },
      },
    ],
  })(a);
}
function FiTrendingUp(a) {
  return GenIcon({
    tag: "svg",
    attr: {
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
    },
    child: [
      { tag: "polyline", attr: { points: "23 6 13.5 15.5 8.5 10.5 1 18" } },
      { tag: "polyline", attr: { points: "17 6 23 6 23 12" } },
    ],
  })(a);
}
const Dashboard = () => {
    const { isOpen: a, onClose: o, onOpen: s } = useDisclosure();
    return jsxRuntimeExports.jsxs(Box, {
      h: "100%",
      w: "100%",
      bg: useColorModeValue("gra.100", "gray.900"),
      children: [
        jsxRuntimeExports.jsx(SidebarContent, {
          onClose: () => o,
          display: { base: "none", md: "block" },
        }),
        jsxRuntimeExports.jsx(Drawer, {
          isOpen: a,
          placement: "left",
          onClose: o,
          returnFocusOnClose: !1,
          onOverlayClick: o,
          size: "full",
          children: jsxRuntimeExports.jsx(DrawerContent, {
            children: jsxRuntimeExports.jsx(SidebarContent, { onClose: o }),
          }),
        }),
        jsxRuntimeExports.jsx(MobileNav, {
          display: { base: "flex", md: "none" },
          onOpen: s,
        }),
        jsxRuntimeExports.jsx(Box, {
          minH: "100vh",
          w: "calC(100vw - 240px)",
          ml: { base: 0, md: 60 },
          p: "4",
          bg: "#f2f2f2",
          children: jsxRuntimeExports.jsx(Outlet, {}),
        }),
      ],
    });
  },
  LinkItems = [
    { name: "Home", icon: FiHome, path: "home" },
    { name: "Trending", icon: FiTrendingUp, path: "trending" },
    { name: "Explore", icon: FiCompass, path: "explore" },
    { name: "Favourites", icon: FiStar, path: "favourites" },
    { name: "Settings", icon: FiSettings, path: "settings" },
    { name: "Sign Out", icon: FiLogOut },
  ],
  SidebarContent = ({ onClose: a, ...o }) => {
    const s = useNavigate();
    return jsxRuntimeExports.jsxs(Box, {
      bg: useColorModeValue("white", "gray.900"),
      borderRight: "1px",
      borderRightColor: useColorModeValue("gray.200", "gray.700"),
      w: { base: "full", md: 60 },
      pos: "fixed",
      h: "full",
      ...o,
      children: [
        jsxRuntimeExports.jsxs(Flex, {
          h: "20",
          alignItems: "center",
          mx: "8",
          justifyContent: "space-between",
          children: [
            jsxRuntimeExports.jsx(Text, {
              fontSize: "2xl",
              fontFamily: "monospace",
              fontWeight: "bold",
              children: "Logo",
            }),
            jsxRuntimeExports.jsx(CloseButton, {
              display: { base: "flex", md: "none" },
              onClick: a,
            }),
          ],
        }),
        LinkItems.map((_) =>
          jsxRuntimeExports.jsx(
            NavItem,
            {
              icon: _.icon,
              onClick: () => (_.path ? s(_.path) : s("login")),
              children: _.name,
            },
            _.name
          )
        ),
      ],
    });
  },
  NavItem = ({ icon: a, children: o, ...s }) =>
    jsxRuntimeExports.jsxs(Flex, {
      align: "center",
      p: "4",
      mx: "4",
      borderRadius: "lg",
      role: "group",
      cursor: "pointer",
      _hover: { bg: "cyan.400", color: "white" },
      ...s,
      children: [
        a &&
          jsxRuntimeExports.jsx(Icon, {
            mr: "4",
            fontSize: "16",
            _groupHover: { color: "white" },
            as: a,
          }),
        o,
      ],
    }),
  MobileNav = ({ onOpen: a, ...o }) =>
    jsxRuntimeExports.jsxs(Flex, {
      ml: { base: 0, md: 60 },
      px: { base: 4, md: 24 },
      height: "20",
      alignItems: "center",
      bg: useColorModeValue("white", "gray.900"),
      borderBottomWidth: "1px",
      borderBottomColor: useColorModeValue("gray.200", "gray.700"),
      justifyContent: "flex-start",
      ...o,
      children: [
        jsxRuntimeExports.jsx(IconButton, {
          variant: "outline",
          onClick: a,
          "aria-label": "open menu",
          icon: jsxRuntimeExports.jsx(FiMenu, {}),
        }),
        jsxRuntimeExports.jsx(Text, {
          fontSize: "2xl",
          ml: "8",
          fontFamily: "monospace",
          fontWeight: "bold",
          children: "Logo",
        }),
      ],
    });
function NotFound() {
  return jsxRuntimeExports.jsx(AnimatedPage, {
    style: {
      minHeight: "100vh",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
    },
    children: jsxRuntimeExports.jsxs(VStack, {
      justifyContent: "center",
      h: "50%",
      textAlign: "center",
      py: 10,
      px: 6,
      children: [
        jsxRuntimeExports.jsx(Heading, {
          display: "inline-block",
          as: "h2",
          size: "2xl",
          bgGradient: "linear(to-r, teal.400, teal.600)",
          backgroundClip: "text",
          children: "404",
        }),
        jsxRuntimeExports.jsx(Text, {
          fontSize: "18px",
          mt: 3,
          mb: 2,
          children: "Page Not Found",
        }),
        jsxRuntimeExports.jsx(Text, {
          color: "gray.500",
          mb: 6,
          children: "The page you're looking for does not seem to exist",
        }),
        jsxRuntimeExports.jsx(Button, {
          colorScheme: "teal",
          bgGradient: "linear(to-r, teal.400, teal.500, teal.600)",
          color: "white",
          variant: "solid",
          children: "Go to Home",
        }),
      ],
    }),
  });
}
function IoAnalyticsSharp(a) {
  return GenIcon({
    tag: "svg",
    attr: { viewBox: "0 0 512 512" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M450 128a46 46 0 00-44.11 59l-71.37 71.36a45.88 45.88 0 00-29 0l-52.91-52.91a46 46 0 10-89.12 0L75 293.88A46.08 46.08 0 10106.11 325l87.37-87.36a45.85 45.85 0 0029 0l52.92 52.92a46 46 0 1089.12 0L437 218.12A46 46 0 10450 128z",
        },
      },
    ],
  })(a);
}
function IoLogoBitcoin(a) {
  return GenIcon({
    tag: "svg",
    attr: { viewBox: "0 0 512 512" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M410.47 279.2c-5-11.5-12.7-21.6-28.1-30.1a98.15 98.15 0 00-25.4-10 62.22 62.22 0 0016.3-11 56.37 56.37 0 0015.6-23.3 77.11 77.11 0 003.5-28.2c-1.1-16.8-4.4-33.1-13.2-44.8s-21.2-20.7-37.6-27c-12.6-4.8-25.5-7.8-45.5-8.9V32h-40v64h-32V32h-41v64H96v48h27.87c8.7 0 14.6.8 17.6 2.3a13.22 13.22 0 016.5 6c1.3 2.5 1.9 8.4 1.9 17.5V343c0 9-.6 14.8-1.9 17.4s-2 4.9-5.1 6.3-3.2 1.3-11.8 1.3h-26.4L96 416h87v64h41v-64h32v64h40v-64.4c26-1.3 44.5-4.7 59.4-10.3 19.3-7.2 34.1-17.7 44.7-31.5s14-34.9 14.93-51.2c.67-14.5-.03-33.2-4.56-43.4zM224 150h32v74h-32zm0 212v-90h32v90zm72-208.1c6 2.5 9.9 7.5 13.8 12.7 4.3 5.7 6.5 13.3 6.5 21.4 0 7.8-2.9 14.5-7.5 20.5-3.8 4.9-6.8 8.3-12.8 11.1zm28.8 186.7c-7.8 6.9-12.3 10.1-22.1 13.8a56.06 56.06 0 01-6.7 1.9v-82.8a40.74 40.74 0 0111.3 3.4c7.8 3.3 15.2 6.9 19.8 13.2a43.82 43.82 0 018 24.7c-.03 10.9-2.83 19.2-10.33 25.8z",
        },
      },
    ],
  })(a);
}
function IoSearchSharp(a) {
  return GenIcon({
    tag: "svg",
    attr: { viewBox: "0 0 512 512" },
    child: [
      {
        tag: "path",
        attr: {
          d: "M464 428L339.92 303.9a160.48 160.48 0 0030.72-94.58C370.64 120.37 298.27 48 209.32 48S48 120.37 48 209.32s72.37 161.32 161.32 161.32a160.48 160.48 0 0094.58-30.72L428 464zM209.32 319.69a110.38 110.38 0 11110.37-110.37 110.5 110.5 0 01-110.37 110.37z",
        },
      },
    ],
  })(a);
}
const Feature = ({ text: a, icon: o, iconBg: s }) =>
  jsxRuntimeExports.jsxs(Stack, {
    direction: "row",
    align: "center",
    children: [
      jsxRuntimeExports.jsx(Flex, {
        w: 8,
        h: 8,
        align: "center",
        justify: "center",
        rounded: "full",
        bg: s,
        children: o,
      }),
      jsxRuntimeExports.jsx(Text, { fontWeight: 600, children: a }),
    ],
  });
function Home() {
  return jsxRuntimeExports.jsx(AnimatedPage, {
    style: {
      minHeight: "100vh",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
    },
    children: jsxRuntimeExports.jsx(Flex, {
      maxW: "7xl",
      height: "full",
      justifyContent: "center",
      alignItems: "center",
      children: jsxRuntimeExports.jsxs(SimpleGrid, {
        columns: { base: 1, md: 2 },
        spacing: 10,
        children: [
          jsxRuntimeExports.jsxs(Stack, {
            spacing: 4,
            children: [
              jsxRuntimeExports.jsx(Text, {
                textTransform: "uppercase",
                color: "blue.400",
                fontWeight: 600,
                fontSize: "sm",
                bg: useColorModeValue("blue.50", "blue.900"),
                p: 2,
                alignSelf: "flex-start",
                rounded: "md",
                children: "Our Story",
              }),
              jsxRuntimeExports.jsx(Heading, {
                children: "A digital Product design agency",
              }),
              jsxRuntimeExports.jsx(Text, {
                color: "gray.500",
                fontSize: "lg",
                children:
                  "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore",
              }),
              jsxRuntimeExports.jsxs(Stack, {
                spacing: 4,
                divider: jsxRuntimeExports.jsx(StackDivider, {
                  borderColor: useColorModeValue("gray.100", "gray.700"),
                }),
                children: [
                  jsxRuntimeExports.jsx(Feature, {
                    icon: jsxRuntimeExports.jsx(Icon, {
                      as: IoAnalyticsSharp,
                      color: "yellow.500",
                      w: 5,
                      h: 5,
                    }),
                    iconBg: useColorModeValue("yellow.100", "yellow.900"),
                    text: "Business Planning",
                  }),
                  jsxRuntimeExports.jsx(Feature, {
                    icon: jsxRuntimeExports.jsx(Icon, {
                      as: IoLogoBitcoin,
                      color: "green.500",
                      w: 5,
                      h: 5,
                    }),
                    iconBg: useColorModeValue("green.100", "green.900"),
                    text: "Financial Planning",
                  }),
                  jsxRuntimeExports.jsx(Feature, {
                    icon: jsxRuntimeExports.jsx(Icon, {
                      as: IoSearchSharp,
                      color: "purple.500",
                      w: 5,
                      h: 5,
                    }),
                    iconBg: useColorModeValue("purple.100", "purple.900"),
                    text: "Market Analysis",
                  }),
                ],
              }),
            ],
          }),
          jsxRuntimeExports.jsx(Flex, {
            children: jsxRuntimeExports.jsx(Image$1, {
              rounded: "md",
              alt: "feature image",
              src: "https://images.unsplash.com/photo-1554200876-56c2f25224fa?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
              objectFit: "cover",
            }),
          }),
        ],
      }),
    }),
  });
}
const Settings = () =>
    jsxRuntimeExports.jsx(AnimatedPage, {
      style: {
        minHeight: "100vh",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
      },
      children: jsxRuntimeExports.jsx("div", { children: "Settings" }),
    }),
  BlogTags = (a) => {
    const { marginTop: o = 0, tags: s } = a;
    return jsxRuntimeExports.jsx(HStack, {
      spacing: 2,
      marginTop: o,
      children: s.map((_) =>
        jsxRuntimeExports.jsx(
          Tag,
          { size: "md", variant: "solid", colorScheme: "orange", children: _ },
          _
        )
      ),
    });
  },
  BlogAuthor = (a) =>
    jsxRuntimeExports.jsxs(HStack, {
      marginTop: "2",
      spacing: "2",
      display: "flex",
      alignItems: "center",
      children: [
        jsxRuntimeExports.jsx(Image$1, {
          borderRadius: "full",
          boxSize: "40px",
          src: "https://100k-faces.glitch.me/random-image",
          alt: `Avatar of ${a.name}`,
        }),
        jsxRuntimeExports.jsx(Text, { fontWeight: "medium", children: a.name }),
        jsxRuntimeExports.jsx(Text, { children: "—" }),
        jsxRuntimeExports.jsx(Text, { children: a.date.toLocaleDateString() }),
      ],
    }),
  Trending = () =>
    jsxRuntimeExports.jsx(AnimatedPage, {
      style: { height: "100%", display: "flex", justifyContent: "center" },
      children: jsxRuntimeExports.jsxs(Container, {
        maxW: "7xl",
        p: "12",
        children: [
          jsxRuntimeExports.jsx(Heading, {
            as: "h1",
            children: "Stories by Chakra Templates",
          }),
          jsxRuntimeExports.jsxs(Box, {
            marginTop: { base: "1", sm: "5" },
            display: "flex",
            flexDirection: { base: "column", sm: "row" },
            justifyContent: "space-between",
            children: [
              jsxRuntimeExports.jsxs(Box, {
                display: "flex",
                flex: "1",
                marginRight: "3",
                position: "relative",
                alignItems: "center",
                children: [
                  jsxRuntimeExports.jsx(Box, {
                    width: { base: "100%", sm: "85%" },
                    zIndex: "2",
                    marginLeft: { base: "0", sm: "5%" },
                    marginTop: "5%",
                    children: jsxRuntimeExports.jsx(Box, {
                      textDecoration: "none",
                      _hover: { textDecoration: "none" },
                      children: jsxRuntimeExports.jsx(Image$1, {
                        borderRadius: "lg",
                        src: "https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=800&q=80",
                        alt: "some good alt text",
                        objectFit: "contain",
                      }),
                    }),
                  }),
                  jsxRuntimeExports.jsx(Box, {
                    zIndex: "1",
                    width: "100%",
                    position: "absolute",
                    height: "100%",
                    children: jsxRuntimeExports.jsx(Box, {
                      bgGradient: useColorModeValue(
                        "radial(orange.600 1px, transparent 1px)",
                        "radial(orange.300 1px, transparent 1px)"
                      ),
                      backgroundSize: "20px 20px",
                      opacity: "0.4",
                      height: "100%",
                    }),
                  }),
                ],
              }),
              jsxRuntimeExports.jsxs(Box, {
                display: "flex",
                flex: "1",
                flexDirection: "column",
                justifyContent: "center",
                marginTop: { base: "3", sm: "0" },
                children: [
                  jsxRuntimeExports.jsx(BlogTags, {
                    tags: ["Engineering", "Product"],
                  }),
                  jsxRuntimeExports.jsx(Heading, {
                    marginTop: "1",
                    children: jsxRuntimeExports.jsx(Text, {
                      textDecoration: "none",
                      _hover: { textDecoration: "none" },
                      children: "Blog article title",
                    }),
                  }),
                  jsxRuntimeExports.jsx(Text, {
                    as: "p",
                    marginTop: "2",
                    color: useColorModeValue("gray.700", "gray.200"),
                    fontSize: "lg",
                    children:
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                  }),
                  jsxRuntimeExports.jsx(BlogAuthor, {
                    name: "John Doe",
                    date: new Date("2021-04-06T19:01:27Z"),
                  }),
                ],
              }),
            ],
          }),
          jsxRuntimeExports.jsx(Heading, {
            as: "h2",
            marginTop: "5",
            children: "Latest articles",
          }),
          jsxRuntimeExports.jsx(Divider, { marginTop: "5" }),
          jsxRuntimeExports.jsx(Wrap, {
            spacing: "30px",
            marginTop: "5",
            children: jsxRuntimeExports.jsx(WrapItem, {
              width: { base: "100%", sm: "45%", md: "45%", lg: "30%" },
              children: jsxRuntimeExports.jsxs(Box, {
                w: "100%",
                children: [
                  jsxRuntimeExports.jsx(Box, {
                    borderRadius: "lg",
                    overflow: "hidden",
                    children: jsxRuntimeExports.jsx(Box, {
                      textDecoration: "none",
                      _hover: { textDecoration: "none" },
                      children: jsxRuntimeExports.jsx(Image$1, {
                        transform: "scale(1.0)",
                        src: "https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=800&q=80",
                        alt: "some text",
                        objectFit: "contain",
                        width: "100%",
                        transition: "0.3s ease-in-out",
                        _hover: { transform: "scale(1.05)" },
                      }),
                    }),
                  }),
                  jsxRuntimeExports.jsx(BlogTags, {
                    tags: ["Engineering", "Product"],
                    marginTop: 3,
                  }),
                  jsxRuntimeExports.jsx(Heading, {
                    fontSize: "xl",
                    marginTop: "2",
                    children: jsxRuntimeExports.jsx(Text, {
                      textDecoration: "none",
                      _hover: { textDecoration: "none" },
                      children: "Some blog title",
                    }),
                  }),
                  jsxRuntimeExports.jsx(Text, {
                    as: "p",
                    fontSize: "md",
                    marginTop: "2",
                    children:
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                  }),
                  jsxRuntimeExports.jsx(BlogAuthor, {
                    name: "John Doe",
                    date: new Date("2021-04-06T19:01:27Z"),
                  }),
                ],
              }),
            }),
          }),
          jsxRuntimeExports.jsxs(VStack, {
            paddingTop: "40px",
            spacing: "2",
            alignItems: "flex-start",
            children: [
              jsxRuntimeExports.jsx(Heading, {
                as: "h2",
                children: "What we write about",
              }),
              jsxRuntimeExports.jsx(Text, {
                as: "p",
                fontSize: "lg",
                children:
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec condimentum quam arcu, eu tempus tortor molestie at. Vestibulum pretium condimentum dignissim. Vestibulum ultrices vitae nisi sed imperdiet. Mauris quis erat consequat, commodo massa quis, feugiat sapien. Suspendisse placerat vulputate posuere. Curabitur neque tortor, mattis nec lacus non, placerat congue elit.",
              }),
              jsxRuntimeExports.jsx(Text, {
                as: "p",
                fontSize: "lg",
                children:
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec condimentum quam arcu, eu tempus tortor molestie at. Vestibulum pretium condimentum dignissim. Vestibulum ultrices vitae nisi sed imperdiet. Mauris quis erat consequat, commodo massa quis, feugiat sapien. Suspendisse placerat vulputate posuere. Curabitur neque tortor, mattis nec lacus non, placerat congue elit.",
              }),
              jsxRuntimeExports.jsx(Text, {
                as: "p",
                fontSize: "lg",
                children:
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec condimentum quam arcu, eu tempus tortor molestie at. Vestibulum pretium condimentum dignissim. Vestibulum ultrices vitae nisi sed imperdiet. Mauris quis erat consequat, commodo massa quis, feugiat sapien. Suspendisse placerat vulputate posuere. Curabitur neque tortor, mattis nec lacus non, placerat congue elit.",
              }),
            ],
          }),
        ],
      }),
    }),
  RootRouter = () => {
    const a = useLocation();
    return (
      console.log(a.pathname),
      jsxRuntimeExports.jsx(AnimatePresence, {
        mode: "wait",
        children: jsxRuntimeExports.jsx("div", {
          style: { minHeight: "100vh" },
          children: jsxRuntimeExports.jsxs(
            Routes,
            {
              location: a,
              children: [
                jsxRuntimeExports.jsxs(Route, {
                  path: "/",
                  Component: Dashboard,
                  children: [
                    jsxRuntimeExports.jsx(Route, {
                      path: "home",
                      Component: Home,
                    }),
                    jsxRuntimeExports.jsx(Route, {
                      path: "settings",
                      Component: Settings,
                    }),
                    jsxRuntimeExports.jsx(Route, {
                      path: "trending",
                      Component: Trending,
                    }),
                    jsxRuntimeExports.jsx(Route, {
                      path: "*",
                      Component: NotFound,
                    }),
                  ],
                }),
                jsxRuntimeExports.jsx(Route, {
                  path: "/login",
                  Component: Login,
                }),
              ],
            },
            a.pathname
          ),
        }),
      })
    );
  };
function App() {
  return jsxRuntimeExports.jsx(ChakraProvider, {
    children: jsxRuntimeExports.jsx(HashRouter, {
      children: jsxRuntimeExports.jsx(RootRouter, {}),
    }),
  });
}
const index = "";
client
  .createRoot(document.getElementById("root"))
  .render(jsxRuntimeExports.jsx(App, {}));
